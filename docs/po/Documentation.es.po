# Spanish translations for PACKAGE package
# Copyright (C) 2021 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-05 16:29+0100\n"
"PO-Revision-Date: 2021-11-05 07:34+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. type: Title =
#, no-wrap
msgid "Getting Started V{lversion}, {date}"
msgstr ""

#. type: Attribute :lang:
#, no-wrap
msgid "en"
msgstr ""

#. type: Plain text
msgid "The LinuxCNC Team"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "common/images/emc2-intro.*"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Plain text
msgid ""
"This handbook is a work in progress. If you are able to help with writing, "
"editing, or graphic preparation please contact any member of the writing "
"team or join and send an email to emc-users@lists.sourceforge.net."
msgstr ""

#. type: Plain text
msgid "Copyright Â© 2000-2020 LinuxCNC.org"
msgstr ""

#. type: Plain text
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.1 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the "
"license is included in the section entitled \"GNU Free Documentation License"
"\"."
msgstr ""

#. type: Plain text
msgid ""
"LINUXÂ® is the registered trademark of Linus Torvalds in the U.S. and other "
"countries.  The registered trademark LinuxÂ® is used pursuant to a "
"sublicense from LMI, the exclusive licensee of Linus Torvalds, owner of the "
"mark on a world-wide basis."
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC project is not affiliated with DebianÂ®.  _Debian_ is a "
"registered trademark owned by Software in the Public Interest, Inc."
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC project is not affiliated with UBUNTUÂ®.  _UBUNTU_ is a "
"registered trademark owned by Canonical Limited."
msgstr ""

#. type: Title =
#, no-wrap
msgid "About LinuxCNC"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Software"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC (the Enhanced Machine Control) is a software system for computer "
"control of machine tools such as milling machines and lathes, robots such as "
"puma and scara and other computer controlled machines up to 9 axes."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is free software with open source code. Current versions of "
"LinuxCNC are entirely licensed under the GNU General Public License and "
"Lesser GNU General Public License (GPL and LGPL)"
msgstr ""

#. type: Plain text
msgid "LinuxCNC provides:"
msgstr ""

#. type: Plain text
msgid "a graphical user interface (actually several interfaces to choose from)"
msgstr ""

#. type: Plain text
msgid ""
"an interpreter for 'G-code' (the RS-274 machine tool programming language)"
msgstr ""

#. type: Plain text
msgid "a realtime motion planning system with look-ahead"
msgstr ""

#. type: Plain text
msgid ""
"operation of low-level machine electronics such as sensors and motor drives"
msgstr ""

#. type: Plain text
msgid ""
"an easy to use 'breadboard' layer for quickly creating a unique "
"configuration for your machine"
msgstr ""

#. type: Plain text
msgid "a software PLC programmable with ladder diagrams"
msgstr ""

#. type: Plain text
msgid "easy installation with a Live-CD"
msgstr ""

#. type: Plain text
msgid ""
"It does not provide drawing (CAD - Computer Aided Design) or G-code "
"generation from the drawing (CAM - Computer Automated Manufacturing)  "
"functions."
msgstr ""

#. type: Plain text
msgid ""
"It can simultaneously move up to 9 axes and supports a variety of interfaces."
msgstr ""

#. type: Plain text
msgid ""
"The control can operate true servos (analog or PWM) with the feedback loop "
"closed by the LinuxCNC software at the computer, or open loop with step-"
"servos or stepper motors."
msgstr ""

#. type: Plain text
msgid ""
"Motion control features include: cutter radius and length compensation, path "
"deviation limited to a specified tolerance, lathe threading, synchronized "
"axis motion, adaptive feedrate, operator feed override, and constant "
"velocity control."
msgstr ""

#. type: Plain text
msgid ""
"Support for non-Cartesian motion systems is provided via custom kinematics "
"modules. Available architectures include hexapods (Stewart platforms and "
"similar concepts) and systems with rotary joints to provide motion such as "
"PUMA or SCARA robots."
msgstr ""

#. type: Plain text
msgid "LinuxCNC runs on Linux using real time extensions."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Operating System"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is available as ready-to-use packages for the Ubuntu and Debian "
"distributions."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Getting Help"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "IRC"
msgstr ""

#. type: Plain text
msgid ""
"IRC stands for Internet Relay Chat.  It is a live connection to other "
"LinuxCNC users.  The LinuxCNC IRC channel is #linuxcnc on freenode."
msgstr ""

#. type: Plain text
msgid ""
"The simplest way to get on the IRC is to use the embedded client on this "
"https://webchat.freenode.net/?channels=%23linuxcnc[page]."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Some IRC etiquette"
msgstr ""

#. type: Plain text
msgid ""
"Ask specific questions... Avoid questions like \"Can someone help me?\"."
msgstr ""

#. type: Plain text
msgid ""
"If you're really new to all this, think a bit about your question before "
"typing it. Make sure you give enough information so someone can solve your "
"question."
msgstr ""

#. type: Plain text
msgid ""
"Have some patience when waiting for an answer, sometimes it takes a while to "
"formulate an answer or everyone might be busy working or something."
msgstr ""

#. type: Plain text
msgid ""
"Set up your IRC account with your unique name so people will know who you "
"are. If you use the java client, use the same name every time you log in. "
"This helps people remember who you are and if you have been on before many "
"will remember the past discussions which saves time on both ends."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Sharing Files"
msgstr ""

#. type: Plain text
msgid ""
"The most common way to share files on the IRC is to upload the file to one "
"of the following or a similar service and paste the link:"
msgstr ""

#. type: Plain text
msgid ""
"'For text' - http://pastebin.com/ , http://pastie.org/, https://gist.github."
"com/"
msgstr ""

#. type: Plain text
msgid ""
"'For pictures' - http://imagebin.org/ , http://imgur.com/ , http://bayimg."
"com/"
msgstr ""

#. type: Plain text
msgid ""
"'For files' - https://filedropper.com/ , http://filefactory.com/ , "
"http://1fichier.com/"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Mailing List"
msgstr ""

#. type: Plain text
msgid ""
"An Internet Mailing List is a way to put questions out for everyone on that "
"list to see and answer at their convenience. You get better exposure to your "
"questions on a mailing list than on the IRC but answers take longer. In a "
"nutshell you e-mail a message to the list and either get daily digests or "
"individual replies back depending on how you set up your account."
msgstr ""

#. type: Plain text
msgid ""
"You can subscribe to the emc-users mailing list at: https://lists."
"sourceforge.net/lists/listinfo/emc-users"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Web Forum"
msgstr ""

#. type: Plain text
msgid ""
"A web forum can be found at https://forum.linuxcnc.org or by following the "
"link at the top of the linuxcnc.org home page."
msgstr ""

#. type: Plain text
msgid ""
"This is quite active but the demographic is more user-biased than the "
"mailing list.  If you want to be sure that your message is seen by the "
"developers then the mailing list is to be preferred."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LinuxCNC Wiki"
msgstr ""

#. type: Plain text
msgid ""
"A Wiki site is a user maintained web site that anyone can add to or edit."
msgstr ""

#. type: Plain text
msgid ""
"The user maintained LinuxCNC Wiki site contains a wealth of information and "
"tips at:"
msgstr ""

#. type: Plain text
msgid "link:http://wiki.linuxcnc.org/[http://wiki.linuxcnc.org]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Bug Reports"
msgstr ""

#. type: Plain text
msgid ""
"Report bugs to the LinuxCNC link:http:///github.com/LinuxCNC/linuxcnc/"
"issues[github bug tracker]."
msgstr ""

#. type: Title =
#, no-wrap
msgid "System Requirements"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Minimum Requirements"
msgstr ""

#. type: Plain text
msgid ""
"The minimum system to run LinuxCNC and Debian / Ubuntu may vary depending on "
"the exact usage. Stepper systems in general require faster threads to "
"generate step pulses than servo systems. You can use the Live-CD to test the "
"software before committing to a permanent installation on a computer.  Keep "
"in mind that the Latency Test numbers are more important than the processor "
"speed for software step generation. More information on the Latency Test is "
"<<latency-test,here>>.  In addition LinuxCNC needs to be run on an operating "
"system that uses a specially modified kernel. See "
"<<kernel_and_version_requirements,Kernel and Version Requirements>>"
msgstr ""

#. type: Plain text
msgid ""
"Additional information is on the LinuxCNC Wiki site: http://wiki.linuxcnc."
"org/cgi-bin/wiki.pl?Hardware_Requirements[Hardware Requirements]"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC and Debian Linux should run reasonably well on a computer with the "
"following minimum hardware specification. These numbers are not the absolute "
"minimum but will give reasonable performance for most stepper systems."
msgstr ""

#. type: Plain text
msgid ""
"700 MHz x86 processor (1.2 GHz x86 processor recommended) or Raspberry Pi 4 "
"or better."
msgstr ""

#. type: Plain text
msgid ""
"To run LinuxCNC 2.8 and Debian Buster from the LiveCD the system should be "
"64-bit capable."
msgstr ""

#. type: Plain text
msgid "512 MB or more of RAM"
msgstr ""

#. type: Plain text
msgid "8 GB hard disk"
msgstr ""

#. type: Plain text
msgid "Graphics card capable of at least 1024x768 resolution, which is not"
msgstr ""

#. type: Plain text
msgid ""
"using the NVidia or ATI fglrx proprietary drivers. Modern onboard graphic "
"chipsets seem to generally be OK."
msgstr ""

#. type: Plain text
msgid ""
"A network or Internet connection (not strictly needed, but very useful for "
"updates and for communicating with the LinuxCNC community)"
msgstr ""

#. type: Plain text
msgid ""
"Minimum hardware requirements change as Linux distributions evolve so check "
"the https://www.debian.org/releases/stable/amd64/ch02.en.html[Debian] web "
"site for details on the LiveCD you're using. Older hardware may benefit from "
"selecting an older version of the LiveCD when available."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Kernel and Version requirements"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC requires a kernel modified for realtime use to control real machine "
"hardware. It can, however run on a standard kernel in simulation mode for "
"purposes such as checking G-code, testing config files and learning the "
"system.  To work with these kernel versions there are two versions of "
"LinuxCNC distributed. The package names are \"linuxcnc\" and \"linuxcnc-"
"uspace\""
msgstr ""

#. type: Plain text
msgid "The realtime kernel options are preempt-rt, RTAI and Xenomai."
msgstr ""

#. type: Plain text
msgid "You can discover the kernel version of your system with the command"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " uname -a\n"
msgstr ""

#. type: Plain text
msgid ""
"If you see (as above) `-rt-` in the kernel name then you are running the "
"preempt-rt kernel and should install the \"uspace\" version of linuxcnc.  "
"You should also install uspace for \"sim\" configs on non-realtime kernels"
msgstr ""

#. type: Plain text
msgid ""
"If you see `-rtai-` in the kernel name then you are running RTAI realtime. "
"See below for the linuxcnc version to install."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preempt-RT with linuxcnc-uspace"
msgstr ""

#. type: Plain text
msgid ""
"Preempt-RT is the newst of the realtime systems, and is also the version "
"that is closest to a mainline kernel. Preempt-RT kernels are available as "
"precompiled packages from the main repositories. The search term \"PREEMPT_RT"
"\" will find them, and one can be downloaded and installed just like any "
"other package.  Preempt-RT will generally have the best driver support and "
"is the only option for systems using the Mesa ethernet-connected hardware "
"driver cards. In general preempt-rt has the worst latency of the available "
"systems, but there are exceptions."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RTAI with linuxcnc"
msgstr ""

#. type: Plain text
msgid ""
"RTAI has been the mainstay of LinuxCNC distributions for many years. It will "
"generally give the best realtime performance in terms of low latency, but "
"might have poorer peripheral support and not as many screen resolutions. An "
"RTAI kernel is available from the LinuxCNC package repository. If you "
"installed from the Live/Install image then switching kernel and LinuxCNC "
"flavour is described in [Installing-RTAI]."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Xenomai with linuxcnc-uspace"
msgstr ""

#. type: Plain text
msgid ""
"Xenomai is also supported, but you will have to find or build the kernel and "
"compile LinuxCNC from source to utilise it."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RTAI with linuxcnc-uspace"
msgstr ""

#. type: Plain text
msgid ""
"It is also possible to run linuxCNC with RTAI in user-space mode. As with "
"Xenomai you will need to compile from source to do this."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Problematic Hardware"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Laptops"
msgstr ""

#. type: Plain text
msgid ""
"Laptops are not generally suited to real time software step generation. "
"Again a Latency Test run for an extended time will give you the info you "
"need to determine suitability."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Video Cards"
msgstr ""

#. type: Plain text
msgid ""
"If your installation pops up with 800 x 600 screen resolution then most "
"likely Debian does not recognize your video card or monitor. This can "
"sometimes be worked-around by installing drivers or creating / editing Xorg."
"conf files."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Getting LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"This section describes the recommended way to download and make a fresh "
"install of LinuxCNC.  There are also <<_alternate_install_methods,Alternate "
"Install Methods>> for the adventurous.  If you have an existing install that "
"you want to upgrade, go to the <<cha:updating-linuxcnc,Updating LinuxCNC>> "
"section instead."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC requires a special kernel with real-time extensions. There are "
"three possibilities here: preempt-rt, RTAI or Xenomai. In addition there are "
"two versions of LinuxCNC which work with these kernels. See the table below "
"for details."
msgstr ""

#. type: Plain text
msgid ""
"Fresh installs of LinuxCNC are most easily created using the Live/Install "
"Image.  This is a hybrid ISO filesystem image that can be written to a USB "
"storage device or a DVD and used to boot a computer.  At boot time you will "
"be given a choice of booting the \"Live\" system (to run LinuxCNC without "
"making any permanent changes to your computer) or booting the Installer (to "
"install LinuxCNC and its operating system onto your computer's hard drive)."
msgstr ""

#. type: Plain text
msgid "The outline of the process looks like this:"
msgstr ""

#. type: Plain text
msgid "Download the Live/Install Image."
msgstr ""

#. type: Plain text
msgid "Write the image to a USB storage device or DVD."
msgstr ""

#. type: Plain text
msgid "Boot the Live system to test out LinuxCNC."
msgstr ""

#. type: Plain text
msgid "Boot the Installer to install LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Download the image"
msgstr ""

#. type: Plain text
msgid ""
"This section describes some methods for downloading the Live/Install Image."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Normal Download"
msgstr ""

#. type: Plain text
msgid "For x86 PCs Download the Live/Install CD by clicking here:"
msgstr ""

#. type: Plain text
msgid "http://www.linuxcnc.org/iso/linuxcnc-2.8.2-buster.iso"
msgstr ""

#. type: Plain text
msgid "For the Raspberry Pi a complete SD card image is available here:"
msgstr ""

#. type: Plain text
msgid ""
"http://www.linuxcnc.org/iso/linuxcnc-2.8.1-pi4.zip (this will auto-update to "
"2.8.2 )"
msgstr ""

#. type: Plain text
msgid ""
"This can be installed using the normal Pi https://www.raspberrypi.org/"
"documentation/installation/installing-images/README.md[install process] "
"including with the Raspberry Pi Imager app."
msgstr ""

#. type: Plain text
msgid ""
"This SD image is reported not to work with the Raspberry Pi4 8GB model.  "
"Note also that this version of the SD image limits available memory to 3GB "
"as this is necessary to persuade it to run with both WiFi and USB working on "
"some versions of the Pi. You can experiment with removing this limit by "
"editing the config-rt.txt file in the boot directory. If you can't boot "
"after the change then the file can be edited back by mounting the SD card in "
"a a different computer (maybe even a Pi with a USB card reader)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Download using zsync"
msgstr ""

#. type: Plain text
msgid ""
"zsync is a download application that efficiently resumes interrupted "
"downloads and efficiently transfers large files with small modifications (if "
"you have an older local copy).  Use zsync if you have trouble downloading "
"the image using the <<_normal_download,Normal Download>> method."
msgstr ""

#. type: Block title
#, no-wrap
msgid "zsync in Linux"
msgstr ""

#. type: Plain text
msgid ""
"Install zsync using Synaptic or, by running the following in a <<faq:"
"terminal,terminal>>"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install zsync\n"
msgstr ""

#. type: Plain text
msgid "Then run this command to download the iso to your computer"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "http://www.linuxcnc.org/iso/linuxcnc-2.8.2-buster.iso\n"
msgstr ""

#. type: Plain text
msgid "or"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "zsync http://www.linuxcnc.org/iso/linuxcnc-2.8.1-pi4.zip.zsync\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "zsync in Windows"
msgstr ""

#. type: Plain text
msgid ""
"There is a Windows port of zsync. It works as a console application. It can "
"be downloaded from:"
msgstr ""

#. type: Plain text
msgid "https://www.assembla.com/spaces/zsync-windows/documents"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Verify the image"
msgstr ""

#. type: Plain text
msgid "(This step is unnecessary if you used zsync)"
msgstr ""

#. type: Plain text
msgid ""
"After downloading, verify the checksum of the image to ensure integrity."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "md5sum linuxcnc-2.8.2-buster.iso\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sha256sum linuxcnc-2.8.2-buster.iso\n"
msgstr ""

#. type: Plain text
msgid "Then compare to these checksums"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"md5sum: 4496eae88a1d66f457205d0d5b69c3c2\n"
"sha256sum: 94a6dc7ef12fbdc0bafd9259ce36797a8b3410ad22e73c4ab57b8e937a924e1a\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Verify md5sum on Windows or Mac"
msgstr ""

#. type: Plain text
msgid ""
"Windows and Mac OS X do not come with an md5sum program, but there are "
"alternatives.  More information can be found at: https://help.ubuntu.com/"
"community/HowToMD5SUM[How To MD5SUM]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Write the image to a bootable device"
msgstr ""

#. type: Plain text
msgid ""
"The Raspbery Pi image is a completes SD card image and should be written to "
"an SD card in https://www.raspberrypi.org/documentation/installation/"
"installing-images/README.md[the normal way]"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC Live/Install ISO Image is a hybrid ISO image which can be "
"written directly to a USB storage device (flash drive) or a DVD and used to "
"boot a computer.  The image is too large to fit on a CD."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Writing the image to a USB storage device in Linux"
msgstr ""

#. type: Plain text
msgid ""
"Connect a USB storage device (for example a flash drive or thumb drive type "
"device)."
msgstr ""

#. type: Plain text
msgid ""
"Determine the device file corresponding to the USB flash drive.  This "
"information can be found in the output of `dmesg` after connecting the "
"device.  `/proc/partitions` may also be helpful."
msgstr ""

#. type: Plain text
msgid ""
"Use the `dd` command to write the image to your USB storage device.  For "
"example, if your storage device showed up as `/dev/sde`, then use this "
"command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "dd if=linuxcnc-2.8.2-buster.iso of=/dev/sde\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Writing the image to a USB storage device in Mac OSX"
msgstr ""

#. type: Plain text
msgid "Open a terminal and type"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "diskutil list\n"
msgstr ""

#. type: Plain text
msgid ""
"Insert the USB and note the name of the new disk that appears, eg /dev/disk5"
msgstr ""

#. type: Plain text
msgid ""
"unmount the USB. The number found above should be substituted in place of "
"the N"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "diskutil unmountDisk /dev/diskN\n"
msgstr ""

#. type: Plain text
msgid ""
"Transfer the data with dd, as for Linux above. Note that the disk name has "
"an added \"r\" at the beginning"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo dd if=/path-to.iso of=/dev/rdiskN bs=1m\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that this may take a long time to complete and there will be no "
"feedback during the process."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Writing the image to a DVD in Linux"
msgstr ""

#. type: Plain text
msgid ""
"Insert a blank DVD into your burner. A 'CD/DVD Creator' or 'Choose Disc "
"Type' window will pop up. Close this, as we will not be using it."
msgstr ""

#. type: Plain text
msgid "Browse to the downloaded image in the file browser."
msgstr ""

#. type: Plain text
msgid "Right click on the ISO image file and choose Write to Disc."
msgstr ""

#. type: Plain text
msgid ""
"Select the write speed. It is recommended that you write at the lowest "
"possible speed."
msgstr ""

#. type: Plain text
msgid "Start the burning process."
msgstr ""

#. type: Plain text
msgid ""
"If a 'choose a file name for the disc image' window pops up, just pick OK."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Writing the image to a DVD in Windows"
msgstr ""

#. type: Plain text
msgid ""
"Download and install Infra Recorder, a free and open source image burning "
"program: http://infrarecorder.org/"
msgstr ""

#. type: Plain text
msgid ""
"Insert a blank CD in the drive and select Do nothing or Cancel if an auto-"
"run dialog pops up."
msgstr ""

#. type: Plain text
msgid "Open Infra Recorder, and select the"
msgstr ""

#. type: Plain text
msgid "'Actions' menu, then 'Burn image'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Writing the image to a DVD in Mac OSX"
msgstr ""

#. type: Plain text
msgid "Download the .iso file"
msgstr ""

#. type: Plain text
msgid ""
"Right-click on the file in the Finder window and select \"Burn to disc"
"\" (The option to burn to disc will only appear if the machine has an "
"optical drive fitted or connected)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Testing LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"With the USB storage device plugged in or the DVD in the DVD drive, shut "
"down the computer then turn the computer back on. This will boot the "
"computer from the Live/Install Image and choose the Live boot option."
msgstr ""

#. type: Plain text
msgid ""
"If the system does not boot from the DVD or USB stick it might be necessary "
"to change the boot order in the PC BIOS."
msgstr ""

#. type: Plain text
msgid ""
"Once the computer has booted up you can try out LinuxCNC without installing "
"it. You can not create custom configurations or modify most system settings "
"in a Live session, but you can (and should) run the latency test."
msgstr ""

#. type: Plain text
msgid ""
"To try out LinuxCNC: from the Applications/CNC menu pick LinuxCNC. A dialog "
"box will open from which you can choose one of many sample configurations. "
"At this point it only really makes sense to pick a \"sim\" configuration. "
"Some of the sample configurations include onscreen 3D simulated machines, "
"look for \"Vismach\" to see these."
msgstr ""

#. type: Plain text
msgid ""
"To see if your computer is suitable for software step pulse generation run "
"the Latency Test as shown <<latency-test,here>>."
msgstr ""

#. type: Plain text
msgid ""
"At the time of writing the Live-Image is only available with the preempt-rt "
"kernel and a matching LinuxCNC. On some hardware this might not offer good "
"enough latency. There is an experimental version available using the RTAI "
"realtime kernel which will often give better latency."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Installing LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"To install LinuxCNC from the LiveCD select 'Install (Graphical)' at bootup."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Updates to LinuxCNC (((Updates to LinuxCNC)))"
msgstr ""

#. type: Plain text
msgid ""
"With the normal install the Update Manager will notify you of updates to "
"LinuxCNC when you go on line and allow you to easily upgrade with no Linux "
"knowledge needed.  It is OK to upgrade everything except the operating "
"system when asked to."
msgstr ""

#. type: Plain text
msgid ""
"Do not upgrade the operating system if prompted to do so. You should accept "
"OS _updates_ however, especially security updates."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Install Problems"
msgstr ""

#. type: Plain text
msgid ""
"In rare cases you might have to reset the BIOS to default settings if during "
"the Live CD install it cannot recognize the hard drive during the boot up."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Alternate Install Methods"
msgstr ""

#. type: Plain text
msgid ""
"The easiest, preferred way to install LinuxCNC is to use the Live/Install "
"Image as described above.  That method is as simple and reliable as we can "
"make it, and is suitable for novice users and experienced users alike.  "
"However, this will typically replace any existing operating system."
msgstr ""

#. type: Plain text
msgid ""
"In addition, for experienced users who are familiar with Debian system "
"administration (finding install images, manipulating apt sources, changing "
"kernel flavors, etc), new installs are supported on following platforms: "
"(\"amd64\" means \"64-bit\", and is not specific to AMD processors, it will "
"run on any 64-bit x86 system)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Distribution"
msgstr ""

#. type: Table
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Table
#, no-wrap
msgid "kernel"
msgstr ""

#. type: Table
#, no-wrap
msgid "package name"
msgstr ""

#. type: Table
#, no-wrap
msgid "Typical use"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Buster"
msgstr ""

#. type: Table
#, no-wrap
msgid "amd64 & i386"
msgstr ""

#. type: Table
#, no-wrap
msgid "Stock"
msgstr ""

#. type: Table
#, no-wrap
msgid "linuxcnc-uspace"
msgstr ""

#. type: Table
#, no-wrap
msgid "simulation only"
msgstr ""

#. type: Table
#, no-wrap
msgid "amd64 & armhf"
msgstr ""

#. type: Table
#, no-wrap
msgid "preemp-rt"
msgstr ""

#. type: Table
#, no-wrap
msgid "machine control & simulation"
msgstr ""

#. type: Table
#, no-wrap
msgid "amd64"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "RTAI"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "linuxcnc"
msgstr ""

#. type: Table
#, no-wrap
msgid "machine control (known issues)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Jessie"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Wheezy"
msgstr ""

#. type: Table
#, no-wrap
msgid "i386"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Preempt-RT"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ubuntu Precise"
msgstr ""

#. type: Plain text
msgid "LinuxCNC v2.8 is not supported on Ubuntu Lucid or older."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Preempt-RT kernels"
msgstr ""

#. type: Plain text
msgid ""
"The Preempt-rt kernels are available for Debian from the regular debian.org "
"archive. The preempt-rt kernel for RaspBerry Pi is available from the "
"LinuxCNC repository.  The package is called `linux-image-rt-*` Simply "
"install the package in the same way as any other package from the Synaptic "
"Package manager or with apt-get at the command-line."
msgstr ""

#. type: Block title
#, no-wrap
msgid "RTAI Kernels"
msgstr ""

#. type: Plain text
msgid ""
"The RTAI kernels are available for download from the linuxcnc.org debian "
"archive.  The apt source is:"
msgstr ""

#. type: Plain text
msgid "Debian Buster: `deb http://linuxcnc.org buster base`"
msgstr ""

#. type: Plain text
msgid "Debian Wheezy: `deb http://linuxcnc.org wheezy base`"
msgstr ""

#. type: Plain text
msgid "Ubuntu Precise: `deb http://linuxcnc.org precise base`"
msgstr ""

#. type: Plain text
msgid ""
"Debian Wheezy and Ubuntu Precise are both extremely old, and are out of "
"their support period. It is strongly advised not to use either for a new "
"install, and to seriously consider upgrading an existing installation."
msgstr ""

#. type: Plain text
msgid ""
"The Buster / RTAI package is only available on amd64, but there are very few "
"surviving systems that can not run a 64-bit OS."
msgstr ""

#. type: Plain text
msgid ""
"There are known issues with the 64-bit RTAI 5.2 kernel with this version of "
"LinuxCNC. The system will occasionally lock solid.  However, this has, so "
"far, been seen only during system exit. While running the system appears to "
"be stable. But should nevertheless be considered experimental at this point."
msgstr ""

#. type: Plain text
msgid ""
"If you decide to use the RTAI 5.2 kernel and see a problem outside the "
"circumstances described above then please report it immediately to the "
"project developers."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installing on Debian Buster (with Preempt-RT kernel)"
msgstr ""

#. type: Plain text
msgid ""
"Install Debian Buster (Debian 10), amd64 version.  You can download the "
"installer here: https://www.debian.org/releases/buster/"
msgstr ""

#. type: Plain text
msgid ""
"After burning the iso and booting up if you don't want Gnome desktop select "
"'Advanced Options' > 'Alternative desktop environments' and pick the one you "
"like. Then select 'Install' or 'Graphical Install'."
msgstr ""

#. type: Plain text
msgid ""
"Do not enter a root password, if you do sudo is disabled and you won't be "
"able to complete the following steps."
msgstr ""

#. type: Plain text
msgid ""
"Run the following in a <<faq:terminal,terminal>> to bring the machine up to "
"date with the latest packages."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"sudo apt-get update\n"
"sudo apt-get dist-upgrade\n"
msgstr ""

#. type: Plain text
msgid "Install the Preempt-RT kernel and modules"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linux-image-rt-amd64\n"
msgstr ""

#. type: Plain text
msgid ""
"Re-boot, and select the Linux 4.19.0-9-rt-amd64 kernel. This might be hidden "
"in the \"Advanced options for Debian Buster\" sub-menu in Grub.  When you "
"log in, verify that `PREEMPT RT`is reported by the following command."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "uname -v\n"
msgstr ""

#. type: Plain text
msgid ""
"Open Applications Menu > System > Synaptic Package Manager search for 'linux-"
"image' and right click on the original non-rt and select 'Mark for Complete "
"Removal'. Reboot.  This is to force the system to boot from the RT kernel. "
"If you prefer to retain both kernels then the other kernels need not be "
"deleted, but grub boot configuration changes will be needed beyond the scope "
"of this document."
msgstr ""

#. type: Plain text
msgid "Add the LinuxCNC Archive Signing Key to your apt keyring by running"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-key adv --keyserver hkp://keys.openpgp.org --recv-key 3cb9fd148f374fef\n"
msgstr ""

#. type: Plain text
msgid "Add the apt repository:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" echo deb http://linuxcnc.org/ buster base 2.8-rtpreempt | sudo tee /etc/apt/sources.list.d/linuxcnc.list\n"
" echo deb-src http://linuxcnc.org/ buster base 2.8-rtpreempt | sudo tee -a /etc/apt/sources.list.d/linuxcnc.list\n"
msgstr ""

#. type: Plain text
msgid "Update the package list from linuxcnc.org"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get update\n"
msgstr ""

#. type: Plain text
msgid "Install uspace (a reboot may be required prior to installing uspace)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linuxcnc-uspace\n"
msgstr ""

#. type: Plain text
msgid "Optionally you can install mesaflash if you are using a Mesa card."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt install mesaflash\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installing on Debian Buster (with experimental RTAI kernel)"
msgstr ""

#. type: Plain text
msgid ""
"This kernel has known stability problems. It appears to run reliably once "
"LinuxCNC is loaded. However kernel panics have been seen at system shut-down."
msgstr ""

#. type: Plain text
msgid ""
"This kernel and LinuxCNC version can be installed on top of the LiveDVD "
"install, or alternatively on a fresh Install of Debian Buster 64-bit as "
"described above"
msgstr ""

#. type: Plain text
msgid ""
"Add the LinuxCNC Archive Signing Key to your apt keyring (Not necessary if "
"switching the realtime mode of a LinuxCNC Live-CD image)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" echo deb http://linuxcnc.org/ buster base 2.8-rt | sudo tee /etc/apt/sources.list.d/linuxcnc.list\n"
" echo deb-src http://linuxcnc.org/ buster base 2.8-rt | sudo tee -a /etc/apt/sources.list.d/linuxcnc.list\n"
msgstr ""

#. type: Plain text
msgid "Install the new realtime kernel, RTAI and the rtai version of linuxcnc"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linuxcnc\n"
msgstr ""

#. type: Plain text
msgid ""
"Reboot the machine, ensuring that the system boots from the new 4.19.195-"
"rtai kernel."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installing on Raspbian 10"
msgstr ""

#. type: Plain text
msgid ""
"Download a stock Raspbian image to an SD card and install in the https://www."
"raspberrypi.org/documentation/installation/installing-images/README.md[usual "
"way]"
msgstr ""

#. type: Plain text
msgid "Boot the Pi and open a terminal"
msgstr ""

#. type: Plain text
msgid "Add the LinuxCNC Archive Signing Key to your apt keyring"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid " echo deb http://linuxcnc.org/ buster base 2.8-rtpreempt | sudo tee /etc/apt/sources.list.d/linuxcnc.list\n"
msgstr ""

#. type: Plain text
msgid "install the realtime kernel"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linux-image-4.19.71-rt24-v7l+\n"
msgstr ""

#. type: Plain text
msgid "Install linuxcnc (a reboot may be required prior to installing)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installing on Ubuntu Precise"
msgstr ""

#. type: Plain text
msgid ""
"Install Ubuntu Precise 12.04 x86 (32-bit). Any flavor should work (regular "
"Ubuntu, Xubuntu, Lubuntu, etc). 64-bit (AMD64)  is currently not supported. "
"You can download the installer here: http://releases.ubuntu.com/precise/ "
"Note the warnings that this release is out of support. But it is a way to "
"install LinuxCNC with a well-tested RTAI kernel."
msgstr ""

#. type: Plain text
msgid ""
"Run the following to bring the machine up to date with the latest packages "
"in Ubuntu Precise."
msgstr ""

#. type: Plain text
msgid "Add a new apt source"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo add-apt-repository \"deb http://linuxcnc.org/ precise base 2.8-rt\"\n"
msgstr ""

#. type: Plain text
msgid "Fetch the package list from linuxcnc.org."
msgstr ""

#. type: Plain text
msgid "Install the RTAI kernel and modules by running"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linux-image-3.4-9-rtai-686-pae rtai-modules-3.4-9-rtai-686-pae\n"
msgstr ""

#. type: Plain text
msgid ""
"If you want to be able to build LinuxCNC from source using the git repo, "
"also run"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt-get install linux-headers-3.4-9-rtai-686-pae\n"
msgstr ""

#. type: Plain text
msgid ""
"Reboot, and make sure you boot into the rtai kernel. When you log in, verify "
"that the kernel name is 3.4-9-rtai-686-pae."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "uname -r\n"
msgstr ""

#. type: Plain text
msgid "Run"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Running LinuxCNC"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Invoking LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"After installation, LinuxCNC starts just like any other Linux program: run "
"it from the <<faq:terminal,terminal>> by issuing the command 'linuxcnc', or "
"select it in the Applications - CNC menu."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuration Launcher"
msgstr ""

#. type: Plain text
msgid ""
"When starting LinuxCNC from the CNC menu or from the command line without "
"specifying an ini file the Configuration Selector dialog starts."
msgstr ""

#. type: Plain text
msgid ""
"The Configuration Selector dialog allows the user to pick one of their "
"existing configurations (My Configurations) or select a new one (from the "
"Sample Configurations) to be copied to their home directory. Copied "
"configurations will appear under My Configurations on the next invocation of "
"the Configuration Selector."
msgstr ""

#. type: Plain text
msgid ""
"The Configuration Selector offers a selection of configurations organized:"
msgstr ""

#. type: Plain text
msgid "'My Configurations' - User configurations located in ~/linuxcnc/configs"
msgstr ""

#. type: Plain text
msgid ""
"'Sample Configurations' - Sample configurations, when selected are copied to"
msgstr ""

#. type: Plain text
msgid ""
"~/linuxcnc/configs. Once you copy a sample configuration if you use the "
"launcher pick it from 'My Configurations'"
msgstr ""

#. type: Plain text
msgid ""
"'sim' - Configurations that include simulated hardware. These can be used "
"for testing or learning how LinuxCNC works."
msgstr ""

#. type: Plain text
msgid "'by_interface' - Configurations organized by GUI."
msgstr ""

#. type: Plain text
msgid "'by_machine' - Configurations organized by machine."
msgstr ""

#. type: Plain text
msgid ""
"'apps' - Applications that do not require starting linuxcnc but may be "
"useful for testing or trying applications like <<cha:pyvcp,PyVCP>> or <<cha:"
"glade-vcp,GladeVCP>>."
msgstr ""

#. type: Plain text
msgid "'attic' - Obsolete or historical configurations."
msgstr ""

#. type: Plain text
msgid ""
"The sim configurations are often the most useful starting point for new "
"users and are organized around supported guis:"
msgstr ""

#. type: Plain text
msgid "axis - Keyboard and Mouse Gui"
msgstr ""

#. type: Plain text
msgid "gmoccapy - Touch Screen Gui"
msgstr ""

#. type: Plain text
msgid "gscreen - Touch Screen Gui"
msgstr ""

#. type: Plain text
msgid "low_graphics - Keyboard Gui"
msgstr ""

#. type: Plain text
msgid "tklinuxcnc - Keyboard and Mouse Gui(no longer maintained)"
msgstr ""

#. type: Plain text
msgid "touchy - Touch Screen Gui"
msgstr ""

#. type: Plain text
msgid ""
"A gui configuration directory may contain subdirectories with configurations "
"that illustrate special situations or the embedding of other applications."
msgstr ""

#. type: Plain text
msgid ""
"The by_interface configurations are organized around common, supported "
"interfaces like:"
msgstr ""

#. type: Plain text
msgid "general mechatronics"
msgstr ""

#. type: Plain text
msgid "mesa"
msgstr ""

#. type: TH
#, no-wrap
msgid "parport"
msgstr ""

#. type: Plain text
msgid "pico"
msgstr ""

#. type: Plain text
msgid "pluto"
msgstr ""

#. type: Plain text
msgid "servotogo"
msgstr ""

#. type: Plain text
msgid "vigilant"
msgstr ""

#. type: Plain text
msgid "vitalsystems"
msgstr ""

#. type: Plain text
msgid ""
"Related hardware may be required to use these configurations as starting "
"points for a system."
msgstr ""

#. type: Plain text
msgid ""
"The by_machine configurations are organized around complete, known systems "
"like:"
msgstr ""

#. type: Plain text
msgid "boss"
msgstr ""

#. type: Plain text
msgid "cooltool"
msgstr ""

#. type: Plain text
msgid "sherline"
msgstr ""

#. type: Plain text
msgid "smithy"
msgstr ""

#. type: Plain text
msgid "tormach"
msgstr ""

#. type: Plain text
msgid "A complete system may be required to use these configurations."
msgstr ""

#. type: Plain text
msgid ""
"The apps items are typically 1) utilities that don't require starting "
"linuxcnc or 2) demonstrations of applications that can be used with linuxcnc:"
msgstr ""

#. type: Plain text
msgid ""
"info - creates a file with system information that may be useful for problem "
"diagnosis."
msgstr ""

#. type: Plain text
msgid "gladevcp - Example gladevcp applications."
msgstr ""

#. type: Plain text
msgid "halrun - Starts halrun in an <<faq:terminal,terminal>>."
msgstr ""

#. type: Plain text
msgid "latency - Applications to investigate latency"
msgstr ""

#. type: Plain text
msgid "latency-test - standard test"
msgstr ""

#. type: Plain text
msgid "latency-plot - stripchart"
msgstr ""

#. type: Plain text
msgid "latency-histogram - histogram"
msgstr ""

#. type: Plain text
msgid "parport - Applications to test parport."
msgstr ""

#. type: Plain text
msgid "pyvcp - Example pyvcp applications."
msgstr ""

#. type: Plain text
msgid "xhc-hb04 - Applications to test an xhc-hb04 USB wireless MPG"
msgstr ""

#. type: Plain text
msgid ""
"Under the Apps directory, only applications that are usefully modified by "
"the user are offered for copying to the user's directory."
msgstr ""

#. type: Block title
#, no-wrap
msgid "LinuxCNC Configuration Selector[[cap:LinuxCNC-Configuration-Selector]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "LinuxCNC Configuration Selector"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/configuration-selector.png"
msgstr ""

#. type: Plain text
msgid ""
"Click any of the listed configurations to display specific information about "
"it.  Double-click a configuration or click OK to start the configuration.  "
"Select 'Create Desktop Shortcut' and then click OK to add an icon on the "
"Ubuntu desktop to directly launch this configuration without showing the "
"Configuration Selector screen."
msgstr ""

#. type: Plain text
msgid ""
"When you select a configuration from the Sample Configurations section, it "
"will automatically place a copy of that config in the linuxcnc/configs "
"directory."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Next steps in configuration"
msgstr ""

#. type: Plain text
msgid ""
"After finding the sample configuration that uses the same interface hardware "
"as your machine (or a simulator configuration), and saving a copy to your "
"home directory, you can customize it according to the details of your "
"machine.  Refer to the Integrator Manual for topics on configuration."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Simulator Configurations"
msgstr ""

#. type: Plain text
msgid ""
"All configurations listed under Sample Configurations/sim are intended to "
"run on any computer.  No specific hardware is required and real-time support "
"is not needed."
msgstr ""

#. type: Plain text
msgid ""
"These configurations are useful for studying individual capabilities or "
"options.  The sim configurations are organized according to the graphical "
"user interface used in the demonstration.  The directory for axis contains "
"the most choices and subdirectories because it is the most tested GUI.  The "
"capabilities demonstrated with any specific GUI may be available in other "
"GUIs as well."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuration Resources"
msgstr ""

#. type: Plain text
msgid ""
"The Configuration Selector copies all files needed for a configuration to a "
"new subdirectory of ~/linuxcnc/configs (equivalently: /home/username/"
"linuxcnc/configs).  Each created directory will include at least one ini "
"file (iniflename.ini)  that is used to describe a specific configuration."
msgstr ""

#. type: Plain text
msgid ""
"File resources within the copied directory will typically include one or "
"more ini file (filename.ini) for related configurations and a tool table "
"file (toolfilename.tbl).  Additionally, resources may include halfiles "
"(filename.hal, filename.tcl), a README file for describing the directory, "
"and configuration specific information in a text file named after a specific "
"configuration (inifilename.txt).  That latter two files are displayed when "
"using the Configuration Selector."
msgstr ""

#. type: Plain text
msgid ""
"The supplied sample configurations may specify HALFILEs in the configuration "
"ini file that are not present in the copied directory because they are found "
"in the system Halfile library.  These files can be copied to the user "
"configuration directory and altered as required by the user for modification "
"or test.  Since the user configuration directory is searched first when "
"finding Halfiles, local modifications will then prevail."
msgstr ""

#. type: Plain text
msgid ""
"The Configuration selector makes a symbolic link in the user configuration "
"directory (named hallib) that points to the system Halfile library.  This "
"link simplifies copying a library file.  For example, to copy the library "
"core_sim.hal file in order to make local modifications:"
msgstr ""

#. type: delimited block =
#, no-wrap
msgid ""
"  cd ~/linuxcnc/configs/name_of_configuration\n"
"  cp hallib/core_sim.hal core_sim.hal\n"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Updating LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"Updating LinuxCNC to a new minor release (ie to a new version in the same "
"stable series, for example from 2.7.0 to 2.7.1) is an automatic process if "
"your PC is connected to the internet. You will see an update prompt after a "
"minor release along with other software updates. If you don't have an "
"internet connection to your PC see <<getting-started:update-no-network,"
"Updating without Network>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Upgrade to the new version"
msgstr ""

#. type: Plain text
msgid ""
"This section describes how to upgrade LinuxCNC from version 2.7 to the new "
"2.8.0 version.  It assumes that you have an existing 2.7 install that you "
"want to update."
msgstr ""

#. type: Plain text
msgid ""
"To upgrade LinuxCNC from a version older than 2.7, you have to first http://"
"linuxcnc.org/docs/2.7/html/getting-started/updating-linuxcnc.html[upgrade "
"your old install to 2.7], then follow these instructions to upgrade to the "
"new version."
msgstr ""

#. type: Plain text
msgid ""
"If you do not have an old version of LinuxCNC to upgrade, then you're best "
"off making a fresh install of the new version as described in the section "
"<<cha:getting-linuxcnc,Getting LinuxCNC>>."
msgstr ""

#. type: Plain text
msgid ""
"Furthermore, if you are running Ubuntu Precise or Debian Wheezy it is well "
"worth considering making a backup of the \"linuxcnc\" directory on removable "
"media and performing a <<cha:getting-linuxcnc,clean install of a newer OS "
"and LinuxCNC version>> as these releases were EOL in 2017 and 2018 "
"respectively.  If you are running on Ubuntu Lucid then you will have to do "
"this, as Lucid is no longer supported by LinuxCNC (it was EOL in 2013)"
msgstr ""

#. type: Plain text
msgid ""
"To upgrade major versions like 2.7 to 2.8 when you have a network connection "
"at the machine you need to disable the old linuxcnc.org apt sources and add "
"a new linuxcnc.org apt source for 2.7, then upgrade LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"The details will depend on which platform you're running on.  Open a <<faq:"
"terminal,terminal>> then type `lsb_release -ic` to find this information out:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"lsb_release -ic\n"
"Distributor ID: Debian\n"
"Codename:       wheezy\n"
msgstr ""

#. type: Plain text
msgid ""
"You should be running on Debian Stretch or Wheezy (as above), or Ubuntu "
"Precise. Packages are also available for Debian Jessie or Debian Buster if "
"you happen to already be running one of those."
msgstr ""

#. type: Plain text
msgid "You will also need to check which realtime kernel is being used:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"uname -r\n"
"4.19.0-9-rt-amd64\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Setting apt sources"
msgstr ""

#. type: Plain text
msgid ""
"Open the `Software Sources` window. The process for doing this differs "
"slightly on the three supported platforms:"
msgstr ""

#. type: Plain text
msgid "Debian:"
msgstr ""

#. type: Plain text
msgid "Click on `Applications Menu`, then `System`, then"
msgstr ""

#. type: Plain text
msgid "`Synaptic Package Manager`."
msgstr ""

#. type: Plain text
msgid "In Synaptic, click on the `Settings` menu, then click `Repositories`"
msgstr ""

#. type: Plain text
msgid "to open the `Software Sources` window."
msgstr ""

#. type: Plain text
msgid "Ubuntu:"
msgstr ""

#. type: Plain text
msgid "Click on the `Dash Home` icon in the top left."
msgstr ""

#. type: Plain text
msgid "In the `Search` field, type \"software\", then click on the `Ubuntu"
msgstr ""

#. type: Plain text
msgid "Software Center` icon."
msgstr ""

#. type: Plain text
msgid "In the Ubuntu Software Center window, click on the `Edit` menu,"
msgstr ""

#. type: Plain text
msgid ""
"then click on `Software Sources...` to open the `Software Sources` window."
msgstr ""

#. type: Plain text
msgid "In the `Software Sources` window, select the `Other Software` tab."
msgstr ""

#. type: Plain text
msgid ""
"Delete or un-check all the old linuxcnc.org entries (leave all non-linuxcnc."
"org lines as they are)."
msgstr ""

#. type: Plain text
msgid ""
"Click the `Add` button and add a new apt line. The line will be slightly "
"different on the different platforms:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Platform"
msgstr ""

#. type: Table
#, no-wrap
msgid "apt source line"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Stretch"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org stretch base 2.8-rtpreempt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org wheezy base 2.8-rt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org precise base 2.8-rt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Jessie - preempt"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org jessie base 2.8-rtpreempt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Jessie - RTAI"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org jessie base 2.8-rt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Buster - preempt"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org buster base 2.8-rtpreempt`"
msgstr ""

#. type: Table
#, no-wrap
msgid "Debian Buster - RTAI"
msgstr ""

#. type: Table
#, no-wrap
msgid "`deb http://linuxcnc.org buster base 2.8-rt`"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/upgrading-to-2.8.png"
msgstr ""

#. type: Plain text
msgid ""
"Click `Add Source`, then `Close` in the Software Sources window.  If it pops "
"up a window informing you that the information about available software is "
"out-of-date, click the `Reload` button."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Upgrading to the new version"
msgstr ""

#. type: Plain text
msgid ""
"Now your computer knows where to get the new version of the software, next "
"we need to install it."
msgstr ""

#. type: Plain text
msgid "The process again differs depending on your platform."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Debian Wheezy & Stretch and Ubuntu Lucid"
msgstr ""

#. type: Plain text
msgid "Debian Wheezy and Stretch both use the Synaptic Package Manager."
msgstr ""

#. type: Plain text
msgid ""
"Open Synaptic using the instructions in <<_setting_apt_sources,Setting apt "
"sources>> above."
msgstr ""

#. type: Plain text
msgid "Click the `Reload` button."
msgstr ""

#. type: Plain text
msgid "Use the Search function to search for `linuxcnc`."
msgstr ""

#. type: Plain text
msgid ""
"The package is called \"linuxcnc\" for RTAI kernels and \"linuxcnc-uspace\" "
"for preempt-rt."
msgstr ""

#. type: Plain text
msgid ""
"Click the check box to mark the new linuxcnc and linuxcnc-doc-* packages for "
"upgrade. The package manager may select a number of additional packages to "
"be installed, to satisfy dependencies that the new linuxcnc package has."
msgstr ""

#. type: Plain text
msgid ""
"Click the `Apply` button, and let your computer install the new package. The "
"old linuxcnc package will be automatically upgraded to the new one."
msgstr ""

#. type: Plain text
msgid ""
"In the `Search` field, type \"update\", then click on the `Update Manager` "
"icon."
msgstr ""

#. type: Plain text
msgid "Click the `Check` button to fetch the list of packages available."
msgstr ""

#. type: Plain text
msgid ""
"Click the `Install Updates` button to install the new versions of all "
"packages."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Updating without Network"
msgstr ""

#. type: Plain text
msgid ""
"To update without a network connection you need to download the deb then "
"install it with dpkg. The debs can be found in http://linuxcnc.org/dists/ "
"You have to drill down from the above link to find the correct deb for your "
"installation. Open a <<faq:terminal,terminal>> and type in 'lsb_release -ic' "
"to find the name of your OS."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> lsb_release -ic\n"
"Distributor ID: Debian\n"
"Codename:       buster\n"
msgstr ""

#. type: Plain text
msgid ""
"Pick the OS from the list then pick the major version you want like 2.8-rt "
"for RTAI or 2.8-rtpreempt for preempt-rt."
msgstr ""

#. type: Plain text
msgid ""
"Next pick the type of computer you have: binary-amd64 for any 64-bit x86, "
"binary-i386 for 32 bit, binary-armhf for RaspBerry Pi."
msgstr ""

#. type: Plain text
msgid ""
"Next pick the version you want from the bottom of the list like 'linuxcnc-"
"uspace_2.8.0_amd64.deb'. (choose the latest by date)  Download the deb and "
"copy it to your home directory. You can rename the file to something a bit "
"shorter with the file manager like 'linuxcnc_2.8.0.deb' then open a terminal "
"and install it with the package manager with this command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo dpkg -i linuxcnc_2.8.0.deb\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Updating Configuration Files (for 2.8.x)"
msgstr ""

#. type: Plain text
msgid ""
"The new version of LinuxCNC differs from version 2.7 in some ways that may "
"require changes to your machine configuration."
msgstr ""

#. type: Plain text
msgid ""
"The main difference is that LinuxCNC no longer makes any assumptions about "
"which joint controls which axis. This change is generally termed \"joints-"
"axes\" after the name of the development branch where the changes started.  "
"This change has been in development since at least 2010, and has finally "
"been merged."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Distribution Configurations (updates for joints_axes)"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC distribution includes many example configurations organized in "
"directory hierarchies named: by_machine, by_interface, and sim (simulated "
"machines).  These configurations are often used as starting points for "
"making a new configuration, as examples for study, or as complete simulated "
"machines that can run without special hardware or real-time kernels."
msgstr ""

#. type: Plain text
msgid ""
"The configuration files in these directory trees have been updated for the "
"changes required for the joints_axes updates."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Automatic updates (update_ini script for joints_axes)"
msgstr ""

#. type: Plain text
msgid ""
"Since the joints_axes updates require a number of changes to user ini files "
"and their related halfiles, a script named update_ini is provided to "
"automatically convert user configurations."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"This script is invoked when a user starts an existing configuration for the\n"
"first time after updating LinuxCNC.  The script searches the user ini file for\n"
"a [EMC]VERSION item.   If this item 1) does not exist, or 2) exists and is set\n"
"to the historical CVS value \"$Revision$\", or is a numerical value less than\n"
"1.1, then the update_ini script will popup a dialog to offer to edit the user\n"
"files to create an updated configuration.  If the user accepts, the\n"
"configuration will be updated.\n"
msgstr ""

#. type: Plain text
msgid ""
"For example, if the user configuration is named bigmill.ini, the bigmill.ini "
"file and its local associated hal files will be edited to incorporate "
"joints_axes changes.  All files of the initial configuration will be saved "
"in a new directory named after the original configuration with a \".old\" "
"suffix (bigmill.old in the example)."
msgstr ""

#. type: Plain text
msgid ""
"The update_ini script handles all common user items that are found in basic "
"machines employing identity kinematics.  Less common items used in more "
"complex machines may not be converted automatically.  Examples of complex "
"machine configurations include:"
msgstr ""

#. type: Plain text
msgid "gantries with two joints for an axis"
msgstr ""

#. type: Plain text
msgid "machines with jogwheels"
msgstr ""

#. type: Plain text
msgid "robots with non-identity kinematics"
msgstr ""

#. type: Plain text
msgid "configurations using haltcl files"
msgstr ""

#. type: Plain text
msgid ""
"The following subsections and the section for 'Hal Changes' list items that "
"may require additional user edits to ini or hal files."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Multiple Spindle Support"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC now supports up to 8 spindles (and can be recompiled for more)  "
"Existing G-code will run without modification and most configurations will "
"default to single spindles. To specify more than one spindle set the "
"[TRAJ]SPINDLES= entry in the INI file *and* include the num_spindles= "
"parameter for the motion module (set with either [EMCMOT]EMCMOT = motmod "
"num_spindles= or included in a halfile loadrt entry for motmod)."
msgstr ""

#. type: Plain text
msgid ""
"The motion module num_spindles= parameter and the [TRAJ]SPINDLES= settings "
"*must* match."
msgstr ""

#. type: Plain text
msgid ""
"The spindle control pin names have been changed to make spindles look more "
"like axes and joints. motion.spindle-speed-out is now spindle.0.speed-out "
"for example. The automatic update script will take care of these changes.  "
"To control extra spindles the G and M-codes which control spindle speed now "
"accept an additional \"$\" argument, for example M3 $2 to start the third "
"spindle. \"$\" was chosen to avoid clashes with any existing code letters. "
"It should be possible to create custom G-codes to match any other multi-"
"spindle controller.  See the G-code and M-code manuals for code changes, and "
"man motion for the HAL pin changes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "TRAJ velocities, accelerations names"
msgstr ""

#. type: Plain text
msgid ""
"With incorporation of joints_axes functionality, some names were changed to "
"clarify available functionality."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: [TRAJ]MAX_VELOCITY         is: [TRAJ]MAX_LINEAR_VELOCITY\n"
"was: [TRAJ]DEFAULT_VELOCITY     is: [TRAJ]DEFAULT_LINEAR_VELOCITY\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: [TRAJ]MAX_ACCELERATION     is: [TRAJ]MAX_LINEAR_ACCELERATION\n"
"was: [TRAJ]DEFAULT_ACCELERATION is: [TRAJ]DEFAULT_LINEAR_ACCELERATION\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Kinematics modules"
msgstr ""

#. type: Plain text
msgid ""
"The gentrivkins and gantrykins kinematics modules have been removed as their "
"functionality is now available in the updated trivkins module."
msgstr ""

#. type: Plain text
msgid ""
"The gentrivkins module has only been available in prior joints_axes "
"branches.  To convert, it is necessary to change the name."
msgstr ""

#. type: Plain text
msgid "Hal file examples:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: loadrt gentrivkins\n"
" is: loadrt trivkins\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: loadrt gentrivkins coordinates=xyyz\n"
" is: loadrt trivkins    coordinates=xyyz\n"
msgstr ""

#. type: Plain text
msgid ""
"Configurations using gantrykins should be updated to use trivkins with the "
"kinstype= parameter set to BOTH (for KINEMATICS_BOTH)."
msgstr ""

#. type: Plain text
msgid "Hal file example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: loadrt gantrykins coordinates=xyyz\n"
" is: loadrt trivkins   coordinates=xyyz kinstype=BOTH\n"
msgstr ""

#. type: Plain text
msgid "See the trivkins man page for additional information ('$ man trivkins')"
msgstr ""

#. type: Plain text
msgid ""
"Note: the most supported usage for specifying kinematics in joints_axes is "
"to set values in the configuration ini file [KINS} section and then "
"reference them within the specified [HAL]HALFILES ( .hal .tcl files).  For "
"example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"inifile:    [KINS]\n"
"            KINEMATICS = trivkins\n"
"            JOINTS = 3\n"
"            ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halfile:    loadrt [KINS]KINEMATICS\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "haltclfile: loadrt $::KINS(KINEMATICS)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Lathe Configurations"
msgstr ""

#. type: Plain text
msgid ""
"Prior to joints_axes incorporation, lathes were often configured as if they "
"were three axis (XYZ) machines with an unused axis (Y).  This was convenient "
"for sharing Hal files (especially for simulation configs) but required "
"specification of [TRAJ]AXES =3, a 'dummy' AXIS_Y section, and provisions for "
"homing the unused Y coordinate.  These arrangements are no longer required "
"or recommended."
msgstr ""

#. type: Plain text
msgid ""
"Historical lathe configurations used the default options for the trivkins "
"kinematics module.  These default options configure all axis letters "
"(XYZABCUVW).  With joints_axes incorporation, a more appropriate kinematics "
"specification sets the coordinates to the exact ones used (XZ) and sets the "
"number of joints accordingly to 2.  There is no need for an ini file "
"[AXIS_Y] section and only two [JOINT_N] sections need be defined."
msgstr ""

#. type: Plain text
msgid ""
"Example ini file items for a lathe (only sections relevant to kinematics are "
"shown):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = trivkins coordinates=xz\n"
"JOINTS = 2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRAJ]\n"
"COORDINATES = XZ\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[AXIS_X]\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[AXIS_Z]\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_1]\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that some simulation configurations may still use the historical lathe "
"configuration precedents."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Consistent Joints/Axes specifications"
msgstr ""

#. type: Plain text
msgid "Ini file items that affect joints and axes usage must be consistent."
msgstr ""

#. type: Plain text
msgid ""
"The motion kinematics module typically loaded with '[KINS]KINEMATICS=' must "
"use a number of joints equal to the number specified with '[KINS]JOINTS='."
msgstr ""

#. type: Plain text
msgid ""
"The kinematics module must implement axis letters that are consistent with "
"the specification used by the task module item '[TRAJ]COORDINATES='."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Examples:"
msgstr ""

#. type: Plain text
msgid "Three axis Cartesian machine using trivkins (KINEMATICS_IDENTITY):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]KINEMATICS  = trivkins\n"
"  [KINS]JOINTS      = 3\n"
"  [TRAJ]COORDINATES = XYZ\n"
msgstr ""

#. type: Plain text
msgid ""
"Two axis lathe using trivkins (KINEMATICS_IDENTITY) with non-consecutive "
"axis letters:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]KINEMATICS  = trivkins coordinates=XZ\n"
"  [KINS]JOINTS      = 2\n"
"  [TRAJ]COORDINATES = XZ\n"
msgstr ""

#. type: Plain text
msgid ""
"Gantry using trivkins with duplicated axis letters and KINEMATICS_BOTH to "
"allow individual joint positioning (for homing):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]KINEMATICS  = trivkins coordinates=XYYZ kinstype=BOTH\n"
"  [KINS]JOINTS      = 4\n"
"  [TRAJ]COORDINATES = XYYZ\n"
msgstr ""

#. type: Plain text
msgid ""
"Gantry using trivkins (KINEMATICS_BOTH) with duplicated axis letters and a "
"rotary axis with skipped axis letters (A,B skipped):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]KINEMATICS  = trivkins coordinates=XYYZC kinstype=BOTH\n"
"  [KINS]JOINTS      = 5\n"
"  [TRAJ]COORDINATES = XYYZC\n"
msgstr ""

#. type: Plain text
msgid ""
"Linear Delta Robot with non-identity kins (KINEMATICS_BOTH) working in "
"Cartesian frame with an additional rotary coordinate:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]KINEMATICS  = lineardeltakins\n"
"  [KINS]JOINTS      = 4\n"
"  [TRAJ]COORDINATES = XYZA\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Note: Some general-purpose kinematics modules (like trivkins) implement\n"
"      identity kinematics with support for coordinate specification (axis letters).\n"
"      Axis letters may be omitted.  Axis letters may be duplicated.\n"
"      Joints are assigned to axis letters in a defined manner ('$ man trivkins').\n"
msgstr ""

#. type: Plain text
msgid ""
"Note: For trivkins module loading, do not include spaces about the = sign or "
"letters:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"      This:     [KINS]KINEMATICS = trivkins coordinates=XZ\n"
"      NOT This: [KINS]KINEMATICS = trivkins coordinates = X Z\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Note: Custom kinematics modules that implement non-identity kinematics (like\n"
"      lineardeltakins) define machine-specific relationships between a set\n"
"      of coordinates and a set of joints.  Typically, custom kinematics modules\n"
"      compute the joints-axes relationships within the custom module but it is\n"
"      important to use consistent settings for the related ini items: '[KINS]JOINTS'\n"
"      and '[TRAJ]COORDINATES'.  The details will usually be explained in the\n"
"      module man page (for example, '$ man lineardeltakins').\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Home sequences"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Negative* values may be used for the ini file items\n"
"named [JOINT_n]HOME_SEQUENCE.  Prior to joints_axes incorporation a value\n"
"of -1 or the omission of the item indicated no sequence was applicable.\n"
"Now, only omission of the item is used for that purpose.\n"
"See the chapter: <<cha:homing-configuration, 'Homing Configuration'>> \n"
"for more information.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Locking rotary indexer (updates for joints_axes)"
msgstr ""

#. type: Plain text
msgid ""
"With joints_axes, an indexer is a joint that can be homed (joint mode)  but "
"must also be unlocked from gcode.  This requires a one-to-one correspondence "
"between a single joint and an axis."
msgstr ""

#. type: Plain text
msgid ""
"Specify the joint number that corresponds to a rotary axis (L = A,B, or C)  "
"with an ini file setting for the axis:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "  [AXIS_L]LOCKING_INDEXER_JOINT = joint_number_for_indexer\n"
msgstr ""

#. type: Plain text
msgid ""
"Specify that the joint is a locking indexer with an ini file setting for the "
"joint (N is the joint_number_for_indexer):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "  [JOINT_N]LOCKING_INDEXER = 1\n"
msgstr ""

#. type: Plain text
msgid "Hal pins can be created to coordinate use of a locking indicator joint:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   joint.N.unlock      (BIT output from Hal)\n"
"   joint.N.is-unlocked (BIT input  to   Hal)\n"
msgstr ""

#. type: Plain text
msgid ""
"To create these hal pins for locking joints, specify all joints that are "
"used as locking indexers with the 'unlock_joints_mask' parameter for the "
"motmod module.  (bit0(LSB)==>joint0, bit1==>joint1, etc.)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [EMCMOT]\n"
"  EMCMOT = motmod unlock_joints_mask=BITMASK\n"
msgstr ""

#. type: Plain text
msgid ""
"As an example, consider a machine using trivkins kinematics with coordinates "
"XYZB where B is a locking indexer.  For trivkins, joint numbers (starting "
"with 0) are assigned consecutively to the coordinates specified (axis "
"coordinate letters may be omitted).  For this example, X==>joint0, "
"Y==>joint1, Z==>joint2, B==>joint3.  The mask to specify joint 3 is "
"000001000 (binary) == 0x08 (hexadecimal)"
msgstr ""

#. type: Plain text
msgid "The required ini file entries for this trivkins XYZB example are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [KINS]\n"
"  JOINTS = 4\n"
"  KINEMATICS = trivkins coordinates=XYZB\n"
"  ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [TRAJ]\n"
"  COORDINATES = XYZB\n"
"  ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [EMCMOT]\n"
"  EMCMOT = motmod unlock_joints_mask=0x08\n"
"  ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [AXIS_B]\n"
"  LOCKING_INDEXER_JOINT = 3\n"
"  ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  [JOINT_3]\n"
"  LOCKING_INDEXER = 1\n"
"  ...\n"
msgstr ""

#. type: Plain text
msgid ""
"For more complex kinematics, select the joint number as required -- there "
"must be a one-to-one correspondence between the rotary axis and the joint "
"number."
msgstr ""

#. type: Plain text
msgid ""
"(See the motion man page ('$ man motion') for more information on motmod)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Stricter INI file syntax"
msgstr ""

#. type: Plain text
msgid ""
"Lines with numeric INI variables are no longer allowed to have trailing "
"text.  In earlier versions of LinuxCNC any text after the number was "
"silently ignored, but as of this version such text is totally disallowed.  "
"This includes hash characters (\"#\"), which in this position are a part of "
"the value, not a comment character."
msgstr ""

#. type: Plain text
msgid "For example, lines like this will no longer be accepted:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MAX_VELOCITY = 7.5 # This is the max velocity of the axis.\n"
msgstr ""

#. type: Plain text
msgid "They could be transformed into pairs of lines like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This is the max velocity of the axis.\n"
"MAX_VELOCITY = 7.5\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[TRAJ] settings"
msgstr ""

#. type: Plain text
msgid "In 2.7.x versions, trajectory planning ([TRAJ]) settings included:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRAJ]\n"
"DEFAULT_ACCELERATION\n"
"MAX_ACCELERATION\n"
msgstr ""

#. type: Plain text
msgid ""
"Interim work prepared for distinct linear and angular items by renaming "
"these items as:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRAJ]\n"
"DEFAULT_LINEAR_ACCEL\n"
"MAX_LINEAR_ACCEL\n"
msgstr ""

#. type: Plain text
msgid ""
"As these abbreviated names were inconsistent with other name conventions and "
"the implementation of the update_ini script, the interim naming has been "
"corrected to use:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRAJ]\n"
"DEFAULT_LINEAR_ACCELERATION\n"
"MAX_LINEAR_ACCELERATION\n"
msgstr ""

#. type: Plain text
msgid ""
"Support for specifying trajectory planning angular default and maximum "
"accelerations has not been implemented."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hal Changes (updates for joints_axes 2.8.x)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Wheel or MPG (manual pulse generator) jogging"
msgstr ""

#. type: Plain text
msgid ""
"Prior to incorporation of joints_axes updates, wheel jogging was supported "
"in joint mode only and controlled with hal pins:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   bit   IN  axis.M.jog-enable\n"
"   float IN  axis.M.jog-scale\n"
"   s32   IN  axis.M.jog-counts\n"
"   bit   IN  axis.M.jog-vel-mode\n"
msgstr ""

#. type: Plain text
msgid ""
"where 'M' is a number corresponding to an axis letter (0==>X, 1==>Y, etc.)"
msgstr ""

#. type: Plain text
msgid ""
"With incorporation of joints_axes updates, wheel jogging is available for "
"joints in joint mode and for each axis coordinate in teleop mode.  The "
"controlling hal pins provided are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   bit   IN  joint.N.jog-enable\n"
"   float IN  joint.N.jog-scale\n"
"   s32   IN  joint.N.jog-counts\n"
"   bit   IN  joint.N.jog-vel-mode\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   bit   IN  axis.L.jog-enable\n"
"   float IN  axis.L.jog-scale\n"
"   s32   IN  axis.L.jog-counts\n"
"   bit   IN  axis.L.jog-vel-mode\n"
msgstr ""

#. type: Plain text
msgid "where 'N' is a joint number and 'L' is an axis letter."
msgstr ""

#. type: Plain text
msgid ""
"To use an MPG in identity kins configurations where there is a one-to-one "
"correspondence of a joint number and an axis letter, it may be convenient to "
"connect the corresponding hal pins.  For example, if joint 1 corresponds "
"exactly to axis letter y:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   net jora_1_y_enable   => joint.1.jog-enable => axis.y.jog-enable\n"
"   net jora_1_y_scale    => joint.1.jog-scale  => axis.y.jog-scale\n"
"   net jora_1_y_counts   => joint.1.jog-counts => axis.y.jog-counts\n"
"   net jora_1_y_vel-mode => joint.1.jog-counts => axis.y.jog-vel-mode\n"
msgstr ""

#. type: Plain text
msgid ""
"(The signal names jora_1_y_* are examples, names prior to conversion for "
"joints_axes will depend upon the specific configuration details.)"
msgstr ""

#. type: Plain text
msgid ""
"Configurations with non-identity kinematics and configurations that use "
"duplicated axis letters (for example, gantries using more than one joint for "
"an axis coordinate) will require appropriate independent control logic to "
"support both joint and teleop (world) jogging."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ini Hal pins"
msgstr ""

#. type: Plain text
msgid ""
"Hal pins are created for ini file items for both joints ([JOINT_N] stanzas)  "
"and axes ([AXIS_L] stanzas):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  For N = 0 ... [KINS](JOINTS -1)\n"
"  Ini File Item              hal pin name\n"
"  [JOINT_N]BACKLASH          ini.N.backlash\n"
"  [JOINT_N]FERROR            ini.N.ferror\n"
"  [JOINT_N]MIN_FERROR        ini.N.min_ferror\n"
"  [JOINT_N]MIN_LIMIT         ini.N.min_limit\n"
"  [JOINT_N]MAX_LIMIT         ini.N.max_limit\n"
"  [JOINT_N]MAX_VELOCITY      ini.N.max_velocity\n"
"  [JOINT_N]MAX_ACCELERATION  ini.N.max_acceleration\n"
"  [JOINT_N]HOME              ini.N.home\n"
"  [JOINT_N]HOME_OFFSET       ini.N.home_offset\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  For L = x y z a b c u v w:\n"
"  Ini File Item              hal pin name\n"
"  [AXIS_L]MIN_LIMIT          ini.L.min_limit\n"
"  [AXIS_L]MAX_LIMIT          ini.L.max_limit\n"
"  [AXIS_L]MAX_VELOCITY       ini.L.max_velocity\n"
"  [AXIS_L]MAX_ACCELERATION   ini.L.max_acceleration\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Note: In prior versions of LinuxCNC (before joints_axes updates), the\n"
"      hal pin names 'ini.N.*' referred to axes with 0==>x, 1==>y, etc.\n"
"      (pins were created for all 9 axes)\n"
"      See the man page ('$ man milltask') for more information\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hal Changes (Other 2.8.x)"
msgstr ""

#. type: TH
#, no-wrap
msgid "halcompile"
msgstr ""

#. type: Plain text
msgid ""
"The number of names= instances was formerly limited to 16.  Now, for "
"realtime components (loadrt) the instances are assigned dynamically with no "
"built-in limit.  The limit of 16 still applies to names= items for userspace "
"(loadusr) components."
msgstr ""

#. type: Plain text
msgid ""
"For components using 'personality', the maximum number is now settable by a "
"command line option -P|--personalities."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Parameter to Pin changes"
msgstr ""

#. type: Plain text
msgid ""
"The following hal output pins were changed from parameters to pins so that "
"they can be connected to signals:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   motion.servo.last-period    (servo last period in clks)\n"
"   motion.servo.last-period_ns (kernel-dependent availability)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Interface changes for joints_axes 2.8.x"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "python linuxcnc module"
msgstr ""

#. type: Plain text
msgid ""
"The jog() interface includes a 'joint-flag' to specify joint (True)  or "
"teleop (False) jogging:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "jog(command, joint-flag, axis-or-joint-number, velocity[, distance]])\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"jog(linuxcnc.JOG_STOP, joint-flag, axis-or-joint-number)\n"
"jog(linuxcnc.JOG_CONTINUOUS, joint-flag, joint-flag, velocity)\n"
"jog(linuxcnc.JOG_INCREMENT, joint-flag, axis-or-joint-number, velocity, distance)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GUIs (updates for joints_axes 2.8.x)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Notes on joint/axis jogging, homing, and kinematics"
msgstr ""

#. type: Plain text
msgid ""
"With incorporation of joints_axes updates, LinuxCNC enforces the "
"distinctions of joints and axes (coordinate letters) -- but some guis (like "
"the axis gui) may hide some of the distinctions for simple machines."
msgstr ""

#. type: Plain text
msgid "In most cases, you can think of joints as 'motors'."
msgstr ""

#. type: Plain text
msgid ""
"The relationships between joints and axis coordinates are determined by the "
"mathematical kinematics functions that describe a machine's motion."
msgstr ""

#. type: Plain text
msgid ""
"World coordinates (X,Y,Z,A,B,C,U,V,W) are determined by applying 'FORWARD' "
"kinematics operations to joint (motor) positions."
msgstr ""

#. type: Plain text
msgid ""
"When moving in world space (e.g., gcode movements) the required joint "
"(motor) positions are determined by applying 'INVERSE' kinematics operations "
"to the coordinates requested for motion in world space."
msgstr ""

#. type: Plain text
msgid "Moving in world space is possible only 'after' homing."
msgstr ""

#. type: Plain text
msgid ""
"For simple machines (like mills and lathes) there is a one-to-one "
"equivalence of joints and axis coordinate letters.  For example, on an XYZ "
"mill, the relationships are typically: axisX==joint0, axisY==joint1, "
"axisZ=joint2.  This correspondence is characterized as 'IDENTITY' kinematics "
"and the kinematics module used is usually trivkins (trivial kinematics).  "
"(See the trivkins man page '$ man trivkins')"
msgstr ""

#. type: Plain text
msgid ""
"Joint jogging (by joint number 0,1,...) is used in joint mode (usually used "
"only 'BEFORE' homing).  When homing is completed, the jogging mode is "
"'AUTOMATICALLY' switched from joint mode to world mode and axis jogging "
"(coordinate letter X,Y,...) is used.  This is appropriate for all gcode "
"moves requested by MDI commands or by gcode programs."
msgstr ""

#. type: Plain text
msgid ""
"Although jogging in joint mode is often never required after homing, some "
"guis (like axis) provide a keyboard shortcut ('$')  to allow toggling "
"between joint and world (teleop) modes for machines that use 'non-IDENTITY' "
"kinematics."
msgstr ""

#. type: Plain text
msgid ""
"In many common situations, joint jogging is never needed since homing is "
"accomplished using home switches and/or the various homing methods provided "
"by LinuxCNC.  One simply turns on the machine, issues the Home-All command, "
"the machine homes and changes to world mode automatically. See <<cha:homing-"
"configuration,Homing Configuration>>"
msgstr ""

#. type: Plain text
msgid ""
"Machines that do not use home switches may require manual jogging in joint "
"mode before homing each and every joint.  It is also possible to use "
"immediate homing (see the homing docs) for joints that do not require homing "
"to a fixed position."
msgstr ""

#. type: Plain text
msgid ""
"Although a gui may hide joints/axes distinctions for 'IDENTITY' kinematics "
"machines, it is usually important to complete homing in order to run "
"programs or use features provided by a gui."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"By default, the trivkins module declares itself as having\n"
"'IDENTITY' kinematics.  The distinctions of joint/world\n"
"operations can be made visible in the axis gui when using\n"
"trivkins by setting the kinemetics type to a 'non-IDENTITY' type\n"
"using 'kinstype=both'.   The 'both' setting indicates that both\n"
"forward and inverse kinematics functions are available and gui\n"
"provisions that hide the distinctions of joints and axis letters\n"
"should not be employed.  For example, for an xyz configuration,\n"
"specify:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = trivkins coordinates=xyz kinstype=both\n"
msgstr ""

#. type: Plain text
msgid ""
"With this setting, identity kinematics will be used but the axis gui will:"
msgstr ""

#. type: Plain text
msgid "show joint numbers prior to homing"
msgstr ""

#. type: Plain text
msgid "show axis letters after successful homing"
msgstr ""

#. type: Plain text
msgid "support toggling between joint and teleop modes with the '$' key"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Halui"
msgstr ""

#. type: Plain text
msgid ""
"Halui now supports teleop jogging resulting in some changed pin names and "
"numerous new names for jogging-related pins."
msgstr ""

#. type: Plain text
msgid "See the man page ('$ man halui') for all pin names."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "TELEOP jogging (also called axis or world jogging)"
msgstr ""

#. type: Plain text
msgid "New pins for teleop jogging are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      new: halui.axis.jog-speed\n"
"      new: halui.axis.jog-deadband\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      new: halui.axis.L.plus\n"
"      new: halui.axis.L.minus\n"
"           ... etc.\n"
msgstr ""

#. type: Plain text
msgid ""
"where 'L' is a letter corresponding to one of the axis letters specified by "
"[TRAJ]COORDINATES or 'selected' for the axis selected by the halui.axis.L."
"select pins."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Joint jogging"
msgstr ""

#. type: Plain text
msgid "All pins for joint jogging were renamed for specificity:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      was: halui.jog-speed          is: halui.joint.jog-speed\n"
"      was: halui.jog-deadband       is: halui.joint.jog-deadband\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      was: halui.jog.N.plus         is: halui.joint.N.plus\n"
"      was: halui.jog.N.minus        is: halui.joint.N.minus\n"
"           ...  etc.                    ... etc.\n"
msgstr ""

#. type: Plain text
msgid ""
"where 'N' is a joint number (0 ... num_noints-1) or 'selected' for the joint "
"selected by the halui.joint.N.select pins."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Additional pin renames"
msgstr ""

#. type: Plain text
msgid ""
"The hal pins for 'selected' joints were renamed for consistency with related "
"pins."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      was: halui.joint.selected.is_homed\n"
"       is: halui.joint.selected.is-homed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      was: halui.joint.selected.on-soft-limit\n"
"       is: halui.joint.selected.on-soft-min-limit\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "AXIS GUI"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Identity Kinematics"
msgstr ""

#. type: Plain text
msgid ""
"The axis gui continues to support identity kinematics configurations.  This "
"gui hides the distinctions of axes and joints in order to simplify the "
"display and usage of simple machines."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Special case kinematics"
msgstr ""

#. type: Plain text
msgid ""
"Some machines, typically gantrys, may use a configuration with more than one "
"joint assigned to an axis letter.  This can be done with the trivkins "
"kinematics module using repeated coordinate letters.  For example, a machine "
"configured with ini settings:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = trivkins coordinates=XYYZ kinstype=BOTH\n"
"...\n"
"[TRAJ]\n"
"COORDINATES = XYYZ\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"This machine, after homing, has a one-to-one correspondence between a single "
"axis letter (Y) and a pair of joints (1,2).  Using 'kinematics=BOTH' allows "
"control of individual joints in joint mode 'if/when required'."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Non-identity kinematics"
msgstr ""

#. type: Plain text
msgid ""
"The axis gui supports configurations using non-identity kinematics with:"
msgstr ""

#. type: Plain text
msgid "Key binding ('$') to toggle joint or teleop mode"
msgstr ""

#. type: Plain text
msgid "Preview Tab display of joints or axes according to joint or teleop mode"
msgstr ""

#. type: Plain text
msgid "Preview Tab display of 'Home' and 'Limit' icons in joint mode"
msgstr ""

#. type: Plain text
msgid "Preview Tab display of 'All-homed' and 'Any-limit icons in teleop mode"
msgstr ""

#. type: Plain text
msgid "DRO Tab display of joint or axes according to joint or teleop mode"
msgstr ""

#. type: Plain text
msgid "Jogging is supported in both joint and teleop motion modes"
msgstr ""

#. type: Plain text
msgid "External changes to the joint/teleop motion mode are detected."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Home icons"
msgstr ""

#. type: Plain text
msgid ""
"For identity kinematics, 'Home' icons are shown for the corresponding (one-"
"to-one) axis letter when a joint is homed."
msgstr ""

#. type: Plain text
msgid ""
"For non-identity kinematics, 'Home' icons are shown for individual joints "
"when a joint is homed in joint display mode.  An 'All-homed' icon is "
"displayed for all axis letters when ALL joints are homed in world display "
"mode."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Limit icons"
msgstr ""

#. type: Plain text
msgid ""
"For identity kinematics, 'Limit' icons are shown for the corresponding (one-"
"to-one) axis letter when a joint limit is active."
msgstr ""

#. type: Plain text
msgid ""
"For non-identity kinematics, 'Limit' icons are shown for individual joints "
"when the joint limit is active in joint display mode.  An 'Any-Limit' icon "
"is displayed if any joint is at a limit in teleop display mode."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Key bindings for a fourth axis"
msgstr ""

#. type: Plain text
msgid ""
"In the AXIS gui, jogging keys are assigned to axes in a configurable "
"fashion.  For 3-axis machines, XYZA machines, and lathes the default is the "
"same as in 2.7.  For other machines, the 4 pairs of jogging keys are "
"assigned to the first 4 axes that exist in the order XYZ ABC UVW.  These "
"assignments can be controlled by new inifile directives in the <<sec:display-"
"section,[DISPLAY] section of the inifile>>"
msgstr ""

#. type: Plain text
msgid ""
"Note that the parameters used for jogging may not be appropriate for both "
"modes for machines with non-identity kinematics."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "tklinuxcnc"
msgstr ""

#. type: Plain text
msgid ""
"The tklinuxcnc gui supports both identity and non-identity kinematics, "
"includes gui radiobuttons and a key binding ('$') for toggling joint and "
"teleop modes.  External changes to joint or teleop motion mode are "
"detected.  Jogging is supported in both joint and teleop motion modes.  Note "
"that the parameters used for jogging may not be appropriate for both modes "
"for machines with non-identity kinematics."
msgstr ""

#. type: Plain text
msgid ""
"OpenGL is not used by tklinuxcnc so it may be used to isolate problems and "
"system dependencies that are exposed with more modern guis like axis."
msgstr ""

#. type: Plain text
msgid ""
"The rudimentary backplot gui provided is available for use with identity "
"kinematics (xyz) machine configurations."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "emcsh commands"
msgstr ""

#. type: Plain text
msgid ""
"The code of emcsh.cc provides the set of tcl commands used by tklinuxcnc.  "
"The commands are available to tcl applications as the tcl package named "
"'Linuxcnc'.  A number of commands previously required the use of a numeric "
"argument to specify an axis coordinate (0-->X, 1-->Y, ..., 8-->W).  These "
"commands have been simplified to use an argument that is just the coordinate "
"letter."
msgstr ""

#. type: Plain text
msgid "Commands now using a coordinate letter argument are:"
msgstr ""

#. type: Plain text
msgid "emc_pos_offset"
msgstr ""

#. type: Plain text
msgid "emc_abs_cmd_pos"
msgstr ""

#. type: Plain text
msgid "emc_abs_act_pos"
msgstr ""

#. type: Plain text
msgid "emc_rel_cmd_pos"
msgstr ""

#. type: Plain text
msgid "emc_rel_act_pos"
msgstr ""

#. type: Plain text
msgid "emc_tool_offset"
msgstr ""

#. type: Plain text
msgid "emc_probed_pos"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "touchy"
msgstr ""

#. type: Plain text
msgid ""
"The touchy gui continues to support the identity kinematics configurations "
"that it supported prior to joints_axes incorporation.  Jogging is done in "
"teleop mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "gscreen"
msgstr ""

#. type: Plain text
msgid ""
"The gscreen gui continues to support the identity kinematics configurations "
"that it supported prior to joints_axes incorporation.  Jogging is done in "
"teleop mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "gmoccapy"
msgstr ""

#. type: Plain text
msgid ""
"The gmoccapy gui continues to support the identity kinematics configurations "
"that it supported prior to joints_axes incorporation.  Jogging is done in "
"teleop mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "`shuttlexpress` driver renamed to `shuttle`"
msgstr ""

#. type: Plain text
msgid ""
"The HAL driver for the Contour Designs ShuttleXpress device has been renamed "
"from \"shuttlexpress\" to just \"shuttle\".  If your hal files include some "
"variant of \"loadusr shuttlexpress\", replace \"shuttlexpress\" with "
"\"shuttle\"."
msgstr ""

#. type: Plain text
msgid ""
"Support has been added for the ShuttlePRO, a bigger version of the "
"ShuttleXpress, so the old driver name is no longer accurate."
msgstr ""

#. type: TH
#, no-wrap
msgid "linuxcncrsh"
msgstr ""

#. type: Plain text
msgid ""
"\"Home All\" is now supported with the set home subcommand by using -1 for "
"the joint number"
msgstr ""

#. type: Plain text
msgid ""
"The jogging commands have been altered to accommodate both joint (free)  and "
"teleop (world) jogging."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    was: set jog      joint_number             speed\n"
"     is: set jog      joint_number|axis_letter speed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    was: set jog_incr joint_number             speed increment\n"
"     is: set jog_incr joint_number|axis_letter speed increment\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    was: set jog_stop\n"
"     is: set jog_stop joint_number|axis_letter\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Note: Test for teleop mode using command: get teleop_enable\n"
"      if TELEOP_ENABLE=YES, use axis_letter\n"
"      else                  use joint_number\n"
msgstr ""

#. type: Plain text
msgid ""
"Note: Formerly, the command 'set jog 0 1.234' would jog the zeroth axis (X) "
"with requested speed=1.234 in any mode (free or teleop).  This command now "
"attempts to jog the zeroth joint (Joint0) provided the mode is free (not "
"teleop).  To jog the X axis, the mode must be teleop and the corresponding "
"command is: 'set jog x 1.234'"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tools"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Calibration (emccalib.tcl)"
msgstr ""

#. type: Plain text
msgid "The calibration/tuning tool now supports stanzas:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  [JOINT_N], [AXIS_L], [SPINDLE_S], [TUNE]\n"
msgstr ""

#. type: Plain text
msgid ""
"where N is a joint number (0 .. ([KINS]JOINTS-1) ), L is an axis coordinate "
"letter (X,Y,Z,A,B,C,U,V,W), and S is a spindle number (0 .. 9)"
msgstr ""

#. type: Plain text
msgid ""
"The number of allowed spindles is 8 but legacy configurations may include a "
"stanza [SPINDLE_9] unrelated to an actual spindle number."
msgstr ""

#. type: Plain text
msgid ""
"The [TUNE] stanza may be used for specifying tunable items not relevant to "
"the other supported stanzas."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Obsolete Guis (removed for 2.8.x)"
msgstr ""

#. type: Plain text
msgid ""
"The guis 'mini', 'keystick', and 'xlinuxcnc' have been removed in "
"conjunction with updates for joints_axes.  All related source code, "
"examples, and documentation are available in the git repository."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Deprecated Guis (marked at 2.8.x)"
msgstr ""

#. type: Plain text
msgid ""
"The 'linuxcnclcd' gui is a candidate for removal.  Should this component be "
"removed, all related source code, examples, and documentation will be "
"available in the git repository."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Simulator configurations (updates for joints axes 2.8.x)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pre-joints_axes"
msgstr ""

#. type: Plain text
msgid ""
"Prior to joints_axes incorporation, the halfiles used in sim configs "
"typically supported a common milling machine -- a Cartesian system with "
"trivial kinematics and three axes named 'X Y Z'.  Typical halfile entries:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALFILE = core_sim.hal\n"
"HALFILE = sim_spindle_encoder.hal\n"
"HALFILE = axis_manualtoolchange.hal\n"
"HALFILE = simulated_home.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"Lathe configs often shared the same halfiles and used the expedient method "
"of specifying 3 axes with 'Y' unused.  More complex sim configs provided "
"specific sets of halfiles according to the configuration purpose."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Post-joints_axes"
msgstr ""

#. type: Plain text
msgid ""
"With the incorporation of joints_axes functionality, many sims provided in "
"the distribution now take advantage of a general purpose halfile that "
"supports numerous configurations automatically.  A typical sim config "
"HALFILE specification is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALFILE = LIB:basic_sim.tcl\n"
msgstr ""

#. type: Plain text
msgid ""
"The basic_sim.tcl HALFILE supports a number of commonly required functions "
"for any number of joints as specified by:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"...\n"
"JOINTS = number_of_joints\n"
"...\n"
msgstr ""

#. type: Plain text
msgid "Functions supported include:"
msgstr ""

#. type: Plain text
msgid ""
"'ddts' -- differentiator hal components are loaded and connected for each "
"joint (and xy, xyz for trivkins machines)"
msgstr ""

#. type: Plain text
msgid ""
"'simulated_home' -- a sim_home_switch hal component is loaded and connected "
"for each joint.  The homing conditions are specified by the usual "
"[JOINT_n]HOME_* ini file items."
msgstr ""

#. type: Plain text
msgid ""
"'use_hal_manualtoolchange' -- the user space hal_manualtoolchange component "
"is loaded and connected."
msgstr ""

#. type: Plain text
msgid ""
"'sim_spindle' -- the sim_spindle component is loaded and connected to "
"additional loaded hal components to simulate the inertia of a rotating "
"spindle mass."
msgstr ""

#. type: Plain text
msgid ""
"The functions are activated by default but can be excluded using options: '-"
"no_make_ddts', '-no_simulated_home', '-no_use_hal_manualtoolchange', '-"
"no_sim_spindle'."
msgstr ""

#. type: Plain text
msgid "For example, to omit creation of ddts:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "HALFILE = LIB:basic_sim.tcl -no_make_ddts\n"
msgstr ""

#. type: Plain text
msgid ""
"Omitting one or more of the core functions allows testing without without "
"the function or addition of new HALFILEs to implement or expand on the "
"functionality."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Equivalent Hal commands file"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"When LIB:basic_sim.tcl is used, an equivalent halfile is created (in the\n"
"configuration directory) to show the halcmd commands issued.   The file\n"
"name is based on the name of the inifile with '_cmds' appended to\n"
"the basename and a conventional '.hal' file extension. Example:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"inifilename:            example.ini\n"
"equivalent_halfilename: example_cmds.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"The equivalent halfile file supersedes previous instances of files with the "
"same filename.  Inifile variables substitutions specified in the inifile and "
"interpreted by halcmd are automatically substituted in the created halfile.  "
"If there are [HAL]HALFILEs specified before LIB:basic_sim.tcl, their halcmd "
"commands are included too."
msgstr ""

#. type: Plain text
msgid ""
"The equivalent halfile can be used to create a new configuration based on "
"the original configuration made with LIB:basic_sim.tcl with the following "
"steps:"
msgstr ""

#. type: Plain text
msgid ""
"Run the simulator configuration to create a new equivalent halfile, for "
"example: 'example_cmds.hal'."
msgstr ""

#. type: Plain text
msgid ""
"To use this new equivalent halfile in the original simulator configuration "
"inifile (or a copy of it), edit to change:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALFILE = LIB:basic_sim.tcl other_parameters\n"
msgstr ""

#. type: Plain text
msgid "to:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALFILE = ./example_cmds.hal\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Notes"
msgstr ""

#. type: Plain text
msgid ""
"All components and connections made by LIB:basic_sim.tcl can be viewed using "
"halcmd.  The entire hal configuration (except for userspace components "
"loaded with loadusr) can be saved to a file using:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ halcmd save > hal.save\n"
msgstr ""

#. type: Plain text
msgid ""
"Use of LIB:basic_sim.tcl reduces the effort needed to make a simulation "
"config since it handles most of the required component loading and hal "
"connections."
msgstr ""

#. type: Plain text
msgid ""
"The sim config 'Sample Configurations/sim/axis/minimal_xyz.ini' demonstrates "
"a working xyz configuration that uses LIB:basic_sim.tcl with a minimal "
"number of ini file settings."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Miscellaneous updates for 2.8.x"
msgstr ""

#. type: Plain text
msgid ""
"Commits to unreleased branches may make changes that affect testers and "
"early-adopters of the unreleased software."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Motion pins"
msgstr ""

#. type: Plain text
msgid "New pins (see the motion man page for more info):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"axis.L.jog-accel-fraction\n"
"joint.N.jog-accel-fraction\n"
"---\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal pins"
msgstr ""

#. type: Plain text
msgid "Name changes:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"was: axis.L.vel-cmd\n"
" is: axis.l.teleop-vel-cmd\n"
msgstr ""

#. type: Plain text
msgid "New pins:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "motion.homing-inhibit (see motion manpage)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal component updates"
msgstr ""

#. type: Plain text
msgid "siggen: new pin 'reset' to set output signal values to predefined state"
msgstr ""

#. type: Plain text
msgid "biquad: pins 'type,f0,Q,s1,s2' were formerly params"
msgstr ""

#. type: Plain text
msgid "userkins: template for user-built kinematics modules using halcompile"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "XHC-HB04 Pendant Support"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "xhc_hb04_util.comp (helper component)"
msgstr ""

#. type: Plain text
msgid "Remove unused pin 'jogenable-off'"
msgstr ""

#. type: Plain text
msgid ""
"Add pin 'amux-enable' so that the multiplexed acceleration reductions are "
"now enabled by the ANDing the pins: 'is-manual' and 'amux-enable'.  These "
"two pins are typically connected to 'halui.mode.is-manual' and 'halui.mode."
"is-teleop' respectively."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "xhc_hb04.tcl (optional LIB configuration halfile)"
msgstr ""

#. type: Plain text
msgid ""
"Remove signal pendant:jogenable-off for removed pin 'pendant_util.jogenable-"
"off'"
msgstr ""

#. type: Plain text
msgid ""
"Support new motion pins for reduced accelerations (axis.L.jog-accel-"
"fraction, joint.N.jog-accel-fraction) for wheel jogging.  The use of "
"[APPLICATIONS]APP=xhc-hb04-accels is no longer supported.  Reduced accels "
"are applied for wheel jogging only (not for nml commands issued by guis)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "XHC-WHB04B-6 pendant support"
msgstr ""

#. type: Plain text
msgid "See the documentation for the xhc-whb04b-6 component."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "bldc3_hall"
msgstr ""

#. type: Plain text
msgid ""
"The bldc_hall3 component has been removed. The *bldc* component is more "
"flexible and better tested."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[JOINT_n]HOME_SEQUENCE Starting values"
msgstr ""

#. type: Plain text
msgid ""
"Starting sequence values may be 0, 1 (or -1) only.  See the \"Homing "
"Configuration\" documentation for more information."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[JOINT_n]HOME_SEQUENCE Negative values"
msgstr ""

#. type: Plain text
msgid ""
"Joints using a negative HOME_SEQUENCE are not allowed to jog in joint mode "
"in order to prevent misalignment (racking) in common gantry configurations.  "
"As always, machines with any kinematics type must be homed prior to enabling "
"conventional world mode jogging."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "TWOPASS support for complex loadrt config= items"
msgstr ""

#. type: Plain text
msgid ""
"Added twopass support for loadrt config modparams with multiple settings "
"separated by blanks and enclosed with quotes.  Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hm2_eth board_ip=10.10.10.10 config=\"num_encoders=2 num_pwmgens=2 num_stepgens=3\"\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Changes beyond 2.8.x (master branch development)"
msgstr ""

#. type: Plain text
msgid ""
"The master branch is version-tagged with prerelease notation, typically "
"2.9~pre*"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Python3 and GTK3"
msgstr ""

#. type: Plain text
msgid ""
"2.9 changed to Python3 and GTK3. This only affects you if you have custom "
"glade or python handlers in your config."
msgstr ""

#. type: Plain text
msgid "run py3clean in your config directory to remove any temporary files."
msgstr ""

#. type: Plain text
msgid ""
"run py3clean in your linuxcnc source directory if you compile from source"
msgstr ""

#. type: Plain text
msgid "run 2to3 -w on any .py files you have written"
msgstr ""

#. type: Plain text
msgid ""
"make sure the interpreter in the first line of the script is python3, not "
"python2"
msgstr ""

#. type: Plain text
msgid ""
"open the ui file in glade, and save it. It should convert everything that "
"can be converted automatically, and give you warnings."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LinuxCNC startup"
msgstr ""

#. type: Plain text
msgid ""
"The main script, *linuxcnc*, supports a new option (-H dirname) to specify "
"an additional user-specified directory for Halfiles.  This directory is "
"searched before the usual search of 1) theini directory and 2)the system "
"halfile library directory."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G-code changes"
msgstr ""

#. type: Plain text
msgid ""
"G43.2 (additional offsets) now accepts transient offsets to be added by axis "
"words as well as from the tool table."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configuration Updates"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Inifile Settings"
msgstr ""

#. type: Plain text
msgid ""
"New: [JOINT_n]HOME_INDEX_NO_ENCODER_RESET -- support encoder with index that "
"does not reset upon receipt of index pulse following assertion of "
"index_enable."
msgstr ""

#. type: Plain text
msgid "axis.py default for [DISPLAY]GEOMETRY was:\"XYZBCUVW\",is:\"XYZABCUVW\""
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Code Updates"
msgstr ""

#. type: Plain text
msgid ""
"Management of the internal storage of tool data and the communication of "
"same between EMCIO and TASK has been refactored to use memory mapped "
"storage.  Legacy use of nml messages for tooldata is deprecated and may be "
"removed before a new release."
msgstr ""

#. type: Plain text
msgid ""
"Code references to the sequential indexes for internal tooldata have been "
"clarified but legacy variable names persist for *selected_pocket* and "
"*current_pocket*.  Variables with these names refer to the sequential index "
"for internal tooldata not an actual pocket number.  These variable names may "
"be renamed in the future and require changes to user-fielded python remap "
"applications that modify tool handling."
msgstr ""

#. type: Plain text
msgid ""
"A new optional interface is provided to support management of tool data by "
"an external database application."
msgstr ""

#. type: Plain text
msgid ""
"The ioControl_v2.cc file providing the userspace program iov2 has no "
"maintainter and its use is deprecated -- it may be removed before the next "
"release."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Reverse Run"
msgstr ""

#. type: Plain text
msgid ""
"Support added for reverse run in the trajectory planner, the task, and "
"motion modules, the python interface, the axis gui, and the test suite."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Number of Joints"
msgstr ""

#. type: Plain text
msgid ""
"The maximum number of joints (EMCMOT_MAX_JOINTS) increased from 9 to 16.  "
"The axis gui now supports display of up to 16 joints."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Extra Joints"
msgstr ""

#. type: Plain text
msgid ""
"A new motmod parameter (num_extrajoints) specifies joints that are homed by "
"conventional joint homing methods but controlled by new hal pins (joint.N."
"posthome-cmd) after homing.  Such joints may be managed by independent "
"motion planner/controllers in hal and manipulated from gcode using custom M-"
"codes.  See the motion man page for more info."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Homing"
msgstr ""

#. type: Plain text
msgid ""
"A homing api is provided by src/emc/motion/homing.h to support users' custom "
"homing code that replaces src/emc/motion/homing.c with a user-customized "
"homing.c file."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Motion"
msgstr ""

#. type: Plain text
msgid ""
"The motion module supports kinematics modules that define new functions "
"kinematicsSwitchable() and kinematicsSwitch() to switch their kinematics "
"type.  A hal pin, motion.switchkins-type, is provided for use of such "
"kinematics modules."
msgstr ""

#. type: Plain text
msgid ""
"Provided kinematics modules that implement kinematics switching use the "
"switchkins.o object to supply the required rtapi_main()  and related "
"functions.  Kinematics modules that do not support kinematics switching use "
"the macro \"KINS_NOT_SWITCHABLE\" provided by kinematics.h."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Switchkins Kinematics Modules"
msgstr ""

#. type: Plain text
msgid ""
"Several kinematics modules are now switchable between their eponymous "
"kinematics and an alternate identity kinematics mode."
msgstr ""

#. type: Plain text
msgid "Kinematic modules supporting switchkins:"
msgstr ""

#. type: Plain text
msgid "xyzac-trt-kins table-rotary-tilting (supersedes xyzac-trt-kins)"
msgstr ""

#. type: Plain text
msgid "xyzbc-trt-kins table-rotary-tilting (supersedes xyzbc-trt-kins)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "genserkins     generalized serial-link kinematics\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "genhexkins     generalized hexapod parallel kinematics\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "scarakins      scara robot\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "pumakins       puma robot\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "5axiskins      bridgemill (xyzbcw 6axes)\n"
msgstr ""

#. type: Plain text
msgid ""
"The switchkins modules above (and trivkins) support a coordinates= parameter "
"that optionally specifies an ordered set of coordinate letters that are "
"sequentially assigned to joint numbers (beginning with joint0)."
msgstr ""

#. type: Plain text
msgid ""
"The switchkins modules above include provisions for compile-time support of "
"an additional user-specified kinematics type identified on the make command "
"line by the userkfuncs environmental variable.  (See src/Makefile)"
msgstr ""

#. type: Plain text
msgid ""
"The userspace test program bin/genserkins has been isolated to a single file "
"(ugenserkins.c) since its original source file (genserkins.c) has been "
"refactored for switchkins support.  The userspace test program has not been "
"actively maintained and its use is deprecated.  The ugenserkins.c file may "
"be removed in the future."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Other"
msgstr ""

#. type: Plain text
msgid ""
"lib/hallib/sim_lib.tcl: simulate encoder index if [JOINT_n]HOME_USE_INDEX is "
"specified."
msgstr ""

#. type: Plain text
msgid "lib/python/vismach.py: new hal pin vismach.plotclear"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Components"
msgstr ""

#. type: Plain text
msgid "sim_home_switch: added I/O pin for index-enable"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Motion module pins"
msgstr ""

#. type: Plain text
msgid "motion.feed-upm -- current feed in units per minute"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configs"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Inifile"
msgstr ""

#. type: Plain text
msgid ""
"[DISPLAY]GEOMETRY settings that include the '!' character specify that "
"displayed rotations respect G5x,G92 offsets."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Simulation Configs"
msgstr ""

#. type: Plain text
msgid "sim/configs/axis/axis_9axis: demonstrate simulated encoder index"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Glossary"
msgstr ""

#. type: Plain text
msgid ""
"A listing of terms and what they mean. Some terms have a general meaning and "
"several additional meanings for users, installers, and developers."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Acme Screw"
msgstr ""

#. type: Plain text
msgid ""
"(((acme screw))) A type of lead-screw that uses an Acme thread form. Acme "
"threads have somewhat lower friction and wear than simple triangular "
"threads, but ball-screws are lower yet. Most manual machine tools use acme "
"lead-screws."
msgstr ""

#. type: Table
#, no-wrap
msgid "Axis"
msgstr ""

#. type: Plain text
msgid ""
"(((axis))) One of the computer controlled movable parts of the machine. For "
"a typical vertical mill, the table is the X axis, the saddle is the Y axis, "
"and the quill or knee is the Z axis. Angular axes like rotary tables are "
"referred to as A, B, and C. Additional linear axes relative to the tool are "
"called U, V, and W respectively."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Axis(GUI)"
msgstr ""

#. type: Plain text
msgid ""
"(((GUI))) One of the Graphical User Interfaces available to users of "
"LinuxCNC. It features the modern use of menus and mouse buttons while "
"automating and hiding some of the more traditional LinuxCNC controls. It is "
"the only open-source interface that displays the entire tool path as soon as "
"a file is opened."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Gmoccapy (GUI)"
msgstr ""

#. type: Plain text
msgid ""
"(((GUI))) A Graphical User Interfaces available to users of LinuxCNC. It "
"features the use and feel of an industrial control and can be used with "
"touch screen, mouse and keyboard. It support embedded tabs and hal driven "
"user messages, it offers a lot of hal beens to be controlled with hardware. "
"Gmoccapy is highly cusomizable."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Backlash"
msgstr ""

#. type: Plain text
msgid ""
"(((backlash))) The amount of \"play\" or lost motion that occurs when "
"direction is reversed in a lead screw. or other mechanical motion driving "
"system. It can result from nuts that are loose on leadscrews, slippage in "
"belts, cable slack, \"wind-up\" in rotary couplings, and other places where "
"the mechanical system is not \"tight\".  Backlash will result in inaccurate "
"motion, or in the case of motion caused by external forces (think cutting "
"tool pulling on the work piece) the result can be broken cutting tools. This "
"can happen because of the sudden increase in chip load on the cutter as the "
"work piece is pulled across the backlash distance by the cutting tool."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Backlash Compensation"
msgstr ""

#. type: Plain text
msgid ""
"(((backlash compensation))) Any technique that attempts to reduce the effect "
"of backlash without actually removing it from the mechanical system. This is "
"typically done in software in the controller. This can correct the final "
"resting place of the part in motion but fails to solve problems related to "
"direction changes while in motion (think circular interpolation) and motion "
"that is caused when external forces (think cutting tool pulling on the work "
"piece) are the source of the motion."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Ball Screw"
msgstr ""

#. type: Plain text
msgid ""
"(((ball screw))) A type of lead-screw that uses small hardened steel balls "
"between the nut and screw to reduce friction.  Ball-screws have very low "
"friction and backlash, but are usually quite expensive."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Ball Nut"
msgstr ""

#. type: Plain text
msgid ""
"(((ball nut))) A special nut designed for use with a ball-screw. It contains "
"an internal passage to re-circulate the balls from one end of the screw to "
"the other."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "CNC"
msgstr ""

#. type: Plain text
msgid ""
"(((CNC))) Computer Numerical Control. The general term used to refer to "
"computer control of machinery. Instead of a human operator turning cranks to "
"move a cutting tool, CNC uses a computer and motors to move the tool, based "
"on a part program."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Comp"
msgstr ""

#. type: Plain text
msgid ""
"(((comp))) A tool used to build, compile and install LinuxCNC HAL components."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Configuration(n)"
msgstr ""

#. type: Plain text
msgid ""
"A directory containing a set of configuration files. Custom configurations "
"are normally saved in the users home/linuxcnc/configs directory. These files "
"include LinuxCNC's traditional INI file and HAL files. A configuration may "
"also contain several general files that describe tools, parameters, and NML "
"connections."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Configuration(v)"
msgstr ""

#. type: Plain text
msgid ""
"The task of setting up LinuxCNC so that it matches the hardware on a machine "
"tool."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Coordinate Measuring Machine"
msgstr ""

#. type: Plain text
msgid ""
"(((coordinate measuring machine))) A Coordinate Measuring Machine is used to "
"make many accurate measurements on parts. These machines can be used to "
"create CAD data for parts where no drawings can be found, when a hand-made "
"prototype needs to be digitized for moldmaking, or to check the accuracy of "
"machined or molded parts."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Display units"
msgstr ""

#. type: Plain text
msgid ""
"(((display units))) The linear and angular units used for onscreen display."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "DRO"
msgstr ""

#. type: Plain text
msgid ""
"(((DRO))) A Digital Read Out is a system of position-measuring devices "
"attached to the slides of a machine tool, which are connected to a numeric "
"display showing the current location of the tool with respect to some "
"reference position.  DROs are very popular on hand-operated machine tools "
"because they measure the true tool position without backlash, even if the "
"machine has very loose Acme screws.  Some DROs use linear quadrature "
"encoders to pick up position information from the machine, and some use "
"methods similar to a resolver which keeps rolling over."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "EDM"
msgstr ""

#. type: Plain text
msgid ""
"(((EDM))) EDM is a method of removing metal in hard or difficult to machine "
"or tough metals, or where rotating tools would not be able to produce the "
"desired shape in a cost-effective manner. An excellent example is "
"rectangular punch dies, where sharp internal corners are desired. Milling "
"operations can not give sharp internal corners with finite diameter tools. A "
"'wire' EDM machine can make internal corners with a radius only slightly "
"larger than the wire's radius. A 'sinker' EDM can make internal corners with "
"a radius only slightly larger than the radius on the corner of the sinking "
"electrode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "EMC"
msgstr ""

#. type: Plain text
msgid ""
"(((EMC))) The Enhanced Machine Controller. Initially a NIST project. Renamed "
"to LinuxCNC in 2012."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "EMCIO"
msgstr ""

#. type: Plain text
msgid ""
"(((EMCIO))) The module within LinuxCNC that handles general purpose I/O, "
"unrelated to the actual motion of the axes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "EMCMOT"
msgstr ""

#. type: Plain text
msgid ""
"(((EMCMOT))) The module within LinuxCNC that handles the actual motion of "
"the cutting tool. It runs as a real-time program and directly controls the "
"motors."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Encoder"
msgstr ""

#. type: Plain text
msgid ""
"(((encoder))) A device to measure position. Usually a mechanical-optical "
"device, which outputs a quadrature signal. The signal can be counted by "
"special hardware, or directly by the parport with LinuxCNC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Feed"
msgstr ""

#. type: Plain text
msgid ""
"(((feed))) Relatively slow, controlled motion of the tool used when making a "
"cut."
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed rate"
msgstr ""

#. type: Plain text
msgid ""
"(((feed rate))) The speed at which a cutting motion occurs.  In auto or mdi "
"mode, feed rate is commanded using an F word.  F10 would mean ten machine "
"units per minute."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Feedback"
msgstr ""

#. type: Plain text
msgid ""
"(((feedback))) A method (e.g., quadrature encoder signals)  by which "
"LinuxCNC receives information about the position of motors"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Feedrate Override"
msgstr ""

#. type: Plain text
msgid ""
"(((feedrate override))) A manual, operator controlled change in the rate at "
"which the tool moves while cutting. Often used to allow the operator to "
"adjust for tools that are a little dull, or anything else that requires the "
"feed rate to be âtweakedâ."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Floating Point Number"
msgstr ""

#. type: Plain text
msgid ""
"A number that has a decimal point. (12.300) In HAL it is known as float."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G-Code"
msgstr ""

#. type: Plain text
msgid ""
"(((G-Code))) The generic term used to refer to the most common part "
"programming language. There are several dialects of G-code, LinuxCNC uses "
"RS274/NGC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "GUI"
msgstr ""

#. type: Plain text
msgid "(((GUI))) Graphical User Interface."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "General"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"A type of interface that allows communications between a computer\n"
"and a human (in most cases) via the manipulation of icons and other\n"
"elements (widgets) on a computer screen.\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "LinuxCNC"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"An application that presents a graphical screen to the machine\n"
"operator allowing manipulation of the machine and the corresponding\n"
"controlling program.\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL"
msgstr ""

#. type: Plain text
msgid ""
"(((HAL))) Hardware Abstraction Layer. At the highest level, it is simply a "
"way to allow a number of building blocks to be loaded and interconnected to "
"assemble a complex system. Many of the building blocks are drivers for "
"hardware devices.  However, HAL can do more than just configure hardware "
"drivers."
msgstr ""

#. type: Table
#, no-wrap
msgid "Home"
msgstr ""

#. type: Plain text
msgid ""
"(((home))) A specific location in the machine's work envelope that is used "
"to make sure the computer and the actual machine both agree on the tool "
"position."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ini file"
msgstr ""

#. type: Plain text
msgid ""
"(((INI))) A text file that contains most of the information that configures "
"LinuxCNC for a particular machine."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Instance"
msgstr ""

#. type: Plain text
msgid ""
"(((Instance))) One can have an instance of a class or a particular object. "
"The instance is the actual object created at runtime. In programmer jargon, "
"the Lassie object is an instance of the Dog class."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Joint Coordinates"
msgstr ""

#. type: Plain text
msgid ""
"(((joint coordinates))) These specify the angles between the individual "
"joints of the machine. See also Kinematics"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Jog"
msgstr ""

#. type: Plain text
msgid ""
"(((jog))) Manually moving an axis of a machine. Jogging either moves the "
"axis a fixed amount for each key-press, or moves the axis at a constant "
"speed as long as you hold down the key. In manual mode, jog speed can be set "
"from the graphical interface."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "kernel-space"
msgstr ""

#. type: Plain text
msgid "See real-time."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Kinematics"
msgstr ""

#. type: Plain text
msgid ""
"(((kinematics))) The position relationship between world coordinates and "
"joint coordinates of a machine. There are two types of kinematics. Forward "
"kinematics is used to calculate world coordinates from joint coordinates. "
"Inverse kinematics is used for exactly the opposite purpose. Note that "
"kinematics does not take into account, the forces, moments etc. on the "
"machine. It is for positioning only."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Lead-screw"
msgstr ""

#. type: Plain text
msgid ""
"(((lead screw))) An screw that is rotated by a motor to move a table or "
"other part of a machine. Lead-screws are usually either ball-screws or acme "
"screws, although conventional triangular threaded screws may be used where "
"accuracy and long life are not as important as low cost."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Machine units"
msgstr ""

#. type: Plain text
msgid ""
"(((machine units))) The linear and angular units used for machine "
"configuration. These units are specified and used in the ini file.  HAL pins "
"and parameters are also generally in machine units."
msgstr ""

#. type: TH
#, no-wrap
msgid "MDI"
msgstr ""

#. type: Plain text
msgid ""
"(((MDI))) Manual Data Input. This is a mode of operation where the "
"controller executes single lines of G-code as they are typed by the operator."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "NIST"
msgstr ""

#. type: Plain text
msgid ""
"(((NIST))) National Institute of Standards and Technology.  An agency of the "
"Department of Commerce in the United States."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "NML"
msgstr ""

#. type: Plain text
msgid ""
"(((NML))) Neutral Message Language provides a mechanism for handling "
"multiple types of messages in the same buffer as well as simplifying the "
"interface for encoding and decoding buffers in neutral format and the "
"configuration mechanism."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Offsets"
msgstr ""

#. type: Plain text
msgid ""
"(((offsets)))  An arbitrary amount, added to the value of something to make "
"it equal to some desired value. For example, gcode programs are often "
"written around some convenient point, such as X0, Y0.  Fixture offsets can "
"be used to shift the actual execution point of that gcode program to "
"properly fit the true location of the vice and jaws.  Tool offsets can be "
"used to shift the \"uncorrected\" length of a tool to equal that tool's "
"actual length."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Part Program"
msgstr ""

#. type: Plain text
msgid ""
"(((part Program))) A description of a part, in a language that the "
"controller can understand. For LinuxCNC, that language is RS-274/NGC, "
"commonly known as G-code."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Program Units"
msgstr ""

#. type: Plain text
msgid ""
"(((program units))) The linear and angular units used in a part program.  "
"The linear program units do not have to be the same as the linear machine "
"units.  See G20 and G21 for more information. The angular program units are "
"always measured in degrees."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Python"
msgstr ""

#. type: Plain text
msgid ""
"General-purpose, very high-level programming language. Used in LinuxCNC for "
"the Axis GUI, the Stepconf configuration tool, and several G-code "
"programming scripts."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Rapid"
msgstr ""

#. type: Plain text
msgid ""
"(((rapid))) Fast, possibly less precise motion of the tool, commonly used to "
"move between cuts. If the tool meets the workpiece or the fixturing during a "
"rapid, it is probably a bad thing!"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Rapid rate"
msgstr ""

#. type: Plain text
msgid ""
"(((rapid rate)))The speed at which a rapid motion occurs.  In auto or mdi "
"mode, rapid rate is usually the maximum speed of the machine.  It is often "
"desirable to limit the rapid rate when testing a g-code program for the "
"first time."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Real-time"
msgstr ""

#. type: Plain text
msgid ""
"(((real-time))) Software that is intended to meet very strict timing "
"deadlines. Under Linux, in order to meet these requirements it is necessary "
"to install a realtime kernel such as RTAI and build the software to run in "
"the special real-time environment. For this reason real-time software runs "
"in kernel-space."
msgstr ""

#. type: Plain text
msgid ""
"(((RTAI))) Real Time Application Interface, see https://www.rtai.org/"
"[https://www.rtai.org/], the real-time extensions for Linux that LinuxCNC "
"can use to achieve real-time performance."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "RTLINUX"
msgstr ""

#. type: Plain text
msgid ""
"(((RTLINUX))) See https://en.wikipedia.org/wiki/RTLinux[https://en.wikipedia."
"org/wiki/RTLinux], an older real-time extension for Linux that LinuxCNC used "
"to use to achieve real-time performance.  Obsolete, replaced by RTAI."
msgstr ""

#. type: TH
#, no-wrap
msgid "RTAPI"
msgstr ""

#. type: Plain text
msgid ""
"(((RTAPI)))A portable interface to real-time operating systems including "
"RTAI and POSIX pthreads with realtime extensions."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "RS-274/NGC"
msgstr ""

#. type: Plain text
msgid ""
"(((RS274NGC))) The formal name for the language used by LinuxCNC part "
"programs."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Servo Motor"
msgstr ""

#. type: Plain text
msgid ""
"(((servo motor))) Generally, any motor that is used with error-sensing "
"feedback to correct the position of an actuator.  Also, a motor which is "
"specially-designed to provide improved performance in such applications."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Servo Loop"
msgstr ""

#. type: Plain text
msgid ""
"(((loop))) A control loop used to control position or velocity of an motor "
"equipped with a feedback device."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Signed Integer"
msgstr ""

#. type: Plain text
msgid ""
"(((Signed Integer))) A whole number that can have a positive or negative "
"sign. In HAL it is known as s32. (A signed 32-bit integer has a usable range "
"of -2,147,483,647 to +2,147,483,647.)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle"
msgstr ""

#. type: Plain text
msgid ""
"(((spindle))) The part of a machine tool that spins to do the cutting. On a "
"mill or drill, the spindle holds the cutting tool. On a lathe, the spindle "
"holds the workpiece."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Speed Override"
msgstr ""

#. type: Plain text
msgid ""
"A manual, operator controlled change in the rate at which the tool rotates "
"while cutting. Often used to allow the operator to adjust for chatter caused "
"by the cutter's teeth. Spindle Speed Override assumes that the LinuxCNC "
"software has been configured to control spindle speed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Stepconf"
msgstr ""

#. type: Plain text
msgid ""
"An LinuxCNC configuration wizard. It is able to handle many step-and-"
"direction motion command based machines. It writes a full configuration "
"after the user answers a few questions about the computer and machine that "
"LinuxCNC is to run on."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Stepper Motor"
msgstr ""

#. type: Plain text
msgid ""
"(((stepper motor))) A type of motor that turns in fixed steps. By counting "
"steps, it is possible to determine how far the motor has turned. If the load "
"exceeds the torque capability of the motor, it will skip one or more steps, "
"causing position errors."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "TASK"
msgstr ""

#. type: Plain text
msgid ""
"(((TASK))) The module within LinuxCNC that coordinates the overall execution "
"and interprets the part program."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Tcl/Tk"
msgstr ""

#. type: Plain text
msgid ""
"(((Tk))) A scripting language and graphical widget toolkit with which "
"several of LinuxCNCs GUIs and selection wizards were written."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Traverse Move"
msgstr ""

#. type: Plain text
msgid ""
"(((Traverse Move))) A move in a straight line from the start point to the "
"end point."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Units"
msgstr ""

#. type: Plain text
msgid ""
"(((units))) See \"Machine Units\", \"Display Units\", or \"Program Units\"."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Unsigned Integer"
msgstr ""

#. type: Plain text
msgid ""
"(((Unsigned Integer))) A whole number that has no sign. In HAL it is known "
"as u32. (An unsigned 32-bit integer has a usable range of zero to "
"4,294,967,296.)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "World Coordinates"
msgstr ""

#. type: Plain text
msgid ""
"(((world coordinates))) This is the absolute frame of reference. It gives "
"coordinates in terms of a fixed reference frame that is attached to some "
"point (generally the base) of the machine tool."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Legal Section"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Copyright Terms"
msgstr ""

#. type: Plain text
msgid "Copyright (c) 2000-2020 LinuxCNC.org"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: Plain text
msgid "GNU Free Documentation License Version 1.1, March 2000"
msgstr ""

#. type: Plain text
msgid ""
"Copyright (C) 2000 Free Software Foundation, Inc. 51 Franklin Street, Fifth "
"Floor, Boston, MA 02110-1301 USA. Everyone is permitted to copy and "
"distribute verbatim copies of this license document, but changing it is not "
"allowed."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*0. PREAMBLE*\n"
msgstr ""

#. type: Plain text
msgid ""
"The purpose of this License is to make a manual, textbook, or other written "
"document \"free\" in the sense of freedom: to assure everyone the effective "
"freedom to copy and redistribute it, with or without modifying it, either "
"commercially or noncommercially. Secondarily, this License preserves for the "
"author and publisher a way to get credit for their work, while not being "
"considered responsible for modifications made by others."
msgstr ""

#. type: Plain text
msgid ""
"This License is a kind of \"copyleft\", which means that derivative works of "
"the document must themselves be free in the same sense. It complements the "
"GNU General Public License, which is a copyleft license designed for free "
"software."
msgstr ""

#. type: Plain text
msgid ""
"We have designed this License in order to use it for manuals for free "
"software, because free software needs free documentation: a free program "
"should come with manuals providing the same freedoms that the software does. "
"But this License is not limited to software manuals; it can be used for any "
"textual work, regardless of subject matter or whether it is published as a "
"printed book. We recommend this License principally for works whose purpose "
"is instruction or reference."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*1. APPLICABILITY AND DEFINITIONS*\n"
msgstr ""

#. type: Plain text
msgid ""
"This License applies to any manual or other work that contains a notice "
"placed by the copyright holder saying it can be distributed under the terms "
"of this License. The \"Document\", below, refers to any such manual or work. "
"Any member of the public is a licensee, and is addressed as \"you\"."
msgstr ""

#. type: Plain text
msgid ""
"A \"Modified Version\" of the Document means any work containing the "
"Document or a portion of it, either copied verbatim, or with modifications "
"and/or translated into another language."
msgstr ""

#. type: Plain text
msgid ""
"A \"Secondary Section\" is a named appendix or a front-matter section of the "
"Document that deals exclusively with the relationship of the publishers or "
"authors of the Document to the Document's overall subject (or to related "
"matters) and contains nothing that could fall directly within that overall "
"subject. (For example, if the Document is in part a textbook of mathematics, "
"a Secondary Section may not explain any mathematics.) The relationship could "
"be a matter of historical connection with the subject or with related "
"matters, or of legal, commercial, philosophical, ethical or political "
"position regarding them."
msgstr ""

#. type: Plain text
msgid ""
"The \"Invariant Sections\" are certain Secondary Sections whose titles are "
"designated, as being those of Invariant Sections, in the notice that says "
"that the Document is released under this License."
msgstr ""

#. type: Plain text
msgid ""
"The \"Cover Texts\" are certain short passages of text that are listed, as "
"Front-Cover Texts or Back-Cover Texts, in the notice that says that the "
"Document is released under this License."
msgstr ""

#. type: Plain text
msgid ""
"A \"Transparent\" copy of the Document means a machine-readable copy, "
"represented in a format whose specification is available to the general "
"public, whose contents can be viewed and edited directly and "
"straightforwardly with generic text editors or (for images composed of "
"pixels) generic paint programs or (for drawings) some widely available "
"drawing editor, and that is suitable for input to text formatters or for "
"automatic translation to a variety of formats suitable for input to text "
"formatters. A copy made in an otherwise Transparent file format whose markup "
"has been designed to thwart or discourage subsequent modification by readers "
"is not Transparent. A copy that is not \"Transparent\" is called \"Opaque\"."
msgstr ""

#. type: Plain text
msgid ""
"Examples of suitable formats for Transparent copies include plain ASCII "
"without markup, Texinfo input format, LaTeX input format, SGML or XML using "
"a publicly available DTD, and standard-conforming simple HTML designed for "
"human modification. Opaque formats include PostScript, PDF, proprietary "
"formats that can be read and edited only by proprietary word processors, "
"SGML or XML for which the DTD and/or processing tools are not generally "
"available, and the machine-generated HTML produced by some word processors "
"for output purposes only."
msgstr ""

#. type: Plain text
msgid ""
"The \"Title Page\" means, for a printed book, the title page itself, plus "
"such following pages as are needed to hold, legibly, the material this "
"License requires to appear in the title page. For works in formats which do "
"not have any title page as such, \"Title Page\" means the text near the most "
"prominent appearance of the work's title, preceding the beginning of the "
"body of the text."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*2. VERBATIM COPYING*\n"
msgstr ""

#. type: Plain text
msgid ""
"You may copy and distribute the Document in any medium, either commercially "
"or noncommercially, provided that this License, the copyright notices, and "
"the license notice saying this License applies to the Document are "
"reproduced in all copies, and that you add no other conditions whatsoever to "
"those of this License. You may not use technical measures to obstruct or "
"control the reading or further copying of the copies you make or distribute. "
"However, you may accept compensation in exchange for copies. If you "
"distribute a large enough number of copies you must also follow the "
"conditions in section 3."
msgstr ""

#. type: Plain text
msgid ""
"You may also lend copies, under the same conditions stated above, and you "
"may publicly display copies."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*3. COPYING IN QUANTITY*\n"
msgstr ""

#. type: Plain text
msgid ""
"If you publish printed copies of the Document numbering more than 100, and "
"the Document's license notice requires Cover Texts, you must enclose the "
"copies in covers that carry, clearly and legibly, all these Cover Texts: "
"Front-Cover Texts on the front cover, and Back-Cover Texts on the back "
"cover. Both covers must also clearly and legibly identify you as the "
"publisher of these copies. The front cover must present the full title with "
"all words of the title equally prominent and visible.  You may add other "
"material on the covers in addition. Copying with changes limited to the "
"covers, as long as they preserve the title of the Document and satisfy these "
"conditions, can be treated as verbatim copying in other respects."
msgstr ""

#. type: Plain text
msgid ""
"If the required texts for either cover are too voluminous to fit legibly, "
"you should put the first ones listed (as many as fit reasonably) on the "
"actual cover, and continue the rest onto adjacent pages."
msgstr ""

#. type: Plain text
msgid ""
"If you publish or distribute Opaque copies of the Document numbering more "
"than 100, you must either include a machine-readable Transparent copy along "
"with each Opaque copy, or state in or with each Opaque copy a publicly-"
"accessible computer-network location containing a complete Transparent copy "
"of the Document, free of added material, which the general network-using "
"public has access to download anonymously at no charge using public-standard "
"network protocols. If you use the latter option, you must take reasonably "
"prudent steps, when you begin distribution of Opaque copies in quantity, to "
"ensure that this Transparent copy will remain thus accessible at the stated "
"location until at least one year after the last time you distribute an "
"Opaque copy (directly or through your agents or retailers) of that edition "
"to the public."
msgstr ""

#. type: Plain text
msgid ""
"It is requested, but not required, that you contact the authors of the "
"Document well before redistributing any large number of copies, to give them "
"a chance to provide you with an updated version of the Document."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*4. MODIFICATIONS*\n"
msgstr ""

#. type: Plain text
msgid ""
"You may copy and distribute a Modified Version of the Document under the "
"conditions of sections 2 and 3 above, provided that you release the Modified "
"Version under precisely this License, with the Modified Version filling the "
"role of the Document, thus licensing distribution and modification of the "
"Modified Version to whoever possesses a copy of it. In addition, you must do "
"these things in the Modified Version:"
msgstr ""

#. type: Plain text
msgid ""
"A. Use in the Title Page (and on the covers, if any) a title distinct from "
"that of the Document, and from those of previous versions (which should, if "
"there were any, be listed in the History section of the Document). You may "
"use the same title as a previous version if the original publisher of that "
"version gives permission. B. List on the Title Page, as authors, one or more "
"persons or entities responsible for authorship of the modifications in the "
"Modified Version, together with at least five of the principal authors of "
"the Document (all of its principal authors, if it has less than five). C. "
"State on the Title page the name of the publisher of the Modified Version, "
"as the publisher. D. Preserve all the copyright notices of the Document. E.  "
"Add an appropriate copyright notice for your modifications adjacent to the "
"other copyright notices. F. Include, immediately after the copyright "
"notices, a license notice giving the public permission to use the Modified "
"Version under the terms of this License, in the form shown in the Addendum "
"below. G. Preserve in that license notice the full lists of Invariant "
"Sections and required Cover Texts given in the Document's license notice. H. "
"Include an unaltered copy of this License. I. Preserve the section entitled "
"\"History\", and its title, and add to it an item stating at least the "
"title, year, new authors, and publisher of the Modified Version as given on "
"the Title Page. If there is no section entitled \"History\" in the Document, "
"create one stating the title, year, authors, and publisher of the Document "
"as given on its Title Page, then add an item describing the Modified Version "
"as stated in the previous sentence. J. Preserve the network location, if "
"any, given in the Document for public access to a Transparent copy of the "
"Document, and likewise the network locations given in the Document for "
"previous versions it was based on. These may be placed in the \"History\" "
"section. You may omit a network location for a work that was published at "
"least four years before the Document itself, or if the original publisher of "
"the version it refers to gives permission. K. In any section entitled "
"\"Acknowledgements\" or \"Dedications\", preserve the section's title, and "
"preserve in the section all the substance and tone of each of the "
"contributor acknowledgements and/or dedications given therein. L. Preserve "
"all the Invariant Sections of the Document, unaltered in their text and in "
"their titles. Section numbers or the equivalent are not considered part of "
"the section titles. M. Delete any section entitled \"Endorsements\". Such a "
"section may not be included in the Modified Version. N. Do not retitle any "
"existing section as \"Endorsements\" or to conflict in title with any "
"Invariant Section."
msgstr ""

#. type: Plain text
msgid ""
"If the Modified Version includes new front-matter sections or appendices "
"that qualify as Secondary Sections and contain no material copied from the "
"Document, you may at your option designate some or all of these sections as "
"invariant. To do this, add their titles to the list of Invariant Sections in "
"the Modified Version's license notice.  These titles must be distinct from "
"any other section titles."
msgstr ""

#. type: Plain text
msgid ""
"You may add a section entitled \"Endorsements\", provided it contains "
"nothing but endorsements of your Modified Version by various parties--for "
"example, statements of peer review or that the text has been approved by an "
"organization as the authoritative definition of a standard."
msgstr ""

#. type: Plain text
msgid ""
"You may add a passage of up to five words as a Front-Cover Text, and a "
"passage of up to 25 words as a Back-Cover Text, to the end of the list of "
"Cover Texts in the Modified Version. Only one passage of Front-Cover Text "
"and one of Back-Cover Text may be added by (or through arrangements made by) "
"any one entity. If the Document already includes a cover text for the same "
"cover, previously added by you or by arrangement made by the same entity you "
"are acting on behalf of, you may not add another; but you may replace the "
"old one, on explicit permission from the previous publisher that added the "
"old one."
msgstr ""

#. type: Plain text
msgid ""
"The author(s) and publisher(s) of the Document do not by this License give "
"permission to use their names for publicity for or to assert or imply "
"endorsement of any Modified Version."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*5. COMBINING DOCUMENTS*\n"
msgstr ""

#. type: Plain text
msgid ""
"You may combine the Document with other documents released under this "
"License, under the terms defined in section 4 above for modified versions, "
"provided that you include in the combination all of the Invariant Sections "
"of all of the original documents, unmodified, and list them all as Invariant "
"Sections of your combined work in its license notice."
msgstr ""

#. type: Plain text
msgid ""
"The combined work need only contain one copy of this License, and multiple "
"identical Invariant Sections may be replaced with a single copy. If there "
"are multiple Invariant Sections with the same name but different contents, "
"make the title of each such section unique by adding at the end of it, in "
"parentheses, the name of the original author or publisher of that section if "
"known, or else a unique number.  Make the same adjustment to the section "
"titles in the list of Invariant Sections in the license notice of the "
"combined work."
msgstr ""

#. type: Plain text
msgid ""
"In the combination, you must combine any sections entitled \"History\" in "
"the various original documents, forming one section entitled \"History\"; "
"likewise combine any sections entitled \"Acknowledgements\", and any "
"sections entitled \"Dedications\". You must delete all sections entitled "
"\"Endorsements.\""
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*6. COLLECTIONS OF DOCUMENTS*\n"
msgstr ""

#. type: Plain text
msgid ""
"You may make a collection consisting of the Document and other documents "
"released under this License, and replace the individual copies of this "
"License in the various documents with a single copy that is included in the "
"collection, provided that you follow the rules of this License for verbatim "
"copying of each of the documents in all other respects."
msgstr ""

#. type: Plain text
msgid ""
"You may extract a single document from such a collection, and distribute it "
"individually under this License, provided you insert a copy of this License "
"into the extracted document, and follow this License in all other respects "
"regarding verbatim copying of that document."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*7. AGGREGATION WITH INDEPENDENT WORKS*\n"
msgstr ""

#. type: Plain text
msgid ""
"A compilation of the Document or its derivatives with other separate and "
"independent documents or works, in or on a volume of a storage or "
"distribution medium, does not as a whole count as a Modified Version of the "
"Document, provided no compilation copyright is claimed for the compilation. "
"Such a compilation is called an \"aggregate\", and this License does not "
"apply to the other self-contained works thus compiled with the Document, on "
"account of their being thus compiled, if they are not themselves derivative "
"works of the Document."
msgstr ""

#. type: Plain text
msgid ""
"If the Cover Text requirement of section 3 is applicable to these copies of "
"the Document, then if the Document is less than one quarter of the entire "
"aggregate, the Document's Cover Texts may be placed on covers that surround "
"only the Document within the aggregate. Otherwise they must appear on covers "
"around the whole aggregate."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*8. TRANSLATION*\n"
msgstr ""

#. type: Plain text
msgid ""
"Translation is considered a kind of modification, so you may distribute "
"translations of the Document under the terms of section 4.  Replacing "
"Invariant Sections with translations requires special permission from their "
"copyright holders, but you may include translations of some or all Invariant "
"Sections in addition to the original versions of these Invariant Sections. "
"You may include a translation of this License provided that you also include "
"the original English version of this License. In case of a disagreement "
"between the translation and the original English version of this License, "
"the original English version will prevail."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*9. TERMINATION*\n"
msgstr ""

#. type: Plain text
msgid ""
"You may not copy, modify, sublicense, or distribute the Document except as "
"expressly provided for under this License. Any other attempt to copy, "
"modify, sublicense or distribute the Document is void, and will "
"automatically terminate your rights under this License. However, parties who "
"have received copies, or rights, from you under this License will not have "
"their licenses terminated so long as such parties remain in full compliance."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*10. FUTURE REVISIONS OF THIS LICENSE*\n"
msgstr ""

#. type: Plain text
msgid ""
"The Free Software Foundation may publish new, revised versions of the GNU "
"Free Documentation License from time to time. Such new versions will be "
"similar in spirit to the present version, but may differ in detail to "
"address new problems or concerns. See http://www.gnu.org/copyleft/."
msgstr ""

#. type: Plain text
msgid ""
"Each version of the License is given a distinguishing version number.  If "
"the Document specifies that a particular numbered version of this License "
"\"or any later version\" applies to it, you have the option of following the "
"terms and conditions either of that specified version or of any later "
"version that has been published (not as a draft) by the Free Software "
"Foundation. If the Document does not specify a version number of this "
"License, you may choose any version ever published (not as a draft) by the "
"Free Software Foundation."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*ADDENDUM*: How to use this License for your documents\n"
msgstr ""

#. type: Plain text
msgid ""
"To use this License in a document you have written, include a copy of the "
"License in the document and put the following copyright and license notices "
"just after the title page:"
msgstr ""

#. type: Plain text
msgid ""
"Copyright (c) YEAR YOUR NAME. Permission is granted to copy, distribute and/"
"or modify this document under the terms of the GNU Free Documentation "
"License, Version 1.1 or any later version published by the Free Software "
"Foundation; with the Invariant Sections being LIST THEIR TITLES, with the "
"Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST. A "
"copy of the license is included in the section entitled \"GNU Free "
"Documentation License\"."
msgstr ""

#. type: Plain text
msgid ""
"If you have no Invariant Sections, write \"with no Invariant Sections\" "
"instead of saying which ones are invariant. If you have no Front-Cover "
"Texts, write \"no Front-Cover Texts\" instead of \"Front-Cover Texts being "
"LIST\"; likewise for Back-Cover Texts."
msgstr ""

#. type: Plain text
msgid ""
"If your document contains nontrivial examples of program code, we recommend "
"releasing these examples in parallel under your choice of free software "
"license, such as the GNU General Public License, to permit their use in free "
"software."
msgstr ""

#. type: Title =
#, no-wrap
msgid "LinuxCNC V{lversion}, {date}"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Contents"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Title =
#, no-wrap
msgid "LinuxCNC History"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Using LinuxCNC"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "General Info"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "User Interfaces"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Programming"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Tool Compensation"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Control Panels"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Drivers"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Driver Examples"
msgstr ""

#. type: Title =
#, no-wrap
msgid "PLC"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Advanced Topics"
msgstr ""

#.  = Index
#.  vim: set syntax=asciidoc:
#. type: Title ==
#, no-wrap
msgid "Origin"
msgstr ""

#. type: Plain text
msgid ""
"EMC (the Enhanced Machine Controller) was created by http://www.nist.gov/"
"index.html[NIST] , the National Institute of Standards and Technology, which "
"is an agency of the Commerce Department of the United States government."
msgstr ""

#. type: Plain text
msgid ""
"NIST first became interested in writing a motion control package as a test "
"platform for concepts and standards. Early sponsorship from General Motors "
"resulted in an adaptation of the fledgling version of EMC using PMAC "
"intelligent control boards running under a \"real time\" version of Windows "
"NT and controlling a large milling machine."
msgstr ""

#. type: Plain text
msgid ""
"As is required of all 'work product' of US federal government employees, the "
"resulting software and the report about it are required to be in the public "
"domain and a report about it was duly published, including on the Internet. "
"It was there that Matt Shaver discovered EMC. He contacted NIST and entered "
"into discussions with Fred Proctor about adapting the code for use in "
"controlling less expensive hardware to be used for upgrades and replacements "
"of CNC controls that were obsolete or just plain dead. NIST was intrigued "
"because they too wanted something less expensive. In order to launch a "
"cooperative effort, a formal agreement was created which guaranteed that the "
"resulting code and design would remain in the public domain."
msgstr ""

#. type: Plain text
msgid ""
"Early considerations focused on replacing the expensive and temperamental "
"\"real time\" Windows NT system. It was proposed that a relatively new (at "
"the time) real time extension of the Linux operating system be tried. This "
"idea was pursued with success. Next up was the issue of the expensive "
"intelligent motion control boards. By this time the processing power of a PC "
"was considered great enough to directly take control of the motion "
"routines.  A quick search of available hardware resulted in the selection of "
"a http://www.servotogo.com/[Servo-To-Go] interface board as the first "
"platform for letting the PC directly control the motors. Software for "
"trajectory planning and PID loop control was added to the existing user "
"interface and RS274 interpreter. Matt successfully used this version to "
"upgrade a couple of machines with dead controls and this became the EMC "
"system that first caught the attention of the outside world. Mention of EMC "
"on the rec.crafts.metalworking USENET newsgroup resulted in early adopters "
"like http://pico-systems.com/motion.html[Jon Elson] building systems to take "
"advantage of EMC."
msgstr ""

#. type: Plain text
msgid ""
"NIST set up a mailing list for people interested in EMC. As time went on, "
"others outside NIST became interested in improving EMC. Many people "
"requested or coded small improvements to the code. Ray Henry wanted to "
"refine the user interface. Since Ray was reluctant to try tampering with the "
"C code in which the user interface was written, a simpler method was sought. "
"Fred Proctor of NIST suggested a scripting language and wrote code to "
"interface the Tcl/Tk scripting language to the internal NML communications "
"of EMC. With this tool Ray went on to write a Tcl/Tk program that became the "
"predominant user interface for EMC at the time."
msgstr ""

#. type: Plain text
msgid ""
"For NIST's perspective, see this http://web.archive.org/web/20120417094958/"
"http://www.isd.mel.nist.gov/documents/shackleford/4191_05.pdf[paper] written "
"by William Shackleford and Frederick Proctor, describing the history of EMC "
"and its transition to open source."
msgstr ""

#. type: Plain text
msgid ""
"By this time interest in EMC as beginning to pick up substantially. As more "
"and more people attempted installation of EMC, the difficulty of patching a "
"Linux kernel with the real time extensions and of compiling the EMC code "
"became glaringly obvious. Many attempts to document the process and write "
"scripts were attempted, some with moderate success. The problem of matching "
"the correct version of the patches and compilers with the selected version "
"of Linux kept cropping up. Paul Corner came to the rescue with the BDI "
"(brain dead install) which was a CD from which a complete working system "
"(Linux, patches, and EMC) could be installed.  The BDI approach opened the "
"world of EMC to a much larger user community. As this community continued to "
"grow, the EMC mailing list and code archives were moved to http://www."
"sourceforge.net/projects/emc/[SourceForge] and the LinuxCNC web site was "
"established."
msgstr ""

#. type: Plain text
msgid ""
"With a larger community of users participating, EMC became a major focus of "
"interest at the on-going CNC exhibits at NAMES and NAMES became the annual "
"meeting event for EMC. For the first couple of years, the meetings just "
"happened because the interested parties were at NAMES. In 2003 the EMC user "
"community had its first announced public meeting. It was held the Monday "
"after NAMES in the lobby of the arena where the NAMES show was held.  "
"Organization was loose, but the idea of a hardware abstraction layer (HAL) "
"was born and the movement to restructure the code for ease of development "
"(EMC2) was proposed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Name Change"
msgstr ""

#. type: Plain text
msgid ""
"In the spring of 2011, the LinuxCNC Board of Directors was contacted by a "
"law firm representing EMC Corporation (www.emc.com) about the use of \"EMC\" "
"and \"EMC2\" to identify the software offered on linuxcnc.org. EMC "
"Corporation has registered various trademarks relating to EMC and EMCÂ² (EMC "
"with superscripted numeral two)."
msgstr ""

#. type: Plain text
msgid ""
"After a number of conversations with the representative of EMC Corporation, "
"the final result is that, starting with the next major release of the "
"software, linuxcnc.org will stop identifying the software using \"emc\" or "
"\"EMC\", or those terms followed by digits. To the extent that the LinuxCNC "
"Board of Directors controls the names used to identify the software offered "
"on linuxcnc.org, the board has agreed to this."
msgstr ""

#. type: Plain text
msgid ""
"As a result, it was necessary to choose a new name for the software. Of the "
"options the board considered, there was consensus that \"LinuxCNC\" is the "
"best option, as this has been our website's name for years."
msgstr ""

#. type: Plain text
msgid ""
"In preparation for the new name, we have received a sub-license of the "
"LINUXÂ® trademark from the Linux Foundation (www.linuxfoundation.org), "
"protecting our use of the LinuxCNC name. (LINUXÂ® is the registered "
"trademark of Linus Torvalds in the U.S. and other countries.)"
msgstr ""

#. type: Plain text
msgid ""
"The rebranding effort will include the linuxcnc.org website, the IRC "
"channels, and versions of the software and documentation starting with 2.5.0."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Additional Info"
msgstr ""

#. type: Plain text
msgid ""
"NIST published a paper describing the https://www.nist.gov/"
"node/704046[RS274NGC] language and the abstract machining center it "
"controls, as well as an early implementation of EMC.  The paper is also "
"available at http://linuxcnc.org/files/RS274NGCv3.pdf"
msgstr ""

#. type: Plain text
msgid ""
"NIST also published a paper on the history of EMC and its transition to "
"https://www.nist.gov/node/702276[open source].  The paper is also available "
"at http://linuxcnc.org/files/Use-of-Open-Source-Distribution-for-a-Machine-"
"Tool-Controller.pdf"
msgstr ""

#. type: Title =
#, no-wrap
msgid "User Foreword"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is modular and flexible. These attributes lead many to see it as a "
"confusing jumble of little things and wonder why it is the way it is.  This "
"page attempts to answer that question before you get into the thick of "
"things."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC started at the National Institute of Standards and Technology in "
"the USA. It grew up using Unix as its operating system. Unix made it "
"different. Among early Unix developers there grew a set of code writing "
"ideas that some call the Unix way. These early LinuxCNC authors followed "
"those ways."
msgstr ""

#. type: Plain text
msgid ""
"Eric S. Raymond, in his book The Art of Unix Programming, summarizes the "
"Unix philosophy as the widely-used engineering philosophy, \"Keep it Simple, "
"Stupid\" (KISS Principle). He then describes how he believes this overall "
"philosophy is applied as a cultural Unix norm, although unsurprisingly it is "
"not difficult to find severe violations of most of the following in actual "
"Unix practice:"
msgstr ""

#. type: Plain text
msgid "Rule of Modularity: Write simple parts connected by clean interfaces."
msgstr ""

#. type: Plain text
msgid "Rule of Clarity: Clarity is better than cleverness."
msgstr ""

#. type: Plain text
msgid "Rule of Composition: Design programs to be connected to other programs."
msgstr ""

#. type: Plain text
msgid "Rule of Separation: Separate policy from mechanism; separate"
msgstr ""

#. type: Plain text
msgid ""
"interfaces from engines.footnote:[Found at http://en.wikipedia.org/wiki/"
"Unix_philosophy, 07/06/2008]"
msgstr ""

#. type: Plain text
msgid ""
"Mr. Raymond offered several more rules but these four describe essential "
"characteristics of the LinuxCNC motion control system."
msgstr ""

#. type: Plain text
msgid ""
"The *Modularity* rule is critical. Throughout these handbooks you will find "
"talk of the interpreter or task planner or motion or HAL. Each of these is a "
"module or collection of modules. It's modularity that allows you to connect "
"together just the parts you need to run your machine."
msgstr ""

#. type: Plain text
msgid ""
"The *Clarity* rule is essential. LinuxCNC is a work in progress -- it is not "
"finished nor will it ever be. It is complete enough to run most of the "
"machines we want it to run. Much of that progress is achieved because many "
"users and code developers are able to look at the work of others and build "
"on what they have done."
msgstr ""

#. type: Plain text
msgid ""
"The *Composition* rule allows us to build a predictable control system from "
"the many modules available by making them connectable. We achieve "
"connectability by setting up standard interfaces to sets of modules and "
"following those standards."
msgstr ""

#. type: Plain text
msgid ""
"The *Separation* rule requires that we make distinct parts that do little "
"things. By separating functions debugging is much easier and replacement "
"modules can be dropped into the system and comparisons easily made."
msgstr ""

#. type: Plain text
msgid ""
"What does the Unix way mean for you as a user of LinuxCNC. It means that you "
"are able to make choices about how you will use the system. Many of these "
"choices are a part of machine integration, but many also affect the way you "
"will use your machine. As you read you will find many places where you will "
"need to make comparisons. Eventually you will make choices, \"I'll use this "
"interface rather than thatâ or, âI'll write part offsets this way rather "
"than that way.\" Throughout these handbooks we describe the range of "
"abilities currently available."
msgstr ""

#. type: Plain text
msgid ""
"As you begin your journey into using LinuxCNC we offer two cautionary notes:"
"footnote:[Found at http://en.wikipedia.org/wiki/Unix_philosophy, 07/06/2008]"
msgstr ""

#. type: Plain text
msgid ""
"Paraphrasing the words of Doug Gwyn on UNIX: \"LinuxCNC was not designed to "
"stop its users from doing stupid things, as that would also stop them from "
"doing clever things.\""
msgstr ""

#. type: Plain text
msgid ""
"Likewise the words of Steven King: \"LinuxCNC is user-friendly. It just "
"isn't promiscuous about which users it's friendly with.\""
msgstr ""

#. type: Title =
#, no-wrap
msgid "LinuxCNC User Introduction"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "How LinuxCNC Works"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is a suite of highly-customisable applications for the control of a "
"Computer Numerically Controlled (CNC) mills and lathes, 3D printers, robots, "
"laser cutters, plasma cutters and other automated devices. It is capable of "
"providing coordinated control of up to 9 axes of movement."
msgstr ""

#. type: Plain text
msgid ""
"At its heart, LinuxCNC consists of several key components that are "
"integrated together to form one complete system:"
msgstr ""

#. type: Plain text
msgid ""
"a Graphical User Interface (GUI), which forms the basic interface between "
"the operator, the software and the CNC machine itself;"
msgstr ""

#. type: Plain text
msgid ""
"the <<cha:hal-introduction,Hardware Abstraction Layer>> (HAL), which "
"provides a method of linking all the various internal virtual signals "
"generated and received by LinuxCNC with the outside world; and,"
msgstr ""

#. type: Plain text
msgid ""
"the high level controllers that coordinate the generation and execution of "
"motion control of the CNC machine, namely the motion controller (EMCMOT), "
"the discrete input/output controller (EMCIO) and the task executor (EMCTASK)."
msgstr ""

#. type: Plain text
msgid ""
"The below illustration is a simple block diagram showing what a typical 3-"
"axis, CNC mill with stepper motors might look like:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Simple LinuxCNC Controlled Machine"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/whatstep1.png"
msgstr ""

#. type: Plain text
msgid ""
"A computer running LinuxCNC sends a sequence of pulses via the parallel port "
"to the stepper drives, each of which has one stepper motor connected to it. "
"Each drive receives two independent signals; one signal to command the drive "
"to move its associated stepper motor in a clockwise or anti-clockwise "
"direction, and a second signal that defines the speed at which that stepper "
"motor rotates."
msgstr ""

#. type: Plain text
msgid ""
"While a stepper motor system under parallel port control is illustrated, a "
"LinuxCNC system can also take advantage of a wide variety of dedicated "
"hardware motion control interfaces for increased speed and I/O capabilities. "
"A full list of interfaces supported by LinuxCNC can be found on the http://"
"http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"LinuxCNC_Supported_Hardware[Supported Hardware] page of the Wiki."
msgstr ""

#. type: Plain text
msgid ""
"In most circumstances, users will create a configuration specific to their "
"mill setup using either the <<cha:stepconf-wizard,Stepper Configuration "
"Wizard>> (for CNC systems operating using the computers' parallel port) or "
"the <<cha:pncconf-wizard,Mesa Hardware Wizard>> (for more advanced systems "
"utilising a Mesa Anything I/O PCI card). Running either wizard will create "
"several folders on the computers' hard drive containing a number of "
"configuration files specific to that CNC machine, and an icon placed on the "
"desktop to allow easy launching of LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"For example, if the Stepper Configuration Wizard was used to create a setup "
"for the 3-axis CNC mill illustrated above entitled 'My_CNC', the folders "
"created by the wizard would typically contain the following files:"
msgstr ""

#. type: Plain text
msgid "Folder: My_CNC"
msgstr ""

#. type: Plain text
msgid "My_CNC.ini"
msgstr ""

#. type: Plain text
msgid ""
"The INI file contains all the basic hardware information regarding the "
"operation of the CNC mill such as the number of steps each stepper motor "
"must turn to complete one full revolution, the maximum rate at which each "
"stepper may operate at, the limits of travel of each axis or the "
"configuration and behaviour of limit switches on each axis."
msgstr ""

#. type: Plain text
msgid "My_CNC.hal"
msgstr ""

#. type: Plain text
msgid ""
"This HAL file contains information that tells LinuxCNC how to link the "
"internal virtual signals to physical connections beyond the computer. For "
"example, specifying pin 4 on the parallel port to send out the Z axis step "
"direction signal, or directing LinuxCNC to cease driving the X axis motor "
"when a limit switch is triggered on parallel port pin 13."
msgstr ""

#. type: Plain text
msgid "custom.HAL"
msgstr ""

#. type: Plain text
msgid ""
"Customisations to the mill configuration beyond the scope of the wizard may "
"be performed by including further links to other virtual points within "
"LinuxCNC in this HAL file. When starting a LinuxCNC session, this file is "
"read and processed before the GUI is loaded. An example may include "
"initiating Modbus communications to the spindle motor so that it is "
"confirmed as operational before the GUI is displayed."
msgstr ""

#. type: Plain text
msgid "custom_postgui.hal"
msgstr ""

#. type: Plain text
msgid ""
"The custom_postgui HAL file allows further customisation of LinuxCNC, but "
"differs from custom.HAL in that it is processed after the GUI is displayed. "
"For example, after establishing Modbus communications to the spindle motor "
"in custom.hal, LinuxCNC can use the custom_postgui file to link the spindle "
"speed readout from the motor drive to a bargraph displayed on the GUI."
msgstr ""

#. type: Plain text
msgid "postgui_backup.hal"
msgstr ""

#. type: Plain text
msgid ""
"This is provided as a backup copy of the custom_postgui.hal file to allow "
"the user to quickly restore a previously-working postgui HAL configuration. "
"This is especially useful if the user wants to run the Configuration Wizard "
"again under the same 'My_CNC' name in order to modify some parameters of the "
"mill.  Saving the mill configuration in the Wizard will overwrite the "
"existing custom_postgui file while leaving the postgui_backup file untouched."
msgstr ""

#. type: Plain text
msgid "tool.tbl"
msgstr ""

#. type: Plain text
msgid ""
"A tool table file contains a parameterised list of any cutting tools used by "
"the mill. These parameters can include cutter diameter and length, and is "
"used to provide a catalogue of data that tells LinuxCNC how to compensate "
"its motion for different sized tools within a milling operation."
msgstr ""

#. type: Plain text
msgid "Folder: nc_files"
msgstr ""

#. type: Plain text
msgid ""
"The nc_files folder is provided as a default location to store the G-code "
"programs used to drive the mill. It also includes a number of subfolders "
"with G-code examples."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Graphical User Interfaces"
msgstr ""

#. type: Plain text
msgid ""
"A graphical user interface is the part of the LinuxCNC that the machine tool "
"operator interacts with.  LinuxCNC comes with several types of user "
"interfaces which may be chosen from by editing certain fields contained in "
"the <<cha:ini-configuration,INI file>>:"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:axis-gui,'Axis'>>, the standard keyboard GUI interface. This is also "
"the default GUI launched when a Configuration Wizard is used to create a "
"desktop icon launcher:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Axis, the standard keyboard GUI interface"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/axis.png"
msgstr ""

#. type: Plain text
msgid "<<cha:touchy-gui,'Touchy'>>, a touch screen GUI:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Touchy, a touch screen GUI"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/touchy.png"
msgstr ""

#. type: Plain text
msgid "<<cha:gscreen,'Gscreen'>>, a user-configurable touch screen GUI:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen, a configurable base touch screen GUI"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/gscreen-mill.png"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:gmoccapy,'GMOCCAPY'>>, a touch screen GUI based on Gscreen. GMOCCAPY "
"is also designed to work equally well in applications where a keyboard and "
"mouse are the preferred methods of controlling the GUI:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "gmoccapy, a touch screen GUI based on Gscreen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/gmoccapy_3_axis.png"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:ngcgui,'NGCGUI'>>, a subroutine GUI that provides wizard-style "
"programming of G code. NGCGUI may be run as a standalone program or embedded "
"into another GUI as a series of tabs. The following screen shot shows NGCGUI "
"embedded into Axis:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "NGCGUI, a subroutine GUI that provides wizard-style programming of G code"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/ngcgui.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Virtual Control Panels"
msgstr ""

#. type: Plain text
msgid ""
"As mentioned above, many of LinuxCNC's GUIs may be customised by the user. "
"This may be done to add indicators, readouts, switches or sliders to the "
"basic appearance of one of the GUIs for increased flexibility or "
"functionality. Two styles of Virtual Control Panel are offered in LinuxCNC:"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:pyvcp,'PyVCP'>>, a Python-based virtual control panel that can be "
"added to the Axis GUI. PyVCP only utilises virtual signals contained within "
"the Hardware Abstraction Layer, such as the spindle-at-speed indicator or "
"the Emergency Stop output signal, and has a simple no-frills appearance. "
"This makes it an excellent choice if the user wants to add a Virtual Control "
"Panel with minimal fuss."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "PyVCP with Axis"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/axis-pyvcp.png"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:glade-vcp,'GladeVCP'>>, a Glade-based virtual control panel that can "
"be added to the Axis or Touchy GUIs. GladeVCP has the advantage over PyVCP "
"in that it is not limited to the display or control of HAL virtual signals, "
"but can include other external interfaces outside LinuxCNC such as window or "
"network events. GladeVCP is also more flexible in how it may be configured "
"to appear on the GUI:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GladeVCP with Axis"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../gui/images/axis-gladevcp.png"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Languages"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC uses translation files to translate LinuxCNC User Interfaces into "
"many languages including French, German, Italian, Finnish, Russian, "
"Romanian, Portuguese and Chinese.  Assuming a translation has been created, "
"LinuxCNC will automatically use whatever native language you log in with "
"when starting the Linux operating system. If your language has not been "
"translated, contact a developer on the IRC, the mailing list or the User "
"Forum for assistance."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modes of Operation"
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC is running, there are three different major modes used for "
"inputting commands. These are Manual, Auto, and Manual Data Input (MDI). "
"Changing from one mode to another makes a big difference in the way that the "
"LinuxCNC control behaves. There are specific things that can be done in one "
"mode that cannot be done in another. An operator can home an axis in manual "
"mode but not in auto or MDI modes. An operator can cause the machine to "
"execute a whole file full of G-codes in the auto mode but not in manual or "
"MDI."
msgstr ""

#. type: Plain text
msgid ""
"In manual mode, each command is entered separately. In human terms a manual "
"command might be turn on coolant or jog X at 25 inches per minute. These are "
"roughly equivalent to flipping a switch or turning the hand wheel for an "
"axis. These commands are normally handled on one of the graphical interfaces "
"by pressing a button with the mouse or holding down a key on the keyboard. "
"In auto mode, a similar button or key press might be used to load or start "
"the running of a whole program of G-code that is stored in a file. In the "
"MDI mode the operator might type in a block of code and tell the machine to "
"execute it by pressing the <return> or <enter> key on the keyboard."
msgstr ""

#. type: Plain text
msgid ""
"Some motion control commands are available concurrently and will cause the "
"same changes in motion in all modes. These include Abort, Emergency Stop, "
"and Feed Rate Override. Commands like these should be self explanatory."
msgstr ""

#. type: Plain text
msgid ""
"The AXIS user interface hides some of the distinctions between Auto and the "
"other modes by making Auto-commands available at most times. It also blurs "
"the distinction between Manual and MDI because some Manual commands like "
"Touch Off are actually implemented by sending MDI commands. It does this by "
"automatically changing to the mode that is needed for the action the user "
"has requested."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Important User Concepts"
msgstr ""

#. type: Plain text
msgid ""
"This chapter covers important user concepts that should be understood before "
"attempting to run a CNC machine with g code."
msgstr ""

#. type: Plain text
msgid "[[sec:trajectory-control]](((Trajectory Control)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Trajectory Control"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Trajectory Planning"
msgstr ""

#. type: Plain text
msgid ""
"Trajectory planning, in general, is the means by which LinuxCNC follows the "
"path specified by your G Code program, while still operating within the "
"limits of your machinery."
msgstr ""

#. type: Plain text
msgid ""
"A G Code program can never be fully obeyed. For example, imagine you specify "
"as a single-line program the following move:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G1 X1 F10 (G1 is linear move, X1 is the destination, F10 is the speed)\n"
msgstr ""

#. type: Plain text
msgid ""
"In reality, the whole move can't be made at F10, since the machine must "
"accelerate from a stop, move toward X=1, and then decelerate to stop again. "
"Sometimes part of the move is done at F10, but for many moves, especially "
"short ones, the specified feed rate is never reached at all. Having short "
"moves in your G Code can cause your machine to slow down and speed up for "
"the longer moves if the 'naive cam detector' is not employed with G64 Pn."
msgstr ""

#. type: Plain text
msgid ""
"The basic acceleration and deceleration described above is not complex and "
"there is no compromise to be made. In the INI file the specified machine "
"constraints such as maximum axis velocity and axis acceleration must be "
"obeyed by the trajectory planner."
msgstr ""

#. type: Plain text
msgid ""
"For more information on the Trajectory Panner ini options see the <<sec:traj-"
"section, Trajectory Section>> in the INI chapter."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Path Following"
msgstr ""

#. type: Plain text
msgid ""
"A less straightforward problem is that of path following. When you program a "
"corner in G Code, the trajectory planner can do several things, all of which "
"are right in some cases: it can decelerate to a stop exactly at the "
"coordinates of the corner, and then accelerate in the new direction. It can "
"also do what is called blending, which is to keep the feed rate up while "
"going through the corner, making it necessary to round the corner off in "
"order to obey machine constraints.  You can see that there is a trade off "
"here: you can slow down to get better path following, or keep the speed up "
"and have worse path following. Depending on the particular cut, the "
"material, the tooling, etc., the programmer may want to compromise "
"differently."
msgstr ""

#. type: Plain text
msgid ""
"Rapid moves also obey the current trajectory control. With moves long enough "
"to reach maximum velocity on a machine with low acceleration and no path "
"tolerance specified, you can get a fairly round corner."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Programming the Planner(((Programming the Planner)))"
msgstr ""

#. type: Plain text
msgid "The trajectory control commands are as follows:"
msgstr ""

#. type: Plain text
msgid ""
"'G61' - (Exact Path Mode) visits the programmed point exactly, even though"
msgstr ""

#. type: Plain text
msgid ""
"that means it might temporarily come to a complete stop in order to change "
"direction to the next programmed point."
msgstr ""

#. type: Plain text
msgid ""
"'G61.1' - (Exact Stop Mode) tells the planner to come to an exact stop at "
"every"
msgstr ""

#. type: Plain text
msgid "segment's end."
msgstr ""

#. type: Plain text
msgid ""
"'G64' - (Blend Without Tolerance Mode) G64 is the default setting when you"
msgstr ""

#. type: Plain text
msgid ""
"start LinuxCNC. G64 is just blending and the naive cam detector is not "
"enabled. G64 and G64 P0 tell the planner to sacrifice path following "
"accuracy in order to keep the feed rate up. This is necessary for some types "
"of material or tooling where exact stops are harmful, and can work great as "
"long as the programmer is careful to keep in mind that the tool's path will "
"be somewhat more curvy than the program specifies.  When using G0 (rapid) "
"moves with G64 use caution on clearance moves and allow enough distance to "
"clear obstacles based on the acceleration capabilities of your machine."
msgstr ""

#. type: Plain text
msgid ""
"'G64 P- Q-' - (Blend With Tolerance Mode) This enables the 'naive cam "
"detector' and"
msgstr ""

#. type: Plain text
msgid ""
"enables blending with a tolerance. If you program G64 P0.05, you tell the "
"planner that you want continuous feed, but at programmed corners you want it "
"to slow down enough so that the tool path can stay within 0.05 user units of "
"the programmed path. The exact amount of slowdown depends on the geometry of "
"the programmed corner and the machine constraints, but the only thing the "
"programmer needs to worry about is the tolerance. This gives the programmer "
"complete control over the path following compromise. The blend tolerance can "
"be changed throughout the program as necessary. Beware that a specification "
"of G64 P0 has the same effect as G64 alone (above), which is necessary for "
"backward compatibility for old G Code programs. See the <<gcode:g64,G64 "
"section>> of the G code chapter."
msgstr ""

#. type: Plain text
msgid ""
"'Blending without tolerance' - The controlled point will touch each specified"
msgstr ""

#. type: Plain text
msgid ""
"movement at at least one point. The machine will never move at such a speed "
"that it cannot come to an exact stop at the end of the current movement (or "
"next movement, if you pause when blending has already started). The distance "
"from the end point of the move is as large as it needs to be to keep up the "
"best contouring feed."
msgstr ""

#. type: Plain text
msgid ""
"'Naive Cam Detector' - Successive G1 moves that involve only the XYZ axes"
msgstr ""

#. type: Plain text
msgid ""
"that deviate less than Q- from a straight line are merged into a single "
"straight line. This merged movement replaces the individual G1 movements for "
"the purposes of blending with tolerance. Between successive movements, the "
"controlled point will pass no more than P- from the actual endpoints of the "
"movements. The controlled point will touch at least one point on each "
"movement. The machine will never move at such a speed that it cannot come to "
"an exact stop at the end of the current movement (or next movement, if you "
"pause when blending has already started) On G2/3 moves in the G17 (XY) plane "
"when the maximum deviation of an arc from a straight line is less than the "
"G64 Q- tolerance the arc is broken into two lines (from start of arc to "
"midpoint, and from midpoint to end).  those lines are then subject to the "
"naive cam algorithm for lines.  Thus, line-arc, arc-arc, and arc-line cases "
"as well as line-line benefit from the 'naive cam detector'. This improves "
"contouring performance by simplifying the path."
msgstr ""

#. type: Plain text
msgid ""
"In the following figure the blue line represents the actual machine "
"velocity. The red lines are the acceleration capability of the machine.  The "
"horizontal lines below each plot is the planned move. The upper plot shows "
"how the trajectory planner will slow the machine down when short moves are "
"encountered to stay within the limits of the machines acceleration setting "
"to be able to come to an exact stop at the end of the next move. The bottom "
"plot shows the effect of the Naive Cam Detector to combine the moves and do "
"a better job of keeping the velocity as planned."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Naive Cam Detector"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/naive-cam.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Planning Moves"
msgstr ""

#. type: Plain text
msgid ""
"Make sure moves are 'long enough' to suit your machine/material.  "
"Principally because of the rule that the machine will never move at such a "
"speed that it cannot come to a complete stop at the end of the current "
"movement, there is a minimum movement length that will allow the machine to "
"keep up a requested feed rate with a given acceleration setting."
msgstr ""

#. type: Plain text
msgid ""
"The acceleration and deceleration phase each use half the ini file "
"MAX_ACCELERATION. In a blend that is an exact reversal, this causes the "
"total axis acceleration to equal the ini file MAX_ACCELERATION. In other "
"cases, the actual machine acceleration is somewhat less than the ini file "
"acceleration"
msgstr ""

#. // This is a duplicate paragraph to the one below without latexmath.////
#. type: Plain text
msgid ""
"To keep up the feed rate, the move must be longer than the distance it takes "
"to accelerate from 0 to the desired feed rate and then stop again. Using A "
"as *1/2* the ini file MAX_ACCELERATION and F as the feed rate *in units per "
"second*, the acceleration time is *t~a~ = F/A* and the acceleration distance "
"is *d~a~ = F*t~a~/2*. The deceleration time and distance are the same, "
"making the critical distance *d = d~a~ + d~d~ = 2 * d~a~ = F^2^/A*."
msgstr ""

#. type: Plain text
msgid ""
"For example, for a feed rate of 1 inch per second and an acceleration of *10 "
"inches/sec^2^*, the critical distance is *1^2^/10 = 1/10 = 0.1 inches*."
msgstr ""

#. type: Plain text
msgid ""
"For a feed rate of 0.5 inch per second, the critical distance is *5^2^/100 = "
"25/100 = 0.025* inches."
msgstr ""

#
#
#. This section has been commented out until latexmath is working again.
#. To keep up the feed rate, the move must be longer than the distance it
#. takes to accelerate from 0 to the desired feed rate and then stop
#. again. Using A as latexmath:[$\frac{1}{2}$] the ini file MAX_ACCELERATION 
#. and F as the feed rate *in units per second*, the acceleration time is 
#. latexmath:[$ ta = \frac{F}{A} $] and the acceleration distance is 
#. latexmath:[$ da = \frac{1}{2} \times F \times ta $]. The deceleration time 
#. and distance are the same, making the critical distance 
#. latexmath:[$ d = da + dd = 2 \times da = \frac{F^{2}}{A} $]. 
#. For example, for a feed rate of 1 inch per second and an acceleration of 
#. latexmath:[$ 10 \frac{inch}{sec^{2}} $], the critical distance is 
#. latexmath:[$\frac{1^{2}}{10} = \frac{1}{10} = 0.1$] inch. 
#. For a feed rate of 0.5 inch per second, the critical distance is 
#. latexmath:[$ \frac{0.5^{2}}{10} = \frac{0.25}{10} = 0.025$] inch.
#. type: Title ==
#, no-wrap
msgid "G Code"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Defaults"
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC first starts up many G and M codes are loaded by default. The "
"current active G and M codes can be viewed on the MDI tab in the 'Active G-"
"Codes:' window in the AXIS interface. These G and M codes define the "
"behavior of LinuxCNC and it is important that you understand what each one "
"does before running LinuxCNC. The defaults can be changed when running a G-"
"Code file and left in a different state than when you started your LinuxCNC "
"session. The best practice is to set the defaults needed for the job in the "
"preamble of your G-Code file and not assume that the defaults have not "
"changed. Printing out the G-Code <<gcode:quick-reference-table,Quick "
"Reference>> page can help you remember what each one is."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Feed Rate"
msgstr ""

#. type: Plain text
msgid ""
"How the feed rate is applied depends on if an axis involved with the move is "
"a rotary axis. Read and understand the <<sub:feed-rate,Feed Rate>> section "
"if you have a rotary axis or a lathe."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Radius Offset"
msgstr ""

#. type: Plain text
msgid ""
"Tool Radius Offset (G41/42) requires that the tool be able to touch "
"somewhere along each programmed move without gouging the two adjacent moves. "
"If that is not possible with the current tool diameter you will get an "
"error. A smaller diameter tool may run without an error on the same path. "
"This means you can program a cutter to pass down a path that is narrower "
"than the cutter without any errors. See the <<sec:cutter-compensation,Cutter "
"Compensation>> Section for more information."
msgstr ""

#. type: Plain text
msgid ""
"After starting LinuxCNC each axis must be homed prior to running a program "
"or running a MDI command."
msgstr ""

#. type: Plain text
msgid ""
"If your machine does not have home switches a match mark on each axis can "
"aid in homing the machine coordinates to the same place each time."
msgstr ""

#. type: Plain text
msgid "Once homed your soft limits that are set in the ini file will be used."
msgstr ""

#. type: Plain text
msgid ""
"If you want to deviate from the default behavior, or want to use the Mini "
"interface you will need to set the option NO_FORCE_HOMING = 1 in the [TRAJ] "
"section of your ini file. More information on homing can be found in the "
"Integrator Manual."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tool Changes"
msgstr ""

#. type: Plain text
msgid ""
"There are several options when doing manual tool changes. See the <<sec:"
"emcio-section,[EMCIO] section>> for information on configuration of these "
"options. Also see the <<gcode:g28-g28.1,G28>> and <<gcode:g30-g30.1,G30>> "
"section of the G code chapter."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Coordinate Systems"
msgstr ""

#. type: Plain text
msgid ""
"The Coordinate Systems can be confusing at first. Before running a CNC "
"machine you must understand the basics of the coordinate systems used by "
"LinuxCNC. In depth information on the LinuxCNC Coordinate Systems is in the "
"<<cha:coordinate-system,Coordinate System>> Section of this manual."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G53 Machine Coordinate"
msgstr ""

#. type: Plain text
msgid ""
"When you home LinuxCNC you set the G53 Machine Coordinate System to 0 for "
"each axis homed."
msgstr ""

#. type: Plain text
msgid "No other coordinate systems or tool offsets are changed by homing."
msgstr ""

#. type: Plain text
msgid ""
"The only time you move in the G53 machine coordinate system is when you "
"program a G53 on the same line as a move. Normally you are in the G54 "
"coordinate system."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G54-59.3 User Coordinates"
msgstr ""

#. type: Plain text
msgid ""
"Normally you use the G54 Coordinate System. When an offset is applied to a "
"current user coordinate system a small blue ball with lines will be at the "
"<<sec.machine-coordinate-system, machine origin>> when your DRO is "
"displaying 'Position: Relative Actual' in Axis. If your offsets are "
"temporary use the Zero Coordinate System from the Machine menu or program "
"'G10 L2 P1 X0 Y0 Z0' at the end of your G Code file. Change the 'P' number "
"to suit the coordinate system you wish to clear the offset in."
msgstr ""

#. type: Plain text
msgid ""
"Offsets stored in a user coordinate system are retained when LinuxCNC is"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "shut down.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Using the 'Touch Off' button in Axis sets an offset for the chosen\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "User Coordinate System.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "When You Are Lost"
msgstr ""

#. type: Plain text
msgid ""
"If you're having trouble getting 0,0,0 on the DRO when you think you should, "
"you may have some offsets programmed in and need to remove them."
msgstr ""

#. type: Plain text
msgid "Move to the Machine origin with G53 G0 X0 Y0 Z0"
msgstr ""

#. type: Plain text
msgid "Clear any G92 offset with G92.1"
msgstr ""

#. type: Plain text
msgid "Use the G54 coordinate system with G54"
msgstr ""

#. type: Plain text
msgid ""
"Set the G54 coordinate system to be the same as the machine coordinate "
"system with G10 L2 P1 X0 Y0 Z0 R0"
msgstr ""

#. type: Plain text
msgid "Turn off tool offsets with G49"
msgstr ""

#. type: Plain text
msgid "Turn on the Relative Coordinate Display from the menu"
msgstr ""

#. type: Plain text
msgid ""
"Now you should be at the machine origin X0 Y0 Z0 and the relative coordinate "
"system should be the same as the machine coordinate system."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Machine Configurations"
msgstr ""

#. type: Plain text
msgid ""
"The following diagram shows a typical mill showing direction of travel of "
"the tool and the mill table and limit switches. Notice how the mill table "
"moves in the opposite direction of the Cartesian coordinate system arrows "
"shown by the 'Tool Direction' image. This makes the 'tool' move in the "
"correct direction in relation to the material."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Mill Configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/mill-diagram_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"The following diagram shows a typical lathe showing direction of travel of "
"the tool and limit switches."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Lathe Configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/lathe-diagram_en.svg"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Starting LinuxCNC"
msgstr ""

#. type: Plain text
msgid "LinuxCNC is started with the script file 'linuxcnc'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linuxcnc [options] [<ini-file>]\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "linuxcnc script options"
msgstr ""

#. type: Plain text
msgid "'-v' = verbose - prints info as it works"
msgstr ""

#. type: Plain text
msgid "'-d' = echoes script commands to screen for debugging"
msgstr ""

#. type: Plain text
msgid ""
"If the linuxcnc script is passed an ini file it reads the ini file and "
"starts LinuxCNC. The ini file [HAL] section specifies the order of loading "
"up HAL files if more than one is used. Once the HAL=xxx.hal files are loaded "
"then the GUI is loaded then the POSTGUI=.xxx.hal file is loaded. If you "
"create PyVCP or GladeVCP objects with HAL pins you must use the postgui HAL "
"file to make any connections to those pins. See the <<sec:hal-section,"
"[HAL]>> section of the INI configuration for more information."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Configuration Selector"
msgstr ""

#. type: Plain text
msgid ""
"If no ini file is passed to the linuxcnc script it loads the configuration "
"selector so you can choose and save a sample configuration. Once a sample "
"configuration has been saved it can be modified to suit your application.  "
"The configuration files are saved in linuxcnc/configs directory."
msgstr ""

#. type: Title =
#, no-wrap
msgid "CNC Machine Overview"
msgstr ""

#. type: Plain text
msgid ""
"This section gives a brief description of how a CNC machine is viewed from "
"the input and output ends of the Interpreter."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Mechanical Components"
msgstr ""

#. type: Plain text
msgid ""
"A CNC machine has many mechanical components that may be controlled or may "
"affect the way in which control is exercised. This section describes the "
"subset of those components that interact with the Interpreter. Mechanical "
"components that do not interact directly with the Interpreter, such as the "
"jog buttons, are not described here, even if they affect control."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Axes"
msgstr ""

#. type: Plain text
msgid ""
"Any CNC machine has one or more Axes. Different types of CNC machines have "
"different combinations. For instance, a '4-axis milling machine' may have "
"XYZA or XYZB axes. A lathe typically has XZ axes. A foam-cutting machine may "
"have XYUV axes. In LinuxCNC, the case of a XYYZ 'gantry' machine with two "
"motors for one axis is better handled by kinematics rather than by a second "
"linear axis. footnote:[If the motion of mechanical components is not "
"independent, as with hexapod machines, the RS274/NGC language and the "
"canonical machining functions will still be usable, as long as the lower "
"levels of control know how to control the actual mechanisms to produce the "
"same relative motion of tool and workpiece as would be produced by "
"independent axes.  This is called 'kinematics'.]"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Primary Linear Axes (((axes, primary linear)))"
msgstr ""

#. type: Plain text
msgid ""
"The X, Y, and Z axes produce linear motion in three mutually orthogonal "
"directions."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Secondary Linear Axes (((axes, secondary linear)))"
msgstr ""

#. type: Plain text
msgid ""
"The U, V, and W axes produce linear motion in three mutually orthogonal "
"directions. Typically, X and U are parallel, Y and V are parallel, and Z and "
"W are parallel."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Rotational Axes (((axes, rotational)))"
msgstr ""

#. type: Plain text
msgid ""
"The A, B and C axes produce angular motion (rotation). Typically, A rotates "
"around a line parallel to X, B rotates around a line parallel to Y, and C "
"rotates around a line parallel to Z."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle (((spindle)))"
msgstr ""

#. type: Plain text
msgid ""
"A CNC machine typically has a spindle which holds one cutting tool, probe, "
"or the material in the case of a lathe. The spindle may or may not be "
"controlled by the CNC software.  LinuxCNC offers support for up to 8 "
"spindles, which can be individually controlled and can run simultaneously at "
"different speeds and in different directions."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Coolant (((coolant)))"
msgstr ""

#. type: Plain text
msgid ""
"If a CNC machine has components to provide mist coolant and/or flood coolant "
"they can be controlled by G codes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Feed and Speed Override"
msgstr ""

#. type: Plain text
msgid ""
"A CNC machine can have separate feed and speed override controls, which let "
"the operator specify that the actual feed rate or spindle speed used in "
"machining at some percentage of the programmed rate."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Block Delete Switch"
msgstr ""

#. type: Plain text
msgid ""
"A CNC machine can have a block delete switch. See the <<sub:block-delete-"
"switch,Block Delete>> Section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Optional Program Stop Switch"
msgstr ""

#. type: Plain text
msgid ""
"A CNC machine can have an optional program stop switch. See the <<sub:"
"optional-program-stop,Optional Program Stop>> Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Control and Data Components"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Linear Axes"
msgstr ""

#. type: Plain text
msgid ""
"The X, Y, and Z axes form a standard right-handed coordinate system of "
"orthogonal linear axes. Positions of the three linear motion mechanisms are "
"expressed using coordinates on these axes."
msgstr ""

#. type: Plain text
msgid ""
"The U, V and W axes also form a standard right-handed coordinate system. X "
"and U are parallel, Y and V are parallel, and Z and W are parallel (when A, "
"B, and C are rotated to zero)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Rotational Axes"
msgstr ""

#. type: Plain text
msgid ""
"The rotational axes are measured in degrees as wrapped linear axes in which "
"the direction of positive rotation is counterclockwise when viewed from the "
"positive end of the corresponding X, Y, or Z-axis. By 'wrapped linear axis', "
"we mean one on which the angular position increases without limit (goes "
"towards plus infinity) as the axis turns counterclockwise and deceases "
"without limit (goes towards minus infinity) as the axis turns clockwise. "
"Wrapped linear axes are used regardless of whether or not there is a "
"mechanical limit on rotation."
msgstr ""

#. type: Plain text
msgid ""
"Clockwise or counterclockwise is from the point of view of the workpiece. If "
"the workpiece is fastened to a turntable which turns on a rotational axis, a "
"counterclockwise turn from the point of view of the workpiece is "
"accomplished by turning the turntable in a direction that (for most common "
"machine configurations) looks clockwise from the point of view of someone "
"standing next to the machine. footnote:[If the parallelism requirement is "
"violated, the system builder will have to say how to distinguish clockwise "
"from counterclockwise.]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Controlled Point"
msgstr ""

#. type: Plain text
msgid ""
"The controlled point is the point whose position and rate of motion are "
"controlled. When the tool length offset is zero (the default value), this is "
"a point on the spindle axis (often called the gauge point) that is some "
"fixed distance beyond the end of the spindle, usually near the end of a tool "
"holder that fits into the spindle. The location of the controlled point can "
"be moved out along the spindle axis by specifying some positive amount for "
"the tool length offset.  This amount is normally the length of the cutting "
"tool in use, so that the controlled point is at the end of the cutting tool. "
"On a lathe, tool length offsets can be specified for X and Z axes, and the "
"controlled point is either at the tool tip or slightly outside it (where the "
"perpendicular, axis-aligned lines touched by the 'front' and 'side' of the "
"tool intersect)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Coordinated Linear Motion"
msgstr ""

#. type: Plain text
msgid ""
"To drive a tool along a specified path, a machining center must often "
"coordinate the motion of several axes. We use the term 'coordinated linear "
"motion' to describe the situation in which, nominally, each axis moves at "
"constant speed and all axes move from their starting positions to their end "
"positions at the same time. If only the X, Y, and Z axes (or any one or two "
"of them) move, this produces motion in a straight line, hence the word "
"'linear' in the term. In actual motions, it is often not possible to "
"maintain constant speed because acceleration or deceleration is required at "
"the beginning and/or end of the motion. It is feasible, however, to control "
"the axes so that, at all times, each axis has completed the same fraction of "
"its required motion as the other axes. This moves the tool along same path, "
"and we also call this kind of motion coordinated linear motion."
msgstr ""

#. type: Plain text
msgid ""
"Coordinated linear motion can be performed either at the prevailing feed "
"rate, or at traverse rate, or it may be synchronized to the spindle "
"rotation. If physical limits on axis speed make the desired rate "
"unobtainable, all axes are slowed to maintain the desired path."
msgstr ""

#. type: Plain text
msgid "[[sub:feed-rate]](((Feed Rate)))"
msgstr ""

#. type: Plain text
msgid ""
"The rate at which the controlled point moves is nominally a steady rate "
"which may be set by the user. In the Interpreter, the feed rate is "
"interpreted as follows (unless 'inverse time feed' or 'feed per revolution' "
"modes are being used, in which case see Section <<gcode:g93-g94-g95,G93-G94-"
"G95-Mode,G93 G94 G95>>)."
msgstr ""

#. type: Plain text
msgid "If any of XYZ are moving, F is in units per minute in the XYZ"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"cartesian system, and all other axes (ABCUVW) move so as to start and\n"
"stop in coordinated fashion. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Otherwise, if any of UVW are moving, F is in units per minute in the\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"UVW cartesian system, and all other axes (ABC) move so as to start and\n"
"stop in coordinated fashion. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Otherwise, the move is pure rotary motion and the F word is in rotary\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "units in the ABC 'pseudo-cartesian' system.\n"
msgstr ""

#. type: Plain text
msgid ""
"Flood coolant and mist coolant may each be turned on independently.  The "
"RS274/NGC language turns them off together see Section <<mcode:m7-m8-m9,M7 "
"M8 M9>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Dwell (((dwell)))"
msgstr ""

#. type: Plain text
msgid ""
"A machining center may be commanded to dwell (i.e., keep all axes unmoving) "
"for a specific amount of time. The most common use of dwell is to break and "
"clear chips, so the spindle is usually turning during a dwell. Regardless of "
"the Path Control Mode (see Section <<sec:path-control-mode,Path Control>>) "
"the machine will stop exactly at the end of the previous programmed move, as "
"though it was in exact path mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Units (((units)))"
msgstr ""

#. type: Plain text
msgid ""
"Units used for distances along the X, Y, and Z axes may be measured in "
"millimeters or inches. Units for all other quantities involved in machine "
"control cannot be changed. Different quantities use different specific "
"units. Spindle speed is measured in revolutions per minute.  The positions "
"of rotational axes are measured in degrees. Feed rates are expressed in "
"current length units per minute, or degrees per minute, or length units per "
"spindle revolution, as described in Section <<gcode:g93-g94-g95,G93 G94 "
"G95>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Current Position"
msgstr ""

#. type: Plain text
msgid ""
"The controlled point is always at some location called the 'current "
"position', and the controller always knows where that is. The numbers "
"representing the current position must be adjusted in the absence of any "
"axis motion if any of several events take place:"
msgstr ""

#. type: Plain text
msgid "Length units are changed."
msgstr ""

#. type: Plain text
msgid "Tool length offset is changed."
msgstr ""

#. type: Plain text
msgid "Coordinate system offsets are changed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Selected Plane"
msgstr ""

#. type: Plain text
msgid ""
"There is always a 'selected plane', which must be the XY-plane, the YZ-"
"plane, or the XZ-plane of the machining center. The Z-axis is, of course, "
"perpendicular to the XY-plane, the X-axis to the YZ-plane, and the Y-axis to "
"the XZ-plane."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Carousel"
msgstr ""

#. type: Plain text
msgid "Zero or one tool is assigned to each slot in the tool carousel."
msgstr ""

#. type: Table
#, no-wrap
msgid "Tool Change"
msgstr ""

#. type: Plain text
msgid "A machining center may be commanded to change tools."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pallet Shuttle"
msgstr ""

#. type: Plain text
msgid "The two pallets may be exchanged by command."
msgstr ""

#. type: Plain text
msgid "[[sec:path-control-mode]](((Path Control Mode)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Path Control Mode"
msgstr ""

#. type: Plain text
msgid ""
"The machining center may be put into any one of three path control modes: "
"(1) exact stop mode, (2) exact path mode, or (3) continuous mode with "
"optional tolerance. In exact stop mode, the machine stops briefly at the end "
"of each programmed move. In exact path mode, the machine follows the "
"programmed path as exactly as possible, slowing or stopping if necessary at "
"sharp corners of the path. In continuous mode, sharp corners of the path may "
"be rounded slightly so that the feed rate may be kept up (but by no more "
"than the tolerance, if specified). See Sections <<gcode:g61,G61>> and "
"<<gcode:g64,G64>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Interpreter Interaction with Switches"
msgstr ""

#. type: Plain text
msgid ""
"The Interpreter interacts with several switches. This section describes the "
"interactions in more detail. In no case does the Interpreter know what the "
"setting of any of these switches is."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Feed and Speed Override Switches"
msgstr ""

#. type: Plain text
msgid ""
"The Interpreter will interpret RS274/NGC commands which enable 'M48' or "
"disable 'M49' the feed and speed override switches. For certain moves, such "
"as the traverse out of the end of a thread during a threading cycle, the "
"switches are disabled automatically."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC reacts to the speed and feed override settings when these switches "
"are enabled."
msgstr ""

#. type: Plain text
msgid ""
"See the <<mcode:m48-m49,M48 M49 Override>> section for more information."
msgstr ""

#. type: Plain text
msgid ""
"If the block delete switch is on, lines of G code which start with a slash "
"(the block delete character) are not interpreted. If the switch is off, such "
"lines are interpreted. Normally the block delete switch should be set before "
"starting the NGC program."
msgstr ""

#. type: Plain text
msgid ""
"If this switch is on and an M1 code is encountered, program execution is "
"paused."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tool Table"
msgstr ""

#. type: Plain text
msgid ""
"A tool table is required to use the Interpreter. The file tells which tools "
"are in which tool changer slots and what the size and type of each tool is. "
"The name of the tool table is defined in the ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[EMCIO]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# tool table file\n"
"TOOL_TABLE = tooltable.tbl\n"
msgstr ""

#. type: Plain text
msgid ""
"The default filename probably looks something like the above, but you may "
"prefer to give your machine its own tool table, using the same name as your "
"ini file, but with a tbl extension:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TOOL_TABLE = acme_300.tbl\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TOOL_TABLE = EMC-AXIS-SIM.tbl\n"
msgstr ""

#. type: Plain text
msgid ""
"For more information on the specifics of the tool table format, see the "
"<<sec:tool-table,Tool Table Format>> Section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameters"
msgstr "Parámetros"

#. type: Plain text
msgid ""
"In the RS274/NGC language view, a machining center maintains an array of "
"numerical parameters defined by a system definition "
"(RS274NGC_MAX_PARAMETERS). Many of them have specific uses especially in "
"defining coordinate systems. The number of numerical parameters can increase "
"as development adds support for new parameters. The parameter array persists "
"over time, even if the machining center is powered down.  LinuxCNC uses a "
"parameter file to ensure persistence and gives the Interpreter the "
"responsibility for maintaining the file. The Interpreter reads the file when "
"it starts up, and writes the file when it exits."
msgstr ""

#. type: Plain text
msgid "All parameters are available for use in G code programs."
msgstr ""

#. type: Plain text
msgid ""
"The format of a parameter file is shown in the following table.  The file "
"consists of any number of header lines, followed by one blank line, followed "
"by any number of lines of data. The Interpreter skips over the header lines. "
"It is important that there be exactly one blank line (with no spaces or "
"tabs, even) before the data. The header line shown in the following table "
"describes the data columns, so it is suggested (but not required) that that "
"line always be included in the header."
msgstr ""

#. type: Plain text
msgid ""
"The Interpreter reads only the first two columns of the table. The third "
"column, 'Comment', is not read by the Interpreter."
msgstr ""

#. type: Plain text
msgid ""
"Each line of the file contains the index number of a parameter in the first "
"column and the value to which that parameter should be set in the second "
"column. The value is represented as a double-precision floating point number "
"inside the Interpreter, but a decimal point is not required in the file. All "
"of the parameters shown in the following table are required parameters and "
"must be included in any parameter file, except that any parameter "
"representing a rotational axis value for an unused axis may be omitted. An "
"error will be signaled if any required parameter is missing. A parameter "
"file may include any other parameter, as long as its number is in the range "
"1 to 5400. The parameter numbers must be arranged in ascending order. An "
"error will be signaled if not. Any parameter included in the file read by "
"the Interpreter will be included in the file it writes as it exits. The "
"original file is saved as a backup file when the new file is written. "
"Comments are not preserved when the file is written."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameter File Format"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parameter Number"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parameter Value"
msgstr ""

#. type: Table
#, no-wrap
msgid "Comment"
msgstr ""

#. type: Table
#, no-wrap
msgid "5161"
msgstr ""

#. type: Table
#, no-wrap
msgid "0.0"
msgstr ""

#. type: Table
#, no-wrap
msgid "G28 Home X"
msgstr ""

#. type: Table
#, no-wrap
msgid "5162"
msgstr ""

#. type: Table
#, no-wrap
msgid "G28 Home Y"
msgstr ""

#. type: Plain text
msgid "See the <<gcode:parameters,Parameters>> section for more information."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Stepper Configuration Wizard"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is capable of controlling a wide range of machinery using many "
"different hardware interfaces."
msgstr ""

#. type: Plain text
msgid ""
"Stepconf is a program that generates configuration files for LinuxCNC for a "
"specific class of CNC machine: those that are controlled via a 'standard "
"parallel port', and controlled by signals of type 'step & direction'."
msgstr ""

#. type: Plain text
msgid "Stepconf is installed when you install LinuxCNC and is in the CNC menu."
msgstr ""

#. type: Plain text
msgid ""
"Stepconf places a file in the linuxcnc/config directory to store the choices "
"for each configuration you create.  When you change something, you need to "
"pick the file that matches your configuration name.  The file extension is ."
"stepconf."
msgstr ""

#. type: Plain text
msgid ""
"The Stepconf Wizard works best with at least 800 x 600 screen resolution."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Start Page"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Entry Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-start_en.png"
msgstr ""

#. type: Plain text
msgid "'Create New' - Creates a fresh configuration."
msgstr ""

#. type: Plain text
msgid ""
"'Modify' - Modify an existing configuration. After selecting this a file "
"picker pops up so you can select the .stepconf file for modification. If you "
"made any modifications to the main .hal or the .ini file these will be "
"lost.  Modifications to custom.hal and custom_postgui.hal will not be "
"changed by the Stepconf Wizard. Stepconf will highlight the lastconf that "
"was built."
msgstr ""

#. type: Plain text
msgid ""
"'Import' - Import a Mach configuration file and attempt to convert it to a "
"linuxcnc config file. After the import, you will go though the pages of "
"stepconf to confirm/modify the entries. The original mach xml file will not "
"be changed."
msgstr ""

#. type: Plain text
msgid ""
"These next options will be recorded in a preference file for the next run of "
"Stepconf."
msgstr ""

#. type: Plain text
msgid ""
"'Create Desktop Shortcut' - This will place a link on your desktop to the "
"files."
msgstr ""

#. type: Plain text
msgid ""
"'Create Desktop Launcher' - This will place a launcher on your desktop to "
"start your application."
msgstr ""

#. type: Plain text
msgid ""
"'Create Simulated Hardware' - This allows you to build a config for testing, "
"even if you don't have the actual hardware."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic Information"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Basic Information Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-base_en.png"
msgstr ""

#. type: Plain text
msgid ""
"'Machine Name' - Choose a name for your machine. Use only uppercase letters, "
"lowercase letters, digits, - and _."
msgstr ""

#. type: Plain text
msgid ""
"'Axis Configuration' - Choose XYZ (Mill), XYZA (4-axis mill) or XZ (Lathe)."
msgstr ""

#. type: Plain text
msgid ""
"'Machine Units' - Choose Inch or mm. All subsequent entries will be in the "
"chosen units. Changing this also changes the default values in the Axes "
"section.  If you change this after selecting values in any of the axes "
"sections, they will be over-written by the default values of the selected "
"units."
msgstr ""

#. type: Plain text
msgid ""
"'Driver Type' - If you have one of the stepper drivers listed in the pull "
"down box, choose it. Otherwise, select 'Other' and find the timing values in "
"your driver's data sheet and enter them as 'nano seconds' in the 'Driver "
"Timing Settings'. If the data sheet gives a value in microseconds, multiply "
"by 1000.  For example, enter 4.5us as 4500ns."
msgstr ""

#. type: Plain text
msgid ""
"A list of some popular drives, along with their timing values, is on the "
"LinuxCNC.org Wiki under http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"Stepper_Drive_Timing[Stepper Drive Timing]."
msgstr ""

#. type: Plain text
msgid ""
"Additional signal conditioning or isolation such as optocouplers and RC "
"filters on break out boards can impose timing constraints of their own, in "
"addition to those of the driver. You may find it necessary to add some time "
"to the drive requirements to allow for this."
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC Configuration Selector has configs for Sherline already "
"configured."
msgstr ""

#. type: Plain text
msgid ""
"'Step Time' - How long the step pulse is 'on' in nano seconds. If your not "
"sure about this setting a value of 20,000 will work with most drives."
msgstr ""

#. type: Plain text
msgid ""
"'Step Space' - Minimum time between step pulses in nano seconds. If your not "
"sure about this setting a value of 20,000 will work with most drives."
msgstr ""

#. type: Plain text
msgid ""
"'Direction Hold' - How long the direction pin is held after a change of "
"direction in nanoseconds. If your not sure about this setting a value of "
"20,000 will work with most drives."
msgstr ""

#. type: Plain text
msgid ""
"'Direction Setup' - How long before a direction change after the last step "
"pulse in nanoseconds.  If your not sure about this setting a value of 20,000 "
"will work with most drives."
msgstr ""

#. type: Plain text
msgid ""
"'One / Two Parport' - Select how many parallel port are to be configured."
msgstr ""

#. type: Plain text
msgid ""
"'Base Period Maximum Jitter' - Enter the result of the Latency Test here.  "
"To run a latency test press the 'Test Base Period Jitter' button. See the "
"<<latency-test,Latency Test>> section for more details."
msgstr ""

#. type: Plain text
msgid ""
"'Max Step Rate' -Stepconf automatically calculates the Max Step Rate based "
"on the driver characteristics entered and the latency test result."
msgstr ""

#. type: Plain text
msgid ""
"'Min Base Period' - Stepconf automatically determines the Min Base Period "
"based on the driver characteristics entered and latency test result."
msgstr ""

#. type: Plain text
msgid "[[latency-test]](((Latency Test)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Latency Test"
msgstr ""

#. type: Plain text
msgid ""
"While the test is running, you should 'abuse' the computer. Move windows "
"around on the screen. Surf the web. Copy some large files around on the "
"disk. Play some music. Run an OpenGL program such as glxgears. The idea is "
"to put the PC through its paces while the latency test checks to see what "
"the worst case numbers are.  Run the test at least a few minutes. The longer "
"you run the test the better it will be at catching events that might occur "
"at less frequent intervals. This is a test for your computer only, so no "
"hardware needs to be connected to run the test."
msgstr ""

#. type: Plain text
msgid "Do not attempt run LinuxCNC while the latency test is running."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/latency-test_en.png"
msgstr ""

#. type: Plain text
msgid ""
"Latency is how long it takes the PC to stop what it is doing and respond to "
"an external request. In our case, the request is the periodic 'heartbeat' "
"that serves as a timing reference for the step pulses. The lower the "
"latency, the faster you can run the heartbeat, and the faster and smoother "
"the step pulses will be."
msgstr ""

#. type: Plain text
msgid ""
"Latency is far more important than CPU speed. The CPU isn't the only factor "
"in determining latency. Motherboards, video cards, USB ports, SMI issues, "
"and a number of other things can hurt the latency."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Troubleshooting SMI Issues (LinuxCNC.org Wiki)"
msgstr ""

#. type: delimited block *
msgid "Fixing Realtime problems caused by SMI on Ubuntu"
msgstr ""

#. type: delimited block *
msgid "http://wiki.linuxcnc.org/cgi-bin/wiki.pl?FixingSMIIssues"
msgstr ""

#. type: Plain text
msgid ""
"The important numbers are the 'max jitter'. In the example above 9075 "
"nanoseconds, or 9.075 microseconds, is the highest jitter.  Record this "
"number, and enter it in the Base Period Maximum Jitter box."
msgstr ""

#. type: Plain text
msgid ""
"If your Max Jitter number is less than about 15-20 microseconds (15000-20000 "
"nanoseconds), the computer should give very nice results with software "
"stepping. If the max latency is more like 30-50 microseconds, you can still "
"get good results, but your maximum step rate might be a little "
"disappointing, especially if you use microstepping or have very fine pitch "
"leadscrews. If the numbers are 100 us or more (100,000 nanoseconds), then "
"the PC is not a good candidate for software stepping. Numbers over 1 "
"millisecond (1,000,000 nanoseconds) mean the PC is not a good candidate for "
"LinuxCNC, regardless of whether you use software stepping or not."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Parallel Port Setup"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parallel Port Setup Page"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Parallel Port 1 Setup Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-parallel-1_en.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"You may specify the address as a hexadecimal (often 0x378) or as linux's default\n"
" port number (probably 0)\n"
msgstr ""

#. type: Plain text
msgid ""
"For each pin, choose the signal which matches your parallel port pinout.  "
"Turn on the 'invert' check box if the signal is inverted (0V for true/"
"active, 5V for false/inactive)."
msgstr ""

#. type: Plain text
msgid ""
"'Output pinout presets' - Automatically set pins 2 through 9 according to "
"the Sherline standard (Direction on pins 2, 4, 6, 8) or the Xylotex standard "
"(Direction on pins 3, 5, 7, 9)."
msgstr ""

#. type: Plain text
msgid ""
"'Inputs and Outputs' - If the input or output is not used set the option to "
"'Unused'."
msgstr ""

#. type: Plain text
msgid ""
"'External E Stop' - This can be selected from an input pin drop down box.  A "
"typical E Stop chain uses all normally closed contacts."
msgstr ""

#. type: Plain text
msgid ""
"'Homing & Limit Switches' - These can be selected from an input pin drop "
"down box for most configurations."
msgstr ""

#. type: Plain text
msgid ""
"'Charge Pump' - If your driver board requires a charge pump signal select "
"Charge Pump from the drop down list for the output pin you wish to connect "
"to your charge pump input. The charge pump output is connected to the base "
"thread by Stepconf. The charge pump output will be about 1/2 of the maximum "
"step rate shown on the Basic Machine Configuration page."
msgstr ""

#. type: Plain text
msgid ""
"'Plasma Arc Voltage' - If you require a Mesa THCAD to input a plasma arc "
"voltage then select Plasma Arc Voltage from the list of output pins.  This "
"will enable a THCAD page during the setup procedure for the entry of the "
"card parameters."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Parallel Port 2 Setup"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Parallel Port 2 Setup Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-parallel-2_en.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The second Parallel port (if selected) can be configured and It's pins\n"
"assigned on this page. +\n"
"No step and direction signals can be selected. +\n"
"You may select in or out to maximizes the number of input/output pins that\n"
"are available. +\n"
"You may specify the address as a hexadecimal (often 0x378) or as linux's default\n"
" port number (probably 1).\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Axis Configuration"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Axis Configuration Page"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Axis X Configuration Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-axis-x_en.png"
msgstr ""

#. type: Plain text
msgid ""
"'Motor Steps Per Revolution' - The number of full steps per motor "
"revolution.  If you know how many degrees per step the motor is (e.g., 1.8 "
"degree), then divide 360 by the degrees per step to find the number of steps "
"per motor revolution."
msgstr ""

#. type: Plain text
msgid ""
"'Driver Microstepping' - The amount of microstepping performed by the "
"driver.  Enter '2' for half-stepping."
msgstr ""

#. type: Plain text
msgid ""
"'Pulley Ratio' - If your machine has pulleys between the motor and "
"leadscrew, enter the ratio here. If not, enter '1:1'."
msgstr ""

#. type: Plain text
msgid ""
"'Leadscrew Pitch' - Enter the pitch of the leadscrew here. If you chose "
"'Inch' units, enter the number of threads per inch If you chose 'mm' units, "
"enter the number of millimeters per revolution (e.g., enter 2 for 2mm/rev).  "
"If the machine travels in the wrong direction, enter a negative number here "
"instead of a positive number, or invert the direction pin for the axis."
msgstr ""

#. type: Plain text
msgid ""
"'Maximum Velocity' -Enter the maximum velocity for the axis in units per "
"second."
msgstr ""

#. type: Plain text
msgid ""
"'Maximum Acceleration' - The correct values for these items can only be "
"determined through experimentation. See <<sub:finding-maximum-velocity,"
"Finding Maximum Velocity>> to set the speed and <<sub:finding-maximum-"
"acceleration,Finding Maximum Acceleration>> to set the acceleration."
msgstr ""

#. type: Plain text
msgid ""
"'Home Location' - The position the machine moves to after completing the "
"homing procedure for this axis. For machines without home switches, this is "
"the location the operator manually moves the machine to before pressing the "
"Home button. If you combine the home and limit switches you must move off of "
"the switch to the home position or you will get a joint limit error."
msgstr ""

#. type: Plain text
msgid ""
"'Table Travel' - The range of travel for that axis based on the machine "
"origin. The home location must be inside the 'Table Travel' and not equal to "
"one of the Table Travel values."
msgstr ""

#. type: Plain text
msgid ""
"'Home Switch Location' - The location at which the home switch trips or "
"releases relative to the machine origin. This item and the two below only "
"appear when Home Switches were chosen in the Parallel Port Pinout. If you "
"combine home and limit switches the home switch location can not be the same "
"as the home position or you will get a joint limit error."
msgstr ""

#. type: Plain text
msgid ""
"'Home Search Velocity' - The velocity to use when searching for the home "
"switch. If the switch is near the end of travel, this velocity must be chosen"
msgstr ""

#. type: Plain text
msgid ""
"so that the axis can decelerate to a stop before hitting the end of travel.  "
"If the switch is only closed for a short range of travel (instead of being "
"closed from its trip point to one end of travel), this velocity must be "
"chosen so that the axis can decelerate to a stop before the switch opens "
"again, and homing must always be started from the same side of the switch.  "
"If the machine moves the wrong direction at the beginning of the homing "
"procedure, negate the value of 'Home Search Velocity'."
msgstr ""

#. type: Plain text
msgid ""
"'Home Latch Direction' - Choose 'Same' to have the axis back off the switch, "
"then approach it again at a very low speed. The second time the switch "
"closes, the home position is set. Choose 'Opposite' to have the axis back "
"off the switch and when the switch opens, the home position is set."
msgstr ""

#. type: Plain text
msgid ""
"'Time to accelerate to max speed' - Time to reach maximum speed calculated "
"from 'Max Acceleration' and 'Max Velocity'."
msgstr ""

#. type: Plain text
msgid ""
"'Distance to accelerate to max speed' - Distance to reach maximum speed from "
"a standstill."
msgstr ""

#. type: Plain text
msgid ""
"'Pulse rate at max speed' - Information computed based on the values entered "
"above. The greatest 'Pulse rate at max speed' determines the 'BASE_PERIOD'.  "
"Values above 20000Hz may lead to slow response time or even lockups (the "
"fastest usable pulse rate varies from computer to computer)"
msgstr ""

#. type: Plain text
msgid ""
"'Axis SCALE' - The number that will be used in the ini file [SCALE] "
"setting.  This is how many steps per user unit."
msgstr ""

#. type: Plain text
msgid ""
"'Test this axis' - This will open a window to allow testing for each axis.  "
"This can be used after filling out all the information for this axis."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Test This Axis"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-x-test_en.png"
msgstr ""

#. type: Plain text
msgid ""
"Test this axis is a basic tester that only outputs step and direction "
"signals to try different values for acceleration and velocity."
msgstr ""

#. type: Plain text
msgid ""
"[IMPORTANT] In order to use test this axis you have to manually enable the "
"axis if this is required. If your driver has a charge pump you will have to "
"bypass it.  Test this axis does not react to limit switch inputs. Use with "
"caution."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Finding Maximum Velocity"
msgstr ""

#.  comment out latexmath until a fix is found for the html docs
#.  (e.g., latexmath:[ 2 in/s^2 ] or latexmath:[ 50 mm/s^2 ])
#. type: Plain text
msgid ""
"Begin with a low Acceleration (for example, *+2 inches/s^2^+* or *+50 mm/s^2^"
"+*)  and the velocity you hope to attain.  Using the buttons provided, jog "
"the axis to near the center of travel.  Take care because with a low "
"acceleration value, it can take a surprising distance for the axis to "
"decelerate to a stop."
msgstr ""

#.  latexmath:[ d = 0.5 * v * v/a ]
#. type: Plain text
msgid ""
"After gaging the amount of travel available, enter a safe distance in Test "
"Area, keeping in mind that after a stall the motor may next start to move in "
"an unexpected direction.  Then click Run.  The machine will begin to move "
"back and forth along this axis.  In this test, it is important that the "
"combination of Acceleration and Test Area allow the machine to reach the "
"selected Velocity and 'cruise' for at least a short distance -- the more "
"distance, the better this test is.  The formula *+d = 0.5 * v * v/a+* gives "
"the minimum distance required to reach the specified velocity with the given "
"acceleration.  If it is convenient and safe to do so, push the table against "
"the direction of motion to simulate cutting forces.  If the machine stalls, "
"reduce the speed and start the test again."
msgstr ""

#. type: Plain text
msgid ""
"If the machine did not obviously stall, click the 'Run' button off. The axis "
"now returns to the position where it started. If the position is incorrect, "
"then the axis stalled or lost steps during the test. Reduce Velocity and "
"start the test again."
msgstr ""

#. type: Plain text
msgid ""
"If the machine doesn't move, stalls, or loses steps, no matter how low you "
"turn Velocity, verify the following:"
msgstr ""

#. type: Plain text
msgid "Correct step waveform timings"
msgstr ""

#. type: Plain text
msgid "Correct pinout, including 'Invert' on step pins"
msgstr ""

#. type: Plain text
msgid "Correct, well-shielded cabling"
msgstr ""

#. type: Plain text
msgid "Physical problems with the motor, motor coupling, leadscrew, etc."
msgstr ""

#. type: Plain text
msgid ""
"Once you have found a speed at which the axis does not stall or lose steps "
"during this testing procedure, reduce it by 10% and use that as the axis "
"'Maximum Velocity'."
msgstr ""

#. type: Plain text
msgid "[[sub:finding-maximum-acceleration]](((Finding Maximum Acceleration)))"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Finding Maximum Acceleration"
msgstr ""

#. type: Plain text
msgid ""
"With the Maximum Velocity you found in the previous step, enter the "
"acceleration value to test.  Using the same procedure as above, adjust the "
"Acceleration value up or down as necessary.  In this test, it is important "
"that the combination of Acceleration and Test Area allow the machine to "
"reach the selected Velocity.  Once you have found a value at which the axis "
"does not stall or lose steps during this testing procedure, reduce it by 10% "
"and use that as the axis Maximum Acceleration."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Spindle Configuration"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Spindle Configuration Page"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-spindle_en.png"
msgstr ""

#. type: Plain text
msgid ""
"This page only appears when 'Spindle PWM' is chosen in the 'Parallel Port "
"Pinout' page for one of the outputs."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Speed Control"
msgstr ""

#. type: Plain text
msgid ""
"If 'Spindle PWM' appears on the pinout, the following information should be "
"entered:"
msgstr ""

#. type: Plain text
msgid ""
"'PWM Rate' - The 'carrier frequency' of the PWM signal to the spindle. Enter "
"'0' for PDM mode, which is useful for generating an analog control voltage.  "
"Refer to the documentation for your spindle controller for the appropriate "
"value."
msgstr ""

#. type: Plain text
msgid ""
"'Speed 1 and 2, PWM 1 and 2' - The generated configuration file uses a "
"simple linear relationship to determine the PWM value for a given RPM value. "
"If the values are not known, they can be determined. For more information "
"see <<sub:determining-spindle-calibration,Determining Spindle Calibration>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle-synchronized motion"
msgstr ""

#. type: Plain text
msgid ""
"When the appropriate signals from a spindle encoder are connected to "
"LinuxCNC via HAL, LinuxCNC supports lathe threading.  These signals are:"
msgstr ""

#. type: Plain text
msgid ""
"'Spindle Index' - Is a pulse that occurs once per revolution of the spindle."
msgstr ""

#. type: Plain text
msgid ""
"'Spindle Phase A' - This is a pulse that occurs in multiple equally-spaced "
"locations as the spindle turns."
msgstr ""

#. type: Plain text
msgid ""
"'Spindle Phase B (optional)' - This is a second pulse that occurs, but with "
"an offset from Spindle Phase A. The advantages to using both A and B are "
"direction sensing, increased noise immunity, and increased resolution."
msgstr ""

#. type: Plain text
msgid ""
"If 'Spindle Phase A' and 'Spindle Index' appear on the pinout, the following "
"information should be entered:"
msgstr ""

#. type: Plain text
msgid ""
"'Use Spindle-At-Speed' - With encoder feedback one can choose to have "
"linuxcnc"
msgstr ""

#. type: Plain text
msgid ""
"wait for the spindle to reach the commanded speed before feed moves. Select "
"this option and set the 'close enough' scale."
msgstr ""

#. type: Plain text
msgid ""
"'Speed Display Filter Gain' - Setting for adjusting the stability of the "
"visual spindle speed display."
msgstr ""

#. type: Plain text
msgid ""
"'Cycles per revolution' - The number of cycles of the 'Spindle A' signal "
"during one revolution of the spindle. This option is only enabled when an "
"input has been set to 'Spindle Phase A'"
msgstr ""

#. type: Plain text
msgid ""
"'Maximum speed in thread' - The maximum spindle speed used in threading.  "
"For a high spindle RPM or a spindle encoder with high resolution, a low "
"value of 'BASE_PERIOD' is required."
msgstr ""

#. type: Plain text
msgid ""
"[[sub:determining-spindle-calibration]](((Determining Spindle Calibration)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Determining Spindle Calibration"
msgstr ""

#. type: Plain text
msgid "Enter the following values in the Spindle Configuration page:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Speed 1:"
msgstr ""

#. type: Table
#, no-wrap
msgid "0"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM 1:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Speed 2:"
msgstr ""

#. type: Table
#, no-wrap
msgid "1000"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM 2:"
msgstr ""

#. type: Table
#, no-wrap
msgid "1"
msgstr ""

#. type: Plain text
msgid ""
"Finish the remaining steps of the configuration process, then launch "
"LinuxCNC with your configuration.  Turn the machine on and select the MDI "
"tab.  Start the spindle turning by entering: 'M3 S100'.  Change the spindle "
"speed by entering a different S-number: 'S800'.  Valid numbers (at this "
"point) range from 1 to 1000."
msgstr ""

#. type: Plain text
msgid ""
"For two different S-numbers, measure the actual spindle speed in RPM.  "
"Record the S-numbers and actual spindle speeds. Run Stepconf again.  For "
"'Speed' enter the measured speed, and for 'PWM' enter the S-number divided "
"by 1000."
msgstr ""

#. type: Plain text
msgid ""
"Because most spindle drivers are somewhat nonlinear in their response "
"curves, it is best to:"
msgstr ""

#. type: Plain text
msgid "Make sure the two calibration speeds are not too close together in RPM"
msgstr ""

#. type: Plain text
msgid ""
"Make sure the two calibration speeds are in the range of speeds you will "
"typically use while milling"
msgstr ""

#. type: Plain text
msgid ""
"For instance, if your spindle will go from 0 RPM to 8000 RPM, but you "
"generally use speeds from 400 RPM (10%) to 4000 RPM (100%), then find the "
"PWM values that give 1600 RPM (40%) and 2800 RPM (70%)."
msgstr ""

#. type: SH
#, no-wrap
msgid "Options"
msgstr "Opciones"

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Options Configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepconf-options_en.png"
msgstr ""

#. type: Plain text
msgid ""
"'Include Halui' - This will add the Halui user interface component. See the "
"<<cha:hal-user-interface,HALUI Chapter>> for more information on."
msgstr ""

#. type: Plain text
msgid ""
"'Include pyVCP' - This option adds the pyVCP panel base file or a sample "
"file to work on. See the <<cha:pyvcp,PyVCP Chapter>> for more information."
msgstr ""

#. type: Plain text
msgid ""
"'Include ClassicLadder PLC' - This option will add the ClassicLadder PLC "
"(Programmable Logic Controller). See the <<cha:classicladder,Classicladder "
"Chapter>> for more information."
msgstr ""

#. type: Plain text
msgid ""
"'Onscreen Prompt For Tool Change' - If this box is checked, LinuxCNC will "
"pause and prompt you to change the tool when 'M6' is encountered. This "
"feature is usually only useful if you have presettable tools."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Machine Configuration Complete"
msgstr ""

#. type: Plain text
msgid ""
"Click 'Apply' to write the configuration files.  Later, you can re-run this "
"program and tweak the settings you entered before."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Axis Travel and Home"
msgstr ""

#. type: Plain text
msgid ""
"For each axis, there is a limited range of travel.  The physical end of "
"travel is called the 'hard stop'."
msgstr ""

#. type: Plain text
msgid ""
"Before the 'hard stop' there is a 'limit switch'.  If the limit switch is "
"encountered during normal operation, LinuxCNC shuts down the motor "
"amplifier.  The distance between the 'hard stop' and 'limit switch' must be "
"long enough to allow an unpowered motor to coast to a stop."
msgstr ""

#. type: Plain text
msgid ""
"Before the 'limit switch' there is a 'soft limit'.  This is a limit enforced "
"in software after homing.  If a MDI command or g code program would pass the "
"soft limit, it is not executed.  If a jog would pass the soft limit, it is "
"terminated at the soft limit."
msgstr ""

#. type: Plain text
msgid ""
"The 'home switch' can be placed anywhere within the travel (between hard "
"stops).  As long as external hardware does not deactivate the motor "
"amplifiers when the limit switch is reached, one of the limit switches can "
"be used as a home switch."
msgstr ""

#. type: Plain text
msgid ""
"The 'zero position' is the location on the axis that is 0 in the machine "
"coordinate system.  Usually the 'zero position' will be within the 'soft "
"limits'.  On lathes, constant surface speed mode requires that machine 'X=0' "
"correspond to the center of spindle rotation when no tool offset is in "
"effect."
msgstr ""

#. type: Plain text
msgid ""
"The 'home position' is the location within travel that the axis will be "
"moved to at the end of the homing sequence.  This value must be within the "
"'soft limits'.  In particular, the 'home position' should never be exactly "
"equal to a 'soft limit'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Operating without Limit Switches"
msgstr ""

#. type: Plain text
msgid ""
"A machine can be operated without limit switches. In this case, only the "
"soft limits stop the machine from reaching the hard stop.  Soft limits only "
"operate after the machine has been homed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Operating without Home Switches[[sub:Operating-without-Home]]"
msgstr ""

#. type: Plain text
msgid "(((Operating without Home Switches)))"
msgstr ""

#. type: Plain text
msgid ""
"A machine can be operated without home switches.  If the machine has limit "
"switches, but no home switches, it is best to use a limit switch as the home "
"switch (e.g., choose 'Minimum Limit + Home X' in the pinout).  If the "
"machine has no switches at all, or the limit switches cannot be used as home "
"switches for another reason, then the machine must be homed 'by eye' or by "
"using match marks. Homing by eye is not as repeatable as homing to switches, "
"but it still allows the soft limits to be useful."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Home and Limit Switch wiring options"
msgstr ""

#. type: Plain text
msgid ""
"The ideal wiring for external switches would be one input per switch.  "
"However, the PC parallel port only offers a total of 5 inputs, while there "
"are as many as 9 switches on a 3-axis machine.  Instead, multiple switches "
"are wired together in various ways so that a smaller number of inputs are "
"required."
msgstr ""

#. type: Plain text
msgid ""
"The figures below show the general idea of wiring multiple switches to a "
"single input pin.  In each case, when one switch is actuated, the value seen "
"on INPUT goes from logic HIGH to LOW.  However, LinuxCNC expects a TRUE "
"value when a switch is closed, so the corresponding 'Invert' box must be "
"checked on the pinout configuration page.  The pull up resistor show in the "
"diagrams pulls the input high until the connection to ground is made and "
"then the input goes low.  Otherwise the input might float between on and off "
"when the circuit is open.  Typically for a parallel port you might use 47k."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Normally Closed Switches"
msgstr ""

#. type: Plain text
msgid "Wiring N/C switches in series (simplified diagram)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/switch-nc-series_en.svg"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Normally Open Switches"
msgstr ""

#. type: Plain text
msgid "Wiring N/O switches in parallel (simplified diagram)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/switch-no-parallel_en.svg"
msgstr ""

#. type: Plain text
msgid "The following combinations of switches are permitted in Stepconf:"
msgstr ""

#. type: Plain text
msgid "Combine home switches for all axes"
msgstr ""

#. type: Plain text
msgid "Combine limit switches for all axes"
msgstr ""

#. type: Plain text
msgid "Combine both limit switches for one axis"
msgstr ""

#. type: Plain text
msgid "Combine both limit switches and the home switch for one axis"
msgstr ""

#. type: Plain text
msgid "Combine one limit switch and the home switch for one axis"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Mesa Configuration Wizard"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf is made to help build configurations that utilize specific Mesa "
"'Anything I/O' products."
msgstr ""

#. type: Plain text
msgid ""
"It can configure closed loop servo systems or hardware stepper systems.  It "
"uses a similar 'wizard' approach as Stepconf (used for software stepping, "
"parallel port driven systems)."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"PNCconf is still in a development stage (Beta) so there are some bugs and\n"
" lacking features.\n"
"Please report bugs and suggestions to the LinuxCNC forum page or mail-list.\n"
msgstr ""

#. type: Plain text
msgid "There are two trains of thought when using PNCconf:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"One is to use PNCconf to always configure your system - if you decide to change \n"
"options, reload PNCconf and allow it to configure the new options. This will \n"
"work well if your machine is fairly standard and you can use custom files to add\n"
" non standard features. PNCconf tries to work with you in this regard.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The other is to use PNCconf to build a config that is close to what you want and\n"
" then hand edit everything to tailor it to your needs. This would be the choice \n"
"if you need extensive modifications beyond PNCconf's scope or just want to \n"
"tinker with / learn about LinuxCNC\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"You navigate the wizard pages with the forward, back, and cancel buttons there \n"
"is also a help button that gives some help information about the pages, diagrams\n"
" and an output page.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"PNCconf's help page should have the most up to date info and has additional\n"
" details.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Step by Step Instructions"
msgstr ""

#. type: Block title
#, no-wrap
msgid "PnCConf Splash"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "PnCConf Configuration Wizard"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-splash.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Create or Edit"
msgstr ""

#. type: Plain text
msgid ""
"This allows you to select a previously saved configuration or create a new "
"one.  If you pick 'Modify a configuration' and then press next a file "
"selection box will show. Pncconf preselects your last saved file. Choose the "
"the config you wish to edit. If you made any changes to the main hal or ini "
"files *Pncconf will over write* those files and those changes will be lost. "
"Some files will not be over written and Pncconf places a note in those "
"files. It also allows you to select desktop shortcut / launcher options. A "
"desktop shortcut will place a folder icon on the desktop that points to your "
"new configuration files.  Otherwise you would have to look in your home "
"folder under linuxcnc/configs."
msgstr ""

#. type: Plain text
msgid ""
"A Desktop launcher will add an icon to the desktop for starting your config "
"directly. You can also launch it from the main menu by using the "
"Configuration Selector 'LinuxCNC' found in CNC menu and selecting your "
"config name."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic Machine Information"
msgstr ""

#. type: Block title
#, no-wrap
msgid "PnCConf Basic"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "PnCConf Basic machine information"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-basic.png"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Machine Basics"
msgstr ""

#. type: Plain text
msgid ""
"If you use a name with spaces PNCconf will replace the spaces with "
"underscore (as a loose rule Linux doesn't like spaces in names)  Pick an "
"axis configuration - this selects what type of machine you are building and "
"what axes are available. The Machine units selector allows data entry of "
"metric or imperial units in the following pages."
msgstr ""

#. type: Plain text
msgid ""
"Defaults are not converted when using metric so make sure they are sane "
"values!"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Computer Response Time"
msgstr ""

#. type: Plain text
msgid ""
"The servo period sets the heart beat of the system. Latency refers to the "
"amount of time the computer can be longer then that period. Just like a "
"railroad, LinuxCNC requires everything on a very tight and consistent time "
"line or bad things happen. LinuxCNC requires and uses a 'real time' "
"operating system, which just means it has a low latency ( lateness ) "
"response time when LinuxCNC requires its calculations and when doing "
"LinuxCNCs calculations it cannot be interrupted by lower priority requests "
"(such as user input to screen buttons or drawing etc)."
msgstr ""

#. type: Plain text
msgid ""
"Testing the latency is very important and a key thing to check early. "
"Luckily by using the Mesa card to do the work that requires the fastest "
"response time (encoder counting and PWM generation) we can endure a lot more "
"latency then if we used the parallel port for these things. The standard "
"test in LinuxCNC is checking the BASE period latency (even though we are not "
"using a base period). If you press the 'test base period jitter' button, "
"this launches the latency test window ( you can also load this directly from "
"the applications/cnc panel ). The test mentions to run it for a few minutes "
"but the longer the better. consider 15 minutes a bare minimum and overnight "
"even better. At this time use the computer to load things, use the net, use "
"USB etc we want to know the worst case latency and to find out if any "
"particular activity hurts our latency. We need to look at base period "
"jitter.  Anything under 20000 is excellent - you could even do fast software "
"stepping with the machine 20000 - 50000 is still good for software stepping "
"and fine for us.  50000 - 100000 is really not that great but could still be "
"used with hardware cards doing the fast response stuff.  So anything under "
"100000 is usable to us.  If the latency is disappointing or you get a bad "
"hiccup periodically you may still be able to improve it."
msgstr ""

#. type: Plain text
msgid ""
"There is a user compiled list of equipment and the latency obtained on the "
"LinuxCNC wiki : http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Latency-Test Please "
"consider adding your info to the list. Also on that page are links to info "
"about fixing some latency problems."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Now we are happy with the latency and \n"
"must pick a servo period. In most cases a servo period of 1000000 ns is\n"
"fine ( that gives a 1 kHz servo calculation rate - 1000 calculations a second) \n"
"if you are building a closed loop servo system that controls torque (current) \n"
"rather then velocity (voltage) a faster rate would be better - something like \n"
"200000 (5 kHz calculation rate). The problem with lowering the servo rate is \n"
"that it leaves less time available for the computer to do other things besides \n"
"LinuxCNC's calculations. Typically the display (GUI) becomes less responsive. You\n"
" must decide on a balance. Keep in mind that if you tune your closed loop servo\n"
"system then change the servo period you probably will need to tune them again.\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "I/O Control Ports/Boards"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf is capable of configuring machines that have up to two Mesa boards "
"and three parallel ports. Parallel ports can only be used for simple low "
"speed (servo rate) I/O."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Mesa"
msgstr ""

#. type: Plain text
msgid ""
"You must choose at least one Mesa board as PNCconf will not configure the "
"parallel ports to count encoders or output step or PWM signals.  The mesa "
"cards available in the selection box are based on what PNCconf finds for "
"firmware on the systems. There are options to add custom firmware and/or "
"'blacklist' (ignore) some firmware or boards using a preference file.  If no "
"firmware is found PNCconf will show a warning and use internal sample "
"firmware - no testing will be possible. One point to note is that if you "
"choose two PCI Mesa cards there currently is no way to predict which card is "
"0 and which is 1 - you must test - moving the cards could change their "
"order. If you configure with two cards both cards must be installed for "
"tests to function."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Parallel Port"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Up to 3 parallel ports (referred to as parports) can be used as simple I/O. You \n"
"must set the address of the parport. You can either enter the Linux parallel \n"
"port numbering system (0,1,or 2) or enter the actual address. The address for an\n"
" on board parport is often 0x0278 or 0x0378 (written in hexadecimal) but can be \n"
"found in the BIOS page. The BIOS page is found when you first start your \n"
"computer you must press a key to enter it (such as F2). On the BIOS page you can\n"
" find the parallel port address and set the mode such as SPP, EPP, etc on some\n"
"computers this info is displayed for a few seconds during start up. For PCI \n"
"parallel port cards the address can be found by pressing the 'parport address \n"
"search' button. This pops up the help output page with a list of all the PCI \n"
"devices that can be found. In there should be a reference to a parallel port \n"
"device with a list of addresses. One of those addresses should work. Not all\n"
"PCI parallel ports work properly. Either type can be selected as 'in' (maximum \n"
"amount of input pins) or 'out' (maximum amount of output pins)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "GUI Front-end list"
msgstr ""

#. type: Plain text
msgid ""
"This specifies the graphical display screens LinuxCNC will use.  Each one "
"has different option."
msgstr ""

#. type: TH
#, no-wrap
msgid "AXIS"
msgstr ""

#. type: Plain text
msgid "fully supports lathes."
msgstr ""

#. type: Plain text
msgid "is the most developed and used front-end"
msgstr ""

#. type: Plain text
msgid "is designed to be used with mouse and keyboard"
msgstr ""

#. type: Plain text
msgid "is tkinter based so integrates PYVCP (python based virtual control"
msgstr ""

#. type: Plain text
msgid "panels)  naturally."
msgstr ""

#. type: Plain text
msgid "has a 3D graphical window."
msgstr ""

#. type: Plain text
msgid "allows VCP integrated on the side or in center tab"
msgstr ""

#. type: Plain text
msgid "TkLinuxCNC"
msgstr ""

#. type: Plain text
msgid "hi contrast bright blue screen"
msgstr ""

#. type: Plain text
msgid "separate graphics window"
msgstr ""

#. type: Plain text
msgid "no VCP integration"
msgstr ""

#. type: TH
#, no-wrap
msgid "TOUCHY"
msgstr ""

#. type: Plain text
msgid "Touchy was designed to be used with a touchscreen, some minimal"
msgstr ""

#. type: Plain text
msgid "physical switches and a MPG wheel."
msgstr ""

#. type: Plain text
msgid "requires cycle-start, abort, and single-step signals and buttons"
msgstr ""

#. type: Plain text
msgid "It also requires shared axis MPG jogging to be selected."
msgstr ""

#. type: Plain text
msgid ""
"is GTK based so integrates GLADE VCP (virtual control panels) naturally."
msgstr ""

#. type: Plain text
msgid "allows VCP panels integrated in the center Tab"
msgstr ""

#. type: Plain text
msgid "has no graphical window"
msgstr ""

#. type: Plain text
msgid "look can be changed with custom themes"
msgstr ""

#. type: Title =
#, no-wrap
msgid "QtPlasmaC"
msgstr ""

#. type: Plain text
msgid "fully featured plasmac configuration based on the QtVCP infrastructure."
msgstr ""

#. type: Plain text
msgid "mouse/keybord operation or touchscreen operation"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "External Configuration"
msgstr ""

#. type: Plain text
msgid ""
"This page allows you to select external controls such as for jogging or "
"overrides."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GUI External"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-external.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"If you select a Joystick for jogging, You will need it always connected for LinuxCNC \n"
"to load. To use the analog sticks for useful jogging you probably need to add \n"
"some custom HAL code. MPG jogging requires a pulse generator connected to a MESA\n"
" encoder counter. Override controls can either use a pulse generator (MPG) or \n"
"switches (such as a rotary dial). External buttons might be used with a switch \n"
"based OEM joystick.\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Joystick jogging"
msgstr ""

#. type: Plain text
msgid ""
"  Requires a custom 'device rule' to be installed in the system. This is a "
"file that LinuxCNC uses to connect to LINUX's device list. PNCconf will help "
"to make this file."
msgstr ""

#. type: Plain text
msgid ""
"'Search for device rule' will search the system for rules, you can use this "
"to find the name of devices you have already built with PNCconf."
msgstr ""

#. type: Plain text
msgid ""
"'Add a device rule' will allow you to configure a new device by following "
"the prompts. You will need your device available."
msgstr ""

#. type: Plain text
msgid ""
"'test device' allows you to load a device, see its pin names and check its "
"functions with halmeter."
msgstr ""

#. type: Plain text
msgid "joystick jogging uses HALUI and hal_input components."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "External buttons"
msgstr ""

#. type: Plain text
msgid ""
"  allows jogging the axis with simple buttons at a specified jog rate. "
"Probably best for rapid jogging."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "MPG Jogging"
msgstr ""

#. type: Plain text
msgid "Allows you to use a Manual Pulse Generator to jog the machine's axis."
msgstr ""

#. type: Plain text
msgid ""
"MPG's are often found on commercial grade machines. They output quadrature "
"pulses that can be counted with a MESA encoder counter. PNCconf allows for "
"an MPG per axis or one MPG shared with all axis. It allows for selection of "
"jog speeds using switches or a single speed."
msgstr ""

#. type: Plain text
msgid ""
"The selectable increments option uses the mux16 component. This component "
"has options such as debounce and gray code to help filter the raw switch "
"input."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Overrides"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf allows overrides of feed rates and/or spindle speed using a pulse "
"generator (MPG) or switches (eg. rotary)."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GUI Configuration"
msgstr ""

#. type: Plain text
msgid ""
"Here you can set defaults for the display screens, add virtual control "
"panels (VCP), and set some LinuxCNC options.."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-gui.png"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Front-end GUI Options"
msgstr ""

#. type: Plain text
msgid ""
"The default options allows general defaults to be chosen for any display "
"screen."
msgstr ""

#. type: Plain text
msgid ""
"AXIS defaults are options specific to AXIS. If you choose size , position or "
"force maximize options then PNCconf will ask if it's alright to overwrite a "
"preference file (.axisrc). Unless you have manually added commands to this "
"file it is fine to allow it. Position and force max can be used to move AXIS "
"to a second monitor if the system is capable."
msgstr ""

#. type: Plain text
msgid ""
"Touchy defaults are options specific to Touchy. Most of Touchy's options can "
"be changed while Touchy is running using the preference page. Touchy uses "
"GTK to draw its screen, and GTK supports themes. Themes controls the basic "
"look and feel of a program. You can download themes from the net or edit "
"them yourself.  There are a list of the current themes on the computer that "
"you can pick from.  To help some of the text to stand out PNCconf allows you "
"to override the Themes's defaults. The position and force max options can be "
"used to move Touchy to a second monitor if the system is capable."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC options are specific to QtPlasmac, any common options that are not "
"required will be disabled.  If QtPlasmac is selected then the following "
"screen will be a user button setup screen that is specific to QtPlasmaC and "
"VCP options will not be available."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "VCP options"
msgstr ""

#. type: Plain text
msgid ""
"Virtual Control Panels allow one to add custom controls and displays to the "
"screen. AXIS and Touchy can integrate these controls inside the screen in "
"designated positions. There are two kinds of VCPs - pyVCP which uses "
"'Tkinter' to draw the screen and GLADE VCP that uses 'GTK' to draw the "
"screen."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "PyVCP"
msgstr ""

#. type: Plain text
msgid ""
"PyVCPs screen XML file can only be hand built. PyVCPs fit naturally in with "
"AXIS as they both use TKinter."
msgstr ""

#. type: Plain text
msgid ""
"HAL pins are created for the user to connect to inside their custom HAL "
"file.  There is a sample spindle display panel for the user to use as-is or "
"build on.  You may select a blank file that you can later add your controls "
"'widgets' to or select a spindle display sample that will display spindle "
"speed and indicate if the spindle is at requested speed."
msgstr ""

#. type: Plain text
msgid ""
"PNCconf will connect the proper spindle display HAL pins for you.  If you "
"are using AXIS then the panel will be integrated on the right side.  If not "
"using AXIS then the panel will be separate 'stand-alone' from the front-end "
"screen."
msgstr ""

#. type: Plain text
msgid ""
"You can use the geometry options to size and move the panel, for instance to "
"move it to a second screen if the system is capable. If you press the "
"'Display sample panel' button the size and placement options will be honored."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "GLADE VCP"
msgstr ""

#. type: Plain text
msgid ""
"GLADE VCPs fit naturally inside of TOUCHY screen as they both use GTK to "
"draw them, but by changing GLADE VCP's theme it can be made to blend pretty "
"well in AXIS. (try Redmond)"
msgstr ""

#. type: Plain text
msgid ""
"It uses a graphical editor to build its XML files.  HAL pins are created for "
"the user to connect to, inside of their custom HAL file."
msgstr ""

#. type: Plain text
msgid ""
"GLADE VCP also allows much more sophisticated (and complicated) programming "
"interaction, which PNCconf currently doesn't leverage. (see GLADE VCP in the "
"manual)"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf has sample panels for the user to use as-is or build on.  With GLADE "
"VCP PNCconf will allow you to select different options on your sample "
"display."
msgstr ""

#. type: Plain text
msgid ""
"Under 'sample options' select which ones you would like.  The zero buttons "
"use HALUI commands which you could edit later in the HALUI section."
msgstr ""

#. type: Plain text
msgid ""
"Auto Z touch-off also requires the classic ladder touch-off program and a "
"probe input selected. It requires a conductive touch-off plate and a "
"grounded conductive tool. For an idea on how it works see:"
msgstr ""

#. type: Plain text
msgid ""
"http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"ClassicLadderExamples#Single_button_probe_touchoff"
msgstr ""

#. type: Plain text
msgid ""
"Under 'Display Options', size, position, and force max can be used on a "
"'stand-alone' panel for such things as placing the screen on a second "
"monitor if the system is capable."
msgstr ""

#. type: Plain text
msgid ""
"You can select a GTK theme which sets the basic look and feel of the panel.  "
"You Usually want this to match the front-end screen.  These options will be "
"used if you press the 'Display sample button'.  With GLADE VCP depending on "
"the front-end screen, you can select where the panel will display."
msgstr ""

#. type: Plain text
msgid ""
"You can force it to be stand-alone or with AXIS it can be in the center or "
"on the right side, with Touchy it can be in the center."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Defaults and Options"
msgstr ""

#. type: Plain text
msgid "Require homing before MDI / Running"
msgstr ""

#. type: Plain text
msgid "If you want to be able to move the machine before homing uncheck"
msgstr ""

#. type: Plain text
msgid "this checkbox."
msgstr ""

#. type: Plain text
msgid "Popup Tool Prompt"
msgstr ""

#. type: Plain text
msgid ""
"Choose between an on screen prompt for tool changes or export standard "
"signal names for a User supplied custom tool changer Hal file"
msgstr ""

#. type: Plain text
msgid "Leave spindle on during tool change:"
msgstr ""

#. type: Plain text
msgid "Used for lathes"
msgstr ""

#. type: Plain text
msgid "Force individual manual homing"
msgstr ""

#. type: Plain text
msgid "Move spindle up before tool change"
msgstr ""

#. type: Plain text
msgid "Restore joint position after shutdown"
msgstr ""

#. type: Plain text
msgid "Used for non-trivial kinematics machines"
msgstr ""

#. type: Plain text
msgid "Random position tool changers"
msgstr ""

#. type: Plain text
msgid "Used for tool changers that do not return the tool to the same"
msgstr ""

#. type: Plain text
msgid "pocket. You will need to add custom HAL code to support tool changers."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Mesa Configuration"
msgstr ""

#. type: Plain text
msgid ""
"The Mesa configuration pages allow one to utilize different firmwares.  On "
"the basic page you selected a Mesa card here you pick the available firmware "
"and select what and how many components are available."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-mesa-config.png"
msgstr ""

#. type: Plain text
msgid ""
"Parport address is used only with Mesa parport card, the 7i43. An on board "
"parallel port usually uses 0x278 or 0x378 though you should be able to find "
"the address from the BIOS page. The 7i43 requires the parallel port to use "
"the EPP mode, again set in the BIOS page. If using a PCI parallel port the "
"address can be searched for by using the search button on the basic page."
msgstr ""

#. type: Plain text
msgid "Many PCI cards do not support the EPP protocol properly."
msgstr ""

#. type: Plain text
msgid ""
"PDM PWM and 3PWM base frequency sets the balance between ripple and "
"linearity.  If using Mesa daughter boards the docs for the board should give "
"recommendations"
msgstr ""

#. type: Plain text
msgid ""
"[IMPORTANT] It's important to follow these to avoid damage and get the best "
"performance."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"The 7i33 requires PDM and a PDM base frequency of 6 mHz\n"
"The 7i29 requires PWM and a PWM base frequency of 20 Khz\n"
"The 7i30 requires PWM and a PWM base frequency of 20 Khz\n"
"The 7i40 requires PWM and a PWM base frequency of 50 Khz\n"
"The 7i48 requires UDM and a PWM base frequency of 24 Khz\n"
msgstr ""

#. type: Plain text
msgid ""
"Watchdog time out is used to set how long the MESA board will wait before "
"killing outputs if communication is interrupted from the computer. Please "
"remember Mesa uses 'active low' outputs meaning that when the output pin is "
"on, it is low (approx 0 volts) and if it's off the output in high (approx 5 "
"volts)  make sure your equipment is safe when in the off (watchdog bitten) "
"state."
msgstr ""

#. type: Plain text
msgid ""
"You may choose the number of available components by deselecting unused "
"ones.  Not all component types are available with all firmware."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Choosing less then the maximum number of components allows one to gain more GPIO\n"
" pins. If using daughter boards keep in mind you must not deselect pins that the\n"
" card uses. For instance some firmware supports two 7i33 cards, If you only have\n"
" one you may deselect enough components to utilize the connector that supported \n"
"the second 7i33. Components are deselected numerically by the highest number\n"
"first then down with out skipping a number. If by doing this the components are \n"
"not where you want them then you must use a different firmware. The firmware \n"
"dictates where, what and the max amounts of the components. Custom firmware is \n"
"possible, ask nicely when contacting the LinuxCNC developers and Mesa. Using custom \n"
"firmware in PNCconf requires special procedures and is not always possible - \n"
"Though I try to make PNCconf as flexible as possible.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"After choosing all these options press the 'Accept Component Changes' button and\n"
" PNCconf will update the I/O setup pages. Only I/O tabs will be shown for \n"
"available connectors, depending on the Mesa board.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Mesa I/O Setup"
msgstr ""

#. type: Plain text
msgid ""
"The tabs are used to configure the input and output pins of the Mesa "
"boards.  PNCconf allows one to create custom signal names for use in custom "
"HAL files."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Mesa I/O C2"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-mesa-io2.png"
msgstr ""

#. type: Plain text
msgid ""
"On this tab with this firmware the components are setup for a 7i33 daughter "
"board, usually used with closed loop servos. Note the component numbers of "
"the encoder counters and PWM drivers are not in numerical order. This "
"follows the daughter board requirements."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Mesa I/O C3"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-mesa-io3.png"
msgstr ""

#. type: Plain text
msgid ""
"On this tab all the pins are GPIO. Note the 3 digit numbers - they will "
"match the HAL pin number. GPIO pins can be selected as input or output and "
"can be inverted."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Mesa I/O C4"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-mesa-io4.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"On this tab there are a mix of step generators and GPIO.\n"
"Step generators output and direction pins can be inverted. Note that inverting a\n"
" Step Gen-A pin (the step output pin) changes the step timing. It should match \n"
"what your controller expects.\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Parport configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-parport.png"
msgstr ""

#. type: Plain text
msgid ""
"The parallel port can be used for simple I/O similar to Mesa's GPIO pins."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Axis Drive Configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-axis-drive.png"
msgstr ""

#. type: Plain text
msgid ""
"This page allows configuring and testing of the motor and/or encoder "
"combination"
msgstr ""

#. type: Plain text
msgid ""
"If using a servo motor an open loop test is available, if using a stepper a "
"tuning test is available."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Open Loop Test"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"An open loop test is important as it confirms the direction of the motor and \n"
"encoder. The motor should move the axis in the positive direction when the \n"
"positive button is pushed and also the encoder should count in the positive \n"
"direction. The axis movement should follow the Machinery's Handbook \n"
"footnote:[\"axis nomenclature\" in the chapter \"Numerical Control\" in the \n"
"\"Machinery's Handbook\" published by Industrial Press.] standards or \n"
"AXIS graphical display will not make much sense. Hopefully the help page and \n"
"diagrams can help figure this out. Note that axis directions are based on TOOL \n"
"movement not table movement. There is no acceleration ramping with the open loop\n"
" test so start with lower DAC numbers. By moving the axis a known distance one \n"
"can confirm the encoder scaling. The encoder should count even without the amp \n"
"enabled depending on how power is supplied to the encoder. \n"
msgstr ""

#. type: Plain text
msgid ""
"If the motor and encoder do not agree on counting direction then the servo "
"will run away when using PID control."
msgstr ""

#. type: Plain text
msgid ""
"Since at the moment PID settings can not be tested in PNCconf the settings "
"are really for when you re-edit a config - enter your tested PID settings."
msgstr ""

#. type: Plain text
msgid "DAC scaling, max output and offset are used to tailor the DAC output."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Compute DAC"
msgstr ""

#. type: Plain text
msgid ""
"These two values are the scale and offset factors for the axis output to the "
"motor amplifiers. The second value (offset) is subtracted from the computed "
"output (in volts), and divided by the first value (scale factor), before "
"being written to the D/A converters. The units on the scale value are in "
"true volts per DAC output volts. The units on the offset value are in volts. "
"These can be used to linearize a DAC."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Specifically, when writing outputs, the LinuxCNC first converts the desired \n"
"output in quasi-SI units to raw actuator values, e.g., volts for an amplifier\n"
" DAC. This scaling looks like: The value for scale can be obtained analytically \n"
"by doing a unit analysis, i.e., units are [output SI units]/[actuator units]. \n"
"For example, on a machine with a velocity mode amplifier such that 1 volt \n"
"results in 250 mm/sec velocity, Note that the units of the offset are in machine\n"
" units, e.g., mm/sec, and they are pre-subtracted from the sensor readings. The \n"
"value for this offset is obtained by finding the value of your output which \n"
"yields 0.0 for the actuator output. If the DAC is linearized, this offset is \n"
"normally 0.0.\n"
msgstr ""

#. type: Plain text
msgid ""
"The scale and offset can be used to linearize the DAC as well, resulting in "
"values that reflect the combined effects of amplifier gain, DAC non-"
"linearity, DAC units, etc. To do this, follow this procedure:"
msgstr ""

#. type: Plain text
msgid "Build a calibration table for the output, driving the DAC with a"
msgstr ""

#. type: Plain text
msgid "desired voltage and measuring the result:"
msgstr ""

#.  latexmath:[ meas=a*raw+b ]
#.  latexmath:[ cmd=a*raw+b ]
#.  latexmath:[ raw=(cmd-b)/a ]
#. type: Block title
#, no-wrap
msgid "Output Voltage Measurements"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Raw*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Measured*"
msgstr ""

#. type: Table
#, no-wrap
msgid "-10"
msgstr ""

#. type: Table
#, no-wrap
msgid "*-9.93*"
msgstr ""

#. type: Table
#, no-wrap
msgid "-9"
msgstr ""

#. type: Table
#, no-wrap
msgid "*-8.83*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*-0.96*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*-0.03*"
msgstr ""

#. type: Table
#, no-wrap
msgid "9"
msgstr ""

#. type: Table
#, no-wrap
msgid "*9.87*"
msgstr ""

#. type: Table
#, no-wrap
msgid "10"
msgstr ""

#. type: Table
#, no-wrap
msgid "*10.07*"
msgstr ""

#. type: Plain text
msgid ""
"Do a least-squares linear fit to get coefficients a, b such that meas=a*raw+b"
msgstr ""

#. type: Plain text
msgid "Note that we want raw output such that our measured result is"
msgstr ""

#. type: Plain text
msgid "identical to the commanded output. This means"
msgstr ""

#. type: Plain text
msgid "cmd=a*raw+b"
msgstr ""

#. type: Plain text
msgid "raw=(cmd-b)/a"
msgstr ""

#. type: Plain text
msgid "As a result, the a and b coefficients from the linear fit can be used"
msgstr ""

#. type: Plain text
msgid "as the scale and offset for the controller directly."
msgstr ""

#. type: Plain text
msgid ""
"MAX OUTPUT: The maximum value for the output of the PID compensation that is "
"written to the motor amplifier, in volts. The computed output value is "
"clamped to this limit.  The limit is applied before scaling to raw output "
"units. The value is applied symmetrically to both the plus and the minus "
"side."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Tuning Test*\n"
"The tuning test unfortunately only works with stepper based systems. Again \n"
"confirm the directions on the axis is correct. Then test the system by running\n"
" the axis back and forth, If the acceleration or max speed is too high you will \n"
"lose steps. While jogging, Keep in mind it can take a while for an axis with low\n"
"acceleration to stop. Limit switches are not functional during this test. You \n"
"can set a pause time so each end of the test movement. This would allow you to \n"
"set up and read a dial indicator to see if you are losing steps.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Stepper Timing*\n"
"Stepper timing needs to be tailored to the step controller's requirements. \n"
"Pncconf supplies some default controller timing or allows custom timing settings\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"See http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Stepper_Drive_Timing for\n"
"some more known timing numbers (feel free to add ones you have figured out). If \n"
"in doubt use large numbers such as 5000 this will only limit max speed.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Brushless Motor Control*\n"
"These options are used to allow low level control of brushless motors using \n"
"special firmware and daughter boards. It also allows conversion of HALL sensors \n"
"from one manufacturer to another. It is only partially supported and will \n"
"require one to finish the HAL connections. Contact the mail-list or forum for \n"
"more help.\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Axis Scale Calculation"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-scale-calc.png"
msgstr ""

#. type: Plain text
msgid ""
"The scale settings can be directly entered or one can use the 'calculate "
"scale' button to assist. Use the check boxes to select appropriate "
"calculations. Note that 'pulley teeth' requires the number of teeth not the "
"gear ratio. Worm turn ratio is just the opposite it requires the gear ratio. "
"If your happy with the scale press apply otherwise push cancel and enter the "
"scale directly."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-axis-config.png"
msgstr ""

#. type: Plain text
msgid ""
"Also refer to the diagram tab for two examples of home and limit switches. "
"These are two examples of many different ways to set homing and limits."
msgstr ""

#. type: Plain text
msgid ""
"It is very important to start with the axis moving in the right direction or "
"else getting homing right is very difficult!"
msgstr ""

#. type: Plain text
msgid ""
"Remember positive and negative directions refer to the TOOL not the table as "
"per the Machinists handbook."
msgstr ""

#. type: Block title
#, no-wrap
msgid "On a typical knee or bed mill"
msgstr ""

#. type: Plain text
msgid "when the TABLE moves out that is the positive Y direction"
msgstr ""

#. type: Plain text
msgid "when the TABLE moves left that is the positive X direction"
msgstr ""

#. type: Plain text
msgid "when the TABLE moves down that is the positive Z direction"
msgstr ""

#. type: Plain text
msgid "when the HEAD moves up that is the positive Z direction"
msgstr ""

#. type: Block title
#, no-wrap
msgid "On a typical lathe"
msgstr ""

#. type: Plain text
msgid "when the TOOL moves right, away from the chuck"
msgstr ""

#. type: Plain text
msgid "that is the positive Z direction"
msgstr ""

#. type: Plain text
msgid "when the TOOL moves toward the operator"
msgstr ""

#. type: Plain text
msgid "that is the positive X direction. Some lathes have X"
msgstr ""

#. type: Plain text
msgid "opposite (eg tool on back side), that will work fine but"
msgstr ""

#. type: Plain text
msgid "AXIS graphical display can not be made to reflect this."
msgstr ""

#. type: Plain text
msgid ""
"When using homing and / or limit switches LinuxCNC expects the HAL signals "
"to be true when the switch is being pressed / tripped.  If the signal is "
"wrong for a limit switch then LinuxCNC will think the machine is on end of "
"limit all the time. If the home switch search logic is wrong LinuxCNC will "
"seem to home in the wrong direction.  What it actually is doing is trying to "
"BACK off the home switch."
msgstr ""

#. type: Plain text
msgid "Decide on limit switch location."
msgstr ""

#. type: Plain text
msgid ""
"Limit switches are the back up for software limits in case something "
"electrical goes wrong eg. servo runaway.  Limit switches should be placed so "
"that the machine does not hit the physical end of the axis movement. "
"Remember the axis will coast past the contact point if moving fast. Limit "
"switches should be 'active low' on the machine. eg. power runs through the "
"switches all the time - a loss of power (open switch) trips.  While one "
"could wire them the other way, this is fail safe.  This may need to be "
"inverted so that the HAL signal in LinuxCNC in 'active high' - a TRUE means "
"the switch was tripped. When starting LinuxCNC if you get an on-limit "
"warning, and axis is NOT tripping the switch, inverting the signal is "
"probably the solution. (use HALMETER to check the corresponding HAL signal "
"eg. joint.0.pos-lim-sw-in X axis positive limit switch)"
msgstr ""

#. type: Plain text
msgid "Decide on the home switch location."
msgstr ""

#. type: Plain text
msgid ""
"If you are using limit switches You may as well use one as a home switch. A "
"separate home switch is useful if you have a long axis that in use is "
"usually a long way from the limit switches or moving the axis to the ends "
"presents problems of interference with material.  eg a long shaft in a lathe "
"makes it hard to home to limits with out the tool hitting the shaft, so a "
"separate home switch closer to the middle may be better.  If you have an "
"encoder with index then the home switch acts as a course home and the index "
"will be the actual home location."
msgstr ""

#. type: Plain text
msgid "Decide on the MACHINE ORIGIN position."
msgstr ""

#. type: Plain text
msgid ""
"MACHINE ORIGIN is what LinuxCNC uses to reference all user coordinate "
"systems from.  I can think of little reason it would need to be in any "
"particular spot. There are only a few G codes that can access the MACHINE "
"COORDINATE system.( G53, G30 and G28 )  If using tool-change-at-G30 option "
"having the Origin at the tool change position may be convenient. By "
"convention, it may be easiest to have the ORIGIN at the home switch."
msgstr ""

#. type: Plain text
msgid "Decide on the (final) HOME POSITION."
msgstr ""

#. type: Plain text
msgid ""
"this just places the carriage at a consistent and convenient position after "
"LinuxCNC figures out where the ORIGIN is."
msgstr ""

#. type: Plain text
msgid "Measure / calculate the positive / negative axis travel distances."
msgstr ""

#. type: Plain text
msgid ""
"Move the axis to the origin. Mark a reference on the movable slide and the "
"non-movable support (so they are in line) move the machine to the end of "
"limits. Measure between the marks that is one of the travel distances. Move "
"the table to the other end of travel.  Measure the marks again. That is the "
"other travel distance. If the ORIGIN is at one of the limits then that "
"travel distance will be zero."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "(machine) ORIGIN"
msgstr ""

#. type: Plain text
msgid ""
"The Origin is the MACHINE zero point. (not the zero point you set your "
"cutter / material at).  LinuxCNC uses this point to reference everything "
"else from. It should be inside the software limits.  LinuxCNC uses the home "
"switch location to calculate the origin position (when using home switches "
"or must be manually set if not using home switches."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Travel distance"
msgstr ""

#. type: Plain text
msgid ""
"This is the maximum distance the axis can travel in each direction. This may "
"or may not be able to be measured directly from origin to limit switch. The "
"positive and negative travel distances should add up to the total travel "
"distance."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "POSITIVE TRAVEL DISTANCE"
msgstr ""

#. type: Plain text
msgid ""
"This is the distance the Axis travels from the Origin to the positive travel "
"distance or the total travel minus the negative travel distance. You would "
"set this to zero if the origin is positioned at the positive limit.  The "
"will always be zero or a positive number."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "NEGATIVE TRAVEL DISTANCE"
msgstr ""

#. type: Plain text
msgid ""
"This is the distance the Axis travels from the Origin to the negative travel "
"distance.  or the total travel minus the positive travel distance. You would "
"set this to zero if the origin is positioned at the negative limit.  This "
"will always be zero or a negative number.  If you forget to make this "
"negative PNCconf will do it internally."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "(Final) HOME POSITION"
msgstr ""

#. type: Plain text
msgid ""
"This is the position the home sequence will finish at. It is referenced from "
"the Origin so can be negative or positive depending on what side of the "
"Origin it is located.  When at the (final) home position if you must move in "
"the Positive direction to get to the Origin, then the number will be "
"negative."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "HOME SWITCH LOCATION"
msgstr ""

#. type: Plain text
msgid ""
"This is the distance from the home switch to the Origin. It could be "
"negative or positive depending on what side of the Origin it is located. "
"When at the home switch location if you must move in the Positive direction "
"to get to the Origin, then the number will be negative. If you set this to "
"zero then the Origin will be at the location of the limit switch (plus "
"distance to find index if used)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Home Search Velocity"
msgstr ""

#. type: Plain text
msgid "Course home search velocity in units per minute."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Home Search Direction"
msgstr ""

#. type: Plain text
msgid ""
"Sets the home switch search direction either negative (ie. towards negative "
"limit switch)  or positive (ie. towards positive limit switch)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Home Latch Velocity"
msgstr ""

#. type: Plain text
msgid "Fine Home search velocity in units per minute"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Home Final Velocity"
msgstr ""

#. type: Plain text
msgid ""
"Velocity used from latch position to (final) home position in units per "
"minute. Set to 0 for max rapid speed"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Home latch Direction"
msgstr ""

#. type: Plain text
msgid ""
"Allows setting of the latch direction to the same or opposite of the search "
"direction."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Use Encoder Index For Home"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC will search for an encoder index pulse while in the latch stage of "
"homing."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Use Compensation File"
msgstr ""

#. type: Plain text
msgid ""
"Allows specifying a Comp filename and type.  Allows sophisticated "
"compensation. See <<sec:axis-section,AXIS Section>> of the INI Chapter."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Use Backlash Compensation"
msgstr ""

#. type: Plain text
msgid ""
"Allows setting of simple backlash compensation. Can not be used with "
"Compensation File. See <<sec:axis-section,AXIS Section>> of the INI Chapter."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "AXIS Help Diagram"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-diagram-lathe.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The diagrams should help to demonstrate an example of limit switches and \n"
"standard axis movement directions.\n"
"In this example the Z axis was two limit switches, the positive switch is shared\n"
" as a home switch.\n"
"The MACHINE ORIGIN (zero point) is located at the negative limit.\n"
"The left edge of the carriage is the negative trip pin and the right the \n"
"positive trip pin.\n"
"We wish the FINAL HOME POSITION to be 4 inches away from the ORIGIN on the \n"
"positive side.\n"
"If the carriage was moved to the positive limit we would measure 10 inches \n"
"between the negative limit and the negative trip pin.\n"
msgstr ""

#. type: Plain text
msgid ""
"If you select spindle signals then this page is available to configure "
"spindle control."
msgstr ""

#. type: Plain text
msgid ""
"Many of the option on this page will not show unless the proper option was "
"selected on previous pages!"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-spindle-config.png"
msgstr ""

#. type: Plain text
msgid "This page is similar to the axis motor configuration page."
msgstr ""

#. type: Plain text
msgid "There are some differences:"
msgstr ""

#. type: Plain text
msgid ""
"Unless one has chosen a stepper driven spindle there is no acceleration or "
"velocity limiting."
msgstr ""

#. type: Plain text
msgid "There is no support for gear changes or ranges."
msgstr ""

#. type: Plain text
msgid ""
"If you picked a VCP spindle display option then spindle-at-speed scale and "
"filter settings may be shown."
msgstr ""

#. type: Plain text
msgid ""
"Spindle-at-speed allows LinuxCNC to wait till the spindle is at the "
"requested speed before moving the axis. This is particularly handy on lathes "
"with constant surface feed and large speed diameter changes. It requires "
"either encoder feedback or a digital spindle-at-speed signal typically "
"connected to a VFD drive."
msgstr ""

#. type: Plain text
msgid ""
"If using encoder feedback, you may select a spindle-at-speed scale setting "
"that specifies how close the actual speed must be to the requested speed to "
"be considered at-speed."
msgstr ""

#. type: Plain text
msgid ""
"If using encoder feedback, the VCP speed display can be erratic - the filter "
"setting can be used to smooth out the display. The encoder scale must be set "
"for the encoder count / gearing used."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"If you are using a single input for a spindle encoder you must add the line:\n"
"setp    hm2_7i43.0.encoder.00.counter-mode 1\n"
"(changing the board name and encoder number to your requirements) into a custom \n"
"HAL file. See the <<sec:hm2-encoder,Encoders Section>> in Hostmot2 for more\n"
"info about counter mode.\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Advanced Options"
msgstr ""

#. type: Plain text
msgid ""
"This allows setting of HALUI commands and loading of classicladder and "
"sample ladder programs.  If you selected GLADE VCP options such as for "
"zeroing axis, there will be commands showing.  See the <<cha:hal-user-"
"interface,HALUI Chapter>>for more info on using custom halcmds.  There are "
"several ladder program options.  The Estop program allows an external ESTOP "
"switch or the GUI frontend to throw an Estop. It also has a timed lube pump "
"signal.  The Z auto touch-off is with a touch-off plate, the GLADE VCP touch-"
"off button and special HALUI commands to set the current user origin to zero "
"and rapid clear.  The serial modbus program is basically a blank template "
"program that sets up classicladder for serial modbus. See the <<cha:"
"classicladder,Classicladder Chapter>> in the manual."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-advanced.png"
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Components"
msgstr ""

#. type: Plain text
msgid ""
"On this page you can add additional HAL components you might need for custom "
"HAL files.  In this way one should not have to hand edit the main HAL file, "
"while still allowing user needed components."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pncconf-hal.png"
msgstr ""

#. type: Plain text
msgid ""
"The first selection is components that pncconf uses internally.  You may "
"configure pncconf to load extra instances of the components for your custom "
"HAL file."
msgstr ""

#. type: Plain text
msgid ""
"Select the number of instances your custom file will need, pncconf will add "
"what it needs after them."
msgstr ""

#. type: Plain text
msgid ""
"Meaning if you need 2 and pncconf needs 1 pncconf will load 3 instances and "
"use the last one."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Custom Component Commands"
msgstr ""

#. type: Plain text
msgid ""
"This selection will allow you to load HAL components that pncconf does not "
"use.  Add the loadrt or loadusr command, under the heading 'loading command' "
"Add the addf command under the heading 'Thread command'.  The components "
"will be added to the thread between reading of inputs and writing of "
"outputs, in the order you write them in the 'thread command'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Advanced Usage Of PNCconf"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf does its best to allow flexible customization by the user.  PNCconf "
"has support for custom signal names, custom loading of components, custom "
"HAL files and custom firmware."
msgstr ""

#. type: Plain text
msgid ""
"There are also signal names that PNCconf always provides regardless of "
"options selected, for user's custom HAL files With some thought most "
"customizations should work regardless if you later select different options "
"in PNCconf."
msgstr ""

#. type: Plain text
msgid ""
"Eventually if the customizations are beyond the scope of PNCconf's frame "
"work you can use PNCconf to build a base config or use one of LinuxCNC's "
"sample configurations and just hand edit it to what ever you want."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Custom Signal Names"
msgstr ""

#. type: Plain text
msgid ""
"If you wish to connect a component to something in a custom HAL file write a "
"unique signal name in the combo entry box. Certain components will add "
"endings to your custom signal name:"
msgstr ""

#. type: Plain text
msgid "Encoders will add < customname > +:"
msgstr ""

#. type: Plain text
msgid "position"
msgstr ""

#. type: Plain text
msgid "count"
msgstr ""

#. type: Plain text
msgid "velocity"
msgstr ""

#. type: Plain text
msgid "index-enable"
msgstr ""

#. type: Plain text
msgid "reset"
msgstr ""

#. type: Plain text
msgid "Steppers add:"
msgstr ""

#. type: Plain text
msgid "enable"
msgstr ""

#. type: Plain text
msgid "counts"
msgstr ""

#. type: Plain text
msgid "position-cmd"
msgstr ""

#. type: Plain text
msgid "position-fb"
msgstr ""

#. type: Plain text
msgid "velocity-fb"
msgstr ""

#. type: Plain text
msgid "PWM add:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "value"
msgstr ""

#. type: Plain text
msgid "GPIO pins will just have the entered signal name connected to it"
msgstr ""

#. type: Plain text
msgid ""
"In this way one can connect to these signals in the custom HAL files and "
"still have the option to move them around later."
msgstr ""

#. type: Plain text
msgid ""
"The Hal Components page can be used to load components needed by a user for "
"customization."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Loading Custom Firmware"
msgstr ""

#. type: Plain text
msgid ""
"PNCconf searches for firmware on the system and then looks for the XML file "
"that it can convert to what it understands. These XML files are only "
"supplied for officially released firmware from the LinuxCNC team. To utilize "
"custom firmware one must convert it to an array that PNCconf understands and "
"add its file path to PNCconf's preference file. By default this path "
"searches the desktop for a folder named custom_firmware and a file named "
"firmware.py."
msgstr ""

#. type: Plain text
msgid ""
"The hidden preference file is in the user's home file, is named .pncconf-"
"preferences and require one to select 'show hidden files' to see and edit "
"it. The contents of this file can be seen when you first load PNCconf - "
"press the help button and look at the output page."
msgstr ""

#. type: Plain text
msgid ""
"Ask on the LinuxCNC mail-list or forum for info about converting custom "
"firmware.  Not all firmware can be utilized with PNCconf."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Custom HAL Files"
msgstr ""

#. type: Plain text
msgid "There are four custom files that you can use to add HAL commands to:"
msgstr ""

#. type: Plain text
msgid ""
"custom.hal is for HAL commands that don't have to be run after the GUI "
"frontend loads. It is run after the configuration-named HAL file."
msgstr ""

#. type: Plain text
msgid ""
"custom_postgui.hal is for commands that must be run after AXIS loads or a "
"standalone PYVCP display loads."
msgstr ""

#. type: Plain text
msgid ""
"custom_gvcp.hal is for commands that must be run after glade VCP is loaded."
msgstr ""

#. type: Plain text
msgid ""
"shutdown.hal is for commands to run when LinuxCNC shuts down in a controlled "
"manner."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Linux FAQ"
msgstr ""

#. type: Plain text
msgid ""
"These are some basic Linux commands and techniques for new to Linux users. "
"More complete information can be found on the web or by using the man pages."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Automatic Login"
msgstr ""

#. type: Plain text
msgid ""
"When you install LinuxCNC with the Ubuntu LiveCD the default is to have to "
"log in each time you turn the computer on. To enable automatic login go to "
"'System > Administration > Login Window'. If it is a fresh install the Login "
"Window might take a second or three to pop up. You will have to have your "
"password that you used for the install to gain access to the Login Window "
"Preferences window. In the Security tab check off Enable Automatic Login and "
"pick a user name from the list (that would be you)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Automatic Startup"
msgstr ""

#. type: Plain text
msgid ""
"To have LinuxCNC start automatically with your config after turning on the "
"computer go to 'System > Preferences > Sessions > Startup Applications', "
"click Add. Browse to your config and select the .ini file. When the file "
"picker dialog closes, add linuxcnc and a space in front of the path to your"
msgstr ""

#. type: Block title
#, no-wrap
msgid "ini file."
msgstr ""

#. type: Plain text
msgid "Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linuxcnc /home/mill/linuxcnc/config/mill/mill.ini\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Terminal"
msgstr ""

#. type: Plain text
msgid ""
"Many things need to be done from the terminal like checking the kernel "
"message buffer with 'dmesg'. Ubuntu and Linux Mint have a keyboard shortcut "
"Ctrl + Alt"
msgstr ""

#. type: Plain text
msgid ""
"t. Most modern file managers support the right key to open a terminal just "
"make sure your right clicking on a blank area or a directory not a file "
"name.  Most OS's have the terminal as a menu item, usually in Accessories."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Man Pages"
msgstr ""

#. type: Plain text
msgid ""
"A man page (short for manual page) is a form of software documentation "
"usually found on a Unix or Unix-like operating system like Linux."
msgstr ""

#. type: Plain text
msgid ""
"To view a man page open up a terminal to find out something about the find "
"command in the terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man find\n"
msgstr ""

#. type: Plain text
msgid ""
"Use the Page Up and Page Down keys to view the man page and the Q key to "
"quit viewing."
msgstr ""

#. type: Plain text
msgid ""
"Viewing the man page from the terminal may not get the expected man page.  "
"For example if you type in man abs you will get the C abs not the LinuxCNC "
"abs. It is best to view the LinuxCNC man pages in the HTML documents."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "List Modules"
msgstr ""

#. type: Plain text
msgid ""
"Sometimes when troubleshooting you need to get a list of modules that are "
"loaded. In a terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "lsmod\n"
msgstr ""

#. type: Plain text
msgid ""
"If you want to send the output from lsmod to a text file in a terminal "
"window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "lsmod > mymod.txt\n"
msgstr ""

#. type: Plain text
msgid ""
"The resulting text file will be located in the home directory if you did not "
"change directories when you opened up the terminal window and it will be "
"named mymod.txt or what ever you named it."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Editing a Root File"
msgstr ""

#. type: Plain text
msgid ""
"When you open the file browser and you see the Owner of the file is root you "
"must do extra steps to edit that file. Editing some root files can have bad "
"results. Be careful when editing root files. Generally, you can open and "
"view most root files, but they will open in 'read only' mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Command Line Way"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo gedit\n"
msgstr ""

#. type: Plain text
msgid "Open the file with File > Open > Edit"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The GUI Way"
msgstr ""

#. type: Plain text
msgid "Right click on the desktop and select Create Launcher"
msgstr ""

#. type: Plain text
msgid "Type a name in like sudo edit"
msgstr ""

#. type: Plain text
msgid ""
"Type 'gksudo \"gnome-open %u\"' as the command and save the launcher to your "
"desktop"
msgstr ""

#. type: Plain text
msgid "Drag a file onto your launcher to open and edit"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Root Access"
msgstr ""

#. type: Plain text
msgid ""
"In Ubuntu you can become root by typing in \"sudo -i\" in a terminal window "
"then typing in your password. Be careful, because you can really foul things "
"up as root if you don't know what you're doing."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Terminal Commands"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Working Directory"
msgstr ""

#. type: Plain text
msgid ""
"To find out the path to the present working directory in the terminal window "
"type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "pwd\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Changing Directories"
msgstr ""

#. type: Plain text
msgid "To move up one level in the terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "cd ..\n"
msgstr ""

#. type: Plain text
msgid "To move up two levels in the terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "cd ../..\n"
msgstr ""

#. type: Plain text
msgid ""
"To move down to the linuxcnc/configs subdirectory in the terminal window "
"type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "cd linuxcnc/configs\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Listing files in a directory"
msgstr ""

#. type: Plain text
msgid ""
"To view a list of all the files and subdirectories in the terminal window "
"type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "dir\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "ls\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Finding a File"
msgstr ""

#. type: Plain text
msgid ""
"The find command can be a bit confusing to a new Linux user. The basic "
"syntax is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "find starting-directory parameters actions\n"
msgstr ""

#. type: Plain text
msgid ""
"For example to find all the .ini files in your linuxcnc directory you first "
"need to use the pwd command to find out the directory. + Open a new terminal "
"window and type:"
msgstr ""

#. type: Plain text
msgid "And pwd might return the following result:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "/home/joe\n"
msgstr ""

#. type: Plain text
msgid "With this information put the command together like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "find /home/joe/linuxcnc -name \\*.ini -print\n"
msgstr ""

#. type: Plain text
msgid ""
"The -name is the name of the file your looking for and the -print tells it "
"to print out the result to the terminal window.  The \\*.ini tells find to "
"return all files that have the .ini extension.  The backslash is needed to "
"escape the shell meta-characters. See the find man page for more information "
"on find."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Searching for Text"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "grep -irl 'text to search for' *\n"
msgstr ""

#. type: Plain text
msgid ""
"This will find all the files that contain the 'text to search for' in the "
"current directory and all the subdirectories below it, while ignoring the "
"case. The -i is for ignore case and the -r is for recursive (include all "
"subdirectories in the search). The -l option will return a list of the file "
"names, if you leave the -l off you will also get the text where each "
"occurrence of the \"text to search for\" is found.  The * is a wild card for "
"search all files. See the grep man page for more information."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Diagnostic Messages"
msgstr ""

#. type: Plain text
msgid ""
"To view the diagnostic messages use \"dmesg\" from the command window. To "
"save the diagnostic messages to a file use the redirection operator '>', "
"like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "dmesg > bootmsg.txt\n"
msgstr ""

#. type: Plain text
msgid ""
"The contents of this file can be copied and pasted on line to share with "
"people trying to help you diagnose your problem."
msgstr ""

#. type: Plain text
msgid "To clear the message buffer type this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo dmesg -c\n"
msgstr ""

#. type: Plain text
msgid ""
"This can be helpful to do just before launching LinuxCNC, so that there will "
"only be a record of information related to the current launch of LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"To find the built in parallel port address use grep to filter the "
"information out of dmesg."
msgstr ""

#. type: Plain text
msgid "After boot up open a terminal and type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "dmesg|grep parport\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Convenience Items"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Terminal Launcher"
msgstr ""

#. type: Plain text
msgid ""
"If you want to add a terminal launcher to the panel bar on top of the screen "
"you typically can right click on the panel at the top of the screen and "
"select \"Add to Panel\". Select Custom Application Launcher and Add. Give it "
"a name and put gnome-terminal in the command box."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hardware Problems"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware Info"
msgstr ""

#. type: Plain text
msgid ""
"To find out what hardware is connected to your motherboard in a terminal "
"window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "lspci -v\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Monitor Resolution"
msgstr ""

#. type: Plain text
msgid ""
"During installation Ubuntu attempts to detect the monitor settings. If this "
"fails you are left with a generic monitor with a maximum resolution of "
"800x600."
msgstr ""

#. type: Plain text
msgid "Instructions for fixing this are located here:"
msgstr ""

#. type: Plain text
msgid ""
"https://help.ubuntu.com/community/FixVideoResolutionHowto[https://help."
"ubuntu.com/community/FixVideoResolutionHowto]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Paths"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Relative Paths"
msgstr ""

#. type: Plain text
msgid ""
"Relative paths are based on the startup directory which is the directory "
"containing the ini file.  Using relative paths can facilitate relocation of "
"configurations but requires a good understanding of linux path specifiers."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"   ./f0        is the same as f0, e.g., a file named f0 in the startup directory\n"
"   ../f1       refers to a file f1 in the parent directory\n"
"   ../../f2    refers to a file f2 in the parent of the parent directory\n"
"   ../../../f3 etc.\n"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Lathe User Information"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Lathe Mode"
msgstr ""

#. type: Plain text
msgid ""
"If your CNC machine is a lathe, there are some specific changes you will "
"probably want to make to your ini file in order to get the best results from "
"LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"If you are using the AXIS display, have Axis display your lathe tools "
"properly.  See the <<cha:ini-configuration,INI Configuration>> section for "
"more details."
msgstr ""

#. type: Plain text
msgid "To set up AXIS for Lathe Mode."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[DISPLAY]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Tell the Axis Display our machine is a lathe. \n"
"LATHE = TRUE\n"
msgstr ""

#. type: Plain text
msgid ""
"Lathe Mode in Axis does not set your default plane to G18 (XZ). You must "
"program that in the preamble of each gcode file or (better) add it to your "
"ini file, like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[RS274NGC]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# g-code modal codes (modes) that the interpreter is initialized with on startup\n"
"RS274NGC_STARTUP_CODE = G18 G20 G90\n"
msgstr ""

#. type: Plain text
msgid ""
"If your using Gmoccapy then see the <<gmoccapy:lathe-section,the Gmoccapy "
"Lathe section>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Lathe Tool Table [[sec:lathe-tool-table]]"
msgstr ""

#. type: Plain text
msgid ""
"The \"Tool Table\" is a text file that contains information about each "
"tool.  The file is located in the same directory as your configuration and "
"is called \"tool.tbl\" by default.  The tools might be in a tool changer or "
"just changed manually.  The file can be edited with a text editor or be "
"updated using G10 L1,L10,L11.  There is also a built-in tool table editor in "
"the Axis display.  The maximum number of entries in the tool table is 56.  "
"The maximum tool and pocket number is 99999."
msgstr ""

#. type: Plain text
msgid ""
"Earlier versions of LinuxCNC had two different tool table formats for mills "
"and lathes, but since the 2.4.x release, one tool table format is used for "
"all machines.  Just ignore the parts of the tool table that don't pertain to "
"your machine, or which you don't need to use.  For more information on the "
"specifics of the tool table format, see the <<sec:tool-table,Tool Table>> "
"Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Lathe Tool Orientation[[lathe-tool-orientation]]"
msgstr ""

#. type: Plain text
msgid ""
"The following figure shows the lathe tool orientations with the center line "
"angle of each orientation and info on FRONTANGLE and BACKANGLE.  The "
"FRONTANGLE and BACKANGLE are clockwise starting at a line parallel to Z+."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Lathe Tool Orientations"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tool-positions_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In AXIS the following figures show what the Tool Positions look like, as "
"entered in the tool table."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Positions 1, 2, 3 & 4"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool-pos-1_en.svg[alt=\"Tool Position 1\"] image:images/tool-"
"pos-2_en.svg[alt=\"Tool Position 2\"] image:images/tool-pos-3_en.svg[alt="
"\"Tool Position 3\"] image:images/tool-pos-4_en.svg[alt=\"Tool Position 4\"]"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Positions 5, 6, 7 & 8"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool-pos-5_en.svg[alt=\"Tool Position 5\"] image:images/tool-"
"pos-6_en.svg[alt=\"Tool Position 6\"] image:images/tool-pos-7_en.svg[alt="
"\"Tool Position 7\"] image:images/tool-pos-8_en.svg[alt=\"Tool Position 8\"]"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Touch Off"
msgstr ""

#. type: Plain text
msgid ""
"When running in lathe mode in AXIS you can set the X and Z in the tool table "
"using the Touch Off window. If you have a tool turret you normally have "
"'Touch off to fixture' selected when setting up your turret. When setting "
"the material Z zero you have 'Touch off to material' selected.  For more "
"information on the G codes used for tools see <<mcode:m6,M6>>, <<sec:select-"
"tool,Tn>>, and <<gcode:g43,G43>>.  For more information on tool touch off "
"options in Axis see <<axis:tool-touch-off,Tool Touch Off>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "X Touch Off"
msgstr ""

#. type: Plain text
msgid ""
"The X axis offset for each tool is normally an offset from the center line "
"of the spindle."
msgstr ""

#. type: Plain text
msgid ""
"One method is to take your normal turning tool and turn down some stock to a "
"known diameter.  Using the Tool Touch Off window enter the measured diameter "
"(or radius if in radius mode) for that tool.  Then using some layout fluid "
"or a marker to coat the part bring each tool up till it just touches the dye "
"and set it's X offset to the diameter of the part used using the tool touch "
"off.  Make sure any tools in the corner quadrants have the nose radius set "
"properly in the tool table so the control point is correct.  Tool touch off "
"automatically adds a G43 so the current tool is the current offset."
msgstr ""

#. type: Plain text
msgid "A typical session might be:"
msgstr ""

#. type: Plain text
msgid "Home each axis if not homed."
msgstr ""

#. type: Plain text
msgid "Set the current tool with 'Tn M6 G43' where 'n' is the tool number."
msgstr ""

#. type: Plain text
msgid "Select the X axis in the Manual Control window."
msgstr ""

#. type: Plain text
msgid ""
"Move the X to a known position or take a test cut and measure the diameter."
msgstr ""

#. type: Plain text
msgid ""
"Select Touch Off and pick Tool Table then enter the position or the diameter."
msgstr ""

#. type: Plain text
msgid "Follow the same sequence to correct the Z axis."
msgstr ""

#. type: Plain text
msgid ""
"Note: if you are in Radius Mode you must enter the radius, not the diameter."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Z Touch Off"
msgstr ""

#. type: Plain text
msgid ""
"The Z axis offsets can be a bit confusing at first because there are two "
"elements to the Z offset.  There is the tool table offset, and the machine "
"coordinate offset.  First we will look at the tool table offsets.  One "
"method is to use a fixed point on your lathe and set the Z offset for all "
"tools from this point.  Some use the spindle nose or chuck face.  This gives "
"you the ability to change to a new tool and set its Z offset without having "
"to reset all the tools."
msgstr ""

#. type: Plain text
msgid "Make sure no offsets are in effect for the current coordinate system."
msgstr ""

#. type: Plain text
msgid "Select the Z axis in the Manual Control window."
msgstr ""

#. type: Plain text
msgid ""
"Bring the tool close to the control surface. Using a cylinder move the Z "
"away from the control surface until the cylinder just passes between the "
"tool and the control surface."
msgstr ""

#. type: Plain text
msgid "Select Touch Off and pick Tool Table and set the position to 0.0."
msgstr ""

#. type: Plain text
msgid "Repeat for each tool using the same cylinder."
msgstr ""

#. type: Plain text
msgid ""
"Now all the tools are offset the same distance from a standard position.  If "
"you change a tool like a drill bit you repeat the above and it is now in "
"sync with the rest of the tools for Z offset.  Some tools might require a "
"bit of cyphering to determine the control point from the touch off point.  "
"For example, if you have a 0.125\" wide parting tool and you touch the left "
"side off but want the right to be Z0, then enter 0.125\" in the touch off "
"window."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Z Machine Offset"
msgstr ""

#. type: Plain text
msgid ""
"Once all the tools have the Z offset entered into the tool table, you can "
"use any tool to set the machine offset using the machine coordinate system."
msgstr ""

#. type: Plain text
msgid "Set the current tool with \"Tn M6\" where \"n\" is the tool number."
msgstr ""

#. type: Plain text
msgid "Issue a G43 so the current tool offset is in effect."
msgstr ""

#. type: Plain text
msgid "Bring the tool to the work piece and set the machine Z offset."
msgstr ""

#. type: Plain text
msgid ""
"If you forget to set the G43 for the current tool when you set the machine "
"coordinate system offset, you will not get what you expect, as the tool "
"offset will be added to the current offset when the tool is used in your "
"program."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Synchronized Motion"
msgstr ""

#. type: Plain text
msgid ""
"Spindle synchronized motion requires a quadrature encoder connected to the "
"spindle with one index pulse per revolution. See the motion man page and the "
"<<cha:spindle-control,Spindle Control Example>> for more information."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Threading"
msgstr ""

#. type: Plain text
msgid ""
"The G76 threading cycle is used for both internal and external threads.  For "
"more information see the <<gcode:g76,G76>> Section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Constant Surface Speed"
msgstr ""

#. type: Plain text
msgid ""
"CSS or Constant Surface Speed uses the machine X origin modified by the tool "
"X offset to compute the spindle speed in RPM. CSS will track changes in tool "
"offsets. The X <<sec.machine-coordinate-system,machine origin>> should be "
"when the reference tool (the one with zero offset) is at the center of "
"rotation.  For more information see the <<gcode:g96-g97,G96>> Section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Feed per Revolution"
msgstr ""

#. type: Plain text
msgid ""
"Feed per revolution will move the Z axis by the F amount per revolution.  "
"This is not for threading, use G76 for threading.  For more information see "
"the <<gcode:g93-g94-g95,G95>> Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Arcs"
msgstr ""

#. type: Plain text
msgid ""
"Calculating arcs can be mind challenging enough without considering radius "
"and diameter mode on lathes as well as machine coordinate system "
"orientation. The following applies to center format arcs. On a lathe you "
"should include G18 in your preamble as the default is G17 even if you're in "
"lathe mode, in the user interface Axis. Arcs in G18 XZ plane use I (X axis) "
"and K (Z axis) offsets."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Arcs and Lathe Design"
msgstr ""

#. type: Plain text
msgid ""
"The typical lathe has the spindle on the left of the operator and the tools "
"on the operator side of the spindle center line. This is typically set up "
"with the imaginary Y axis (+) pointing at the floor."
msgstr ""

#. type: Plain text
msgid "The following will be true on this type of setup:"
msgstr ""

#. type: Plain text
msgid "The Z axis (+) points to the right, away from the spindle."
msgstr ""

#. type: Plain text
msgid ""
"The X axis (+) points toward the operator, and when on the operator side of "
"the spindle the X values are positive."
msgstr ""

#. type: Plain text
msgid ""
"Some lathes with tools on the back side have the imaginary Y axis (+)  "
"pointing up."
msgstr ""

#. type: Plain text
msgid ""
"G2/G3 Arc directions are based on the axis they rotate around. In the case "
"of lathes, it is the imaginary Y axis. If the Y axis (+) points toward the "
"floor, you have to look up for the arc to appear to go in the correct "
"direction. So looking from above you reverse the G2/G3 for the arc to appear "
"to go in the correct direction."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Radius & Diameter Mode"
msgstr ""

#. type: Plain text
msgid ""
"When calculating arcs in radius mode you only have to remember the direction "
"of rotation as it applies to your lathe."
msgstr ""

#. type: Plain text
msgid ""
"When calculating arcs in diameter mode X is diameter and the X offset (I) is "
"radius even if you're in G7 diameter mode."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tool Path"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Control Point"
msgstr ""

#. type: Plain text
msgid ""
"The control point for the tool follows the programmed path. The control "
"point is the intersection of a line parallel to the X and Z axis and tangent "
"to the tool tip diameter, as defined when you touch off the X and Z axes for "
"that tool. When turning or facing straight sided parts the cutting path and "
"the tool edge follow the same path.  When turning radius and angles the edge "
"of the tool tip will not follow the programmed path unless cutter comp is in "
"effect. In the following figures you can see how the control point does not "
"follow the tool edge as you might assume."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/control-point_en.svg"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Cutting Angles without Cutter Comp"
msgstr ""

#. type: Plain text
msgid ""
"Now imagine we program a ramp without cutter comp. The programmed path is "
"shown in the following figure. As you can see in the figure the programmed "
"path and the desired cut path are one and the same as long as we are moving "
"in an X or Z direction only."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Ramp Entry"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ramp-entry_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"Now as the control point progresses along the programmed path the actual "
"cutter edge does not follow the programmed path as shown in the following "
"figure. There are two ways to solve this, cutter comp and adjusting your "
"programmed path to compensate for tip radius."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Ramp Path"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ramp-cut_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In the above example it is a simple exercise to adjust the programmed path "
"to give the desired actual path by moving the programmed path for the ramp "
"to the left the radius of the tool tip."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Cutting a Radius"
msgstr ""

#. type: Plain text
msgid ""
"In this example we will examine what happens during a radius cut without "
"cutter comp. In the next figure you see the tool turning the OD of the part. "
"The control point of the tool is following the programmed path and the tool "
"is touching the OD of the part."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Turning Cut"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/radius-1_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In this next figure you can see as the tool approaches the end of the part "
"the control point still follows the path but the tool tip has left the part "
"and is cutting air. You can also see that even though a radius has been "
"programmed the part will actually end up with a square corner."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Radius Cut"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/radius-2_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"Now you can see as the control point follows the radius programmed the tool "
"tip has left the part and is now cutting air."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/radius-3_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In the final figure we can see the tool tip will finish cutting the face but "
"leave a square corner instead of a nice radius. Notice also that if you "
"program the cut to end at the center of the part a small amount of material "
"will be left from the radius of the tool. To finish a face cut to the center "
"of a part you have to program the tool to go past center at least the nose "
"radius of the tool."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Face Cut"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/radius-4_en.svg"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Using Cutter Comp"
msgstr ""

#. type: Plain text
msgid ""
"When using cutter comp on a lathe think of the tool tip radius as the radius "
"of a round cutter. When using cutter comp the path must be large enough for "
"a round tool that will not gouge into the next line. When cutting straight "
"lines on the lathe you might not want to use cutter comp. For example boring "
"a hole with a tight fitting boring bar you may not have enough room to do "
"the exit move. The entry move into a cutter comp arc is important to get the "
"correct results."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Plasma Cutting Primer for LinuxCNC Users"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "What Is Plasma?"
msgstr ""

#. type: Plain text
msgid ""
"Plasma is a fourth state of matter, an ionised gas which has been heated to "
"an extremely high temperature and ionised so that it becomes electrically "
"conductive. The plasma arc cutting and gouging processes use this plasma to "
"transfer an electrical arc to the workpiece. The metal to be cut or removed "
"is melted by the heat of the arc and then blown away. While the goal of "
"plasma arc cutting is the separation of the material, plasma arc gouging is "
"used to remove metals to a controlled depth and width."
msgstr ""

#. type: Plain text
msgid ""
"Plasma torches are similar in design to the automotive spark plug. They "
"consist of negative and positive sections separated by a center insulator. "
"Inside the torch, the pilot arc starts in the gap between the negatively "
"charged electrode and the positively charged tip. Once the pilot arc has "
"ionised the plasma gas, the superheated column of gas flows through the "
"small orifice in the torch tip, which is focused on the metal to be cut."
msgstr ""

#. type: Plain text
msgid ""
"In a Plasma Cutting Torch a cool gas enters Zone B, where a pilot arc "
"between the electrode and the torch tip heats and ionises the gas. The main "
"cutting arc then transfers to the workpiece through the column of plasma gas "
"in Zone C. By forcing the plasma gas and electric arc through a small "
"orifice, the torch delivers a high concentration of heat to a small area. "
"The stiff, constricted plasma arc is shown in Zone C. Direct current (DC) "
"straight polarity is used for plasma cutting, as shown in the illustration. "
"Zone A channels a secondary gas that cools the torch. This gas also assists "
"the high velocity plasma gas in blowing the molten metal out of the cut "
"allowing for a fast, slag - free cut."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_torch-head.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Arc Initialisation"
msgstr ""

#. type: Plain text
msgid ""
"There are two main methods for arc initialisation for plasma cutters that "
"are designed for CNC operation. Whilst other methods are used on some "
"machines (such as scratch start where physical contact with the material is "
"required), they are unsuited for CNC applications.."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "High Frequency Start"
msgstr ""

#. type: Plain text
msgid ""
"This start type is widely employed, and has been around the longest. "
"Although it is older technology, it works well, and starts quickly. But, "
"because of the high frequency high voltage power that is required generated "
"to ionise the air, it has some drawbacks. It often interferes with "
"surrounding electronic circuitry, and can even damage components. Also a "
"special circuit is needed to create a Pilot arc. Inexpensive models will not "
"have a pilot arc, and require touching the consumable to the work to start. "
"Employing a HF circuit also can increase maintenance issues, as there are "
"usually adjustable points that must be cleaned and readjusted from time to "
"time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Blowback Start"
msgstr ""

#. type: Plain text
msgid ""
"This start type uses air pressure supplied to the cutter to force a small "
"piston or cartridge inside the torch head back to create a small spark "
"between the inside surface of the consumable, ionising the air, and creating "
"a small plasma flame. This also creates a âpilot arcâ that provides a plasma "
"flame that stays on, whether in contact with the metal or not. This is a "
"very good start type that is now used by several manufacturers. Itâs "
"advantage is that it requires somewhat less circuitry, is a fairly reliable "
"and generates far less electrical noise"
msgstr ""

#. type: Plain text
msgid ""
"For entry level air plasma CNC systems, the blowback style is much preferred "
"to minimise electrical interference with electronics and standard PCs but "
"the High frequency start still rules supreme in larger machines from 200 "
"amps and up. These require industrial level PCâs and electronics and even "
"commercial manufacturers have had issues with faults because they have "
"failed to account for electrical noise in their designs."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "CNC Plasma"
msgstr ""

#. type: Plain text
msgid ""
"Plasma operations on CNC machines is quite unique in comparison to milling "
"or turning and is a bit of an orphan process. Uneven heating of the material "
"from the plasma arc will cause the sheet to bend and buckle. Most sheets of "
"metal do not come out of the mill or press in a very even or flat state. "
"Thick sheets (30mm plus) can be out of plane as much as 50mm to 100mm. Most "
"other CNC G-Code operations will start from a known reference or a piece of "
"stock that has a known size and shape and the G-Code is written to rough the "
"excess off and then finally cut the finished part. With plasma the unknown "
"state of the sheet makes it impossible to generate G-Code that will cater "
"for these variances in the material."
msgstr ""

#. type: Plain text
msgid ""
"A plasma Arc is oval in shape and the cutting height needs to be controlled "
"to minimise bevelled edges. If the torch is too high or too low then the "
"edges can become excessively bevelled. It is also critical that the torch is "
"held perpendicular to the surface."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Torch to work distance can impact edge bevel*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_cut-angularity.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Negative cut angle:* torch too low, increase torch to work distance.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Positive cut angle:* torch too high, decrease torch to work distance.\n"
msgstr ""

#. type: Plain text
msgid ""
"A slight variation in cut angles may be normal, as long as it is within "
"tolerance."
msgstr ""

#. type: Plain text
msgid ""
"The ability to precisely control the cutting height in such a hostile and "
"ever changing environment is a very difficult challenge. Fortunately there "
"is a very linear relationship between Torch height (Arc length) and arc "
"voltage as this graph shows."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_volts-height.png"
msgstr ""

#. type: Plain text
msgid ""
"This graph was prepared from a sample of about 16,000 readings at varying "
"cut height and the regression analysis shows 7.53 volts per mm with 99.4% "
"confidence. In this particular instance this sample was taken from an "
"Everlast 50 amp machine being controlled by Linuxcnc."
msgstr ""

#. type: Plain text
msgid ""
"Torch voltage then becomes an ideal process control variable to use to "
"adjust the cut height. Let's assume for simplicity that voltage changes by "
"10 volts per mm. This can be restated to be 1 volt per 0.1mm (0.04â).  Major "
"plasma machine manufacturers (eg Hypertherm, Thermal Dynamics and ESAB), "
"produce cut charts that specify the recommended cut height and estimated arc "
"voltage at this height as well as some additional data. So if the arc "
"voltage is 1 volt higher than the manufacturers specification, the "
"controller simply needs to lower the torch by 0.1 mm (0.04â) to move back to "
"the desired cut height. A torch height control unit (THC) is traditionally "
"used to manage this process."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Choosing a Plasma Machine for CNC operations"
msgstr ""

#. type: Plain text
msgid ""
"There are a plethora of plasma machines available on the market today and "
"not all of them are suited for CNC use. CNC Plasma cutting is a complex "
"operation and it is recommended that integrators choose a suitable plasma "
"machine. Failure to do this is likely to cause hours and hours of fruitless "
"trouble shooting trying to work around the lack of what many would consider "
"to be mandatory features."
msgstr ""

#. type: Plain text
msgid ""
"Whilst rules are made to be broken if you fully understand the reasons the "
"rule apply, we consider a new plasma table builder should select a machine "
"with the following features:"
msgstr ""

#. type: Plain text
msgid "Blowback start to minimise electrical noise to simplify construction"
msgstr ""

#. type: Plain text
msgid "A Machine torch is preferred but many have used hand torches."
msgstr ""

#. type: Plain text
msgid "A fully shielded torch tip to allow ohmic sensing"
msgstr ""

#. type: Plain text
msgid "If you have the budget, a higher end machines will supply:"
msgstr ""

#. type: Plain text
msgid ""
"Manufacturer provided cut charts which will save many hours and material "
"waste calibrating cut parameters"
msgstr ""

#. type: Plain text
msgid "Dry Contacts for ArcOK"
msgstr ""

#. type: Plain text
msgid "Terminals for Arc On switch"
msgstr ""

#. type: Plain text
msgid "Raw arc voltage or divided arc voltage output"
msgstr ""

#. type: Plain text
msgid ""
"Optionally a RS485 interface if using a Hypertherm plasma cutter and want to "
"control it from the Linuxcnc console."
msgstr ""

#. type: Plain text
msgid "Higher duty cycles"
msgstr ""

#. type: Plain text
msgid ""
"In recent times, another class of machine which includes some of these "
"features has become available at around USD $550. One example is the "
"Herocut55i available on Amazon but there is yet no feedback from users. This "
"Machine features a blowback torch, ArcOK output, torch start contacts and "
"raw arc voltage."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Types Of Torch Height Control"
msgstr ""

#. type: Plain text
msgid ""
"Most THC units are external devices and many have a fairly crude âbit bangâ "
"adjustment method. They provide two signals back to the LinuxCNC controller. "
"One turns on if the Z axis should move up and the other turns on if the Z "
"axis should move down. Neither signal is true if the torch is at the correct "
"height. The popular Proma 150 THC is one example of this type of THC. The "
"Linuxcnc THCUD component is designed to work with this type of THC."
msgstr ""

#. type: Plain text
msgid ""
"With the release of the Mesa THCAD voltage to frequency interface, LinuxCNC "
"was able to decode the actual torch voltage via an encoder input. This "
"allowed LinuxCNC to control the Z axis and eliminate external hardware. "
"Early implementations utilising the THCAD replicated the âbit bangâ "
"approach. The Linuxcnc THC component is an example of this approach."
msgstr ""

#. type: Plain text
msgid ""
"Jim Colt of Hypertherm is on record saying that the best THC controllers "
"were fully integrated into the CNC controller itself. Of course he was "
"referring to high end systems manufactured by Hypertherm, Esab, Thermal "
"Dynamics and others such as Advanced Robotic Technology in Australia, little "
"dreaming that open source could produce systems using this approach that "
"rival high end systems."
msgstr ""

#. type: Plain text
msgid ""
"The inclusion of external offsets in Linuxcnc V2.8 allowed plasma control in "
"LinuxCNC to rise to a whole new level. External Offsets refers to the "
"ability to apply an offset to the axis commanded position external to the "
"motion controller. This is perfect for plasma THC control as a method to "
"adjust the torch height in real time based on our chosen process control "
"methodology. Following a number of experimental builds, the <<cha:qtplasmac, "
"QtPlasmaC>> configuration was incorporated into LinuxCNC 2.8. This has been "
"an extremely ambitious project and many people around the globe have been "
"involved in testing and improving the feature set. QtPlasmaC is unique in "
"that its design goal was to support all THCs including the simple bit bang "
"ones through to sophisticated torch voltage control if the voltage is made "
"available to LinuxCNC via a THCAD or some other voltage sensor. Whatâs more, "
"QtPlasmaC is designed to be a stand alone system that does not need any "
"additional G-Code subroutines and allows the user to define their own cut "
"charts that are stored in the system and accessible by a drop-down."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Arc OK Signal"
msgstr ""

#. type: Plain text
msgid ""
"Plasma machines that have a CNC interface contain a set of dry contacts (eg "
"a relay) that close when a valid arc is established and each side of these "
"contacts are bought out onto pins on the CNC interface. A plasma table "
"builder should connect one side of these pins to field power and the other "
"to an input pin. This then allows the CNC controller to know when a valid "
"arc is established and also when an arc is lost unexpectedly. There is a "
"potential trap here when the input is a high impedance circuit such as a "
"Mesa card. If the dry contacts are a simple relay, there is a high "
"probability that the current passing through the relay is less than the "
"minimum current specification. Under these conditions, the relay contacts "
"can suffer from a buildup of oxide which over time can result in "
"intermittent contact operation. To prevent this from happening, a pull down "
"resistor should be installed on the controller input pin. Care should be "
"taken to ensure that this resistor is selected to ensure the minimum current "
"passes through the relay and is of sufficient wattage to handle the power in "
"the circuit. Finally, the resistor should be mounted in such a way that the "
"generated heat does not damage anything whilst in operation."
msgstr ""

#. type: Plain text
msgid ""
"If you have an ArcOK signal, it is recommended it is used over and above any "
"synthesised signal to eliminate potential build issues. A synthesised signal "
"available from an external THC or QtPlasmaCâs Mode 0 canât fully replace the "
"ArcOK circuitry in a plasma inverter. Some build issues have been observed "
"where misconfiguration or incompatibility with the plasma inverter has "
"occurred from a synthesised ArcOK signal. By and large however, a correctly "
"configured synthesised ArcOK signal is fine."
msgstr ""

#. type: Plain text
msgid ""
"A simple and effective arcOK signal can be achieved with a simple reed "
"relay. Wrap 3 turns of one of the plasma cutterâs thick cables (eg the "
"material clamp cable) around it. Place the relay in an old pen tube for "
"protection and connect one side of the relay to field power and the other "
"end to your ArcOK input pin."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Initial Height Sensing"
msgstr ""

#. type: Plain text
msgid ""
"Because the cutting height is such a critical system parameter and the "
"material surface is inherently uneven, a Z axis mechanism needs a method to "
"sense the material surface. There are three methods this can be achieved; "
"Current sensing to detect increased motor torque, a âfloatâ switch and an "
"electrical or âohmicâ sensing circuit that is closed when the torch shield "
"contacts the material. Current sensing is not a viable technique for DIY "
"tables but float switches and ohmic sensing are discussed below:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Float Switches"
msgstr ""

#. type: Plain text
msgid ""
"The torch is mounted on a sliding stage that can move up when the torch tip "
"contacts the material surface and trigger a switch or sensor. Often this is "
"achieved under G-Code control using the G38 Commands. If this is the case, "
"then after initial probing, it is recommended to probe away from the surface "
"until the probe signal is lost at a slower speed. Also, ensure the switch "
"hysteresis is accounted for."
msgstr ""

#. type: Plain text
msgid ""
"Regardless of the probing method used, it is strongly recommended that float "
"switch is implemented so that there is a fallback or secondary signal to "
"avoid damage to the torch from a crash."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ohmic Sensing"
msgstr ""

#. type: Plain text
msgid ""
"Ohmic sensing relies on contact between the torch and the material acting as "
"a switch to activate an electrical signal that is sensed by the CNC "
"controller. Provided the material is clean, this can be a much more accurate "
"method of sensing the material than a float switch which can cause "
"deflection of the material surface. This ohmic sensing circuit is operating "
"in an extremely hostile environment so a number of failsafes need to be "
"implemented to ensure safety of both the CNC electronics and the operator. "
"In plasma cutting, the earth clamp attached to the material is positive and "
"the torch is negative. It is recommended that:"
msgstr ""

#. type: Plain text
msgid ""
"Ohmic sensing only be implemented where the torch has a shield that is "
"isolated from the torch tip that conveys the cutting arc."
msgstr ""

#. type: Plain text
msgid ""
"The ohmic circuit uses a totally separate isolated power supply that "
"activates an opto-isolated relay to enable the probing signal to be "
"transmitted to the CNC controller."
msgstr ""

#. type: Plain text
msgid "The positive side of the circuit should be at the torch"
msgstr ""

#. type: Plain text
msgid ""
"Both sides of the circuit needs to be isolated by opto-isolated relays until "
"probing is being undertaken"
msgstr ""

#. type: Plain text
msgid ""
"Blocking diodes be used to prevent arc voltage entering the ohmic sensing "
"circuit."
msgstr ""

#. type: Plain text
msgid ""
"The following is an example circuit that has been proven to work and is "
"compatible with the Linuxcnc QtPlasmaC configuration."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_ohmic-sensing.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hypersensing with a MESA THCAD-5"
msgstr ""

#. type: Plain text
msgid ""
"A more sophisticated method of material sensing that eliminates the relays "
"and diodes is to use another THCAD-5 to monitor the material sensing circuit "
"voltage from an isolated power supply. The advantage this has is the THCAD "
"is designed for the hostile plasma electrical environment and totally and "
"safely isolates the logic side from the high voltage side."
msgstr ""

#. type: Plain text
msgid "To implement this method, a second encoder input is required."
msgstr ""

#. type: Plain text
msgid ""
"If using a mesa card, different firmware is available to provide 2 "
"additional Encoder A inputs on the Encoder B and Encoder Index pins. This "
"firmware is available for download for the 7i76e and 7i96 boards from the "
"Mesa web site on the product pages."
msgstr ""

#. type: Plain text
msgid ""
"The THCAD is sensitive enough to see the ramp up in circuit voltage as "
"contact pressure increases. The ohmic.comp component included in Linuxcnc "
"can monitor the sensing voltage and set a voltage threshold above which it "
"is deemed contact is made and an output is enabled. By monitoring the "
"voltage, a lower âbreak circuitâ threshold can be set to build in strong "
"switch hysteresis. This minimises false triggering. In our testing, we found "
"the material sensing using this method was more sensitive and robust as well "
"as being simpler to implement the wiring. One further advantage is using "
"software outputs instead of physical I/O pins is that it frees up pins to "
"use for other purposes. This advantage is helpful to get the most out of the "
"Mesa 7i96 which has limited I/O pins."
msgstr ""

#. type: Plain text
msgid ""
"The following circuit diagram shows how to implement a hypersensing circuit."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_hypersensing.png"
msgstr ""

#. type: Plain text
msgid ""
"We used a 15W Mean Well HDR-15 Ultra Slim DIN Rail Supply 24V DIN rail based "
"isolated power supply.. This is a double insulated Isolation Class II device "
"that will withstand any arc voltage that might be applied to the terminals."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example HAL Code for Hypersensing"
msgstr ""

#. type: Plain text
msgid ""
"The following HAL code can be pasted into your QtPlasmaC's custom.hal to "
"enable Ohmic sensing on Encoder 2 of a 7i76e. Install the correct bit file "
"and connect the THCAD to IDX+ and IDX-. Be sure to change the calibration "
"settings to agree with your THCAD-5."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# --- Load the Component ---\n"
"loadrt ohmic names=ohmicsense\n"
"addf ohmicsense servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# --- 7i76e ENCODER 2 SETUP FOR OHMIC SENSING---\n"
"setp hm2_7i76e.0.encoder.02.scale -1\n"
"setp hm2_7i76e.0.encoder.02.counter-mode 1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# --- Configure the component --- \n"
"setp ohmicsense.thcad-0-volt-freq    140200\n"
"setp ohmicsense.thcad-max-volt-freq  988300\n"
"setp ohmicsense.thcad-divide         32\n"
"setp ohmicsense.thcad-fullscale      5\n"
"setp ohmicsense.volt-divider         4.9\n"
"setp ohmicsense.ohmic-threshold      22.0\n"
"setp ohmicsense.ohmic-low            1.0\n"
"net ohmic-vel ohmicsense.velocity-in <= hm2_7i76e.0.encoder.02.velocity\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# --- Replace QtPlasmaCâs Ohmic sensing signal --- \n"
"unlinkp debounce.0.2.in\n"
"net ohmic-true ohmicsense.ohmic-on => debounce.0.2.in\n"
"net plasmac:ohmic-enable    =>  ohmicsense.is-probing\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "THC Delay"
msgstr ""

#. type: Plain text
msgid ""
"When an arc is established, arc voltage peaks significantly and then settles "
"back to a stable voltage at cut height. As shown by the green line in the "
"image below."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_thc-delay.png"
msgstr ""

#. type: Plain text
msgid ""
"It is important for the plasma controller to âwait it outâ before auto "
"sampling the torch voltage and commencing THC control. If enabled too early, "
"the voltage will be above the desired cut volts and the torch will be driven "
"down in an attempt to address a perceived over-height condition."
msgstr ""

#. type: Plain text
msgid ""
"In our testing this varies between machines and material from 0.5 to 1.5 "
"seconds. Therefore a delay of 1.5 seconds after a valid arcOK signal is "
"received before enabling THC control is a safe initial setting. If you want "
"to shorten this for a given material, LinuxCNCâs Halscope will allow you to "
"plot the torch voltage and make informed decisions about the shortest safe "
"delay is used."
msgstr ""

#. type: Plain text
msgid ""
"If the cut velocity is not near the desired cut speed at the end of this "
"delay, the controller should wait until this is achieved before enabling the "
"THC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Torch Voltage Sampling"
msgstr ""

#. type: Plain text
msgid ""
"Rather than relying on the manufacturerâs cut charts to set the desired "
"torch voltage, many people (the writer included) prefer to sample the "
"voltage as the THC is enabled and use that as a set point."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Torch Breakaway"
msgstr ""

#. type: Plain text
msgid ""
"It is recommended that a mechanism is provided to allow the torch to âbreak "
"awayâ or fall off in the case of impact with the material or a cut part that "
"has tipped up. A sensor should be installed to allow the CNC controller to "
"detect if this has occurred and pause the running program. Usually a break "
"away is implemented using magnets to secure the torch to the Z axis stage."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Corner Lock / Velocity Anti-Dive"
msgstr ""

#. type: Plain text
msgid ""
"The Linuxcnc trajectory planner is responsible for translating velocity and "
"acceleration commands into motion that obeys the laws of physics. For "
"example, motion will slow when negotiating a corner. Whilst this is not a "
"problem with milling machines or routers, this poses a particular problem "
"for plasma cutting as the arc voltage increases as motion slows. This will "
"cause the THC to drive the torch down. One of the enormous advantages of a "
"THC control embedded within the LinuxCNC motion controller is that it knows "
"what is going on at all times. So it becomes a trivial matter to monitor the "
"current velocity (motion.current-velocity) and to hold THC operation if it "
"falls below a set threshold (eg, 10% below the desired feedrate."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Void / Kerf Crossing"
msgstr ""

#. type: Plain text
msgid ""
"If the plasma torch passes over a void while cutting, arc voltage rapidly "
"rises and the THC responds by violent downward motion which can smash the "
"torch into the material possibly damaging it. This is a situation that is "
"difficult to detect and handle. To a certain extent it can be mitigated by "
"good nesting techniques but can still occur on thicker material when a slug "
"falls away. This is the one problem that has yet to be solved within the "
"LinuxCNC open source movement."
msgstr ""

#. type: Plain text
msgid ""
"One suggested technique is to monitor the rate of change in torch volts over "
"time (dv/dt) because this parameter is orders of magnitude higher when "
"crossing a void than what occurs due to normal warpage of the material. The "
"following graph shows a low resolution plot of dv/dt (in blue) while "
"crossing a void. The red curve is a moving average of torch volts."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/primer_kerf-cross.png"
msgstr ""

#. type: Plain text
msgid ""
"So it should be possible to compare the moving average with the dv/dt and "
"halt THC operation once the dv/dt exceeds the normal range expected due to "
"warpage. More work needs to be done in this area to come up with a working "
"solution in LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hole And Small Shape Cutting"
msgstr ""

#. type: Plain text
msgid ""
"It is recommended that you slow down cutting when cutting holes and small "
"shapes."
msgstr ""

#. type: Plain text
msgid ""
"John Moore says: âIf you want details on cutting accurate small holes look "
"up the sales sheets on Hypertherm's \"True Hole Technology\" also look on "
"PlasmaSpider, user seanp has posted extensively on his work using simple air "
"plasma."
msgstr ""

#. type: Plain text
msgid ""
"The generally accepted method to get good holes from 37mm dia. and down to "
"material thickness with minimal taper using an air plasma is:"
msgstr ""

#. type: Plain text
msgid "Use recommended cutting current for consumables."
msgstr ""

#. type: Plain text
msgid "Use fixed (no THC) recommended cutting height for consumables."
msgstr ""

#. type: Plain text
msgid ""
"Cut from 60% to 70% of the recommended feed rate of consumables and "
"materials."
msgstr ""

#. type: Plain text
msgid "Start lead in at or near center of hole."
msgstr ""

#. type: Plain text
msgid "Use perpendicular lead in."
msgstr ""

#. type: Plain text
msgid ""
"No lead out, either a slight over burn or early torch off depending on what "
"works best for you."
msgstr ""

#. type: Plain text
msgid ""
"You will need to experiment to get exact hole size because the kerf with "
"this method will be wider than your usual straight cut.â"
msgstr ""

#. type: Plain text
msgid ""
"This slow down can be achieved by manipulating the feed rate directly in "
"your post processor or by using adaptive feed and an analog pin as input. "
"This lets you use M67/M68 to set the percentage of desired feed to cut at."
msgstr ""

#. type: Plain text
msgid "Knowing The Feedrate"
msgstr ""

#. type: Plain text
msgid ""
"From the preceding discussion it is evident that the plasma controller needs "
"to know the feed rate set by the user. This poses a problem with LinuxCNC "
"because the Feedrate is not saved by LinuxCNC after the G-Code is buffered "
"and parsed. There are two approaches to work around this:"
msgstr ""

#. type: Plain text
msgid ""
"Remap the F command and save the commanded feedrate set in G-Code via an M67/"
"M68 command"
msgstr ""

#. type: Plain text
msgid ""
"Storing the cut charts in the plasma controller and allow the current "
"feedrate be queried by the G-Code program (as QtPlasmaC does)"
msgstr ""

#. type: Plain text
msgid ""
"One experimental Linuxcnc branch that would be useful for plasma cutting was "
"the state tags branch. This adds a âtagâ that is available to motion "
"containing the current feed and speed rates for all active motion commands. "
"It has been merged and will be in LinuxCNC v2.9"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "I/O Pins For Plasma Controllers"
msgstr ""

#. type: Plain text
msgid ""
"Plasma cutters require several additional pins. In LinuxCNC, there are no "
"hard and fast rules about which pin does what. In this discussion we will "
"assume the plasma inverter has a CNC interface and the controller card has "
"active high inputs are in use (Eg. Mesa 7i76e)."
msgstr ""

#. type: Plain text
msgid ""
"Plasma tables can be large machines and we recommend that you take the time "
"to install separate max/min limit switches and homing switches for each "
"joint. The exception might be the Z axis lower limit. When a homing switch "
"is triggered the joint decelerates fairly slowly for maximum accuracy. This "
"means that if you wish to use homing velocities that are commensurate with "
"table size, you can overshoot the initial trigger point by 50-100mm. If you "
"use a shared home/limit switch, you have to move the sensor off the trigger "
"point with the final HOME_OFFSET or you will trigger a limit switch fault as "
"the machine comes out of homing. This means you could lose 50mm or more of "
"axis travel with shared home/limit switches. This does not happen if "
"separate home and limit switches are used."
msgstr ""

#. type: Plain text
msgid ""
"The following pins are usually required (note that suggested connections may "
"not be appropriate for a QtPlasmaC configuration):"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Arc OK (input)"
msgstr ""

#. type: Plain text
msgid "Inverter closes dry contacts when a valid arc is established"
msgstr ""

#. type: Plain text
msgid "Connect Field power to one Inverter ArcOK terminal."
msgstr ""

#. type: Plain text
msgid "Connect other Inverter Ok Terminal to input pin."
msgstr ""

#. type: Plain text
msgid ""
"Usually connected to one of the 'motion.digital-<nn>' pins for use from G-"
"Code with M66"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Torch On (output)"
msgstr ""

#. type: Plain text
msgid "Triggers a relay to close the torch on switch in the inverter"
msgstr ""

#. type: Plain text
msgid ""
"Connect the torch on terminals on the inverter to the relay output terminals"
msgstr ""

#. type: Plain text
msgid "Connect one side of the coil to the output pin"
msgstr ""

#. type: Plain text
msgid "Connect the other side of the coil to Field Power ground."
msgstr ""

#. type: Plain text
msgid ""
"If a mechanical relay is used, connect a flyback diode (eg IN400x series) "
"across the coil terminals with the band on the diode pointing towards the "
"output pin"
msgstr ""

#. type: Plain text
msgid ""
"If a Solid State Relay is used, polarity may need to be observed on the "
"outputs"
msgstr ""

#. type: Plain text
msgid ""
"In some circumstances, the onboard spindle relay on a Mesa card can be used "
"instead of an external relay."
msgstr ""

#. type: Plain text
msgid "Usually connected to 'spindle.0.on'"
msgstr ""

#. type: Plain text
msgid ""
"It is strongly recommended that the torch cannot be enabled while this pin "
"is false otherwise the torch will not be extinguished when estop is pressed;"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Float switch (input)"
msgstr ""

#. type: Plain text
msgid ""
"Used for surface probing. A sensor or switch that is activated if the torch "
"slides up when it hits the material."
msgstr ""

#. type: Plain text
msgid ""
"Connect Proximity sensor output to chosen input pin. If mechanical switches "
"are used. Connect one side of the switch to field power and the other side "
"of the switch to input."
msgstr ""

#. type: Plain text
msgid "Usually Connected to 'motion.probe-input'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ohmic Sensor enable (output)"
msgstr ""

#. type: Plain text
msgid "See the <<ohmic-sensing,ohmic sensing>> schematic."
msgstr ""

#. type: Plain text
msgid ""
"Connect output pin to one side of the isolation relays and the other side to "
"field power ground."
msgstr ""

#. type: Plain text
msgid ""
"In a non-QtPlasmaC configuration, usually triggered by a 'motion.digital-out-"
"<nn>' so it can be controlled in G-Code by M62/M63/M64/M65"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ohmic Sensing (input)"
msgstr ""

#. type: Plain text
msgid ""
"Take care to follow the <<ohmic-sensing,ohmic sensing>> schematic shown "
"previously."
msgstr ""

#. type: Plain text
msgid ""
"An isolated power supply triggers a relay when the torch shield contacts the "
"material."
msgstr ""

#. type: Plain text
msgid "Connect field power to one output terminal and the other to the input."
msgstr ""

#. type: Plain text
msgid ""
"Take care to observe relay polarity if opto-coupled solid State relays are "
"used."
msgstr ""

#. type: Plain text
msgid ""
"Usually connected to 'motion.probe-input' and may be orâd with the float "
"switch."
msgstr ""

#. type: Plain text
msgid ""
"As can be seen, plasma tables are pin intensive and we have already consumed "
"about 15 inputs before the normal estops are added. Others have other views "
"but it is the writer's opinion that the Mesa 7i76e is preferred over the "
"cheaper 7i96 to allow for MPGâs, scale and axis selection switch and other "
"features you may wish to add over time. If your table uses servos, there are "
"a number of alternatives. Whilst there are other suppliers, designing your "
"machine around the Mesa ecosystem will simplify use of their THCAD board to "
"read arc voltage."
msgstr ""

#. type: Plain text
msgid ""
"As mentioned earlier, a breakaway sensor should be installed that is "
"triggered if the torch crashes and falls off."
msgstr ""

#. type: Plain text
msgid ""
"Usually, this would be connected to 'halui.program-pause' so the fault can "
"be rectified and the program resumed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G-Code For Plasma Controllers"
msgstr ""

#. type: Plain text
msgid ""
"Most plasma controllers offer a method to change settings from G-Code. "
"Linuxcnc support this via M67/M68 for analog commands and M62-M65 for "
"digital (on/off commands). How this is implemented is totally arbitrary. "
"Lets look at how the LinuxCNC QtPlasmaC configuration does this:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Select Material Settings In QtPlasmaC And Use The Feedrate For That Material:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"M190 Pn\n"
"M66 P3 L3 Q1\n"
"F#<_hal[plasmac.cut-feed-rate]>\n"
"M3 S1\n"
msgstr ""

#. type: Plain text
msgid ""
"Users with a very large number of entries in the QtPlasmaC Materials Table "
"may need to increase the Q1 parameter (eg Q2)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Enable/Disable THC Operation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"M62 P2 will disable THC (synchronised with motion)\n"
"M63 P2 will enable THC(synchronised with motion)\n"
"M64 P2 will disable THC (immediately)\n"
"M65 P2 will enable THC(immediately)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Reduce Cutting Speeds: (eg for hole cutting)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"M67 E3 Q0 would set the velocity to 100% of requested~speed\n"
"M67 E3 Q40 would set the velocity to 40% of requested~speed\n"
"M67 E3 Q60 would set the velocity to 60% of requested~speed\n"
"M67 E3 Q100 would set the velocity to 100% of requested~speed\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Cutter Compensation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G41.1 D#<_hal[plasmac_run.kerf-width-f]> ; for left of programmed path\n"
"G42.1 D#<_hal[plasmac_run.kerf-width-f]> for right of programmed path\n"
"G40 to turn compensation off\n"
msgstr ""

#. type: Plain text
msgid ""
"Integrators should familiarise themselves with the Linuxcnc documentation "
"for the various Linuxcnc G-Code commands mentioned above."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "External Offsets and Plasma Cutting"
msgstr ""

#. type: Plain text
msgid ""
"External Offsets were introduced to Linuxcnc with version 2.8. By external, "
"it means that we can apply an offset external to the G-Code that the "
"trajectory planner knows nothing about. It easiest to explain with an "
"example. Picture a lathe with an external offset being applied by a "
"mathematical formula to machine a lobe on a cam. So the lathe is blindly "
"spinning around with the cut diameter set to a fixed diameter and the "
"external offset moves the tool in and out to machine the cam lobe via an "
"applied external offset. To configure our lathe to machine this cam, we need "
"to allocate some portion of the axis velocity and acceleration to external "
"offsets or the tool can't move. This is where the ini variable "
"OFFSET_AV_RATIO comes in. Say we decide we need to allocate 20% of the "
"velocity and acceleration to the external offset to the Z axis. We set this "
"equal to 0.2. The consequence of this is that your maximum velocity and "
"acceleration for the Latheâs Z axis is only 80% of what it could be."
msgstr ""

#. type: Plain text
msgid ""
"External offsets are a very powerful method to make torch height adjustments "
"to the Z axis via a THC. But plasma is all about high velocities and rapid "
"acceleration so it makes no sense to limit these parameters. Fortunately in "
"a plasma machine, the Z axis is either 100% controlled by the THC or it "
"isnât. During the development of Linuxcncâs external offsets it was "
"recognised that Z axis motion by G-Code and by THC were mutually exclusive. "
"This allows us to trick external offsets into giving 100 % of velocity and "
"acceleration all of the time. We can do this by doubling the machineâs Z "
"axis velocity and acceleration settings in the ini file and set "
"OFFSET_AV_RATIO = 0.5. That way 100% of the maximum velocity and "
"acceleration will be available for both probing and THC."
msgstr ""

#. type: Plain text
msgid ""
"Example: On a metric machine with a NEMA23 motor with a direct drive to a "
"5mm ball screw, 60 mm/second maximum velocity and 700 mm/sec/sec "
"acceleration were determined to be safe values without loss of steps. For "
"this machine, set the Z axis in the ini file as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[AXIS_Z]\n"
"OFFSET_AV_RATIO = 0.5\n"
"MAX_VELOCITY = 120\n"
"MAX_ACCELERATION = 1400\n"
msgstr ""

#. type: Plain text
msgid ""
"The joint associated with this axis would have the velocity and acceleration "
"variables set as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_n]\n"
"MAX_VELOCITY = 60\n"
"MAX_ACCELERATION = 700\n"
msgstr ""

#. type: Plain text
msgid ""
"For further information about external offsets (for V 2.8 and higher) please "
"read the <<sec:axis-section,[AXIS_<letter>] Section>> of the INI file "
"document and <<cha:external-offsets,External Axis Offsets>> in the Linuxcnc "
"documentation."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reading Arc Voltage With The Mesa THCAD"
msgstr ""

#. type: Plain text
msgid ""
"The Mesa THCAD board is a remarkably well priced and accurate voltage to "
"frequency converter that is designed for the hostile noisy electrical "
"environment associated with plasma cutting. Internally it has a 0-10 volt "
"range. This range can be simply extended by the addition of some resistors "
"as described in the documentation. This board is available in three "
"versions, the newer THCAD-5 with a 0-5 volt range, the THCAD-10 with a 0-10 "
"volt range and the THCAD-300 which is pre-calibrated for a 300 volt extended "
"range. Each board is individually calibrated and a sticker is applied to the "
"board that states the frequency at 0 volts and full scale. For use with "
"LinuxCNC, it is recommended that the 1/32 divisor be selected by the "
"appropriate link on the board. In this case, be sure to also divide the "
"stated frequencies by 32. This is more appropriate for the 1 kHz servo "
"thread and also allows more time for the THCAD to average and smooth the "
"output."
msgstr ""

#. type: Plain text
msgid ""
"There is a lot of confusion around how to decode the THCAD output so lets "
"consider the Mesa 7i76e and the THCAD-10 for a moment with the following "
"hypothetical calibration data:"
msgstr ""

#. type: Plain text
msgid "Full scale 928,000 Hz (1/32 29,000 Hz)"
msgstr ""

#. type: Plain text
msgid "0 volt 121,600 Hz (1/32 3,800 Hz)"
msgstr ""

#. type: Plain text
msgid "Because the full scale is 10 volts, then the frequency per volt is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(29,000 - 3,800) / 10 = 2,520 Hz per volt\n"
msgstr ""

#. type: Plain text
msgid "So assuming we have a 5 volt input, the calculated frequency would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(2520 * 5) + 3,800 = 16,400\n"
msgstr ""

#. type: Plain text
msgid ""
"So now it should be fairly clear how to convert the frequency to its voltage "
"equivalent:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "Volts = (frequency - 3,800) / 2,520\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "THCAD Connections"
msgstr ""

#. type: Plain text
msgid "On the high voltage side:"
msgstr ""

#. type: Plain text
msgid "Connect the divided or raw arc voltage to IN + and IN-"
msgstr ""

#. type: Plain text
msgid "Connect the interconnect cable shield to the Shield connection."
msgstr ""

#. type: Plain text
msgid "Connect the other Shield terminal to frame ground."
msgstr ""

#. type: Plain text
msgid ""
"Assuming it is connected to a 7i76e, connect the output to the spindle "
"encoder input:"
msgstr ""

#. type: Plain text
msgid "THCAD +5v to TB3 Pin 6 (+5 VP)"
msgstr ""

#. type: Plain text
msgid "THCAD -5v to TB3 Pin 1 (GND)"
msgstr ""

#. type: Plain text
msgid "THCAD FOUT+ to TB3 Pin 7 (ENC A+)"
msgstr ""

#. type: Plain text
msgid "THCAD FOUT- to TB3 Pin 8 (ENC A-)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "THCAD Initial Testing"
msgstr ""

#. type: Plain text
msgid ""
"Make sure you have the following lines in your ini file (assuming a Mesa "
"7i76e):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp hm2_7i76e.0.encoder.00.scale -1\n"
"setp hm2_7i76e.0.encoder.00.counter-mode 1\n"
msgstr ""

#. type: Plain text
msgid ""
"Power up your controller and open Halshow (Axis: Show Homing Configuration), "
"Drill down to find the 'hm2_7i76e.0.encoder.00.velocity pin'. With 0 volts "
"applied, it should be hovering around the 0 volt frequency (3,800 in our "
"example). Grab a 9 volt battery and connect it to IN+ and IN-. For a "
"THCAD-10 you can now calculate the expected velocity. (26,480 in our "
"hypothetical example). If you pass this test, then you are ready to "
"configure your LinuxCNC plasma controller."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Which Model THCAD To Use"
msgstr ""

#. type: Plain text
msgid ""
"The THCAD-5 is useful if you intend to use it for ohmic sensing. There is no "
"doubt the THCAD-10 is the more flexible device and it is easy to alter the "
"scaling. However, there is one caveat that can come into play with some "
"cheaper plasma cutters with an inbuilt voltage divider. That is, the "
"internal resistors may be sensed by the THCAD as being part of its own "
"external resistance and return erroneous results. For example, the 16:1 "
"divider on the Everlast plasma cutters needs to be treated as 24:1 (and 50:1 "
"becomes 75:1). This is not a problem with more reputable brands (eg. Thermal "
"Dynamics, Hypertherm, ESAB etc). So if you are seeing lower than expected "
"cutting voltages, it might be preferable to reconfigure the THCAD to read "
"raw arc voltage."
msgstr ""

#. type: Plain text
msgid ""
"Remembering that plasma arc voltages are potentially lethal, here are some "
"suggested criteria."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pilot Arc Start"
msgstr ""

#. type: Plain text
msgid ""
"Because there is not likely to be any significant EMI, you should be able to "
"safely install the THCAD in your control panel if you have followed our "
"construction guidelines."
msgstr ""

#. type: Plain text
msgid ""
"If you do not have a voltage divider, either install scaling resistors "
"inside the plasma cutter and install the THCAD in the control panel or "
"follow the suggestions for HF start machines."
msgstr ""

#. type: Plain text
msgid ""
"If you have a voltage divider, install a THCAD-10 in your control panel. "
"Weâve had no problems with this configuration with a 120 amp Thermal "
"Dynamics plasma cutter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HF Start"
msgstr ""

#. type: Plain text
msgid ""
"Install the THCAD at the inverter as the frequency signal is far more immune "
"to EMI noise."
msgstr ""

#. type: Plain text
msgid ""
"If you do not have a voltage divider and you have room inside the plasma "
"cutter, install a THCAD-300 inside the plasma cutter."
msgstr ""

#. type: Plain text
msgid ""
"If you do not have a voltage divider and you do not have room inside the "
"plasma cutter, install a THCAD-10 in a metal case outside the plasma cutter "
"and install 50% of the scaling resistance on each of the IN+ and IN- inside "
"the plasma cutter case so no lethal voltages come out of the case."
msgstr ""

#. type: Plain text
msgid ""
"If you have a voltage divider, install a THCAD-10 in a metal case outside "
"the plasma cutter"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Raw Arc voltage presented on a connector"
msgstr ""

#. type: Plain text
msgid ""
"In this case, regardless of the arc starting method, there are probably "
"already resistors included in the circuitry to avoid lethal shocks so a "
"THCAD-10 is advised so this resistance (typically 200k Ohms) can be "
"accounted for when choosing a scaling resistor as these resistors will "
"distort the voltage reported by the THCAD-300."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Post Processors And Nesting"
msgstr ""

#. type: Plain text
msgid "Plasma is no different to other CNC operations in that it is:"
msgstr ""

#. type: Plain text
msgid "Designed in CAD (where it is output as a DXF or sometimes SVG format)."
msgstr ""

#. type: Plain text
msgid "Processed in CAM to generate final G-Code that is loaded to the machine"
msgstr ""

#. type: Plain text
msgid "Cutting the parts via CNC G-Code commands."
msgstr ""

#. type: Plain text
msgid ""
"Some people achieve good results with Inkscape and G-Code tools but SheetCam "
"is a very well priced solution and there are a number of post processors "
"available for Linuxcnc. SheetCam has a number of advanced features designed "
"for plasma cutting and for the price, is a no brainer for anybody doing "
"regular plasma cutting."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Designing For Noisy Electrical Environments"
msgstr ""

#. type: Plain text
msgid ""
"Plasma cutting is inherently an extremely hostile and noisy electrical "
"environment. If you have EMI problems things won't work correctly. You might "
"fire the torch and the computer will reboot in a more obvious example, but "
"you can have any number of other odd symptoms. They will pretty much all "
"happen only when the torch is cutting - often when it is first fired."
msgstr ""

#. type: Plain text
msgid ""
"Therefore, system builders should select components carefully and design "
"from the ground up to cope with this hostile environment to avoid the impact "
"of Electro-Magnetic Interference (EMI). Failure to do this could result in "
"countless hours of fruitless troubleshooting."
msgstr ""

#. type: Plain text
msgid ""
"Choosing ethernet boards such as the Mesa 7i76e or the cheaper 7i96 helps by "
"allowing the PC to be located away from the electronics and the plasma "
"machine. This hardware also allows the use of 24 volt logic systems which "
"are much more noise tolerant. Components should be mounted in a metal "
"enclosure connected to the mains earth. It is strongly recommended that an "
"EMI filter is installed on the mains power connection. The simplest way is "
"to use a EMI filtered mains power IEC connector commonly used on PCâs and "
"electric appliances which allows this to be achieved with no extra work. "
"Plan the layout of components in the enclosure so that mains power, high "
"voltage motor wires and logic signals are kept as separate as possible from "
"each other. If they do have to cross, keep them at 90 degrees."
msgstr ""

#. type: Plain text
msgid ""
"Peter Wallace from Mesa Electronics suggests; âIf you have a CNC compatible "
"plasma source with a voltage divider, I would mount the THCAD inside your "
"electronics enclosure with all the other motion hardware. If you have a "
"manual plasma source and you are reading raw plasma voltage, I would mount "
"the THCAD as close to the plasma source as possible (even inside the plasma "
"source case if it fits.) In this case, make sure that all low side THCAD "
"connections are fully isolated from the plasma source. If you use a shielded "
"box for the THCAD, the shield should connect to your electronic enclosure "
"ground, not the plasma source ground.â"
msgstr ""

#. type: Plain text
msgid ""
"It is recommended to run a separate earth wire from motor cases and the "
"torch back to a central star grounding point on the machine. Connect the "
"plasma ground lead to this point and optionally an earth rod driven into the "
"ground as close as possible to the machine (particularly if its a HF start "
"plasma machine)."
msgstr ""

#. type: Plain text
msgid ""
"External wiring to motors should be shielded and appropriately sized to "
"handle the current passing through the circuit. The shield should be left "
"unconnected at the motor end and earthed at the control box end. Consider "
"using an additional pin on any connectors into the control box so the earth "
"can be extended through into the control box and earthed to the chassis "
"right at the stepper/servo motor controller itself."
msgstr ""

#. type: Plain text
msgid ""
"We are aware of at least one commercial system builder who has had problems "
"with induced electrical noise on the ohmic sensing circuit. Whilst this can "
"be mitigated by using ferrite beads and coiling the cable, adding a feed "
"through power line filter is also recommended where the ohmic sensing signal "
"enters the electronics enclosure."
msgstr ""

#. type: Plain text
msgid ""
"Tommy Berisha, the master of building plasma machines on a budget says: âIf "
"on a budget, consider using old laptop power bricks. They are very good, "
"filtering is good, completely isolated, current limited (this becomes very "
"important when something goes wrong), and fitting 2 or 3 of them in series "
"is easy as they are isolated ( be aware that some do have the grounding "
"wired to the negative output terminal, so. It has to be disconnected, simply "
"done by using a power cable with no ground contacts)â."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Water Tables"
msgstr ""

#. type: Plain text
msgid ""
"The minimum water level under the cut level of the torch should be around "
"40mm, having space under slats is nice so the water can level and escape "
"during cutting, having a bit of water above the metal plate being cut is "
"really nice as it gets rid of the little bit of dust, running it submerged "
"is the best way but not preferable for systems with part time use as it will "
"corrode the torch. Adding baking soda to the water will keep the table in a "
"nice condition for many years as it does not allow corrosion while the slats "
"are under water and it also reduces the smell of water vapour. Some people "
"use a water reservoir with a compressed air inlet so they can push the water "
"from the reservoir up to the water table on demand and thus allow changes in "
"water levels."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Downdraft Tables"
msgstr ""

#. type: Plain text
msgid ""
"Many commercial tables utilise a down draft design so fans are used to suck "
"air down through the slats to capture fumes and sparks. Often tables are "
"zoned so only a section below the torch is opened to the outgoing vent, "
"often using air rams and air solenoids to open shutters. Triggering these "
"zones is relatively straightforward if you use the axis or joint position "
"from one of the motion pins and the lincurve component to map downdraft "
"zones to the correct output pin."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Designing For Speed And Acceleration"
msgstr ""

#. type: Plain text
msgid ""
"In plasma cutting, speed and acceleration are king. The higher the "
"acceleration, the less the machine needs to slow down when negotiating "
"corners. This implies that the gantry should be as light as possible without "
"sacrificing torsional stiffness. A 100mm x 100mm x 2mm aluminium box section "
"has equivalent torsional stiffness to an 80mm x 80mm T slot extrusion yet is "
"62% lighter. So does the convenience of T slots outweigh the additional "
"construction?"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Distance Travelled Per Motor Revolution"
msgstr ""

#. type: Plain text
msgid ""
"Stepper motors suffer from resonance and a direct drive pinion is likely to "
"mean that the motor is operating under unfavourable conditions. Ideally, for "
"plasma machines a distance of around 15-25mm per motor revolution is "
"considered ideal but even around 30mm per revolutions is still acceptable. A "
"5mm pitch ball screw with a 3:1 or 5:1 reduction drive is ideal for the Z "
"axis."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "QtPlasmaC LinuxCNC Plasma Configuration"
msgstr ""

#. type: Plain text
msgid ""
"The <<cha:qtplasmac, QtPlasmaC configuration>> which is comprised of a HAL "
"component (plasmac.hal) plus a complete configurations for the QtPlasmaC GUI "
"has received considerable input from many in the LinuxCNC Open Source "
"movement that have advanced the understanding of plasma controllers since "
"about 2015. There has been much testing and development work in getting "
"QtPlasmaC to its current working state. Everything from circuit design to G-"
"Code control and configuration has been included. Additionally, QtPlasmaC "
"supports external THCâs such as the Proma 150 but really comes into its own "
"when paired with a Mesa controller as this allows the integrator to include "
"the Mesa THCAD voltage to frequency converter which is purpose built to deal "
"with the hostile plasma environment."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC is designed to stand alone and includes the ability to include "
"your cutting charts yet also includes features to be used with a post "
"processor like SheetCam."
msgstr ""

#. type: Plain text
msgid ""
"The QtPlasmaC system is now included in Version 2.9 and above of Linuxcnc. "
"Its now quite mature and has been significantly enhanced since the first "
"version of this guide was written. QtPlasmaC will define LinuxCNCâs plasma "
"support for many years to come as it includes all of the features a "
"proprietary high end plasma control system at an open source price."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hypertherm RS485 Control"
msgstr ""

#. type: Plain text
msgid ""
"Some Hypertherm plasma cutters have a RS485 interface to allow the "
"controller (eg. Linuxcnc) to set amps.pressure and mode. A number of people "
"have used a userspace component written in Python to achieve this. More "
"recently, QtPlasmaC now supports this interface natively. Refer to the "
"QtPlasmaC documentation for how to use it."
msgstr ""

#. type: Plain text
msgid ""
"The combination of a slow baud rate used by Hypertherm and the userspace "
"component, make this fairly slow to alter machine states so it generally not "
"viable to change settings on the fly while cutting."
msgstr ""

#. type: Plain text
msgid ""
"When selecting a RS485 interface to use at the PC end, users have reported "
"that USB to RS485 interfaces are not reliable. Good reliable results have "
"been achieved using a hardware based RS232 interface (eg PCI/PCIe or "
"motherboard port) and an appropriate RS485 converter. Some users have "
"reported success with a Sunix P/N: SER5037A PCI RS2322 card a generic XC4136 "
"RS232 to RS485 converter (which may sometimes include a USB cable as well)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Post Processors For Plasma Cutting"
msgstr ""

#. type: Plain text
msgid ""
"CAM programs (Computer Aided Manufacture) are the bridge between CAD "
"(Computer Aided Design) and the final CNC (Computer Numerical Control) "
"operation. They often include a user configurable post processor to define "
"the code that is generated for a specific machine or dialect of G-Code."
msgstr ""

#. type: Plain text
msgid ""
"Many Linuxcnc users are perfectly happy with using Inkscape to convert .SVG "
"vector based files to G-Code. If you are using a plasma for hobby or home "
"use, consider this option. However, if your needs are more complex, probably "
"the best and most reasonably priced solution is SheetCam. SheetCam supports "
"both Windows and Linux and post processors are available for it including "
"the QtPlasmaC configuration. SheetCam allows you to nest parts over a full "
"sheet of material and allows you to configure toolsets and code snippets to "
"suit your needs. SheetCam post processors are text files written in the Lua "
"programming language and are generally easy to modify to suit your exact "
"requirements. For further information, consult the https://sheetcam."
"com[SheetCam web site] and their support forum."
msgstr ""

#. type: Plain text
msgid ""
"Another popular post-processor is included with the popular Fusion360 "
"package but the included post-processors will need some customisation."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is a CNC application and discussions of CAM techniques other than "
"this introductory discussion are out of scope of LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"AXIS is a graphical front-end for LinuxCNC which features a live preview and "
"backplot. It is written in Python and uses Tk and OpenGL to display its user "
"interface."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "AXIS Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Getting Started"
msgstr ""

#. type: Plain text
msgid ""
"If your configuration is not currently set up to use AXIS, you can change it "
"by editing the .ini file. In the section '[DISPLAY]' change the 'DISPLAY' "
"line to read 'DISPLAY = axis'."
msgstr ""

#. type: Plain text
msgid ""
"The sample configuration 'sim/axis.ini' is already configured to use AXIS as "
"its front-end."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "INI settings"
msgstr ""

#. type: Plain text
msgid ""
"For more information on ini file settings that can change how AXIS works see "
"the <<sec:display-section,Display Section>> of the INI Configuration Chapter."
msgstr ""

#. type: Plain text
msgid ""
"Adjust the response rate of the GUI in milli seconds. Typical 100, useable "
"range 50 - 200 + (will accept time in seconds (.05 -.2) for legacy reasons - "
"milli seconds preferred to match other screens)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"CYCLE_TIME = 100\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "A Typical Session"
msgstr ""

#. type: Plain text
msgid "Start LinuxCNC."
msgstr ""

#. type: Plain text
msgid "Reset E-STOP (F1) and turn the Machine Power (F2) on."
msgstr ""

#. type: Plain text
msgid "Home all axes."
msgstr ""

#. type: Plain text
msgid "Load the g-code file."
msgstr ""

#. type: Plain text
msgid "Use the preview plot to verify that the program is correct."
msgstr ""

#. type: Plain text
msgid "Load the material."
msgstr ""

#. type: Plain text
msgid ""
"Set the proper offset for each axis by jogging and using the Touch Off "
"button as needed."
msgstr ""

#. type: Plain text
msgid "Run the program."
msgstr ""

#. type: Plain text
msgid ""
"To run the same program again depends on your setup and requirements.  You "
"might need to load more material and set offsets or move over and set an "
"offset then run the program again. If your material is fixtured then you "
"might need to only run the program again. See the <<sub:axis-machine-menu,"
"Machine Menu>> for more information on the run command."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "AXIS Display"
msgstr ""

#. type: Plain text
msgid "The AXIS window contains the following elements:"
msgstr ""

#. type: Plain text
msgid "A display area that shows one of the following:"
msgstr ""

#. type: Plain text
msgid "a preview of the loaded file (in this case,"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'axis.ngc'), as well as the current location of the CNC\n"
"machine's 'controlled point'. Later, this area will display the path\n"
"the CNC machine has moved through, called the 'backplot'\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "a large readout showing the current position and all offsets.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "A menu bar and toolbar that allow you to perform various actions\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'Manual Control Tab' - which allows you to make the\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"machine move, turn the spindle on or off, and turn the coolant on or\n"
"off if included in the ini file.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'MDI Tab' - where G-code programs can be entered manually,\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"one line at a time. This also shows the 'Active G Codes' which shows\n"
"which modal G Codes are in effect.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'Feed Override' - which allows you to scale\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"the speed of programmed motions. The default maximum is 120% \n"
"and can be set to a different\n"
"value in the ini file. See the <<sec:display-section,Display Section>> of the\n"
"INI file for more information.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'Spindle Override' - which allows you to\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "scale the spindle speed up or down.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'Jog Speed' - which allows you to set the jog speed\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"within the limits set in the ini file. See the \n"
"<<sec:display-section,Display Section>> of the INI file for more information.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'Max Velocity' - which allows you to restrict the maximum velocity of all\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "programmed motions (except spindle synchronized motion).\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "A text display area that shows the loaded G-Code.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "A status bar which shows the state of the machine. In this screen\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"shot, the machine is turned on, does not have a tool inserted, and the\n"
"displayed position is 'Relative' (showing all offsets), and 'Actual'\n"
"(showing feedback position).\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Menu Items"
msgstr ""

#. type: Plain text
msgid "Some menu items might be grayed out depending on how you have your"
msgstr ""

#. type: Block title
#, no-wrap
msgid "ini file configured. For more information on configuration see the"
msgstr ""

#. type: Plain text
msgid "<<cha:ini-configuration,INI Chapter>>."
msgstr ""

#. type: Block title
#, no-wrap
msgid "File Menu"
msgstr ""

#. type: Plain text
msgid ""
"'Open...' - Opens a standard dialog box to open a g code file to load in "
"AXIS. If"
msgstr ""

#. type: Plain text
msgid ""
"you have configured LinuxCNC to use a filter program you can also open it "
"up. See the <<sec:filter-section,FILTER Section>> of the INI configuration "
"for more information."
msgstr ""

#. type: Plain text
msgid "'Recent Files' - Displays a list of recently opened files."
msgstr ""

#. type: Plain text
msgid ""
"'Edit...' - Open the current G code file for editing if you have an editor"
msgstr ""

#. type: Plain text
msgid ""
"configured in your ini file. See the <<sec:display-section,DISPLAY Section>> "
"for more information on specifying an editor to use."
msgstr ""

#. type: Plain text
msgid ""
"'Reload' - Reload the current g code file. If you edited it you must reload "
"it"
msgstr ""

#. type: Plain text
msgid ""
"for the changes to take affect. If you stop a file and want to start from "
"the beginning then reload the file. The toolbar reload is the same as the "
"menu."
msgstr ""

#. type: Plain text
msgid "'Save gcode as...' - Save the current file with a new name."
msgstr ""

#. type: Plain text
msgid "'Properties' - The sum of the rapid and feed moves. Does not factor in"
msgstr ""

#. type: Plain text
msgid ""
"acceleration, blending or path mode so time reported will never be less than "
"the actual run time."
msgstr ""

#. type: Plain text
msgid "'Edit tool table...' - Same as Edit if you have defined an editor"
msgstr ""

#. type: Plain text
msgid "you can open the tool table and edit it."
msgstr ""

#. type: Plain text
msgid "'Reload tool table' - After editing the tool table you must reload it."
msgstr ""

#. type: Plain text
msgid ""
"'Ladder editor' - If you have loaded Classic Ladder you can edit it from"
msgstr ""

#. type: Plain text
msgid ""
"here. See the <<cha:classicladder,Classicladder Chapter>> for more "
"information."
msgstr ""

#. type: Plain text
msgid "'Quit' -"
msgstr ""

#. type: Plain text
msgid "Terminates the current LinuxCNC session."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Machine Menu"
msgstr ""

#. type: Plain text
msgid "'Toggle Emergency Stop F1' - Change the state of the Emergency Stop."
msgstr ""

#. type: Plain text
msgid "'Toggle Machine Power F2' - Change the state of the Machine Power if"
msgstr ""

#. type: Plain text
msgid "the Emergency Stop is not on."
msgstr ""

#. type: Plain text
msgid "'Run Program' - Run the currently loaded program from the beginning."
msgstr ""

#. type: Plain text
msgid ""
"'Run From Selected Line' - Select the line you want to start from first."
msgstr ""

#. type: Plain text
msgid ""
"Use with caution as this will move the tool to the expected position before "
"the line first then it will execute the rest of the code."
msgstr ""

#. type: Plain text
msgid ""
"Do not use 'Run From Selected Line' if your g code program contains "
"subroutines."
msgstr ""

#. type: Plain text
msgid "'Step' - Single step through a program."
msgstr ""

#. type: Plain text
msgid "'Pause' - Pause a program."
msgstr ""

#. type: Plain text
msgid "'Resume' - Resume running from a pause."
msgstr ""

#. type: Plain text
msgid ""
"'Stop' - Stop a running program. When run is selected after a stop the "
"program"
msgstr ""

#. type: Plain text
msgid "will start from the beginning."
msgstr ""

#. type: Plain text
msgid ""
"'Stop at M1' - If an M1 is reached, and this is checked, program execution"
msgstr ""

#. type: Plain text
msgid "will stop on the M1 line. Press Resume to continue."
msgstr ""

#. type: Plain text
msgid ""
"'Skip lines with \"/\"' - If a line begins with '/' and this is checked,"
msgstr ""

#. type: Plain text
msgid "the line will be skipped."
msgstr ""

#. type: Plain text
msgid "'Clear MDI history' - Clears the MDI history window."
msgstr ""

#. type: Plain text
msgid "'Copy from MDI history' - Copies the MDI history to the clipboard"
msgstr ""

#. type: Plain text
msgid ""
"'Paste to MDI history' - Paste from the clipboard to the MDI history window"
msgstr ""

#. type: Plain text
msgid "'Calibration' - Starts the Calibration assistant (emccalib.tcl)."
msgstr ""

#. type: Plain text
msgid ""
"Calibration reads the HAL file and for every 'setp' that uses a variable "
"from the ini file that is in an [AXIS_L],[JOINT_N],[SPINDLE_S], or [TUNE] "
"section it creates an entry that can be edited and tested."
msgstr ""

#. type: Plain text
msgid ""
"'Show HAL Configuration' - Opens the HAL Configuration window where you can"
msgstr ""

#. type: Plain text
msgid ""
"monitor HAL Components, Pins, Parameters, Signals, Functions, and Threads."
msgstr ""

#. type: Plain text
msgid ""
"'HAL Meter' - Opens a window where you can monitor a single HAL Pin, Signal, "
"or"
msgstr ""

#. type: Plain text
msgid "Parameter."
msgstr ""

#. type: Plain text
msgid ""
"'HAL Scope' - Opens a virtual oscilloscope that allows plotting HAL values "
"vs. time."
msgstr ""

#. type: Plain text
msgid "'Show LinuxCNC Status' - Opens a window showing LinuxCNC's status."
msgstr ""

#. type: Plain text
msgid ""
"'Set Debug Level' - Opens a window where debug levels can be viewed and some "
"can be set."
msgstr ""

#. type: Plain text
msgid "'Homing' - Home one or all axes."
msgstr ""

#. type: Plain text
msgid "'Unhoming' - Unhome one or all axes."
msgstr ""

#. type: Plain text
msgid ""
"'Zero Coordinate System' - Set all offsets to zero in the coordinate system "
"chosen."
msgstr ""

#. type: Plain text
msgid "[[axis:tool-touch-off]] (((Axis, Tool Touch Off)))"
msgstr ""

#. type: Plain text
msgid ""
"'Tool touch off to workpiece' - When performing Touch Off, the value entered "
"is relative to the current workpiece ('G5x') coordinate system, as modified "
"by the axis offset ('G92').  When the Touch Off is complete, the Relative "
"coordinate for the chosen axis will become the value entered.  See <<gcode:"
"g10-l10,G10 L10>> in the G code chapter."
msgstr ""

#. type: Plain text
msgid ""
"'Tool touch off to fixture' - When performing Touch Off, the value entered "
"is relative to the ninth ('G59.3') coordinate system, with the axis offset "
"('G92') ignored.  This is useful when there is a tool touch-off fixture at a "
"fixed location on the machine, with the ninth ('G59.3') coordinate system "
"set such that the tip of a zero-length tool is at the fixture's origin when "
"the Relative coordinates are 0.  See <<gcode:g10-l11,G10 L11>> in the G code "
"chapter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "View Menu"
msgstr ""

#. type: Plain text
msgid ""
"'Top View' - The Top View (or Z view) displays the G code looking along the "
"Z axis from positive to negative. This view is best for looking at X & Y."
msgstr ""

#. type: Plain text
msgid ""
"'Rotated Top View' - The Rotated Top View (or rotated Z view) also displays "
"the G code looking along the Z axis from positive to negative. But sometimes "
"it's convenient to display the X & Y axes rotated 90 degrees to fit the "
"display better. This view is also best for looking at X & Y."
msgstr ""

#. type: Plain text
msgid ""
"'Side View' - The Side View (or X view) displays the G code looking along "
"the X axis from positive to negative. This view is best for looking at Y & Z."
msgstr ""

#. type: Plain text
msgid ""
"'Front View' - The Front View (or Y view) displays the G code looking along "
"the Y axis from negative to positive. This view is best for looking at X & Z."
msgstr ""

#. type: Plain text
msgid ""
"'Perspective View' - The Perspective View (or P view) displays the G code "
"looking at the part from an adjustable point of view, defaulting to X+, Y-, Z"
"+. The position is adjustable using the mouse and the drag/rotate selector.  "
"This view is a compromise view, and while it does do a good job of trying to "
"show three (to nine!) axes on a two-dimensional display, there will often be "
"some feature that is hard to see, requiring a change in viewpoint. This view "
"is best when you would like to see all three (to nine) axes at once."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Point of View"
msgstr ""

#. type: delimited block *
msgid ""
"The AXIS display pick menu 'View' refers to 'Top', 'Front', and 'Side' "
"views.  These terms are correct if the CNC machine has its Z axis vertical, "
"with positive Z up. This is true for vertical mills, which is probably the "
"most popular application, and also true for almost all EDM machines, and "
"even vertical turret lathes, where the part is turning below the tool."
msgstr ""

#. type: delimited block *
msgid ""
"The terms 'Top', 'Front', and 'Side' might be confusing however, in other "
"CNC machines, such as a standard lathe, where the Z axis is horizontal, or a "
"horizontal mill, again where the Z axis is horizontal, or even an inverted "
"vertical turret lathe, where the part is turning above the tool, and the Z "
"axis positive direction is down!"
msgstr ""

#. type: delimited block *
msgid ""
"Just remember that positive Z axis is (almost) always away from the part.  "
"So be familiar with your machine's design and interpret the display as "
"needed."
msgstr ""

#. type: Plain text
msgid "'Display Inches' - Set the AXIS display scaling for inches."
msgstr ""

#. type: Plain text
msgid "'Display MM' - Set the AXIS display scaling for millimeters."
msgstr ""

#. type: Plain text
msgid ""
"'Show Program' - The preview display of the loaded G code program can be "
"entirely"
msgstr ""

#. type: Plain text
msgid "disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Program Rapids' - The preview display of the loaded G code program "
"will always show the"
msgstr ""

#. type: Plain text
msgid ""
"feedrate moves (G1,G2,G3) in white. But the display of rapid moves (G0)  in "
"cyan can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Alpha-blend Program' - This option makes the preview of complex programs "
"easier to see, but"
msgstr ""

#. type: Plain text
msgid "may cause the preview to display more slowly."
msgstr ""

#. type: Plain text
msgid ""
"'Show Live Plot' - The highlighting of the feedrate paths (G1,G2,G3) as the "
"tool moves"
msgstr ""

#. type: Plain text
msgid "can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Tool' - The display of the tool cone/cylinder can be disabled if "
"desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Extents' - The display of the extents (maximum travel in each axis "
"direction)"
msgstr ""

#. type: Plain text
msgid "of the loaded G code program can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Offsets' - The selected fixture offset (G54-G59.3) origin location can "
"be shown"
msgstr ""

#. type: Plain text
msgid ""
"as a set of three orthogonal lines, one each of red, blue, and green.  This "
"offset origin (or fixture zero) display can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Machine Limits' - The machine's maximum travel limits for each axis, "
"as set in the ini"
msgstr ""

#. type: Plain text
msgid ""
"file, are shown as a rectangular box drawn in red dashed lines. This is "
"useful when loading a new G code program, or when checking for how much "
"fixture offset would be needed to bring the G code program within the travel "
"limits of your machine. It can be shut off if not needed."
msgstr ""

#. type: Plain text
msgid ""
"'Show Velocity' - A display of velocity is sometimes useful to see how close "
"your"
msgstr ""

#. type: Plain text
msgid ""
"machine is running to its design velocities. It can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Show Distance to Go' - Distance to go is a very handy item to know when "
"running an unknown"
msgstr ""

#. type: Plain text
msgid ""
"G code program for the first time. In combination with the rapid override "
"and feedrate override controls, unwanted tool and machine damage can be "
"avoided. Once the G code program has been debugged and is running smoothly, "
"the Distance to Go display can be disabled if desired."
msgstr ""

#. type: Plain text
msgid ""
"'Clear Live Plot' - As the tool travels in the Axis display, the G code path "
"is highlighted."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"To repeat the program, or to better see an area of interest, the \n"
"previously highlighted paths can be cleared.     \n"
msgstr ""

#. type: Plain text
msgid ""
"'Show Commanded Position' - This is the position that LinuxCNC will try to "
"go to. Once motion"
msgstr ""

#. type: Plain text
msgid "has stopped, this is the position LinuxCNC will try to hold."
msgstr ""

#. type: Plain text
msgid ""
"'Show Actual Position' - Actual Position is the measured position as read "
"back from the"
msgstr ""

#. type: Plain text
msgid ""
"system's encoders or simulated by step generators. This may differ slightly "
"from the Commanded Position for many reasons including PID tuning, physical "
"constraints, or position quantization."
msgstr ""

#. type: Plain text
msgid ""
"'Show Machine Position' - This is the position in unoffset coordinates, as "
"established by Homing."
msgstr ""

#. type: Plain text
msgid ""
"'Show Relative Position' - This is the Machine Position modified by 'G5x', "
"'G92', and 'G43' offsets."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Help Menu"
msgstr ""

#. type: Plain text
msgid "'About Axis' - We all know what this is."
msgstr ""

#. type: Plain text
msgid "'Quick Reference' - Shows the keyboard shortcut keys."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Toolbar buttons"
msgstr ""

#. type: Plain text
msgid ""
"From left to right in the Axis display, the toolbar buttons (keyboard "
"shortcuts shown [in brackets]) are:"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_estop.png[alt=\"Toggle Emergency Stop\"] Toggle Emergency "
"Stop [F1] (also called E-Stop)"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_power.png[alt=\"Toggle Machine Power\"] Toggle Machine "
"Power [F2]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_open.png[alt=\"Open G Code file\"] Open G Code file [O]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_reload.png[alt=\"Reload current file\"] Reload current "
"file [Ctrl-R]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_run.png[alt=\"Begin executing the current file\"] Begin "
"executing the current file [R]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_step.png[alt=\"Execute next line\"] Execute next line [T]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_pause.png[alt=\"Pause Execution - Resume Execution\"] "
"Pause Execution [P] Resume Execution [S]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_stop.png[alt=\"Stop Program Execution\"] Stop Program "
"Execution [ESC]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_blockdelete.png[alt=\"Toggle Skip lines\"] Toggle Skip "
"lines with \"/\" [Alt-M-/]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_optpause.png[alt=\"Toggle Optional Pause\"] Toggle "
"Optional Pause [Alt-M-1]"
msgstr ""

#. type: Plain text
msgid "image:images/tool_zoomin.png[alt=\"Zoom In\"] Zoom In"
msgstr ""

#. type: Plain text
msgid "image:images/tool_zoomout.png[alt=\"Zoom Out\"] Zoom Out"
msgstr ""

#. type: Plain text
msgid "image:images/tool_axis_z.png[alt=\"Top view\"] Top view"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_axis_z2.png[alt=\"Rotated Top view\"] Rotated Top view"
msgstr ""

#. type: Plain text
msgid "image:images/tool_axis_x.png[alt=\"Side view\"] Side view"
msgstr ""

#. type: Plain text
msgid "image:images/tool_axis_y.png[alt=\"Front view\"] Front view"
msgstr ""

#. type: Plain text
msgid "image:images/tool_axis_p.png[alt=\"Perspective view\"] Perspective view"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_rotate.png[alt=\"Toggle between Drag and Rotate Mode\"] "
"Toggle between Drag and Rotate Mode [D]"
msgstr ""

#. type: Plain text
msgid ""
"image:images/tool_clear.png[alt=\"Clear live backplot\"] Clear live backplot "
"[Ctrl-K]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Graphical Display Area"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Coordinate Display"
msgstr ""

#. type: Plain text
msgid ""
"In the upper-left corner of the program display is the coordinate position "
"display for each axis. To the right of the number an origin symbol image:"
"images/axis-homed.png[alt=\"origin symbol is shown if the axis has been homed"
"\"] is shown if the axis has been homed."
msgstr ""

#. type: Plain text
msgid ""
"A limit symbol image:images/axis-limit.png[alt=\"limit symbol\"] is shown on "
"the right side of the coordinate position number if the axis is on one of "
"its limit switches."
msgstr ""

#. type: Plain text
msgid ""
"To properly interpret the coordinate position numbers, refer to the "
"'Position:' indicator in the status bar. If the position is 'Machine "
"Actual', then the displayed number is in the machine coordinate system. If "
"it is 'Relative Actual', then the displayed number is in the offset "
"coordinate system. When the coordinates displayed are relative and an offset "
"has been set, the display will include a cyan <<sec.machine-coordinate-"
"system,'machine origin'>> image:images/axis-machineorigin.png[alt=\"cyan "
"machine origin\"] marker."
msgstr ""

#. type: Plain text
msgid ""
"If the position is 'Commanded', then the exact coordinate given in a G code "
"command is displayed. If it is 'Actual', then it is the position the machine "
"has actually moved to. These values can be different from commanded position "
"due to following error, dead band, encoder resolution, or step size. For "
"instance, if you command a movement to X 0.0033 on your mill, but one step "
"of your stepper motor or one encoder count is 0.00125, then the 'Commanded' "
"position might be 0.0033, but the 'Actual' position will be 0.0025 (2 "
"steps)  or 0.00375 (3 steps)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Preview Plot"
msgstr ""

#. type: Plain text
msgid ""
"When a file is loaded, a preview of it is shown in the display area.  Fast "
"moves (such as those produced by the 'G0' command) are shown as cyan lines. "
"Moves at a feed rate (such as those produced by the 'G1' command) are shown "
"as solid white lines. Dwells (such as those produced by the 'G4' command)  "
"are shown as small pink 'X' marks."
msgstr ""

#. type: Plain text
msgid ""
"G0 (Rapid) moves prior to a feed move will not show on the preview plot.  "
"Rapid moves after a T<n> (Tool Change) will not show on the preview until "
"after the first feed move.  To turn either of these features off program a "
"G1 without any moves prior to the G0 moves."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Program Extents"
msgstr ""

#. type: Plain text
msgid ""
"The 'extents' of the program in each axis are shown.  At the ends, the least "
"and greatest coordinate values are indicated.  In the middle, the difference "
"between the coordinates is shown."
msgstr ""

#. type: Plain text
msgid ""
"When some coordinates exceed the 'soft limits' in the .ini file, the "
"relevant dimension is shown in a different color and enclosed by a box.  In "
"figure below the maximum soft limit is exceeded on the X axis as indicated "
"by the box surrounding the coordinate value.  The minimum X travel of the "
"program is -1.95, the maximum X travel is 1.88, and the program requires "
"3.83 inches of X travel.  To move the program so it's within the machine's "
"travel in this case, jog to the left and Touch Off X again."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "The extents of the program in x axis are shown"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-outofrange.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Cone"
msgstr ""

#. type: Plain text
msgid ""
"When no tool is loaded, the location of the tip of the tool is indicated by "
"the 'tool cone'.  The 'tool cone' does not provide guidance on the form, "
"length, or radius of the tool."
msgstr ""

#. type: Plain text
msgid ""
"When a tool is loaded (for instance, with the MDI command 'T1 M6' ), the "
"cone changes to a cylinder which shows the diameter of the tool given in the "
"tool table file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Backplot"
msgstr ""

#. type: Plain text
msgid ""
"When the machine moves, it leaves a trail called the backplot.  The color of "
"the line indicates the type of motion: Yellow for jogs, faint green for "
"rapid movements, red for straight moves at a feed rate, and magenta for "
"circular moves at a feed rate."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Grid"
msgstr ""

#. type: Plain text
msgid ""
"Axis can optionally display a grid when in orthogonal views.  Enable or "
"disable the grid using the 'Grid' menu under 'View'.  When enabled, the grid "
"is shown in the top and rotated top views; when coordinate system is not "
"rotated, the grid is shown in the front and side views as well.  The presets "
"in the 'Grid' menu are controlled by the inifile item `[DISPLAY]GRIDS`; if "
"unspecified, the default is `10mm 20mm 50mm 100mm 1in 2in 5in 10in`."
msgstr ""

#. type: Plain text
msgid "Specifying a very small grid may decrease performance."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Interacting"
msgstr ""

#. type: Plain text
msgid ""
"By left-clicking on a portion of the preview plot, the line will be "
"highlighted in both the graphical and text displays.  By left-clicking on an "
"empty area, the highlighting will be removed."
msgstr ""

#. type: Plain text
msgid ""
"By dragging with the left mouse button pressed, the preview plot will be "
"shifted (panned)."
msgstr ""

#. type: Plain text
msgid ""
"By dragging with shift and the left mouse button pressed, or by dragging "
"with the mouse wheel pressed, the preview plot will be rotated.  When a line "
"is highlighted, the center of rotation is the center of the line.  "
"Otherwise, the center of rotation is the center of the entire program."
msgstr ""

#. type: Plain text
msgid ""
"By rotating the mouse wheel, or by dragging with the right mouse button "
"pressed, or by dragging with control and the left mouse button pressed, the "
"preview plot will be zoomed in or out."
msgstr ""

#. type: Plain text
msgid ""
"By clicking one of the 'Preset View' icons, or by pressing 'V', several "
"preset views may be selected."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Text Display Area"
msgstr ""

#. type: Plain text
msgid ""
"By left-clicking a line of the program, the line will be highlighted in both "
"the graphical and text displays."
msgstr ""

#. type: Plain text
msgid ""
"When the program is running, the line currently being executed is "
"highlighted in red. If no line has been selected by the user, the text "
"display will automatically scroll to show the current line."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Current and Selected Lines"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-currentandselected.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Manual Control"
msgstr ""

#. type: Plain text
msgid ""
"While the machine is turned on but not running a program, the items in the "
"'Manual Control' tab can be used to move the machine or control its spindle "
"and coolant."
msgstr ""

#. type: Plain text
msgid ""
"When the machine is not turned on, or when a program is running, the manual "
"controls are unavailable."
msgstr ""

#. type: Plain text
msgid ""
"Many of the items described below are not useful on all machines.  When AXIS "
"detects that a particular pin is not connected in HAL, the corresponding "
"item in the Manual Control tab is removed.  For instance, if the HAL pin "
"'spindle.0.brake' is not connected, then the 'Brake' button will not appear "
"on the screen.  If the environment variable 'AXIS_NO_AUTOCONFIGURE' is set, "
"this behavior is disabled and all the items will appear."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Axis group"
msgstr ""

#. type: Plain text
msgid ""
"'Axis' allows you to manually move the machine.  This action is known as "
"'jogging'.  First, select the axis to be moved by clicking it.  Then, click "
"and hold the '+' or '-' button depending on the desired direction of "
"motion.  The first four axes can also be moved by the arrow keys (X and Y), "
"PAGE UP and PAGE DOWN keys (Z), and the [ and ] keys (A)."
msgstr ""

#. type: Plain text
msgid ""
"If 'Continuous' is selected, the motion will continue as long as the button "
"or key is pressed.  If another value is selected, the machine will move "
"exactly the displayed distance each time the button is clicked or the key is "
"pressed.  By default, the available values are '0.1000, 0.0100, 0.0010, "
"0.0001'"
msgstr ""

#. type: Plain text
msgid ""
"See the <<sec:display-section,DISPLAY Section>> for more information on "
"setting the increments."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Homing (Identity Kinematics)"
msgstr ""

#. type: Plain text
msgid ""
"The inifile setting [KINS]JOINTS defines the total number of joints for the "
"system.  A joint may be configured with a home switch or for 'immediate' "
"homing.  Joints may specify a home sequence that organizes the order for "
"homing groups of joints."
msgstr ""

#. type: Plain text
msgid ""
"If *all* joints are configured for homing and have valid home sequences, the "
"homing button will show 'Home All'.  Pressing the 'Home All' button (or the "
"Ctrl-HOME key) will initiate homing for all joints using their defined home "
"sequences.  Pressing the HOME key will home the joint corresponding to the "
"currently selected axis even if no homing sequence is defined."
msgstr ""

#. type: Plain text
msgid ""
"If not all axes have valid home sequences, the homing button will show 'Home "
"Axis' and will home the joint for the currently selected axis only.  Each "
"axis must be selected and homed separately."
msgstr ""

#. type: Plain text
msgid ""
"The dropdown menu Machine/Homing provides an alternate method to home axes. "
"The dropdown menu Machine/Unhoming provides means to unhome axes."
msgstr ""

#. type: Plain text
msgid ""
"See the <<cha:homing-configuration,Homing Configuration Chapter>> for more "
"information."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Homing (Non-Identity Kinematics)"
msgstr ""

#. type: Plain text
msgid ""
"Operation is similar to that for Identity Kinematics but, prior to homing, "
"the selection radiobuttons select joints by number.  The homing button will "
"show 'Home All' if all joints are configured for homing and have valid home "
"sequences.  Otherwise, the homing button will show 'Home Joint'."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Touch Off"
msgstr ""

#. type: Plain text
msgid ""
"By pressing 'Touch Off' or the END key, the 'G5x offset' for the current "
"axis is changed so that the current axis value will be the specified value. "
"Expressions may be entered using the rules for rs274ngc programs, except "
"that variables may not be referred to. The resulting value is shown as a "
"number."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/touchoff.png"
msgstr ""

#. type: Plain text
msgid ""
"By pressing the 'Tool Touch Off' button the tool length and offsets of the "
"currently loaded tool will be changed so that the current tool tip position "
"matches the entered coordinate."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tooltouchoff.png"
msgstr ""

#. type: Plain text
msgid ""
"See also the 'Tool touch off to workpiece' and 'Tool touch off to fixture' "
"options in the Machine menu."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Override Limits"
msgstr ""

#. type: Plain text
msgid ""
"By pressing Override Limits, the machine will temporarily be allowed to jog "
"off of a physical limit switch. This check box is only available when a "
"limit switch is tripped.  The override is reset after one jog.  If the axis "
"is configured with separate positive and negative limit switches, LinuxCNC "
"will allow the jog only in the correct direction.  _Override Limits will not "
"allow a jog past a soft limit.  The only way to disable a soft limit on an "
"axis is to Unhome it._"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Spindle group"
msgstr ""

#. type: Plain text
msgid ""
"The buttons on the first row select the direction for the spindle to rotate: "
"Counterclockwise, Stopped, Clockwise. Counterclockwise will only show up if "
"the pin 'spindle.0.reverse' is in the HAL file (it can be 'net trick-axis "
"spindle.0.reverse' ). The buttons on the next row increase or decrease the "
"rotation speed. The checkbox on the third row allows the spindle brake to be "
"engaged or released. Depending on your machine configuration, not all the "
"items in this group may appear. Pressing the spindle start button sets the "
"'S' speed to 1."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Coolant group"
msgstr ""

#. type: Plain text
msgid ""
"The two buttons allow the 'Mist' and 'Flood' coolants to be turned on and "
"off. Depending on your machine configuration, not all the items in this "
"group may appear."
msgstr ""

#. type: Plain text
msgid ""
"MDI allows G-code commands to be entered manually.  When the machine is not "
"turned on, or when a program is running, the MDI controls are unavailable."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The MDI tab"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "MDI tab"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-mdi.png"
msgstr ""

#. type: Plain text
msgid ""
"'History' - This shows MDI commands that have been typed earlier in this "
"session."
msgstr ""

#. type: Plain text
msgid ""
"'MDI Command' - This allows you to enter a g-code command to be executed. "
"Execute the"
msgstr ""

#. type: Plain text
msgid "command by pressing Enter or by clicking 'Go'."
msgstr ""

#. type: Plain text
msgid ""
"'Active G-Codes' - This shows the 'modal codes' that are active in the "
"interpreter. For"
msgstr ""

#. type: Plain text
msgid ""
"instance, 'G54' indicates that the 'G54 offset' is applied to all "
"coordinates that are entered. When in Auto the Active G-Codes represent the "
"codes after any read ahead by the interpreter."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Feed Override"
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the programmed feed rate can be modified. For "
"instance, if a program requests 'F60' and the slider is set to 120%, then "
"the resulting feed rate will be 72."
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the programmed spindle speed can be modified. For "
"instance, if a program requests S8000 and the slider is set to 80%, then the "
"resulting spindle speed will be 6400. This item only appears when the HAL "
"pin 'spindle.0.speed-out' is connected."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Speed"
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the speed of jogs can be modified. For instance, if "
"the slider is set to 1 in/min, then a .01 inch jog will complete in about .6 "
"seconds, or 1/100 of a minute. Near the left side (slow jogs) the values are "
"spaced closely together, while near the right side (fast jogs) they are "
"spaced much further apart, allowing a wide range of jog speeds with fine "
"control when it is most important."
msgstr ""

#. type: Plain text
msgid ""
"On machines with a rotary axis, a second jog speed slider is shown.  This "
"slider sets the jog rate for the rotary axes (A, B and C)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Max Velocity"
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the maximum velocity can be set. This caps the "
"maximum velocity for all programmed moves except spindle-synchronized moves."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Keyboard Controls"
msgstr ""

#. type: Plain text
msgid ""
"Almost all actions in AXIS can be accomplished with the keyboard. A full "
"list of keyboard shortcuts can be found in the AXIS Quick Reference, which "
"can be displayed by choosing Help > Quick Reference.  Many of the shortcuts "
"are unavailable when in MDI mode."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Feed Override Keys"
msgstr ""

#. type: Plain text
msgid ""
"The Feed Override keys behave differently when in Manual Mode. The keys "
"'12345678 will select an axis if it is programmed. If you have 3 axis then ' "
"will select axis 0, 1 will select axis 1, and 2 will select axis 2. The "
"remainder of the number keys will still set the Feed Override. When running "
"a program '1234567890 will set the Feed Override to 0% - 100%."
msgstr ""

#. type: Plain text
msgid ""
"The most frequently used keyboard shortcuts are shown in the following Table"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Most Common Keyboard Shortcuts"
msgstr ""

#. type: Table
#, no-wrap
msgid "Keystroke"
msgstr ""

#. type: Table
#, no-wrap
msgid "Action Taken"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "F1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle Emergency Stop"
msgstr ""

#. type: Table
#, no-wrap
msgid "Any"
msgstr ""

#. type: Table
#, no-wrap
msgid "F2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Turn machine on/off"
msgstr ""

#. type: Table
#, no-wrap
msgid "`, 1 .. 9, 0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set feed override from 0% to 100%"
msgstr ""

#. type: Table
#, no-wrap
msgid "Varies"
msgstr ""

#. type: Table
#, no-wrap
msgid "X, `"
msgstr ""

#. type: Table
#, no-wrap
msgid "Activate first axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Manual"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y, 1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Activate second axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z, 2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Activate third axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "A, 3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Activate fourth axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "I"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select jog increment"
msgstr ""

#. type: Table
#, no-wrap
msgid "C"
msgstr ""

#. type: Table
#, no-wrap
msgid "Continuous jog"
msgstr ""

#. type: Table
#, no-wrap
msgid "Control-Home"
msgstr ""

#. type: Table
#, no-wrap
msgid "Perform homing sequence"
msgstr ""

#. type: Table
#, no-wrap
msgid "End"
msgstr ""

#. type: Table
#, no-wrap
msgid "Touch off: Set G5x offset for active axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Left, Right"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jog first axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Up, Down"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jog second axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pg Up, Pg Dn"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jog third axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "[, ]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jog fourth axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "O"
msgstr ""

#. type: Table
#, no-wrap
msgid "Open File"
msgstr ""

#. type: Table
#, no-wrap
msgid "Control-R"
msgstr ""

#. type: Table
#, no-wrap
msgid "Reload File"
msgstr ""

#. type: Table
#, no-wrap
msgid "R"
msgstr ""

#. type: Table
#, no-wrap
msgid "Run file"
msgstr ""

#. type: Table
#, no-wrap
msgid "P"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pause execution"
msgstr ""

#. type: Table
#, no-wrap
msgid "Auto"
msgstr ""

#. type: Table
#, no-wrap
msgid "S"
msgstr ""

#. type: Table
#, no-wrap
msgid "Resume Execution"
msgstr ""

#. type: Table
#, no-wrap
msgid "ESC"
msgstr ""

#. type: Table
#, no-wrap
msgid "Stop execution"
msgstr ""

#. type: Table
#, no-wrap
msgid "Control-K"
msgstr ""

#. type: Table
#, no-wrap
msgid "Clear backplot"
msgstr ""

#. type: Table
#, no-wrap
msgid "Auto/Manual"
msgstr ""

#. type: Table
#, no-wrap
msgid "V"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cycle among preset views"
msgstr ""

#. type: Table
#, no-wrap
msgid "Shift-Left,Right"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rapid X Axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Shift-Up,Down"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rapid Y Axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "Shift-PgUp, PgDn"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rapid Z Axis"
msgstr ""

#. type: Table
#, no-wrap
msgid "@"
msgstr ""

#. type: Table
#, no-wrap
msgid "toggle Actual/Commanded"
msgstr ""

#. type: Table
#, no-wrap
msgid "#"
msgstr ""

#. type: Table
#, no-wrap
msgid "toggle Relative/Machine"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Show LinuxCNC Status (linuxcnctop)"
msgstr ""

#. type: Plain text
msgid ""
"AXIS includes a program called 'linuxcnctop' which shows some of the details "
"of LinuxCNC's state. You can run this program by invoking Machine > Show "
"LinuxCNC Status"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "LinuxCNC Status Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-emc-status.png"
msgstr ""

#. type: Plain text
msgid ""
"The name of each item is shown in the left column. The current value is "
"shown in the right column. If the value has recently changed, it is shown on "
"a red background."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "MDI interface"
msgstr ""

#. type: Plain text
msgid ""
"AXIS includes a program called `mdi` which allows text-mode entry of MDI "
"commands to a running LinuxCNC session. You can run this program by opening "
"a terminal and typing"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    mdi\n"
msgstr ""

#. type: Plain text
msgid ""
"Once it is running, it displays the prompt 'MDI>'. When a blank line is "
"entered, the machine's current position is shown.  When a command is "
"entered, it is sent to LinuxCNC to be executed."
msgstr ""

#. type: Plain text
msgid "This is a sample session of mdi."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ mdi\n"
"MDI>\n"
"(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) \n"
"MDI> G1 F5 X1 \n"
"MDI>  \n"
"(0.5928500000000374, 0.0, 0.0, 0.0, 0.0, 0.0) \n"
"MDI>  \n"
"(1.0000000000000639, 0.0, 0.0, 0.0, 0.0, 0.0)\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "axis-remote"
msgstr ""

#. type: Plain text
msgid ""
"AXIS includes a program called 'axis-remote' which can send certain commands "
"to a running AXIS. The available commands are shown by running 'axis-remote "
"--help' and include checking whether AXIS is running ('--ping'), loading a "
"file by name, reloading the currently loaded file ('--reload'), and making "
"AXIS exit ('--quit')."
msgstr ""

#. type: Plain text
msgid "[[sec:manual-tool-change]](((Axis, Manual Tool Change)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Manual Tool Change"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC includes a userspace HAL component called 'hal_manualtoolchange', "
"which shows a window prompt telling you what tool is expected when a 'M6' "
"command is issued. After the OK button is pressed, execution of the program "
"will continue."
msgstr ""

#. type: Plain text
msgid ""
"The hal_manualtoolchange component includes a hal pin for a button that can "
"be connected to a physical button to complete the tool change and remove the "
"window prompt (hal_manualtoolchange.change_button)."
msgstr ""

#. type: Plain text
msgid ""
"The HAL configuration file 'lib/hallib/axis_manualtoolchange.hal' shows the "
"HAL commands necessary to use this component."
msgstr ""

#. type: Plain text
msgid ""
"hal_manualtoolchange can be used even when AXIS is not used as the GUI.  "
"This component is most useful if you have presettable tools and you use the "
"tool table."
msgstr ""

#. type: Plain text
msgid ""
"Important Note: Rapids will not show on the preview after a T<n> is issued "
"until the next feed move after the M6.  This can be very confusing to most "
"users.  To turn this feature off for the current tool change program a G1 "
"with no move after the T<n>."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "The Manual Toolchange Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/manual-tool-change.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Python modules "
msgstr ""

#. type: Plain text
msgid ""
"AXIS includes several Python modules which may be useful to others. For more "
"information on one of these modules, use 'pydoc <module name>' or read the "
"source code. These modules include:"
msgstr ""

#. type: Plain text
msgid ""
"'emc' provides access to the LinuxCNC command, status, and error channels"
msgstr ""

#. type: Plain text
msgid "'gcode' provides access to the rs274ngc interpreter"
msgstr ""

#. type: Plain text
msgid "'rs274' provides additional tools for working with rs274ngc files"
msgstr ""

#. type: Plain text
msgid "'hal' allows the creation of userspace HAL components written in Python"
msgstr ""

#. type: Plain text
msgid ""
"'_togl' provides an OpenGL widget that can be used in Tkinter applications"
msgstr ""

#. type: Plain text
msgid "'minigl' provides access to the subset of OpenGL used by AXIS"
msgstr ""

#. type: Plain text
msgid ""
"To use these modules in your own scripts, you must ensure that the directory "
"where they reside is on Python's module path. When running an installed "
"version of LinuxCNC, this should happen automatically. When running 'in-"
"place', this can be done by using 'scripts/rip-environment'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using AXIS in Lathe Mode"
msgstr ""

#. type: Plain text
msgid ""
"By including the line 'LATHE = 1' in the [DISPLAY] section of the ini file, "
"AXIS selects lathe mode. The 'Y' axis is not shown in coordinate readouts, "
"the view is changed to show the Z axis extending to the right and the X axis "
"extending towards the bottom of the screen, and several controls (such as "
"those for preset views) are removed.  The coordinate readouts for X are "
"replaced with diameter and radius."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Back Tool Lathe"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-lathe.png"
msgstr ""

#. type: Plain text
msgid "Pressing 'V' zooms out to show the entire file, if one is loaded."
msgstr ""

#. type: Plain text
msgid "When in lathe mode, the shape of the loaded tool (if any) is shown."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Lathe Tool Shape"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-lathe-tool.png"
msgstr ""

#. type: Plain text
msgid ""
"To change the display to a back tool lathe you need to have both 'LATHE = 1' "
"and 'BACK_TOOL_LATHE = 1' in the [DISPLAY] section. This will invert the "
"view and put the tool on the back side of the Z axis."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-back-tool-lathe.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using AXIS in Foam Cutting mode"
msgstr ""

#. type: Plain text
msgid ""
"By including the line 'FOAM = 1' in the [DISPLAY] section of the ini file, "
"AXIS selects foam-cutting mode.  In the program preview, XY motions are "
"displayed in one plane, and UV motions in another.  In the live plot, lines "
"are drawn between corresponding points on the XY plane and the UV plane.  "
"The special comments (XY_Z_POS) and (UV_Z_POS)  set the Z coordinates of "
"these planes, which default to 0 and 1.5 machine units."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Foam cutting mode"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis-foam.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Advanced Configuration"
msgstr ""

#. type: Plain text
msgid ""
"When AXIS is started it creates the HAL pins for the GUI then it executes "
"the HAL file named in the INI file: '[HAL]POSTGUI_HALFILE=<filename>'. + "
"Typically '<filename>' would be the configs base name + '_postgui' + '.hal' "
"+ eg. 'lathe_postgui.hal', but can be any legal filename. + These commands "
"are executed after the screen is built, guaranteeing the widget's HAL pins "
"are available. + You can have multiple line of 'POSTGUI_HALFILE=<filename>' "
"in the INI. + Each will be run one after the other in the order they appear. "
"+"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Program Filters"
msgstr ""

#. type: Plain text
msgid ""
"AXIS has the ability to send loaded files through a 'filter program'.  This "
"filter can do any desired task: Something as simple as making sure the file "
"ends with 'M2', or something as complicated as generating G-Code from an "
"image."
msgstr ""

#. type: Plain text
msgid ""
"The '[FILTER]' section of the ini file controls how filters work.  First, "
"for each type of file, write a 'PROGRAM_EXTENSION' line.  Then, specify the "
"program to execute for each type of file.  This program is given the name of "
"the input file as its first argument, and must write rs274ngc code to "
"standard output. This output is what will be displayed in the text area, "
"previewed in the display area, and executed by LinuxCNC when 'Run'. The "
"following lines add support for the 'image-to-gcode' converter included with "
"LinuxCNC:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[FILTER]\n"
"PROGRAM_EXTENSION = .png,.gif Greyscale Depth Image\n"
"png = image-to-gcode\n"
"gif = image-to-gcode\n"
msgstr ""

#. type: Plain text
msgid "It is also possible to specify an interpreter:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"PROGRAM_EXTENSION = .py Python Script\n"
"py = python\n"
msgstr ""

#. type: Plain text
msgid ""
"In this way, any Python script can be opened, and its output is treated as g-"
"code. One such example script is available at 'nc_files/holecircle.py'. This "
"script creates g-code for drilling a series of holes along the circumference "
"of a circle."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Circular Holes"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/holes.png"
msgstr ""

#. type: Plain text
msgid ""
"If the environment variable AXIS_PROGRESS_BAR is set, then lines written to "
"stderr of the form"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "FILTER_PROGRESS=%d\n"
msgstr ""

#. type: Plain text
msgid ""
"will set the AXIS progress bar to the given percentage. This feature should "
"be used by any filter that runs for a long time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The X Resource Database"
msgstr ""

#. type: Plain text
msgid ""
"The colors of most elements of the AXIS user interface can be customized "
"through the X Resource Database. The sample file 'axis_light_background' "
"changes the colors of the backplot window to a 'dark lines on white "
"background' scheme, and also serves as a reference for the configurable "
"items in the display area. The sample file 'axis_big_dro' changes the "
"position readout to a larger size font. To use these files:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "xrdb -merge /usr/share/doc/emc2/axis_light_background\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "xrdb -merge /usr/share/doc/emc2/axis_big_dro\n"
msgstr ""

#. type: Plain text
msgid ""
"For information about the other items which can be configured in Tk "
"applications, see the Tk man pages."
msgstr ""

#. type: Plain text
msgid ""
"Because modern desktop environments automatically make some settings in the "
"X Resource Database that adversely affect AXIS, by default these settings "
"are ignored. To make the X Resource Database items override AXIS defaults, "
"include the following line in your X Resources:"
msgstr ""

#.  These asterisks are not for bold, 
#. type: delimited block -
#, no-wrap
msgid "    *Axis*optionLevel: widgetDefault\n"
msgstr ""

#.  in this case, we want the asterisks to actually appear. 
#. type: Plain text
msgid ""
"this causes the built-in options to be created at the option level "
"'widgetDefault', so that X Resources (which are level 'userDefault')  can "
"override them."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "~/.axisrc"
msgstr ""

#. type: Plain text
msgid ""
"If it exists, the contents of `~/.axisrc` are executed as Python source code "
"just before the AXIS GUI is displayed. The details of what may be written in "
"the `~/.axisrc` are subject to change during the development cycle."
msgstr ""

#. type: Plain text
msgid "The following adds Control-Q as a keyboard shortcut for Quit."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.bind(\"<Control-q>\", \"destroy .\")\n"
"help2.append((\"Control-Q\", \"Quit\"))\n"
msgstr ""

#. type: Plain text
msgid "The following stops the \"Do you really want to quit\" dialog."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "root_window.tk.call(\"wm\",\"protocol\",\".\",\"WM_DELETE_WINDOW\",\"destroy .\") \n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "USER_COMMAND_FILE"
msgstr ""

#. type: Plain text
msgid ""
"A configuration-specific python file may be specified with an ini file "
"setting '[DISPLAY]USER_COMMAND_FILE=filename.py'.  Like a `~/.axisrc` file, "
"this file is sourced just before the AXIS GUI is displayed.  This file is "
"specific to an ini file configuration not the user's home directory."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "user_live_update()"
msgstr ""

#. type: Plain text
msgid ""
"The axis gui includes a no-op (placeholder) function named "
"'user_live_update()' that is executed at the conclusion of the update()  "
"function of its LivePlotter class.  This function may be implemented within "
"a `~/.axisrc` python script or a '[DISPLAY]USER_COMMAND_FILE' python script "
"to make custom, periodic actions.  The details of what may be accomplished "
"in this function are dependent on the axis gui implementation and subject to "
"change during the development cycle."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "user_hal_pins()"
msgstr ""

#. type: Plain text
msgid ""
"The axis gui includes a no-op (placeholder) function named "
"'user_hal_pins()'. + It is executed just after the .axisrc file is called "
"and just before any gladevcp panels / embedded tabs are initialized. + This "
"function may be implemented within a `~/.axisrc` python script or a "
"'[DISPLAY]USER_COMMAND_FILE' python script to make custom HAL pins that use "
"the 'axisui.' prefix. + Use 'comp' as the HAL component instance reference. "
"+ HAL comp.ready() is called just after this function returns."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "External Editor"
msgstr ""

#. type: Plain text
msgid ""
"The menu options File > Edit... and File > Edit Tool Table... become "
"available after defining the editor in the ini section [DISPLAY].  Useful "
"values include EDITOR=gedit and EDITOR=gnome-terminal -e vim.  For more "
"information, see the <<sec:display-section,Display Section>> of the INI "
"Configuration Chapter."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Virtual Control Panel"
msgstr ""

#. type: Plain text
msgid ""
"AXIS can display a custom virtual control panel in the right-hand pane. You "
"can program buttons, indicators, data displays and more. For more "
"information, see the <<cha:pyvcp,PyVCP Chapter>> and the <<cha:glade-vcp,"
"GladeVCP Chapter>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preview Control"
msgstr ""

#. type: Plain text
msgid ""
"Special comments can be inserted into the G Code file to control how the "
"preview of AXIS behaves. In the case where you want to limit the drawing of "
"the preview use these special comments. Anything between the (AXIS,hide) and "
"(AXIS,show) will not be drawn during the preview. The (AXIS,hide) and (AXIS,"
"show) must be used in pairs with the (AXIS,hide)  being first. Anything "
"after a (AXIS,stop) will not be drawn during the preview."
msgstr ""

#. type: Plain text
msgid ""
"These comments are useful to unclutter the preview display (for instance "
"while debugging a larger g-code file, one can disable the preview on certain "
"parts that are already working OK)."
msgstr ""

#. type: Plain text
msgid "(AXIS,hide) Stops the preview (must be first)"
msgstr ""

#. type: Plain text
msgid "(AXIS,show) Resumes the preview (must follow a hide)"
msgstr ""

#. type: Plain text
msgid "(AXIS,stop) Stops the preview from here to the end of the file."
msgstr ""

#. type: Plain text
msgid ""
"(AXIS,notify,the_text) Displays the_text as an info display This display can "
"be useful in the Axis preview when (debug,message)  comments are not "
"displayed."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Axisui Pins"
msgstr ""

#. type: Plain text
msgid ""
"To improve the interaction of AXIS with physical jog wheels, the axis "
"currently selected in the GUI is also reported on a pin with a name like "
"'axisui.jog.x'. One of these pins is 'TRUE' at one time, and the rest are "
"'FALSE'. These are meant to control motion's jog-enable pins."
msgstr ""

#. type: Plain text
msgid ""
"Axis has Hal pins to indicate which jog radio button is selected in the "
"'Manual Control' tab."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"bit   OUT    axisui.jog.x\n"
"bit   OUT    axisui.jog.y\n"
"bit   OUT    axisui.jog.z\n"
"bit   OUT    axisui.jog.a\n"
"bit   OUT    axisui.jog.b\n"
"bit   OUT    axisui.jog.c\n"
"bit   OUT    axisui.jog.u\n"
"bit   OUT    axisui.jog.v\n"
"bit   OUT    axisui.jog.w\n"
msgstr ""

#. type: Plain text
msgid ""
"Axis has a Hal pin to indicate the jog increment selected on the 'Manual "
"Tab'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"float OUT               axisui.jog.increment\n"
msgstr ""

#. type: Plain text
msgid ""
"Axis has a Hal output pin that indicates when an abort has occurred. The "
"'axisui.abort' pin will be 'TRUE' and come back to 'FALSE' after 0.3ms."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"bit   OUT    axisui.abort\n"
msgstr ""

#. type: Plain text
msgid ""
"Axis has a Hal output pin that indicates when an error has occurred. The "
"'axisui.error' pin will remain 'TRUE' until all error notifications have "
"been dismissed."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"bit   OUT    axisui.error\n"
msgstr ""

#. type: Plain text
msgid ""
"Axis has Hal input pins to clear the pop up notifications for errors and "
"information."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"bit   IN     axisui.notifications-clear\n"
"bit   IN     axisui.notifications-clear-error\n"
"bit   IN     axisui.notifications-clear-info\n"
msgstr ""

#. type: Plain text
msgid ""
"Axis has a Hal input pin that disables/enables the 'Pause/Resume' function."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Type  Dir    Name\n"
"bit   IN     axisui.resume-inhibit\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Axis Customization Hints"
msgstr ""

#. type: Plain text
msgid ""
"Axis is a fairly large and difficult-to-penetrate code base, this is helpful "
"To keep the code stable but makes it difficult to customize. + Here we will "
"show code snippets to modify behaviours or visuals of the screen.  Keep in "
"mind the internal code of AXIS can change from time to time. + these "
"snippets are not guaranteed to continue to work - they may need adjustment."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The update function"
msgstr ""

#. type: Plain text
msgid ""
"There is a function in Axis named user_live_update that is called every time "
"Axis updates itself. You can use this to update your own functions."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# continuous update function\n"
"def user_live_update():\n"
"    print 'i am printed every update...' \n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Disable the Close Dialog"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# disable the do you want to close dialog\n"
"root_window.tk.call(\"wm\",\"protocol\",\".\",\"WM_DELETE_WINDOW\",\"destroy .\")\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change the Text Font "
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# change the font\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"font = 'sans 11'\n"
"fname,fsize = font.split()\n"
"root_window.tk.call('font','configure','TkDefaultFont','-family',fname,'-size',fsize)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# redo the text in tabs so they resize for the new default font\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.tk.call('.pane.top.tabs','itemconfigure','manual','-text',' Manual - F3 ')\n"
"root_window.tk.call('.pane.top.tabs','itemconfigure','mdi','-text',' MDI - F5 ')\n"
"root_window.tk.call('.pane.top.right','itemconfigure','preview','-text',' Preview ')\n"
"root_window.tk.call('.pane.top.right','itemconfigure','numbers','-text',' DRO ')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# gcode font is independent\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.tk.call('.pane.bottom.t.text','configure','-foreground','blue')\n"
"#root_window.tk.call('.pane.bottom.t.text','configure','-foreground','blue','-font',font)\n"
"#root_window.tk.call('.pane.bottom.t.text','configure','-foreground','blue','-font',font,'-height','12')\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Modify Rapid Rate with Keyboard Shortcuts"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# use control + ` or 1-0 as keyboard shortcuts for rapidrate and keep ` or 1-0 for feedrate\n"
"# also adds text to quick reference in help\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "help1.insert(10,(\"Control+ `,1..9,0\", _(\"Set Rapid Override from 0% to 100%\")),)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.bind('<Control-Key-quoteleft>',lambda event: set_rapidrate(0))\n"
"root_window.bind('<Control-Key-1>',lambda event: set_rapidrate(10))\n"
"root_window.bind('<Control-Key-2>',lambda event: set_rapidrate(20))\n"
"root_window.bind('<Control-Key-3>',lambda event: set_rapidrate(30))\n"
"root_window.bind('<Control-Key-4>',lambda event: set_rapidrate(40))\n"
"root_window.bind('<Control-Key-5>',lambda event: set_rapidrate(50))\n"
"root_window.bind('<Control-Key-6>',lambda event: set_rapidrate(60))\n"
"root_window.bind('<Control-Key-7>',lambda event: set_rapidrate(70))\n"
"root_window.bind('<Control-Key-8>',lambda event: set_rapidrate(80))\n"
"root_window.bind('<Control-Key-9>',lambda event: set_rapidrate(90))\n"
"root_window.bind('<Control-Key-0>',lambda event: set_rapidrate(100))\n"
"root_window.bind('<Key-quoteleft>',lambda event: set_feedrate(0))\n"
"root_window.bind('<Key-1>',lambda event: set_feedrate(10))\n"
"root_window.bind('<Key-2>',lambda event: set_feedrate(20))\n"
"root_window.bind('<Key-3>',lambda event: set_feedrate(30))\n"
"root_window.bind('<Key-4>',lambda event: set_feedrate(40))\n"
"root_window.bind('<Key-5>',lambda event: set_feedrate(50))\n"
"root_window.bind('<Key-6>',lambda event: set_feedrate(60))\n"
"root_window.bind('<Key-7>',lambda event: set_feedrate(70)\n"
"root_window.bind('<Key-8>',lambda event: set_feedrate(80))\n"
"root_window.bind('<Key-9>',lambda event: set_feedrate(90))\n"
"root_window.bind('<Key-0>',lambda event: set_feedrate(100))\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Read the INI file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# read an ini file item\n"
"machine = inifile.find('EMC','MACHINE')\n"
"print 'machine name =',machine\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Read linuxcnc Status"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# linuxcnc status can be read from s.\n"
"print s.actual_position \n"
"print s.paused \n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change the current view"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set the view of the preview\n"
"# valid views are view_x view_y view_y2 view_z view_z2 view_p\n"
"commands.set_view_z()\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Creating new AXISUI HAL Pins"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def user_hal_pins():\n"
"    comp.newpin('my-new-in-pin', hal.HAL_BIT, hal.HAL_IN)\n"
"    comp.ready()\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Creating new HAL Component and Pins"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# create a component\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"mycomp = hal.component('my_component')\n"
"mycomp.newpin('idle-led',hal.HAL_BIT,hal.HAL_IN)\n"
"mycomp.newpin('pause-led',hal.HAL_BIT,hal.HAL_IN)\n"
"mycomp.ready()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# connect pins\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"hal.new_sig('idle-led',hal.HAL_BIT)\n"
"hal.connect('halui.program.is-idle','idle-led')\n"
"hal.connect('my_component.idle-led','idle-led')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# set a pin\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "hal.set_p('my_component.pause-led','1')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# get a pin 2,8+ branch\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"value = hal.get_value('halui.program.is-idle')\n"
"print 'value is a',type(value),'value of',value\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Switch Tabs with HAL Pins"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# hal pins from a GladeVCP panel will not be ready when user_live_update is run\n"
"# to read them you need to put them in a try/except block\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# the following example assumes 5 HAL buttons in a GladeVCP panel used to switch\n"
"# the tabs in the Axis screen.\n"
"# button names are 'manual-tab', 'mdi-tab', 'preview-tab', 'dro-tab', 'user0-tab'\n"
"# the user_0 tab if it exists would be the first GladeVCP embedded tab\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# for linuxCNC 2.8+ branch\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def user_live_update():\n"
"    try:\n"
"        if hal.get_value('gladevcp.manual-tab'):\n"
"            root_window.tk.call('.pane.top.tabs','raise','manual')\n"
"        elif hal.get_value('gladevcp.mdi-tab'):\n"
"            root_window.tk.call('.pane.top.tabs','raise','mdi')\n"
"        elif hal.get_value('gladevcp.preview-tab'):\n"
"            root_window.tk.call('.pane.top.right','raise','preview')\n"
"        elif hal.get_value('gladevcp.numbers-tab'):\n"
"            root_window.tk.call('.pane.top.right','raise','numbers')\n"
"        elif hal.get_value('gladevcp.user0-tab'):\n"
"            root_window.tk.call('.pane.top.right','raise','user_0')\n"
"    except:\n"
"        pass\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Add a GOTO Home button "
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def goto_home(axis):\n"
"    if s.interp_state == linuxcnc.INTERP_IDLE:\n"
"        home = inifile.find('JOINT_' + str(inifile.find('TRAJ', 'COORDINATES').upper().index(axis)), 'HOME')\n"
"        mode = s.task_mode\n"
"        if s.task_mode != linuxcnc.MODE_MDI:\n"
"            c.mode(linuxcnc.MODE_MDI)\n"
"        c.mdi('G53 G0 ' + axis + home)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# make a button to home y axis\n"
"root_window.tk.call('button','.pane.top.tabs.fmanual.homey','-text','Home Y','-command','goto_home Y','-height','2')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# place the button\n"
"root_window.tk.call('grid','.pane.top.tabs.fmanual.homey','-column','1','-row','7','-columnspan','2','-padx','4','-sticky','w')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# any function called from tcl needs to be added to TclCommands\n"
"TclCommands.goto_home = goto_home\n"
"commands = TclCommands(root_window)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Add Button to manual frame"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# make a new button and put it in the manual frame\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.tk.call('button','.pane.top.tabs.fmanual.mybutton','-text','My Button','-command','mybutton_clicked','-height','2')\n"
"root_window.tk.call('grid','.pane.top.tabs.fmanual.mybutton','-column','1','-row','6','-columnspan','2','-padx','4','-sticky','w')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# the above send the \"mybutton_clicked\" command when clicked\n"
"# other options are to bind a press or release (or both) commands to the button\n"
"# these can be in addition to or instead of the clicked command\n"
"# if instead of then delete '-command','mybutton_clicked', from the first line\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# Button-1 = left mouse button, 2 = right or 3 = middle\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.tk.call('bind','.pane.top.tabs.fmanual.mybutton','<Button-1>','mybutton_pressed')\n"
"root_window.tk.call('bind','.pane.top.tabs.fmanual.mybutton','<ButtonRelease-1>','mybutton_released')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# functions called from the buttons\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def mybutton_clicked():\n"
"    print 'mybutton was clicked'\n"
"def mybutton_pressed():\n"
"    print 'mybutton was pressed'\n"
"def mybutton_released():\n"
"    print 'mybutton was released'\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# any function called from tcl needs to be added to TclCommands\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"TclCommands.mybutton_clicked = mybutton_clicked\n"
"TclCommands.mybutton_pressed = mybutton_pressed\n"
"TclCommands.mybutton_released = mybutton_released\n"
"commands = TclCommands(root_window)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Reading Internal Variables"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# the following variables may be read from the vars instance\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"print vars.machine.get()\n"
"print vars.emcini.get()\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    active_codes            = StringVar\n"
"    block_delete            = BooleanVar\n"
"    brake                   = BooleanVar\n"
"    coord_type              = IntVar\n"
"    display_type            = IntVar\n"
"    dro_large_font          = IntVar\n"
"    emcini                  = StringVar\n"
"    exec_state              = IntVar\n"
"    feedrate                = IntVar\n"
"    flood                   = BooleanVar\n"
"    grid_size               = DoubleVar\n"
"    has_editor              = IntVar\n"
"    has_ladder              = IntVar\n"
"    highlight_line          = IntVar\n"
"    interp_pause            = IntVar\n"
"    interp_state            = IntVar\n"
"    ja_rbutton              = StringVar\n"
"    jog_aspeed              = DoubleVar\n"
"    jog_speed               = DoubleVar\n"
"    kinematics_type         = IntVar\n"
"    linuxcnctop_command     = StringVar\n"
"    machine                 = StringVar\n"
"    max_aspeed              = DoubleVar\n"
"    max_maxvel              = DoubleVar\n"
"    max_queued_mdi_commands = IntVar\n"
"    max_speed               = DoubleVar\n"
"    maxvel_speed            = DoubleVar\n"
"    mdi_command             = StringVar\n"
"    metric                  = IntVar\n"
"    mist                    = BooleanVar\n"
"    motion_mode             = IntVar\n"
"    on_any_limit            = BooleanVar\n"
"    optional_stop           = BooleanVar\n"
"    override_limits         = BooleanVar\n"
"    program_alpha           = IntVar\n"
"    queued_mdi_commands     = IntVar\n"
"    rapidrate               = IntVar\n"
"    rotate_mode             = BooleanVar\n"
"    running_line            = IntVar\n"
"    show_distance_to_go     = IntVar\n"
"    show_extents            = IntVar\n"
"    show_live_plot          = IntVar\n"
"    show_machine_limits     = IntVar\n"
"    show_machine_speed      = IntVar\n"
"    show_program            = IntVar\n"
"    show_pyvcppanel         = IntVar\n"
"    show_rapids             = IntVar\n"
"    show_tool               = IntVar\n"
"    show_offsets            = IntVar\n"
"    spindledir              = IntVar\n"
"    spindlerate             = IntVar\n"
"    task_mode               = IntVar\n"
"    task_paused             = IntVar\n"
"    task_state              = IntVar\n"
"    taskfile                = StringVar\n"
"    teleop_mode             = IntVar\n"
"    tool                    = StringVar\n"
"    touch_off_system        = StringVar\n"
"    trajcoordinates         = StringVar\n"
"    tto_g11                 = BooleanVar\n"
"    view_type               = IntVar\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hide Widgets"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# hide a widget\n"
"# use 'grid' or 'pack' depending on how it was originally placed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "root_window.tk.call('grid','forget','.pane.top.tabs.fmanual.jogf.zerohome.tooltouch')\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change a label"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# change label of a widget\n"
"root_window.tk.call('setup_widget_accel','.pane.top.tabs.fmanual.mist','Downdraft')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# make sure it appears (only needed in this case if the mist button was hidden)\n"
"root_window.tk.call('grid','.pane.top.tabs.fmanual.mist','-column','1','-row','5','-columnspan','2','-padx','4','-sticky','w')\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Redirect an existing command"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# hijack an existing command\n"
"# originally the mist button calls the mist function\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "root_window.tk.call('.pane.top.tabs.fmanual.mist','configure','-command','hijacked_command')\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# The new function\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def hijacked_command():\n"
"    print 'hijacked mist command'\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# add the function to TclCommands\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"TclCommands.hijacked_command = hijacked_command\n"
"commands = TclCommands(root_window)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change the DRO color"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# change dro screen\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "root_window.tk.call('.pane.top.right.fnumbers.text','configure','-foreground','green','-background','black')\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change the Toolbar Buttons"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# change the toolbar buttons\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"buW = '3'\n"
"buH = '2'\n"
"boW = '3'\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"root_window.tk.call('.toolbar.machine_estop','configure','-image','','-text','ESTOP','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.machine_power','configure','-image','','-text','POWER','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.file_open','configure','-image','','-text','OPEN','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.reload','configure','-image','','-text','RELOAD','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_run','configure','-image','','-text','RUN','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_step','configure','-image','','-text','STEP','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_pause','configure','-image','','-text','PAUSE','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_stop','configure','-image','','-text','STOP','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_blockdelete','configure','-image','','-text','Skip /','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.program_optpause','configure','-image','','-text','M1','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_zoomin','configure','-image','','-text','Zoom+','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_zoomout','configure','-image','','-text','Zoom-','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_z','configure','-image','','-text','Top X','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_z2','configure','-image','','-text','Top Y','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_x','configure','-image','','-text','Right','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_y','configure','-image','','-text','Front','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.view_p','configure','-image','','-text','3D','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.rotate','configure','-image','','-text','Rotate','-width',buW,'-height',buH,'-borderwidth',boW)\n"
"root_window.tk.call('.toolbar.clear_plot','configure','-image','','-text','Clear','-width',buW,'-height',buH,'-borderwidth',boW)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change Plotter Colors"
msgstr ""

#. type: Plain text
msgid "In RGBA format, in this order: jog, rapid, feed, arc, toolchange, probe"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# change plotter colors\n"
"try:\n"
"    live_plotter.logger.set_colors((255,0,0,255),\n"
"                                    (0,255,0,255),\n"
"                                    (0,0,255,255),\n"
"                                    (255,255,0,255),\n"
"                                    (255,255,255,255),\n"
"                                    (0,255,255,255))\n"
"except Exception as e:\n"
"    print (e)\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "GMOCCAPY"
msgstr ""

#. type: Plain text
msgid ""
"'GMOCCAPY' is a GUI for LinuxCNC, designed to be used with a touch screen, "
"but can also be used on normal screens with a mouse or hardware buttons and "
"MPG wheels, as it presents HAL Pins for the most common needs. Please find "
"more information in the following."
msgstr ""

#. type: Plain text
msgid ""
"It offers the possibility to display up to 9 axis, support a lathe mode for "
"normal and back tool lathe and can be adapted to nearly every need, because "
"gmoccapy supports embedded tabs and side panels.  As a good example for that "
"see http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Gmoccapy_plasma[gmoccapy_plasma]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*gmoccapy 3 does support up to 9 axis and 9 joints. As gmoccapy 3 has been\n"
"changed in code to support the joint / axis changes in LinuxCNC it does not \n"
"work on 2.7 or 2.6 branch!\n"
msgstr ""

#. type: Plain text
msgid ""
"It has support for integrated virtual keyboard (onboard or matchbox-"
"keyboard), so there is no need for a hardware keyboard or mouse, but it can "
"also be used with that hardware. Gmoccapy offers a separate settings page to "
"configure most settings of the GUI without editing files."
msgstr ""

#. type: Plain text
msgid ""
"'GMOCCAPY' can be localized very easy, because the corresponding files are "
"separated from the linuxcnc.po files, so there is no need to translate "
"unneeded stuff. The files are placed in */src/po/gmoccapy*. Just copy the "
"gmoccapy.pot file to something like fr.po and translate that file with "
"gtranslator or poedit.  After rebuilding, you got the GUI in your preference "
"language. Please publish your translation, so it can be included in the "
"official packages and be published to other users. At the Moment it is "
"available in English, German, Spanish, Polish, Serbian and Hungarian. Feel "
"free to help me to introduce more languages, *nieson@web.de*. If you need "
"help, don't hesitate to ask."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_5_axis.png"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Requirements"
msgstr ""

#. type: Plain text
msgid ""
"Gmoccapy 3 has been tested on Debian Jessie, Debian Stretch and MINT 18 with "
"LinuxCNC master and 2.8 release. It fully support joint / axis changes of "
"LinuxCNC, making it suitable as GUI for Scara, Robots or any other config "
"with more joints than axis. So it do support also gantry configs. if you use "
"other versions, please inform about problems and / or solutions on the "
"http://www.linuxcnc.org/index.php/english/forum/41-guis/26314-gmoccapy-a-new-"
"screen-for-linuxcnc[LinuxCNC forum] or the http://www.cncecke.de/forum/"
"showthread.php?t=78549[German CNC Ecke Forum] or https://lists.sourceforge."
"net/lists/listinfo/emc-users[LinuxCNC users mailing list]"
msgstr ""

#. type: Plain text
msgid ""
"The minimum screen resolution for gmoccapy, using it without side panels is "
"*979 x 750 Pixel*, so it should fit to every standard screen. It is "
"recommended to use screens with minimum resolution of 1024x748"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "How To Get gmoccapy"
msgstr ""

#. type: Plain text
msgid ""
"Beginning with LinuxCNC 2.8 gmoccapy 3 is included in the standard "
"installation.  So the easiest way to get gmoccapy on you controlling PC, is "
"just to get the http://www.linuxcnc.org/index.php/english/download[ISO] and "
"install from the CD / DVD /USB-Stick."
msgstr ""

#. type: Plain text
msgid "You will receive updates with the regular deb packages."
msgstr ""

#. type: Plain text
msgid "Gmoccapy 3 is only included in the actual 2.8 and master release."
msgstr ""

#. type: Plain text
msgid ""
"You will get a similar screen to the following: The design may variate "
"depending on your config."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_3_axis.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic Configuration"
msgstr ""

#. type: Plain text
msgid ""
"There is really not to much to configure just to run gmoccapy, but there are "
"some points you should take care off if you want to use all the features of "
"the GUI."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"You will find a lot of simulation configurations (INI files) included, just to show the basics: +\n"
" +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_4_axis.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "lathe_configs/gmoccapy_lathe.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "lathe_configs/gmoccapy_lathe_imperial.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_left_panel.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_right_panel.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_messages.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_pendant.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_sim_hardware_button.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_tool_sensor.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_with_user_tabs.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_XYZAB.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_XYZAC.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy_XYZCW.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy-JA/Gantry/gantry_mm.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy-JA/scara/scara.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy-JA/table-rotary-tilting/xyzac-trt.ini +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "and a lot more ... +\n"
msgstr ""

#. type: Bullet: '+
#. type: '
msgid ""
"The names should explain the main intention of the different INI Files. +"
msgstr ""

#. type: Plain text
msgid ""
"If you use an existing configuration of your machine, just edit your INI "
"according to this document. +"
msgstr ""

#. type: Plain text
msgid ""
"If you want to use <<gmoccapy:macros,MACROS>>, don't forget to set the path "
"to your macros or subroutines folder as described below."
msgstr ""

#. type: Plain text
msgid ""
"So let us take a closer look to the the INI file and what you need to "
"include to use gmoccapy on your machine: +"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The DISPLAY Section"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" [DISPLAY]\n"
" DISPLAY = gmoccapy\n"
" PREFERENCE_FILE_PATH = gmoccapy_preferences\n"
" MAX_FEED_OVERRIDE = 1.5\n"
" MAX_SPINDLE_OVERRIDE = 1.2\n"
" MIN_SPINDLE_OVERRIDE = 0.5\n"
" LATHE = 1\n"
" BACK_TOOL_LATHE = 1\n"
" PROGRAM_PREFIX = ../../nc_files/\n"
msgstr ""

#. type: Plain text
msgid "''''"
msgstr ""

#. type: Plain text
msgid ""
"The most important part is to tell LinuxCNC to use gmoccapy, editing the "
"[DISPLAY] section."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" [DISPLAY]\n"
" DISPLAY = gmoccapy\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " PREFERENCE_FILE_PATH = gmoccapy_preferences\n"
msgstr ""

#. type: Plain text
msgid "gmoccapy 3 does support the following command line options:"
msgstr ""

#. type: Plain text
msgid ""
"-user_mode : If set, the setup button will be disabled, so normal machine "
"opperators are not able to edit the settings of the machine *"
msgstr ""

#. type: Plain text
msgid ""
"-logo <path to logo file> : If given, the logo will hide the jog button tab "
"in manual mode, this is only useful for machines with hardware button for "
"jogging and increment selection +"
msgstr ""

#. type: Plain text
msgid ""
"The line PREFERENCE_FILE_PATH gives the location and name of the preferences "
"file to be used.  In most cases this line will not be needed, it is used by "
"gmoccapy to store your settings of the GUI, like themes, DRO units, colors, "
"and keyboard settings, etc., see <<gmoccapy:settings-page,settings page>> "
"for more details."
msgstr ""

#. type: Plain text
msgid ""
"If no path or file is given, gmoccapy will use as default <your_machinename>."
"pref, if no machine name is given in your INI File it will use gmoccapy.pref "
"The file will be stored in your config directory, so the settings will not "
"be mixed if you use several configs. If you only want to use one file for "
"several machines, you need to include PREFERENCE_FILE_PATH in your INI."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MAX_FEED_OVERRIDE = 1.5\n"
msgstr ""

#. type: Plain text
msgid ""
"Sets the maximum feed override, in the example given, you will be allowed to "
"override the feed by 150%."
msgstr ""

#. type: Plain text
msgid "If no value is given, it will be set to 1.0"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MAX_SPINDLE_OVERRIDE = 1.2\n"
"MIN_SPINDLE_OVERRIDE = 0.5\n"
msgstr ""

#. type: Plain text
msgid ""
"Will allow you to change the spindle override within a limit from 50% to "
"120%."
msgstr ""

#. type: Plain text
msgid "If no values are given, MAX will be set to 1.0 and MIN to 0.1"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"LATHE = 1\n"
"BACK_TOOL_LATHE = 1\n"
msgstr ""

#. type: Plain text
msgid "The first line set the screen layout to control a lathe."
msgstr ""

#. type: Plain text
msgid ""
"The second line is optional and will switch the X axis in a way you need for "
"a back tool lathe. Also the keyboard shortcuts will react in a different "
"way. It is allowed with gmoccapy to configuer a lathe also with additional "
"axis, so you may use also a XZCW config for a lathe."
msgstr ""

#. type: Plain text
msgid "See also the <<gmoccapy:lathe-section, Lathe Specific Section>>"
msgstr ""

#. type: Plain text
msgid "PROGRAM_PREFIX = ../../nc_files/"
msgstr ""

#. type: Plain text
msgid "Is the entry to tell linuxcnc/gmoccapy where to look for the ngc files."
msgstr ""

#. type: Plain text
msgid ""
"If not specified Gmoccapy will look in the following order for ngc files: "
"linuxcnc/nc_files and then the users home directory."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Configuration of tabs and side panels"
msgstr ""

#. type: Plain text
msgid ""
"You can add embedded programs to gmoccapy like you can do in axis, touchy "
"and gscreen. All is done by gmoccapy automatically if you include a few "
"lines in your INI file in the DISPLAY section."
msgstr ""

#. type: Plain text
msgid ""
"If you never used a glade panel, I recommend to read the excellent "
"documentation.  http://www.linuxcnc.org/docs/html/gui/gladevcp.html[Glade "
"VCP]"
msgstr ""

#. type: SH
#, no-wrap
msgid "Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" EMBED_TAB_NAME = DRO\n"
" EMBED_TAB_LOCATION = ntb_user_tabs\n"
" EMBED_TAB_COMMAND = gladevcp -x {XID} dro.glade\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" EMBED_TAB_NAME = Second user tab\n"
" EMBED_TAB_LOCATION = ntb_preview\n"
" EMBED_TAB_COMMAND = gladevcp -x {XID} vcp_box.glade\n"
msgstr ""

#. type: Plain text
msgid ""
"All you have to take care off, is that you include for every tab or side "
"panel the mentioned three lines,"
msgstr ""

#. type: Plain text
msgid ""
"EMBED_TAB_NAME = Represents the name of the tab or side panel, it is up to "
"you what name you use, but it must be present!"
msgstr ""

#. type: Plain text
msgid ""
"EMBED_TAB_LOCATION = Is the place where your program will be placed in the "
"GUI."
msgstr ""

#. type: Block title
#, no-wrap
msgid "valid values are:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "ntb_user_tabs            (as main tab, covering the complete screen)'\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "ntb_preview              (as tab on the preview side)'\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_left                 (on the left, complete high of the screen)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_right                (on the right, in between the normal screen and the button list)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_coolant_and_spindle  (will hide the coolant and spindle frames and introduce your glade file here)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_cooling              (will hide the cooling frame and introduce your glade file)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_spindle              (will hide the spindle frame and introduce your glade file)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_vel_info             (will hide the velocity frames and introduce your glade file)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_custom_1             (will introduce your glade file left of vel_frame)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_custom_2             (will introduce your glade file left of cooling_frame)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_custom_3             (will introduce your glade file left of spindle_frame)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "box_custom_4             (will introduce your glade file right of spindle_frame)\n"
msgstr ""

#. type: Plain text
msgid "See the different INI files included to see the differences"
msgstr ""

#. type: Plain text
msgid "EMBED_TAB_COMMAND = the command to execute, i.e."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gladevcp -x {XID} dro.glade\n"
msgstr ""

#. type: Plain text
msgid ""
"Includes a custom glade file called dro.glade in the mentioned location The "
"file must be placed in the config folder of your machine."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gladevcp h_buttonlist.glade\n"
msgstr ""

#. type: Plain text
msgid ""
"Will just open a new user window called h_buttonlist.glade note the "
"difference, this one is stand alone, and can be moved around independent "
"from gmoccapy window."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gladevcp -c gladevcp -u hitcounter.py -H manual-example.hal manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"Will add a the panel manual-example.ui, include a custom python handler, "
"hitcounter.py and make all connections after realizing the panel according "
"to manual-example.hal."
msgstr ""

#. type: Plain text
msgid ""
"If you make any hal connections to you custom glade panel, you need to do "
"that in the hal file specified in the EMBEDDED_TAB_COMMAND line, otherwise "
"you may get an error that the hal pin does not exist, this is because of "
"race conditions loading the hal files. Connections to gmoccapy hal pin need "
"to be made in the postgui hal file specified in your INI file, because this "
"pin do not exist prior of realizing the GUI"
msgstr ""

#. type: Plain text
msgid "Here are some examples:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "ntb_preview - as maximized version"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_ntb_preview_maximized_2.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "ntb_preview"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_ntb_preview.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "box_left - showing gmoccapy in edit mode"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_with_left_box_in_edit_mode.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "box_right - and gmoccapy in MDI mode"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_with_right_panel_in_MDI_mode.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Configuration of User Created Messages"
msgstr ""

#. type: Plain text
msgid ""
"Gmoccapy has the ability to create hal driven user messages. To use them you "
"need to introduce some lines in the [DISPLAY] section of the INI file."
msgstr ""

#. type: Plain text
msgid ""
"Here is how to set up 3 user pop up message dialogs the messages support "
"pango markup language. Detailed information about the markup language can be "
"found at https://developer.gnome.org/pango/stable/PangoMarkupFormat."
"html[Pango Markup]"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_TEXT    = The text to be displayed, may be pango markup formatted\n"
"MESSAGE_TYPE    = \"status\" , \"okdialog\" , \"yesnodialog\"\n"
"MESSAGE_PINNAME = is the name of the hal pin group to be created\n"
msgstr ""

#. type: Plain text
msgid ""
"'status' : Will just display a message as pop up window, using the messaging "
"system of gmoccapy"
msgstr ""

#. type: Plain text
msgid "'okdialog' : Will hold focus on the message dialog and will activate a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "\"-waiting\" Hal_Pin OUT. Closing the message will reset the waiting pin\n"
msgstr ""

#. type: Plain text
msgid ""
"'yesnodialog' : Will hold focus on the message dialog and will activate a \"-"
"waiting\" Hal_Pin bit OUT it will also give access to an \"-response\" "
"Hal_Pin Bit Out, this pin will hold 1 if the user clicks OK, and in all "
"other states it will be 0 Closing the message will reset the waiting pin The "
"response Hal Pin will remain 1 until the dialog is called again"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_TEXT = This is a <span background=\"#ff0000\" foreground=\"#ffffff\">\n"
"info-message</span> test\n"
"MESSAGE_TYPE = status\n"
"MESSAGE_PINNAME = statustest\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_TEXT = This is a yes no dialog test\n"
"MESSAGE_TYPE = yesnodialog\n"
"MESSAGE_PINNAME = yesnodialog\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_TEXT = Text can be <small>small</small>, <big>big</big>, <b>bold</b <i>italic</i>, and even be <span color=\"red\">colored</span>.\n"
"MESSAGE_TYPE = okdialog\n"
"MESSAGE_PINNAME = okdialog\n"
msgstr ""

#. type: Plain text
msgid ""
"The specific hal pin conventions for these can be found under the <<gmoccapy:"
"user-created-message, User Messages>> hal pin section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The RS274NGC Section"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"SUBROUTINE_PATH = macros\n"
msgstr ""

#. type: Plain text
msgid ""
"Sets the path to search for macros and other subroutines. If you want to use "
"several subroutine paths, just separate them with \":\""
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The MACRO Section"
msgstr ""

#. type: Plain text
msgid ""
"You can add macros to gmoccapy, similar to touchy's way. A macro is nothing "
"else than a ngc-file. You are able to execute complete CNC programs in MDI "
"mode, by just pushing one button. To do so, you have to add a section like "
"so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[MACROS]\n"
"MACRO = i_am_lost\n"
"MACRO = hello_world\n"
"MACRO = jog_around\n"
"MACRO = increment xinc yinc\n"
"MACRO = go_to_position X-pos Y-pos Z-pos\n"
msgstr ""

#. type: Plain text
msgid "This will add 5 macros to the MDI button list."
msgstr ""

#. type: Plain text
msgid ""
"As maximum 16 macros will appear in the GUI, due to space reasons you may "
"need to click on an arrow to switch page and display hidden macro button.  "
"It is no error placing more in your INI file. The macro button will be "
"displayed in the order of the INI entries."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_mdi_hidden_keyboard.png"
msgstr ""

#. type: Plain text
msgid ""
"The name of the file must be *exactly the same* as the name given in the "
"MACRO line. So the macro '*i_am_lost*' will call the file '*i_am_lost.ngc*'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The macro ngc files must follow some rules:"
msgstr ""

#. type: Plain text
msgid ""
"the name of the file need to be exactly the same as the name mentioned in "
"the macro line, just with the ngc extension (case sensitive)"
msgstr ""

#. type: Plain text
msgid ""
"The file must contain a subroutine like so: '*O<i_am_lost> sub*', the name "
"of the sub must match exactly (*case sensitive*) the name of the macro"
msgstr ""

#. type: Plain text
msgid "the file must end with an endsub '*O<i_am_lost> endsub*' followed by an"
msgstr ""

#. type: Plain text
msgid "'*M2*' command"
msgstr ""

#. type: Plain text
msgid ""
"the files need to be placed in a folder specified in your INI file in the "
"RS274NGC section (see <<gmocappy:rs274ngc,RS274NGC>>)"
msgstr ""

#. type: Plain text
msgid ""
"The code in between sub and endsub will be executed by pushing the "
"corresponding macro button."
msgstr ""

#. type: Plain text
msgid ""
"You will find the sample macros in macros folder placed in the gmoccapy sim "
"folder. If you have given several subroutine paths, they will be searched in "
"the order of the given paths. The first file found will be used."
msgstr ""

#. type: Plain text
msgid "Gmoccapy will also accept macros asking for parameters like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "go_to_position X-pos Y-pos Z-pos\n"
msgstr ""

#. type: Plain text
msgid ""
"The parameters must be separated by spaces. This calls a file "
"'go_to_position.ngc' with the following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; Test file go to position\n"
"; will jog the machine to a given position\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "O<go_to_position> sub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G17\n"
"G21\n"
"G54\n"
"G61\n"
"G40\n"
"G49\n"
"G80\n"
"G90\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
";#1 = <X-Pos>\n"
";#2 = <Y-Pos>\n"
";#3 = <Z-Pos>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(DBG, Will now move machine to X = #1 , Y = #2 , Z = #3)\n"
"G0 X #1 Y #2 Z #3\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<go_to_position> endsub\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"After pushing the '*execute macro button*', you will be asked to enter the "
"values for '*X-pos Y-pos Z-pos*' and the macro will only run if all values "
"have been given."
msgstr ""

#. type: Plain text
msgid ""
"If you would like to use a macro without any movement, see also the notes in "
"<<sub:NOT_ENDING_MACROS,known problems>>"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_getting_macro_info.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The TRAJ Section"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"DEFAULT_LINEAR_VELOCITY = 85.0\n"
"MAX_VELOCITY = 230.000\n"
msgstr ""

#. type: Plain text
msgid "Sets the maximal velocity and the default jog velocity of the machine."
msgstr ""

#. type: Plain text
msgid ""
"If DEFAULT_LINEAR_VELOCITY is not given, half of MAX_VELOCITY will be used.  "
"if that value is also not given, it will default to 180 If MAX_VELOCITY is "
"not given, it will default to 600"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Pins"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy exports several hal pin to be able to react to hardware devices.  "
"The goal is to get a GUI that may be operated in a tool shop, completely/"
"mostly without mouse or keyboard."
msgstr ""

#. type: Plain text
msgid ""
"You will have to do all connections to gmoccapy pins in your postgui.hal "
"file.  When gmoccapy is started it creates the HAL pins for the GUI then it "
"executes the HAL file named in the INI file: "
"'[HAL]POSTGUI_HALFILE=<filename>'. + Typically '<filename>' would be the "
"configs base name + '_postgui' + '.hal' eg. 'lathe_postgui.hal', but can be "
"any legal filename. + These commands are executed after the screen is built, "
"guaranteeing the widget's HAL pins are available. + You can have multiple "
"line of 'POSTGUI_HALFILE=<filename>' in the INI. + Each will be run one "
"after the other in the order they appear. +"
msgstr ""

#. type: Plain text
msgid ""
"See <<gmoccapy:configuration-of-tabs-and-side-panels, Tabs and side panels>> "
"for details."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Right And Bottom Button Lists"
msgstr ""

#. type: Plain text
msgid ""
"The screen has two main button lists, one on the right side an one on the "
"bottom. The right handed buttons will not change during operation, but the "
"bottom button list will change very often. The buttons are count from up to "
"down and from left to right beginning with \"0\"."
msgstr ""

#. type: Plain text
msgid "the pin name for *gmoccapy2* has changed to order them better:"
msgstr ""

#. type: Plain text
msgid "In hal_show you will see the right (vertical) buttons are:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-0"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-1"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-2"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-3"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-4"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-5"
msgstr ""

#. type: Plain text
msgid "gmoccapy.v-button.button-6"
msgstr ""

#. type: Plain text
msgid "and the bottom (horizontal) buttons are:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-9"
msgstr ""

#. type: Plain text
msgid ""
"As the buttons in the bottom list will change according the mode and other "
"influences, the hardware buttons will activate different functions, and you "
"don't have to take care about switching functions around in hal, because "
"that is done completely by gmoccapy!"
msgstr ""

#. type: Plain text
msgid "for a 3 axis XYZ machine the hal pin will react as follows:"
msgstr ""

#. type: Plain text
msgid "in manual mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == open homing button"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == open touch off stuff"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == open tool dialogs"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == full-size preview"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.h-button.button-9 == exit if machine is off, otherwise no reaction"
msgstr ""

#. type: Plain text
msgid "in mdi mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == macro_0 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == macro_1 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 == macro_2 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == macro_3 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == macro_4 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == macro_5 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 == macro_6 or nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7 == macro_7 or nothing"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.h-button.button-8 == macro_8 or switch page to additional macros"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.h-button.button-9 == open keyboard or abort if macro is running"
msgstr ""

#. type: Plain text
msgid "in auto mode"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == open file"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == reload program"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 == run"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == stop"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == pause"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == step by step"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.h-button.button-6 == run from line if enabled in settings, "
"otherwise Nothing"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7 == optional blocks"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-9 == edit code"
msgstr ""

#. type: Plain text
msgid "in settings mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == delete MDI history"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == open classic ladder"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == open hal scope"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 == open hal status"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7 == open hal meter"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == open hal calibration"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-9 == open hal show"
msgstr ""

#. type: Plain text
msgid "in homing mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 =="
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == home all"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == home x"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == home y"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == home z"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == unhome all"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-9 == back"
msgstr ""

#. type: Plain text
msgid "in touch off mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == edit offsets"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == touch X"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 == touch Y"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == touch Z"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 == zero G92"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == set selected"
msgstr ""

#. type: Plain text
msgid "in tool mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == delete tool(s)"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == new tool"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 == reload tool table"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == apply changes"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == change tool by number T? M6"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == set tool by number without change M61 Q?"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 == change tool to the selected one"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == touch of tool in Z"
msgstr ""

#. type: Plain text
msgid "in edit mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == reload file"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-2 == save"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == save as"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-6 == new file"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 == show keyboard"
msgstr ""

#. type: Plain text
msgid "in select file mode:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-0 == go to home directory"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-1 == one directory level up"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-3 == move selection left"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-4 == move selection right"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-5 == jump to directory as set in settings"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-7 == select / ENTER"
msgstr ""

#. type: Plain text
msgid "gmoccapy.h-button.button-8 =="
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*So we have 67 reactions with only 10 hal pin!*\n"
msgstr ""

#. type: Plain text
msgid ""
"These pins are made available to be able to use the screen without an touch "
"panel, or protect it from excessive use by placing hardware buttons around "
"the panel."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_0_9_7_sim_hardware_button.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Velocities And Overrides"
msgstr ""

#. type: Plain text
msgid ""
"All sliders from gmoccapy can be connected to hardware encoder or hardware "
"potentiometers."
msgstr ""

#. type: Plain text
msgid ""
"for gmoccapy 3 the hal pin name has changed, as new controls has been "
"implemented, max velocity does not exist any more, as rapid override has "
"been implemented.  This change has been done as many user ask for that."
msgstr ""

#. type: Plain text
msgid "To connect encoders the following pin are exported:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.jog.jog-velocity.counts        = HAL_S32  Jog velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.jog.jog-velocity.count-enable  = HAL_BIT  Must be True, to enable counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.feed.feed-override.counts       = HAL_S32  feed override\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.feed.feed-override.count-enable = HAL_BIT  Must be True, to enable counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.feed.reset-feed-override        = HAL_BIT  reset the feed override to 100 %\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spindle.spindle-override.counts       = HAL_S32  spindle override\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spindle.spindle-override.count-enable = HAL_BIT  Must be True, to enable counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spindle.reset-spindle-override        = HAL_BIT  reset the spindle override to 100 %\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.rapid.rapid-override.counts       = HAL_S32  Maximal Velocity of the machine\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.rapid.rapid-override.count-enable = HAL_BIT  Must be True, to enable counts\n"
msgstr ""

#. type: Plain text
msgid "To connect potentiometers, use the following hal pin:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.jog.jog-velocity.direct-value     = HAL_FLOAT To adjust the jog velocity slider\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.jog.jog-velocity.analog-enable    = HAL_BIT   Must be True, to allow analog inputs\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.feed.feed-override.direct-value   = HAL_FLOAT To adjust the feed override slider\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.feed.feed-override.analog-enable  = HAL_BIT   Must be True, to allow analog inputs\n"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.spindle.spindle-override.direct-value = HAL_FLOAT To adjust the "
"spindle override slider"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spindle.spindle-override.analog-enable = HAL_BIT   Must be True, to allow analog inputs\n"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.rapid.rapid-override.direct-value = HAL_FLOAT To adjust the max "
"velocity slider"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.rapid.rapid-override.analog-enable = HAL_BIT   Must be True, to allow analog inputs\n"
msgstr ""

#. type: Plain text
msgid ""
"In addition gmoccapy 3 offers additional hal pin to control the new slider "
"widgets with momentary switches. The values how fast the increase or "
"decrease will be, must be set in the glade file. In a future release it will "
"be integrated in the settings page."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_jog_vel.increase     = HAL_BIT IN     as long as True the value of the slider will increase\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_jog_vel.decrease     = HAL_BIT IN     as long as True the value of the slider will decrease\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_jog_vel.scale        = HAL_FLOAT IN   A value to scale the output value (Handy to change units/min to units/sec\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_jog_vel.value        = HAL_FLOAT OUT  value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_jog_vel.scaled-value = HAL_FLOAT OUT  scaled value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_feed.increase     = HAL_BIT IN     as long as True the value of the slider will increase\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_feed.decrease     = HAL_BIT IN     as long as True the value of the slider will decrease\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_feed.scale        = HAL_FLOAT IN   A value to scale the output value (Handy to change units/min to units/sec\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_feed.value        = HAL_FLOAT OUT  value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_feed.scaled-value = HAL_FLOAT OUT  scaled value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_spindle.increase     = HAL_BIT IN     as long as True the value of the slider will increase\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_spindle.decrease     = HAL_BIT IN     as long as True the value of the slider will decrease\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_spindle.scale        = HAL_FLOAT IN   A value to scale the output value (Handy to change units/min to units/sec\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_spindle.value        = HAL_FLOAT OUT  value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_spindle.scaled-value = HAL_FLOAT OUT  scaled value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_rapid.increase     = HAL_BIT IN     as long as True the value of the slider will increase\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_rapid.decrease     = HAL_BIT IN     as long as True the value of the slider will decrease\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_rapid.scale        = HAL_FLOAT IN   A value to scale the output value (Handy to change units/min to units/sec\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_rapid.value        = HAL_FLOAT OUT  value of the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.spc_rapid.scaled-value = HAL_FLOAT OUT  scaled value of the widget\n"
msgstr ""

#. type: Plain text
msgid ""
"The float pin do accept values from 0.0 to 1.0, being the percentage value "
"you want to set the slider value."
msgstr ""

#. type: Plain text
msgid ""
"[WARNING] If you use both connection types, do not connect the same slider "
"to both pin, as the influences between the two has not been tested! "
"Different sliders may be connected to the one or other hal connection type."
msgstr ""

#. type: Plain text
msgid ""
"[IMPORTANT] Please be aware, jog velocity depends on the turtle button "
"state, it will lead to different slider scales depending on the mode (turtle "
"or rabbit). Please take also a look to <<gmoccapy:jog-velocity,jog "
"velocities and turtle-jog hal pin>> for more details."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Spindle Override Min Value =  20 %\n"
"Spindle Override Max Value = 120 %\n"
"gmoccapy.analog-enable = 1\n"
"gmoccapy.spindle-override-value = 0.25\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"value to set = Min Value + (Max Value - Min Value) * gmoccapy.spindle-override-value\n"
"value to set = 20 + (120 - 20) * 0.25\n"
"value to set = 45 %\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Hal Pins"
msgstr ""

#. type: Plain text
msgid ""
"All axis given in the INI File have a jog-plus and a jog-minus pin, so "
"hardware momentary switches can be used to jog the axis."
msgstr ""

#. type: Plain text
msgid "naming of this hal pin has changed for gmoccapy2"
msgstr ""

#. type: Plain text
msgid "For the standard XYZ config following hal Pin will be available:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-x-plus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-x-minus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-y-plus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-y-minus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-z-plus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-z-minus"
msgstr ""

#. type: Plain text
msgid "If you use a 4 axis INI file, there will be two additional pins"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-<your fourth axis letter >-plus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-<your fourth axis letter >-minus"
msgstr ""

#. type: Plain text
msgid "For a \"C\" axis you will see:"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-c-plus"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.axis.jog-c-minus"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Velocities And Turtle-Jog Hal Pin"
msgstr ""

#. type: Plain text
msgid ""
"The jog velocity can be selected with the corresponding slider. The scale of "
"the slider will be modified if the turtle button (the one showing a rabbit "
"or a turtle) has been toggled. If the button is not visible, it might have "
"been disabled on the <<gmoccapy:turtle-jog,settings page>>. If the button "
"shows the rabbit-icon, the scale is from min to max machine velocity. If it "
"shows the turtle, the scale will reach only 1/20 of max velocity by default. "
"The used divider can be set on the <<gmoccapy:turtle-jog,settings page>>."
msgstr ""

#. type: Plain text
msgid "So using a touch screen it is much easier to select smaller velocities."
msgstr ""

#. type: Plain text
msgid "gmoccapy offers a hal pin to toggle between turtle and rabbit jogging"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "gmoccapy.jog.turtle-jog   (Hal Bit In)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Increment Hal Pins"
msgstr ""

#. type: Plain text
msgid ""
"The jog increments are selectable through hal pins, so a selection hardware "
"switch can be used to select the increment to use. There will be a maximum "
"of 10 hal pin for the increments given in the INI File, if you give more "
"increments in your INI File, they will be not reachable from the GUI as they "
"will not be displayed."
msgstr ""

#. type: Plain text
msgid ""
"If you have 6 increments in your hal you will get *7* pins: jog-inc-0 is "
"unchangeable and will represent continuous jogging."
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-0"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-1"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-2"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-3"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-4"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-5"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-inc-6"
msgstr ""

#. type: Plain text
msgid "gmoccapy offers also a hal pint to output the selected jog invrement"
msgstr ""

#. type: Plain text
msgid "gmoccapy.jog.jog-increment"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware Unlock Pin"
msgstr ""

#. type: Plain text
msgid ""
"To be able to use a key switch to unlock the settings page the following pin "
"is exported."
msgstr ""

#. type: Plain text
msgid "gmoccapy.unlock-settings"
msgstr ""

#. type: Plain text
msgid ""
"The settings page is unlocked if the pin is high.  To use this pin, you need "
"to activate it on the settings page."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error Pins"
msgstr ""

#. type: Plain text
msgid "gmoccapy.error"
msgstr ""

#. type: Plain text
msgid "gmoccapy.delete-message"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.error is an bit out pin, to indicate an error, so a light can lit "
"or even the machine may be stopped. It will be reset with the pin gmoccapy."
"delete-message. gmoccapy.delete-message will delete the first error and "
"reset the gmoccapy.error pin to False after the last error has been cleared."
msgstr ""

#. type: Plain text
msgid ""
"Messages or user infos will not affect the gmoccapy.error pin, but the "
"gmoccapy.delete-message pin will delete the last message if no error is "
"shown!"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "User Created Message HAL Pins"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy may react to external errors, using 3 different user messages: All "
"are HAL_BIT pin."
msgstr ""

#. type: Plain text
msgid "'Status'"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.statustest"
msgstr ""

#. type: Plain text
msgid "'Yesnodialog'"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.yesnodialog"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.yesnodialog-waiting"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.yesnodialog-responce"
msgstr ""

#. type: Plain text
msgid "'Okdialog'"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.okdialog"
msgstr ""

#. type: Plain text
msgid "gmoccapy.messages.okdialog-waiting"
msgstr ""

#. type: Plain text
msgid ""
"To add user created message you need to add the message to the INI file in "
"the [DISPLAY] section. Here are a couple of examples."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_BOLDTEXT = LUBE SYSTEM FAULT\n"
"MESSAGE_TEXT = LUBE FAULT\n"
"MESSAGE_TYPE = okdialog\n"
"MESSAGE_PINNAME = lube-fault\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MESSAGE_BOLDTEXT = NONE\n"
"MESSAGE_TEXT = X SHEAR PIN BROKEN\n"
"MESSAGE_TYPE = status\n"
"MESSAGE_PINNAME = pin\n"
msgstr ""

#. type: Plain text
msgid ""
"To 'connect' new pins to and input you need to do this in the postgui HAL "
"file.  Here are some example connections that have the signal connected to "
"an input some place else in the HAL file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net gmoccapy-lube-fault gmoccapy.messages.lube-fault\n"
"net gmoccapy-lube-fault-waiting gmoccapy.messages.lube-fault-waiting\n"
"net gmoccapy-pin gmoccapy.messages.pin\n"
msgstr ""

#. type: Plain text
msgid ""
"For more information on HAL files and the net command see the <<cha:basic-"
"hal-reference,HAL Basics>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Feedback Pins"
msgstr ""

#. type: Plain text
msgid "There are two pins for spindle feedback"
msgstr ""

#. type: Plain text
msgid "gmoccapy.spindle_feedback_bar"
msgstr ""

#. type: Plain text
msgid "gmoccapy.spindle_at_speed_led"
msgstr ""

#. type: Plain text
msgid ""
"'gmoccapy.spindle_feedback_bar' will accept an float input to show the "
"spindle speed.  'gmoccapy.spindle_at_speed_led' is an bit-in-pin to lit the "
"GUI led if spindle is at speed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pins To Indicate Program Progress Information"
msgstr ""

#. type: Plain text
msgid "There are three pins giving information over the program progress"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.program.length HAL_S32 showing the total number of lines of the "
"program"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.program.current-line HAL_S32 indicating the current working line of "
"the program"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.program.progress HAL_FLOAT giving the program progress in percentage"
msgstr ""

#. type: Plain text
msgid ""
"The values may not be very accurate, if you are working with subroutines or "
"large remap procedures, also loops will cause different values."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool related pin"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Change Pin"
msgstr ""

#. type: Plain text
msgid ""
"This pin are provided to use gmoccapy's internal tool change dialog, similar "
"to the one known from axis, but with several modifications, so you will not "
"only get the message to change to 'tool number 3', but also the description "
"of that tool like '7.5 mm 3 flute cutter'. The information is taken from the "
"tool table, so it is up to you what to display."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/manual_toolchange.png"
msgstr ""

#. type: Plain text
msgid "gmoccapy.toolchange-number HAL_S32 The number of the tool to be changed"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.toolchange-change HAL_BIT Indicate that a tool has to be changed"
msgstr ""

#. type: Plain text
msgid "gmoccapy.toolchange-changed HAL_BIT Indicate toll has been changed"
msgstr ""

#. type: Plain text
msgid "Usually they are connected like this for a manual tool change:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net tool-change gmoccapy.toolchange-change <= iocontrol.0.tool-change\n"
"net tool-changed gmoccapy.toolchange-changed <= iocontrol.0.tool-changed\n"
"net tool-prep-number gmoccapy.toolchange-number <= iocontrol.0.tool-prep-number\n"
"net tool-prep-loop iocontrol.0.tool-prepare <= iocontrol.0.tool-prepared\n"
msgstr ""

#. type: Plain text
msgid ""
"Please take care, that this connections have to be done in the postgui hal "
"file!"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Offset Pins"
msgstr ""

#. type: Plain text
msgid ""
"This pins allows you to show the active tool offset values for X and Z in "
"the tool information frame. You should know that they are only active after "
"G43 has been sent."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_0_9_7_tool_info.png"
msgstr ""

#. type: Plain text
msgid "gmoccapy.tooloffset-x"
msgstr ""

#. type: Plain text
msgid "gmoccapy.tooloffset-z"
msgstr ""

#. type: Plain text
msgid ""
"the tooloffset-x line is not needed on a mill, and will not be displayed on "
"a mill with trivial kinematics."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" net tooloffset-x gmoccapy.tooloffset-x <= motion.tooloffset.x\n"
" net tooloffset-z gmoccapy.tooloffset-z <= motion.tooloffset.z\n"
msgstr ""

#. type: Plain text
msgid ""
"Please note, that gmoccapy takes care of its own to update the offsets, "
"sending an G43 after any tool change, *but not in auto mode!*"
msgstr ""

#. type: Plain text
msgid ""
"So writing a program makes you responsible to include an G43 after each tool "
"change!"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Auto Tool Measurement"
msgstr ""

#. type: Plain text
msgid ""
"Gmoccapy offers an integrated auto tool measurement. To use this feature, "
"you will need to do some additional settings and you may want to use the "
"offered hal pin to get values in your own ngc remap procedure."
msgstr ""

#. type: Plain text
msgid ""
"[IMPORTANT] Before starting the first test, do not forget to enter the probe "
"height and probe velocities on the settings page! See <<gmoccapy:tool-"
"measurement,Settings Page Tool Measurement>>"
msgstr ""

#. type: Plain text
msgid ""
"It might be also a good idea to take a look at the tool measurement video: "
"see <<gmoccapy:tool-measurement-videos,tool measurement related videos>>"
msgstr ""

#. type: Plain text
msgid ""
"Tool Measurement in gmoccapy is done a little bit different to many other "
"GUI.  You should follow these steps:"
msgstr ""

#. type: Plain text
msgid "touch of you workpiece in X and Y"
msgstr ""

#. type: Plain text
msgid ""
"measure the height of your block from the base where your tool switch is "
"located, to the upper face of the block (including chuck etc.)"
msgstr ""

#. type: Plain text
msgid "Push the button block height and enter the measured value"
msgstr ""

#. type: Plain text
msgid "Go to auto mode and start your program"
msgstr ""

#. type: Plain text
msgid "here is a small sketch:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/sketch_auto_tool_measurement.png"
msgstr ""

#. type: Plain text
msgid ""
"With the first given tool change the tool will be measured and the offset "
"will be set automatically to fit the block height. The advantage of the "
"gmoccapy way is, that you do not need a reference tool."
msgstr ""

#. type: Plain text
msgid ""
"Your program must contain a tool change at the beginning! The tool will be "
"measured, even it has been used before, so there is no danger, if the block "
"height has changed. There are several videos showing the way to do that on "
"you tube."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Measurement Pins"
msgstr ""

#. type: Plain text
msgid ""
"Gmoccapy offers 5 pins for tool measurement purpose. The pins are mostly "
"used to be read from a gcode subroutine, so the code can react to different "
"values."
msgstr ""

#. type: Plain text
msgid "gmoccapy.toolmeasurement HAL_BIT enable or not tool measurement"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.blockheight HAL_FLOAT the measured value of the top face of the "
"workpiece"
msgstr ""

#. type: Plain text
msgid "gmoccapy.probeheight HAL_FLOAT the probe switch height"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy.searchvel HAL_FLOAT the velocity to search for the tool probe switch"
msgstr ""

#. type: Plain text
msgid "gmoccapy.probevel HAL_FLOAT the velocity to probe tool length"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Measurement INI File Modifications"
msgstr ""

#. type: Plain text
msgid "Modify your INI File to include the following:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The RS274NGC section"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"# Enables the reading of INI and HAL values from gcode\n"
"FEATURES=12\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# is the sub, with is called when a error during tool change happens, not needed on every machine configuration\n"
"ON_ABORT_COMMAND=O <on_abort> call\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The remap code\n"
"REMAP=M6  modalgroup=6 prolog=change_prolog ngc=change epilog=change_epilog\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Tool Sensor Section"
msgstr ""

#. type: Plain text
msgid ""
"The position of the tool sensor and the start position of the probing "
"movement, all values are absolute coordinates, except MAXPROBE, what must be "
"given in relative movement."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TOOLSENSOR]\n"
"X = 10\n"
"Y = 10\n"
"Z = -20\n"
"MAXPROBE =  -20\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Change Position Section"
msgstr ""

#. type: Plain text
msgid ""
"This is not named TOOL_CHANGE_POSITION on purpose - *canon uses that name "
"and will interfere otherwise.* The position to move the machine before "
"giving the change tool command. All values are in absolute coordinates."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[CHANGE_POSITION]\n"
"X = 10\n"
"Y = 10\n"
"Z = -2\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The Python Section"
msgstr ""

#. type: Plain text
msgid "The Python plug ins serves interpreter and task."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[PYTHON]\n"
"# The path to start a search for user modules\n"
"PATH_PREPEND = python\n"
"# The start point for all.\n"
"TOPLEVEL = python/toplevel.py\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Needed Files"
msgstr ""

#. type: Plain text
msgid "You must copy the following files to your config directory"
msgstr ""

#. type: Plain text
msgid ""
"First make a directory 'python' in your config folder from 'your_linuxcnc-"
"dev_directory/configs/sim/gmoccapy/python' copy 'toplevel.py' to your "
"'config_dir/python' folder. Copy 'remap.py' to your 'config_dir/python' "
"folder Copy 'stdglue.py' to your 'config_dir/python' folder."
msgstr ""

#. type: Plain text
msgid ""
"From 'your_linuxcnc-dev_directory/configs/sim/gmoccapy/macros' copy "
"'on_abort.ngc' to the directory specified in the SUBROUTINE_PATH see "
"<<gmocappy:rs274ngc, RS274NGC Section>>.  From 'your_linuxcnc-dev_directory/"
"configs/sim/gmoccapy/macros' copy 'change.ngc' to the directory specified as "
"SUBROUTINE_PATH see <<gmocappy:rs274ngc, RS274NGC Section>>.  Open 'change."
"ngc' with a editor and uncomment the following lines (49 and 50):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"F #<_hal[gmoccapy.probevel]>\n"
"G38.2 Z-4\n"
msgstr ""

#. type: Plain text
msgid "You may want to modify this file to fit more your needs."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Needed Hal Connections"
msgstr ""

#. type: Plain text
msgid "Connect the tool probe in your hal file like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net probe  motion.probe-input <= <your_input_pin>\n"
msgstr ""

#. type: Plain text
msgid "The line might look like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid " net probe  motion.probe-input <= parport.0.pin-15-in\n"
msgstr ""

#. type: Plain text
msgid "In your postgui.hal file add:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The next lines are only needed if the pins had been connected before\n"
"unlinkp iocontrol.0.tool-change\n"
"unlinkp iocontrol.0.tool-changed\n"
"unlinkp iocontrol.0.tool-prep-number\n"
"unlinkp iocontrol.0.tool-prepared\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# link to gmoccapy toolchange, so you get the advantage of tool description on change dialog\n"
"net tool-change gmoccapy.toolchange-change <= iocontrol.0.tool-change\n"
"net tool-changed gmoccapy.toolchange-changed <= iocontrol.0.tool-changed\n"
"net tool-prep-number gmoccapy.toolchange-number <= iocontrol.0.tool-prep-number\n"
"net tool-prep-loop iocontrol.0.tool-prepare <= iocontrol.0.tool-prepared\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Settings Page"
msgstr ""

#. type: Plain text
msgid ""
"To enter the page you will have to click on image:images/"
"gmoccapy_settings_button.png[align=\"left\"] and give an unlock code, witch "
"is *123* as default. If you want to change it at this time you will have to "
"edit the hidden preference file, see <<gmoccapy:display-section,the display "
"section>> for details."
msgstr ""

#. type: Plain text
msgid "The page looks at the moment like so:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_settings_appearance.png"
msgstr ""

#. type: Plain text
msgid "The page is separated in three main tabs:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Appearance"
msgstr ""

#. type: Plain text
msgid "On this tab you will find the following options:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Main Window"
msgstr ""

#. type: Plain text
msgid ""
"Here you can select how you wish the GUI to start. The main reason for this "
"was the wish to get an easy + way for the user to set the starting options "
"without the need to touch code. + + You have three options: +"
msgstr ""

#. type: Plain text
msgid "start as full screen"
msgstr ""

#. type: Plain text
msgid "start maximized"
msgstr ""

#. type: Plain text
msgid "start as window"
msgstr ""

#. type: Plain text
msgid ""
"+ If you select start as window the spinboxes to set the position and size "
"will get active. + One time set, the GUI will start every time on the place "
"and with the size selected. + Nevertheless the user can change the size and "
"position using the mouse, but that will + not have any influence on the "
"settings. +"
msgstr ""

#. type: Plain text
msgid ""
"'*hide the cursor*' does allow to hide the cursor, what is very useful if "
"you use a touch screen."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Keyboard"
msgstr ""

#. type: Plain text
msgid ""
"The check-boxes allows the user to select if he want the on board keyboard "
"to be shown immediately, + when entering the MDI Mode, when entering the "
"offset page, the tooledit widget or when open a program + in the EDIT mode. "
"The keyboard button on the bottom button list will not been affected by this "
"settings, + so you be able to show or hide the keyboard by pressing the "
"button. The default behavior will be set by + the check-boxes. +"
msgstr ""

#. type: Plain text
msgid "Default are : +"
msgstr ""

#. type: Plain text
msgid ""
"If this section is not sensitive, you have not installed a virtual keyboard,"
msgstr ""

#. type: Plain text
msgid "supported are 'onboard' and 'matchbox-keyboard'."
msgstr ""

#. type: Plain text
msgid "show keyboard on offset = True"
msgstr ""

#. type: Plain text
msgid "show keyboard on tooledit = False"
msgstr ""

#. type: Plain text
msgid "show keyboard on MDI = True"
msgstr ""

#. type: Plain text
msgid "show keyboard on EDIT = True"
msgstr ""

#. type: Plain text
msgid "show keyboard on load file = False"
msgstr ""

#. type: Plain text
msgid ""
"If the keyboard layout is not correct, i.e. clicking X gives Z, than the "
"layout has not been set properly, related to your locale settings. For "
"onboard it can be solved with a small batch file with the following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" #!/bin/bash\n"
" setxkbmap -model pc105 -layout de -variant basic\n"
msgstr ""

#. type: Plain text
msgid ""
"The letters \"de\" are for German, you will have to set them according to "
"your locale settings. Just execute this file before starting LinuxCNC, it "
"can be done also adding a starter to your local folder."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "./config/autostart\n"
msgstr ""

#. type: Plain text
msgid "So that the layout is set automatically on starting."
msgstr ""

#. type: Plain text
msgid ""
"For matchbox-keyboard you will have to make your own layout, for a German "
"layout ask in the forum."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "On Touch Off"
msgstr ""

#. type: Plain text
msgid ""
"give the option to show the preview tab or the offset page tab if you enter "
"the touch off mode by clicking the corresponding bottom button."
msgstr ""

#. type: Plain text
msgid "show preview"
msgstr ""

#. type: Plain text
msgid "show offsets"
msgstr ""

#. type: Plain text
msgid ""
"As the notebook tabs are shown, you are able to switch between both views in "
"any case."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "DRO Options"
msgstr ""

#. type: Plain text
msgid ""
"You have the option to select the background colors of the different DRO "
"states.  So users suffering from protanopia (red/green weakness) are able to "
"select proper colors"
msgstr ""

#. type: Plain text
msgid "By default the backgrounds are:"
msgstr ""

#. type: Plain text
msgid "Relative mode = black"
msgstr ""

#. type: Plain text
msgid "Absolute mode = blue"
msgstr ""

#. type: Plain text
msgid "Distance to go = yellow"
msgstr ""

#. type: Plain text
msgid "The foreground color of the DRO can be selected with:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "homed color   = green\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "unhomed color = red\n"
msgstr ""

#. type: Plain text
msgid "'show dro in preview' + the DRO will be shown in the preview window + +"
msgstr ""

#. type: Plain text
msgid "'show offsets'+ the Offsets will be shown in the preview window + +"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'show DTG' + \n"
"the distance to go will be shown in the preview window + + \n"
" +\n"
msgstr ""

#. type: Plain text
msgid ""
"[NOTE] *You can change through the DRO modes (absolute, relative, distance "
"to go) by clicking on the DRO!*"
msgstr ""

#. type: Plain text
msgid ""
"if you click on the left side letter of the DRO a popup window will allow "
"you to set the value of the axis, making it easier to set the value, as you "
"will not need to go over the touch off bottom button. Clicking the numbers "
"(right side of the DRO) will toggle through the DRO modes as described "
"above. *"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'size' + \n"
"allows to set the size of the DRO font, default is 28, if you use a bigger screen you may want to increase the size up to 56. \n"
"    If you do use 4 axis, the DRO font size will be 3/4 of the value, because of space reason. + + \n"
msgstr ""

#. type: Plain text
msgid "'digits' + sets the number of digits of the DRO from 1 to 5. +"
msgstr ""

#. type: Plain text
msgid ""
"Imperial will show one digit more that metric. So if you are in imperial "
"machine units and set the digit value to 1, you will get no digit at all in "
"metric."
msgstr ""

#. type: Plain text
msgid ""
"'toggle DRO mode' + if not active, a mouse click on the DRO will not take "
"any action. + By default this checkbox is active, so every click on any DRO "
"will toggle the DRO readout from actual to relative to DTG (distance to go). "
"+ Neverthereless a click on the axis letter will open the popup dialog to "
"set the axis value + +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Preview"
msgstr ""

#. type: Plain text
msgid ""
"'Grid Size' Sets the grid size of the preview window. Unfortunately the size "
"*has to be set in inches*, even if your machine units are metric. We do hope "
"to fix that in a future release."
msgstr ""

#. type: Plain text
msgid "[NOTE] The grid will not be shown in perspective view."
msgstr ""

#. type: Plain text
msgid ""
"'Show DRO' + Will show the a DRO also in the preview window, it will be "
"shown automatically in fullsize preview"
msgstr ""

#. type: Plain text
msgid ""
"'Show DTG' will show also the DTG (direct distance to end point) in the "
"preview, only if Show DRO is active and not full size preview."
msgstr ""

#. type: Plain text
msgid "'Show Offsets' will show the offsets in the preview window."
msgstr ""

#. type: Plain text
msgid ""
"[NOTE] If you only check this option and leave the others unchecked, you "
"will get in full size preview a offset page"
msgstr ""

#. type: Plain text
msgid ""
"'Mouse Button Mode' this combobox you can select the button behavior of the "
"mouse to rotate, move or zoom within the preview."
msgstr ""

#. type: Plain text
msgid "left rotate, middle move, right zoom"
msgstr ""

#. type: Plain text
msgid "left zoom, middle move, right rotate"
msgstr ""

#. type: Plain text
msgid "left move, middle rotate, right zoom"
msgstr ""

#. type: Plain text
msgid "left zoom, middle rotate, right move"
msgstr ""

#. type: Plain text
msgid "left move, middle zoom, right rotate"
msgstr ""

#. type: Plain text
msgid "left rotate, middle zoom, right move"
msgstr ""

#. type: Plain text
msgid "Default is left move, middle zoom, right rotate."
msgstr ""

#. type: Plain text
msgid "The mouse wheel will still zoom the preview in every mode."
msgstr ""

#. type: Plain text
msgid ""
"If you select an element in the preview, the selected element will be taken "
"as rotation center point and in auto mode the corresponding code line will "
"be highlighted."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "File to load on start up"
msgstr ""

#. type: Plain text
msgid ""
"Select the file you want to be loaded on start up.  In other GUI changing "
"this was very cumbersome, because the users where forced to edit the INI "
"File."
msgstr ""

#. type: Plain text
msgid ""
"Select the file you want to be loaded on start up. If a file is loaded, it "
"can be set by pressing the current button to avoid that any program is "
"loaded at start up, just press the None button."
msgstr ""

#. type: Plain text
msgid ""
"The file selection screen will use the filters you have set in the INI File, "
"if there aren't any filters given, you will only see *ngc* files. The path "
"will be set according to the INI settings in [DISPLAY] PROGRAM_PREFIX"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Jump to dir"
msgstr ""

#. type: Plain text
msgid ""
"you can set here the directory to jump to if you press the corresponding "
"button in the file selection dialog."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_file_selection_dialog_with_keyboard.png"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Themes and Sounds"
msgstr ""

#. type: Plain text
msgid ""
"This lets the user select what desktop theme to apply and what error and "
"messages sounds should be played.  By default \"Follow System Theme\" is set."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_settings_hardware.png"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Hardware MPG Scales"
msgstr ""

#. type: Plain text
msgid ""
"For the different Hal Pin to connect MPG Wheels to, you may select "
"individual scales to be applied.  The main reason for this was my own test "
"to solve this through hal connections, resulting in a very complex hal file. "
"Imagine a user having an MPG Wheel with 100 ipr and he wants to slow down "
"the max vel from 14000 to 2000 mm/min, that needs 12000 impulses, resulting "
"in 120 turns of the wheel! Or an other user having a MPG Wheel with 500 ipr "
"and he wants to set the spindle override witch has limits from 50 to 120 % "
"so he goes from min to max within 70 impulses, meaning not even 1/4 turn."
msgstr ""

#. type: Plain text
msgid "By default all scales are set using the calculation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(MAX - MIN)/100\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Keyboard shortcuts"
msgstr ""

#. type: Plain text
msgid ""
"Some users want to jog there machine using the keyboard buttons and there "
"are others that will never allow this.  So everybody can select whether to "
"use them or not. It is not recommended to use keyboard jogging, as it "
"represents a serious risk for operator and machine."
msgstr ""

#. type: Plain text
msgid "Default is not to use keyboard shortcuts."
msgstr ""

#. type: Plain text
msgid ""
"Please take care if you use a lathe, than the shortcuts will be different.  "
"See <<gmoccapy:lathe-section,the Lathe section>>"
msgstr ""

#. type: Plain text
msgid "Arrow Left or NumPad_Left = X minus"
msgstr ""

#. type: Plain text
msgid "Arrow Right or NumPad_Right = X plus"
msgstr ""

#. type: Plain text
msgid "Arrow up or NumPad_Up = Y plus"
msgstr ""

#. type: Plain text
msgid "Arrow Down or NumPad_Down = Y minus"
msgstr ""

#. type: Plain text
msgid "Page Up or NumPad_Page_Up = Z plus"
msgstr ""

#. type: Plain text
msgid "Page Down or NumPad_Page_Down = Z minus"
msgstr ""

#. type: Plain text
msgid "F1 = Estop (will work even if keyboard shortcuts are disabled)"
msgstr ""

#. type: Plain text
msgid "F2 = Machine on"
msgstr ""

#. type: Plain text
msgid "F3 = manual mode"
msgstr ""

#. type: Plain text
msgid "F5 = MDI mode"
msgstr ""

#. type: Plain text
msgid "ESC = Abort"
msgstr ""

#. type: Plain text
msgid "In AUTO Mode we will allow the following key shortcuts"
msgstr ""

#. type: Plain text
msgid "R or r = run program"
msgstr ""

#. type: Plain text
msgid "P or p = pause program"
msgstr ""

#. type: Plain text
msgid "S or s = resume program"
msgstr ""

#. type: Plain text
msgid "Control and R or r will reload the loaded file"
msgstr ""

#. type: Plain text
msgid ""
"There are additional keys for message handling, see <<gmoccapy:message-"
"behavior,Message behavior and appearance>>"
msgstr ""

#. type: Plain text
msgid "WINDOWS = Delete last message"
msgstr ""

#. type: Plain text
msgid "<STRG><SPACE> = Delete all messages"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Unlock options"
msgstr ""

#. type: Plain text
msgid "There are three options to unlock the settings page:"
msgstr ""

#. type: Plain text
msgid "use unlock code (the user must give a code to get in)"
msgstr ""

#. type: Plain text
msgid "Do not use unlock code (There will be no security check)"
msgstr ""

#. type: Plain text
msgid ""
"Use hal pin to unlock (hardware pin must be high to unlock the settings, see "
"<<gmoccapy:hardware-unlock, hardware unlock pin>>"
msgstr ""

#. type: Plain text
msgid "Default is use unlock code (default = *123*)"
msgstr ""

#. type: Plain text
msgid ""
"The start RPM sets the rpm to be used if the spindle is started and no S "
"value has been set."
msgstr ""

#. type: Plain text
msgid ""
"This value will be preseted according to your settings in [DISPLAY] "
"DEFAULT_SPINDLE_SPEED of your INI. If you change the settings on the "
"settings page, that value will be default from that moment, your INI File "
"will not be modified."
msgstr ""

#. type: Plain text
msgid ""
"With the MIN and MAX settings you set the limits of the spindle bar shown in "
"the INFO frame on the main screen. It is no error giving wrong values. If "
"you give a maximum of 2000 and your spindle makes 4000 rpm, only the bar "
"level will be wrong on higher speeds than 2000 rpm."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"default values are\n"
"MIN = 0\n"
"MAX = 6000\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Turtle Jog"
msgstr ""

#. type: Plain text
msgid ""
"[[sub:turtle_jog]] This settings will have influence on the jog velocities."
msgstr ""

#. type: Plain text
msgid ""
"'hide turtle jog button' will hide the button right of the jog velocity "
"slider, if you hide this button, please take care that it shows the rabbit "
"icon, otherwise you will not be able to jog faster than the turtle jog "
"velocity, which is calculated using the turtle jog factor."
msgstr ""

#. type: Plain text
msgid ""
"'Turtle jog factor' sets the scale to apply for turtle jog mode. If you set "
"a factor of 20, the turtle max jog velocity will be 1/20 of max velocity of "
"the machine if in turtle mode (button pressed, showing the turtle)"
msgstr ""

#. type: Plain text
msgid ""
"This button can be activated using the <<gmoccapy:jog-velocity,turtle-jog>> "
"hal pin."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Advanced Settings"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_settings_advanced.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Measurement"
msgstr ""

#. type: Plain text
msgid ""
"If this part is not sensitive, you do not have a valid INI file "
"configuration to use tool measurement."
msgstr ""

#. type: Plain text
msgid "Please check <<gmoccapy:auto-tool-measurement, Auto Tool Measurement>>"
msgstr ""

#. type: Plain text
msgid ""
"Use auto tool measurement : If checked, after each tool change, a tool "
"measurement will be done, the result will be stored in the tool table and an "
"G43 will be executed after the change."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Probe Information"
msgstr ""

#. type: Plain text
msgid ""
"The following information is taken from your INI file and must be given in "
"absolute coordinates"
msgstr ""

#. type: Plain text
msgid "X Pos. = The X position of the tool switch"
msgstr ""

#. type: Plain text
msgid "Y Pos. = The Y position of the tool switch"
msgstr ""

#. type: Plain text
msgid "Z Pos. = The Z position of the tool switch, we will go as rapid move to"
msgstr ""

#. type: Plain text
msgid "this coordinate"
msgstr ""

#. type: Plain text
msgid "Max. Probe = is the distance to search for contact, an error will be"
msgstr ""

#. type: Plain text
msgid ""
"launched, if no contact is given. The distance has to be given in relative "
"coordinates, beginning the move from Z Pos., so you have to give a negative "
"value to go down!"
msgstr ""

#. type: Plain text
msgid "Probe Height = is the height of your probe switch, you can measure it."
msgstr ""

#. type: Plain text
msgid ""
"Just touch off the base where the probe switch is located and set that to "
"zero. Then make a tool change and watch the tool_offset_z value, that is the "
"height you must enter here."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Probe velocities"
msgstr ""

#. type: Plain text
msgid "Search Vel. = The velocity to search for the tool switch, after contact"
msgstr ""

#. type: Plain text
msgid ""
"the tool will go up again and then goes toward the probe again with probe "
"vel, so you will get better results."
msgstr ""

#. type: Plain text
msgid "Probe Vel. = Is the velocity for the second movement to the switch, it"
msgstr ""

#. type: Plain text
msgid ""
"should be slower to get better touch results.(In sim mode, this is commented "
"out in macros/change.ngc, otherwise the user would have to click twice on "
"the probe button)"
msgstr ""

#. type: Plain text
msgid ""
"If checked, the tool in spindle will be saved on each change in the "
"preference file, making it possible to reload the last mounted tool on start "
"up.  The tool will be loaded after all axis are homed, because before it is "
"not allowed to execute MDI commands. If you use NO_FORCE_HOMING you can not "
"use this feature, because the needed all_homed_signal will never be emitted."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Message Behavior And Appearance"
msgstr ""

#. type: Plain text
msgid ""
"This will display small pop up windows displaying the message or error text, "
"the behavior is very similar to the one axis uses. You can delete a specific "
"message, by clicking on it's close button, if you want to delete the last "
"one, just hit the WINDOWS key on your keyboard, or delete all messages at "
"ones with <STRG><SPACE>."
msgstr ""

#. type: Plain text
msgid "You are able to set some options:"
msgstr ""

#. type: Plain text
msgid "X Pos = The position of the top left corner of the message in X counted"
msgstr ""

#. type: Plain text
msgid "in pixel from the top left corner of the screen."
msgstr ""

#. type: Plain text
msgid "Y Pos = The position of the top left corner of the message in Y counted"
msgstr ""

#. type: Plain text
msgid "Width = The width of the message box"
msgstr ""

#. type: Plain text
msgid ""
"max = The maximum messages you want to see at ones, if you set this to 10,"
msgstr ""

#. type: Plain text
msgid ""
"the 11th message will delete the first one, so you will only see the last 10 "
"ones."
msgstr ""

#. type: Plain text
msgid "Font = The font and size you want to use to display the messages"
msgstr ""

#. type: Plain text
msgid ""
"use frames = If you activate the checkbox, each message will be displayed"
msgstr ""

#. type: Plain text
msgid ""
"in a frame, so it is much easier to distinguish the messages. But you will "
"need a little bit more space."
msgstr ""

#. type: Plain text
msgid ""
"The button launch test message will just do what it is supposed to, it will"
msgstr ""

#. type: Plain text
msgid ""
"show a message, so you can see the changes of your settings without the need "
"to generate an error."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Run From Line Option"
msgstr ""

#. type: Plain text
msgid ""
"You can allow or disallow the run from line. This will set the corresponding "
"button insensitive (grayed out), so the user will not be able to use this "
"option. The default is disable run from line."
msgstr ""

#. type: Plain text
msgid ""
"It is not recommend to use run from line, as LinuxCNC will not take care of "
"any previous lines in the code before the starting line. So errors or "
"crashes are very probable."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Lathe Specific Section"
msgstr ""

#. type: Plain text
msgid ""
"If in the INI File LATHE = 1 is given, the GUI will change its appearance to "
"the special needs for a lathe. Mainly the Y axis will be hidden and the jog "
"buttons will be arranged in a different order."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Normal Lathe"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_lathe.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_back_tool_lathe.png"
msgstr ""

#. type: Plain text
msgid ""
"As you see the R DRO has a black background and the D DRO is gray. This will "
"change according to the active G-Code G7 or G8. The active mode is visible "
"by the black background, meaning in the shown images G8 is active."
msgstr ""

#. type: Plain text
msgid ""
"The next difference to the standard screen is the location of the Jog "
"Button.  X and Z have changed places and Y is gone. You will note that the X"
"+ and X- buttons changes there places according to normal or back tool lathe."
msgstr ""

#. type: Plain text
msgid "Also the keyboard behavior will change:"
msgstr ""

#. type: Plain text
msgid "Normal Lathe:"
msgstr ""

#. type: Plain text
msgid "Arrow Left or NumPad_Left = Z minus"
msgstr ""

#. type: Plain text
msgid "Arrow Right or NumPad_Right = Z plus"
msgstr ""

#. type: Plain text
msgid "Arrow up or NumPad_Up = X minus"
msgstr ""

#. type: Plain text
msgid "Arrow Down or NumPad_Down = X plus"
msgstr ""

#. type: Plain text
msgid "Back Tool Lathe:"
msgstr ""

#. type: Plain text
msgid "Arrow up or NumPad_Up = X plus"
msgstr ""

#. type: Plain text
msgid "Arrow Down or NumPad_Down = X minus"
msgstr ""

#. type: Plain text
msgid ""
"The tool information frame will show not only the Z offset, but also the X "
"offset and the tool table is showing all lathe relevant information."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Plasma Specific Section"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gmoccapy_plasma.png"
msgstr ""

#. type: Plain text
msgid ""
"There is a very good WIKI, which is actually growing, maintained by Marius "
"see http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Gmoccapy_plasma[Plasma wiki "
"page]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Video On You Tube"
msgstr ""

#. type: Plain text
msgid ""
"This are videos showing gmoccapy in action, unfortunately the videos don't "
"show the latest version of gmoccapy, but the way to use it will not change "
"much in the future. I will try to actualize the videos as soon as possible."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Basic Usage"
msgstr ""

#. type: Plain text
msgid "https://www.youtube.com/watch?v=O5B-s3uiI6g"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Simulated Jog Wheels"
msgstr ""

#. type: Plain text
msgid "http://youtu.be/ag34SGxt97o"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Settings Page"
msgstr ""

#. type: Plain text
msgid "https://www.youtube.com/watch?v=AuwhSHRJoiI"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Simulated Hardware Button"
msgstr ""

#. type: Plain text
msgid "Deutsch = http://www.youtube.com/watch?v=DTqhY-MfzDE"
msgstr ""

#. type: Plain text
msgid "English = http://www.youtube.com/watch?v=ItVWJBK9WFA"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "User Tabs"
msgstr ""

#. type: Plain text
msgid "http://www.youtube.com/watch?v=rG1zmeqXyZI"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Measurement Video"
msgstr ""

#. type: Plain text
msgid "Auto Tool Measurement Simulation = http://youtu.be/rrkMw6rUFdk"
msgstr ""

#. type: Plain text
msgid "Auto Tool Measurement Screen = http://youtu.be/Z2ULDj9dzvk"
msgstr ""

#. type: Plain text
msgid "Auto Tool Measurement Machine = http://youtu.be/1arucCaDdX4"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Known problems "
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Strange numbers in the info area"
msgstr ""

#. type: Plain text
msgid "If you get strange numbers in the info area of gmoccapy like:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/strange_numbers.png"
msgstr ""

#. type: Plain text
msgid ""
"You have made your config file using an older version of StepConfWizard.  It "
"has made a wrong entry in the INI file under the [TRAJ] named "
"MAX_LINEAR_VELOCITY = xxx. Change that entry to MAX_VELOCITY = xxx"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Not ending macro [[sub:NOT_ENDING_MACROS]]"
msgstr ""

#. type: Plain text
msgid "If you use a macro without movement, like this one:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid " o<zeroxy> sub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G92.1\n"
"G92.2\n"
"G40\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L20 P0 X0 Y0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<zeroxy> endsub \n"
"m2\n"
msgstr ""

#. type: Plain text
msgid ""
"gmoccapy will not see the end of the macro, because the interpreter needs to "
"change its state to IDLE, but the macro does not even set the interpreter to "
"a new state. To avoid that just add a G4 P0.1 line to get the needed "
"signal.  The correct macro would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G4 P0.1\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "NGCGUI"
msgstr ""

#. type: Block title
#, no-wrap
msgid "NGCGUI embedded into Axis"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ngcgui.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Overview"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI' is a Tcl application to work with subroutines. It allows you to "
"have a conversational interface with LinuxCNC. You can organize the "
"subroutines in the order you need them to run and concatenate the "
"subroutines into one file for a complete part program."
msgstr ""

#. type: Plain text
msgid "'NGCGUI' can run as a standalone application or can be embedded in"
msgstr ""

#. type: Plain text
msgid "multiple tab pages in the axis GUI"
msgstr ""

#. type: Plain text
msgid "'PYNGCGUI' is an alternate, python implementation of ngcgui."
msgstr ""

#. type: Plain text
msgid "'PYNGCGUI' can run as a standalone application or can be embedded as"
msgstr ""

#. type: Plain text
msgid ""
"a tab page (with its own set of multiple subroutine tabs) in any GUI that "
"supports embedding of gladevcp applications axis, touchy, gscreen and "
"gmoccapy."
msgstr ""

#. type: Plain text
msgid "Using NGCGUI or PYNGCGUI:"
msgstr ""

#. type: Plain text
msgid "Tab pages are provided for each subroutine specified in the INI file"
msgstr ""

#. type: Plain text
msgid ""
"New subroutines tab pages can be added on the fly using the <<ngcgui-ini,"
"custom tab>>"
msgstr ""

#. type: Plain text
msgid ""
"Each subroutine tab page provides entry boxes for all subroutine parameters"
msgstr ""

#. type: Plain text
msgid ""
"The entry boxes can have a default value and an label that are identified by "
"special comments in the subroutine file"
msgstr ""

#. type: Plain text
msgid ""
"Subroutine invocations can be concatenated together to form a multiple step "
"program"
msgstr ""

#. type: Plain text
msgid ""
"Any single-file G code subroutine that conforms to ngcgui conventions can be "
"used"
msgstr ""

#. type: Plain text
msgid ""
"Any gcmc (G code-meta-compiler) program that conforms to ngcgui conventions "
"for tagging variables can be used. (The gcmc executable must be installed "
"separately, see: http://www.vagrearg.org/content/gcmc)"
msgstr ""

#. type: Plain text
msgid ""
"NGCGUI and PYNGCGUI implement the same functions and both process .ngc and ."
"gcmc files that conform to a few ngcgui-specific conventions.  In this "
"document, the term 'NGCGUI' generally refers to either application."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Demonstration Configurations"
msgstr ""

#. type: Plain text
msgid ""
"A number of demonstration configurations are located in the sim directory of "
"the Sample Configurations offered by the LinuxCNC configuration picker. The "
"configuration picker is on the system's main menu:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " CNC > LinuxCNC\n"
msgstr ""

#. type: Plain text
msgid ""
"Examples are included for the axis, touchy, gscreen, and gmoccapy.  These "
"examples demonstrate both 3-axis (XYZ) cartesian configurations (like mills) "
"and lathe (XZ) setups.  Some examples show the use of a pop up keyboard for "
"touch screen systems and other examples demonstrate the use of files created "
"for the gcmc (G code Meta Compiler) application.  The touchy examples also "
"demonstrate incorporation of a gladevcp back plot viewer (gremlin_view)."
msgstr ""

#. type: Plain text
msgid "The simplest application is found as:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " Sample Configurations/sim/axis/ngcgui /ngcgui_simple\n"
msgstr ""

#. type: Plain text
msgid "A comprehensive example showing gcmc compatibility is at:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " Sample Configurations/sim/axis/ngcgui/ngcgui_gcmc\n"
msgstr ""

#. type: Plain text
msgid ""
"A comprehensive example embedded as a gladevcp app and using gcmc is at:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " Sample Configurations/sim/gscreen/ngcgui/pyngcgui_gcmc\n"
msgstr ""

#. type: Plain text
msgid ""
"The example sim configurations make use of library files that provide "
"example G code subroutine (.ngc) files and G code-meta-compiler (.gcmc) "
"files:"
msgstr ""

#. type: Plain text
msgid "'nc_files/ngcgui_lib'"
msgstr ""

#. type: Plain text
msgid "'arc1.ngc' - basic arc using cutter radius compensation"
msgstr ""

#. type: Plain text
msgid "'arc2.ngc' - arc speced by center, offset, width, angle (calls arc1)"
msgstr ""

#. type: Plain text
msgid ""
"'backlash.ngc' - routine to measure an axis backlash with dial indicator"
msgstr ""

#. type: Plain text
msgid "'db25.ngc' - creates a DB25 plug cutout"
msgstr ""

#. type: Plain text
msgid "'gosper.ngc' - a recursion demo (flowsnake)"
msgstr ""

#. type: Plain text
msgid "'helix.ngc' - helix or D-hole cutting"
msgstr ""

#. type: Plain text
msgid "'helix_rtheta.ngc' - helix or D-hole positioned by radius and angle"
msgstr ""

#. type: Plain text
msgid "'hole_circle.ngc' - equally spaced holes on a circle"
msgstr ""

#. type: Plain text
msgid "'ihex.ngc' - internal hexagon"
msgstr ""

#. type: Plain text
msgid "'iquad.ngc' - internal quadrilateral"
msgstr ""

#. type: Plain text
msgid "'ohex.ngc' - outside hexagon"
msgstr ""

#. type: Plain text
msgid "'oquad.ngc' - outside quadrilateral"
msgstr ""

#. type: Plain text
msgid "'qpex_mm.ngc' - demo of qpockets (mm based)"
msgstr ""

#. type: Plain text
msgid "'qpex.ngc' - demo of qpockets (inch based)"
msgstr ""

#. type: Plain text
msgid "'qpocket.ngc' - quadrilateral pocket"
msgstr ""

#. type: Plain text
msgid "'rectangle_probe.ngc' - probe a rectangular area"
msgstr ""

#. type: Plain text
msgid "'simp.ngc' - a simple subroutine example that creates two circles"
msgstr ""

#. type: Plain text
msgid "'slot.ngc' - slot from connecting two endpoints"
msgstr ""

#. type: Plain text
msgid "'xyz.ngc' - machine exerciser constrained to a box shape"
msgstr ""

#. type: Plain text
msgid "'nc_files/ngcgui_lib/lathe'"
msgstr ""

#. type: Plain text
msgid "'g76base.ngc' - gui for g76 threading"
msgstr ""

#. type: Plain text
msgid "'g76diam.ngc' - threading speced by major, minor diameters"
msgstr ""

#. type: Plain text
msgid "'id.ngc' - bores the inside diameter"
msgstr ""

#. type: Plain text
msgid "'od.ngc' - turns the outside diameter"
msgstr ""

#. type: Plain text
msgid "'taper-od.ngc' - turns a taper on the outside diameter"
msgstr ""

#. type: Plain text
msgid "'nc_files/gcmc_lib'"
msgstr ""

#. type: Plain text
msgid "'drill.gcmc' - drill holes in rectangle pattern"
msgstr ""

#. type: Plain text
msgid "'square.gcmc' - simple demo of variable tags for gcmc files"
msgstr ""

#. type: Plain text
msgid "'star.gcmc' - gcmc demo illustrating functions and arrays"
msgstr ""

#. type: Plain text
msgid "'wheels.gcmc' - gcmc demo of complex patterns"
msgstr ""

#. type: Plain text
msgid ""
"To try a demonstration, select a sim configuration and start the linuxCNC "
"program."
msgstr ""

#. type: Plain text
msgid ""
"If using the axis gui, press the 'E-Stop' image:images/tool_estop.png[] then "
"'Machine Power' image:images/tool_power.png[] then 'Home All'. Pick a ngcgui "
"tab, fill in any empty blanks with sensible values and press 'Create "
"Feature' then 'Finalize'. Finally press the 'Run' image:images/tool_run."
"png[] button to watch it run.  Experiment by creating multiple features and "
"features from different tab pages."
msgstr ""

#. type: Plain text
msgid ""
"To create several subroutines concatenated into a single file, go to each "
"tab fill in the blanks, press 'Create Feature' then using the arrow keys "
"move any tabs needed to put them in order. Now press 'Finalize' and answer "
"the prompt to create"
msgstr ""

#. type: Plain text
msgid ""
"Other guis will have similar functionality but the buttons and names may be "
"different."
msgstr ""

#. type: delimited block =
msgid ""
"The demonstration configs create tab pages for just a few of the provided "
"examples.  Any gui with a <<ngcgui-ini,custom tab>> can open any of the "
"library example subroutines or any user file if it is in the linuxCNC "
"subroutine path."
msgstr ""

#. type: delimited block =
msgid ""
"To see special key bindings, click inside an ngcgui tab page to get focus "
"and then press Control-k."
msgstr ""

#. type: delimited block =
msgid ""
"The demonstration subroutines should run on the simulated machine "
"configurations included in the distribution.  A user should always "
"understand the behavior and purpose of a program before running on a real "
"machine."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Library Locations"
msgstr ""

#. type: Plain text
msgid ""
"In linuxCNC installations installed from deb packages, the simulation "
"configs for ngcgui use symbolic links to non-user-writable LinuxCNC "
"libraries for:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'nc_files/ngcgui_lib'             ngcgui-compatible subfiles\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'nc_files/ngcgui_lib/lathe'       ngcgui-compatible lathe subfiles\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'nc_files/gcmc_lib'               ngcgui-gcmc-compatible programs\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'nc_files/ngcgui_lib/utilitysubs' Helper subroutines\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'nc_files/ngcgui_lib/mfiles'      User M files\n"
msgstr ""

#. type: Plain text
msgid ""
"These libraries are located by ini file items that specify the search paths "
"used by linuxCNC (and ngcgui):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"SUBROUTINE_PATH = ../../nc_files/ngcgui_lib:../../nc_files/gcmc_lib:../../nc_files/ngcgui_lib/utilitysubs\n"
"USER_M_PATH     = ../../nc_files/ngcgui_lib/mfiles\n"
msgstr ""

#. type: Plain text
msgid ""
"These are long lines (not continued on multiple lines)  that specify the "
"directories used in a search patch.  The directory names are separated by "
"colons (:).  No spaces should occur between directory names."
msgstr ""

#. type: Plain text
msgid ""
"A user can create new directories for their own subroutines and M-files and "
"add them to the search path(s)."
msgstr ""

#. type: Plain text
msgid ""
"For example, a user could create directories from the terminal with the "
"commands:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"mkdir /home/myusername/mysubs\n"
"mkdir /home/myusername/mymfiles\n"
msgstr ""

#. type: Plain text
msgid ""
"And then create or copy system-provided files to these user-writable "
"directories.  For instance, a user might create a ngcgui-compatible subfile "
"named:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "/home/myusername/mysubs/example.ngc\n"
msgstr ""

#. type: Plain text
msgid ""
"To use files in new directories, the ini file must be edited to include the "
"new subfiles and to augment the search path(s).  For this example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"...\n"
"SUBROUTINE_PATH = /home/myusername/mysubs:../../nc_files/ngcgui_lib:../../nc_files/gcmc_lib:../../nc_files/ngcgui_lib/utilitysubs\n"
"USER_M_PATH     = /home/myusername/mymfiles:../../nc_files/ngcgui_lib/mfiles\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"...\n"
"NGCGUI_SUBFILE = example.ngc\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC (and ngcgui) use the first file found when searching directories in "
"the search path.  With this behavior, you can supersede an ngcgui_lib "
"subfile by placing a subfile with an identical name in a directory that is "
"found earlier in the path search. More information can be found in the INI "
"chapter of the Integrators Manual."
msgstr ""

#. type: SH
#, no-wrap
msgid "Standalone Usage"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Standalone NGCGUI"
msgstr ""

#. type: Plain text
msgid "For usage, type in a terminal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"ngcgui --help\n"
"Usage:\n"
"  ngcgui --help | -?\n"
"  ngcgui [Options] -D nc_files_directory_name\n"
"  ngcgui [Options] -i LinuxCNC_inifile_name\n"
"  ngcgui [Options]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  Options:\n"
"         [-S subroutine_file]\n"
"         [-p preamble_file]\n"
"         [-P postamble_file]\n"
"         [-o output_file]\n"
"         [-a autosend_file]            (autosend to axis default:auto.ngc)\n"
"         [--noauto]                    (no autosend to axis)\n"
"         [-N | --nom2]                 (no m2 terminator (use %))\n"
"         [--font [big|small|fontspec]] (default: \"Helvetica -10 normal\")\n"
"         [--horiz|--vert]              (default: --horiz)\n"
"         [--cwidth comment_width]      (width of comment field)\n"
"         [--vwidth varname_width]      (width of varname field)\n"
"         [--quiet]                     (fewer comments in outfile)\n"
"         [--noiframe]                  (default: frame displays image)\n"
msgstr ""

#. type: Plain text
msgid ""
"As a standalone application, ngcgui handles a single subroutine file which "
"can be invoked multiple times.  Multiple standalone ngcgui applications can "
"be started independently."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Standalone PYNGCGUI"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pyngcgui --help\n"
"Usage:\n"
"pyngcgui [Options] [sub_filename]\n"
"Options requiring values:\n"
"    [-d | --demo] [0|1|2] (0: DEMO standalone toplevel)\n"
"                          (1: DEMO embed new notebook)\n"
"                          (2: DEMO embed within existing notebook)\n"
"    [-S | --subfile       sub_filename]\n"
"    [-p | --preamble      preamble_filename]\n"
"    [-P | --postamble     postamble_filename]\n"
"    [-i | --ini           inifile_name]\n"
"    [-a | --autofile      auto_filename]\n"
"    [-t | --test          testno]\n"
"    [-K | --keyboardfile  glade_file] (use custom popupkeyboard glade file)\n"
"Solo Options:\n"
"    [-v | --verbose]\n"
"    [-D | --debug]\n"
"    [-N | --nom2]         (no m2 terminator (use %))\n"
"    [-n | --noauto]       (save but do not automatically send result)\n"
"    [-k | --keyboard]     (use default popupkeybaord)\n"
"    [-s | --sendtoaxis]   (send generated ngc file to axis gui)\n"
"Notes:\n"
"      A set of files is comprised of a preamble, subfile, postamble.\n"
"      The preamble and postamble are optional.\n"
"      One set of files can be specified from cmdline.\n"
"      Multiple sets of files can be specified from an inifile.\n"
"      If --ini is NOT specified:\n"
"         search for a running linuxCNC and use its inifile\n"
msgstr ""

#. type: Plain text
msgid ""
"As a standalone application, pyngcgui can read an ini file (or a running "
"linuxCNC application) to create tab pages for multiple subfiles."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Embedding NGCGUI"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Embedding NGCGUI in Axis"
msgstr ""

#. type: Plain text
msgid ""
"The following INI file items go in the [DISPLAY] section. (See additional "
"sections below for additional items needed)"
msgstr ""

#. type: Plain text
msgid "'TKPKG = Ngcgui 1.0' - the NGCGUI package"
msgstr ""

#. type: Plain text
msgid ""
"'TKPKG = Ngcguittt 1.0' - the True Type Tracer package for generating text"
msgstr ""

#. type: Plain text
msgid "for engraving (optional, must follow TKPKG = Ngcgui)."
msgstr ""

#. type: Plain text
msgid ""
"'TTT = truetype-tracer' - name of the truetype tracer program (it must be in "
"user PATH)"
msgstr ""

#. type: Plain text
msgid ""
"'TTT_PREAMBLE = in_std.ngc' - Optional, specifies filename for preamble used "
"for"
msgstr ""

#. type: Plain text
msgid "ttt created subfiles. (alternate: mm_std.ngc)"
msgstr ""

#. type: Plain text
msgid ""
"The optional truetype tracer items are used to specify an ngcgui-compatible "
"tab page that uses the application truetype-tracer.  The truetype-tracer "
"application must be installed independently and located in the user PATH."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Embedding PYNGCGUI as a gladevcp tab page in a gui"
msgstr ""

#. type: Plain text
msgid ""
"The following INI file items go in the [DISPLAY] section for use with the "
"axis, gscreen, or touchy guis.  (See additional sections below for "
"additional items needed)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "EMBED_ Items"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"EMBED_TAB_NAME = Pyngcgui - name to appear on embedded tab\n"
"EMBED_TAB_COMMAND = gladevcp -x {XID} pyngcgui_axis.ui - invokes gladevcp\n"
"EMBED_TAB_LOCATION = name_of_location - where the embedded page is located\n"
msgstr ""

#. type: Plain text
msgid ""
"The EMBED_TAB_LOCATION specifier is not used for the axis gui.  While "
"pyngcgui can be embedded in axis, integration is more complete when using "
"ngcgui (using TKPKG = Ngcgui 1.0).  To specify the EMBED_TAB_LOCATION for "
"other guis, see the <<sec:display-section,DISPLAY Section>> of the INI "
"Configuration Chapter."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The truetype tracer gui front-end is not currently available for gladevcp\n"
"applications.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Additional INI File items required for ngcgui or pyngcgui"
msgstr ""

#. type: Plain text
msgid ""
"The following INI file items go in the [DISPLAY] section for any gui that "
"embeds either ngcgui or pyngcgui."
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_FONT = Helvetica -12 normal' - specifies the font name,size, normal|"
"bold"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_PREAMBLE = in_std.ngc' - the preamble file to be added in front of "
"the subroutines. When concatenating several common subroutine invocations, "
"this preamble"
msgstr ""

#. type: Plain text
msgid "is only added once.  For mm-based machines, use mm_std.ngc"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_SUBFILE = filename1.ngc' - creates a tab from the filename1 "
"subroutine"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_SUBFILE = filename2.ngc' - creates a tab from the filename2 "
"subroutine"
msgstr ""

#. type: Plain text
msgid "'... etc'"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_SUBFILE = gcmcname1.gcmc' - creates a tab from the gcmcname1 file"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_SUBFILE = gcmcname2.gcmc' - creates a tab from the gcmcname2 file"
msgstr ""

#. type: Plain text
msgid ""
"'NGCGUI_SUBFILE = \"\"' - creates a custom tab that can open any subroutine "
"in the search path"
msgstr ""

#. type: Plain text
msgid "'NGCGUI_OPTIONS = opt1 opt2 ...' - NGCGUI options"
msgstr ""

#. type: Plain text
msgid "'nonew' - disallow making a new custom tab"
msgstr ""

#. type: Plain text
msgid "'noremove' - disallow removing any tab page"
msgstr ""

#. type: Plain text
msgid "'noauto' - no autosend (use makeFile, then save or manually send)"
msgstr ""

#. type: Plain text
msgid ""
"'noiframe' - no internal image, display images on separate top level widget"
msgstr ""

#. type: Plain text
msgid ""
"'nom2' - do not terminate with m2, use % terminator.  This option eliminates "
"all"
msgstr ""

#. type: Plain text
msgid "the side effects of m2 termination"
msgstr ""

#. type: Plain text
msgid ""
"'GCMC_INCLUDE_PATH = dirname1:dirname2' - search directories for gcmc "
"include files"
msgstr ""

#. type: Plain text
msgid ""
"This is an example of embedding NGCGUI into Axis. The subroutines need to be "
"in a directory specified by the [RS274NGC]SUBROUTINE_PATH.  Some example "
"subroutines use other subroutines so check to be sure you have the "
"dependences, if any, in a SUBROUTINE_PATH directory.  Some subroutines may "
"use custom Mfiles which must be in a directory specified by the "
"[RS274NGC]USER_M_PATH."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The Gcode-meta-compiler (gcmc) can include statements like:\n"
"  include(\"filename.inc.gcmc\");\n"
"By default, gcmc includes the current directory which, for linuxCNC,  will be\n"
"the directory containing the linuxCNC ini file.  Additional directories can be\n"
"prepended to the gcmc search order with the GCMC_INCLUDE_PATH item.\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Sample axis-gui-based INI"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"...\n"
"SUBROUTINE_PATH   = ../../nc_files/ngcgui_lib:../../ngcgui_lib/utilitysubs\n"
"USER_M_PATH       = ../../nc_files/ngcgui_lib/mfiles\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"TKPKG             = Ngcgui    1.0\n"
"TKPKG             = Ngcguittt 1.0\n"
"# Ngcgui must precede Ngcguittt\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"NGCGUI_FONT       = Helvetica -12 normal\n"
"# specify filenames only, files must be in [RS274NGC]SUBROUTINE_PATH\n"
"NGCGUI_PREAMBLE   = in_std.ngc\n"
"NGCGUI_SUBFILE    = simp.ngc\n"
"NGCGUI_SUBFILE    = xyz.ngc\n"
"NGCGUI_SUBFILE    = iquad.ngc\n"
"NGCGUI_SUBFILE    = db25.ngc\n"
"NGCGUI_SUBFILE    = ihex.ngc\n"
"NGCGUI_SUBFILE    = gosper.ngc\n"
"# specify \"\" for a custom tab page\n"
"NGCGUI_SUBFILE    = \"\"\n"
"#NGCGUI_SUBFILE   = \"\" use when image frame is specified if\n"
"#                      opening other files is required\n"
"#                      images will be put in a top level window\n"
"NGCGUI_OPTIONS    =\n"
"#NGCGUI_OPTIONS   = opt1 opt2 ...\n"
"# opt items:\n"
"#   nonew      -- disallow making a new custom tab\n"
"#   noremove   -- disallow removing any tab page\n"
"#   noauto     -- no auto send (makeFile, then manually send)\n"
"#   noiframe   -- no internal image, image on separate top level\n"
"GCMC_INCLUDE_PATH = /home/myname/gcmc_includes\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"TTT               = truetype-tracer\n"
"TTT_PREAMBLE      = in_std.ngc\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "PROGRAM_PREFIX    = ../../nc_files\n"
msgstr ""

#. type: Plain text
msgid ""
"The above is not a complete axis gui INI -- the items show are those used by "
"ngcgui.  Many additional items are required by LinuxCNC to have a complete "
"INI file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Truetype Tracer"
msgstr ""

#. type: Plain text
msgid ""
"Ngcgui_ttt provides support for truetype-tracer (v4).  It creates an axis "
"tab page which allows a user to create a new ngcgui tab page after entering "
"text and selecting a font and other parameters.  (Truetype-tracer must be "
"installed independently)."
msgstr ""

#. type: Plain text
msgid ""
"To embed ngcgui_ttt in axis, specify the following items in addition to "
"ngcgui items:"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]TKPKG = Ngcgui_ttt version_number\n"
"Example: [DISPLAY]TKPKG = Ngcgui_ttt 1.0\n"
"Note:    Mandatory, specifies loading of ngcgui_ttt in an axis tab page named ttt.\n"
"         Must follow the TKPKG = Ngcgui item.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]TTT = path_to_truetype-tracer\n"
"Example: [DISPLAY]TTT = truetype-tracer\n"
"Note:    Optional, if not specified, attempt to use /usr/local/bin/truetype-tracer.\n"
"         Specify with absolute pathname or as a simple executable name\n"
"         in which case the user PATH environment will used to find the program.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]TTT_PREAMBLE = preamble_filename\n"
"Example: [DISPLAY]TTT_PREAMBLE = in_std.ngc\n"
"Note:    Optional, specifies filename for preamble used for ttt created subfiles.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "INI File Path Specifications"
msgstr ""

#. type: Plain text
msgid "Ngcgui uses the linuxCNC search path to find files."
msgstr ""

#. type: Plain text
msgid "The search path begins with the standard directory specified by:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  [DISPLAY]PROGRAM_PREFIX = directory_name\n"
msgstr ""

#. type: Plain text
msgid "followed by multiple directories specified by:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  [RS274NGC]SUBROUTINE_PATH = directory1_name:directory1_name:directory3_name ...\n"
msgstr ""

#. type: Plain text
msgid "Directories may be specified as absolute paths or relative paths."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Example: [DISPLAY]PROGRAM_PREFIX = /home/myname/linuxcnc/nc_files\n"
"Example: [DISPLAY]PROGRAM_PREFIX = ~/linuxcnc/nc_files\n"
"Example: [DISPLAY]PROGRAM_PREFIX = ../../nc_files\n"
msgstr ""

#. type: Plain text
msgid ""
"An absolute path beginning with a \"/\" specifies a complete filesystem "
"location.  A path beginning with a \"\\~/\" specifies a path starting from "
"the user's home directory.  A path beginning with \"~username/\" specifies a "
"path starting in username's home directory."
msgstr ""

#. type: Plain text
msgid ""
"Relative paths are based on the startup directory which is the directory "
"containing the INI file.  Using relative paths can facilitate relocation of "
"configurations but requires a good understanding of linux path specifiers."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"   ./d0        is the same as d0, e.g., a directory named d0 in the startup directory\n"
"   ../d1       refers to a directory d1 in the parent directory\n"
"   ../../d2    refers to a directory d2 in the parent of the parent directory\n"
"   ../../../d3 etc.\n"
msgstr ""

#. type: Plain text
msgid ""
"Multiple directories can be specified with [RS274NGC]SUBROUTINE_PATH by "
"separating them with colons.  The following example illustrates the format "
"for multiple directories and shows the use of relative and absolute paths."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Multiple Directories Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[RS274NGC]SUBROUTINE_PATH = ../../nc_files/ngcgui_lib:../../nc_files/ngcgui_lib/utilitysubs:/tmp/tmpngc`\n"
msgstr ""

#. type: Plain text
msgid ""
"This is one long line, do not continue on multiple lines.  When linuxCNC and/"
"or ngcgui searches for files, the first file found in the search is used."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC (and ngcgui) must be able to find all subroutines including helper "
"routines that are called from within ngcgui subfiles.  It is convenient to "
"place utility subs in a separate directory as indicated in the example above."
msgstr ""

#. type: Plain text
msgid ""
"The distribution includes the ngcgui_lib directory and demo files for "
"preambles, subfiles, postambles and helper files.  To modify the behavior of "
"the files, you can copy any file and place it in an earlier part of the "
"search path.  The first directory searched is [DISPLAY]PROGRAM_PREFIX.  You "
"can use this directory but it is better practice to create dedicated "
"directory(ies) and put them at the beginning of the "
"[RS274NGC]SUBROUTINE_PATH."
msgstr ""

#. type: Plain text
msgid ""
"In the following example, files in /home/myname/linuxcnc/mysubs will be "
"found before files in ../../nc_files/ngcgui_lib."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Adding User Directory Example: "
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[RS274NGC]SUBROUTINE_PATH = /home/myname/linuxcnc/mysubs:../../nc_files/ngcgui_lib:../../nc_files/ngcgui_lib/utilitysubs`\n"
msgstr ""

#. type: Plain text
msgid ""
"New users may inadvertently try to use files that are not structured to be "
"compatible with ngcgui requirements.  Ngcgui will likely report numerous "
"errors if the files are not coded per its conventions.  Good practice "
"suggests that ngcgui-compatible subfiles should be placed in a directory "
"dedicated to that purpose and that preamble, postamble, and helper files "
"should be in separate directory(ies) to discourage attempts to use them as "
"subfiles.  Files not intended for use as subfiles can include a special "
"comment: \"(not_a_subfile)\" so that ngcgui will reject them automatically "
"with a relevant message."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Summary of INI File item details for NGCGUI usage"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [RS274NGC]SUBROUTINE_PATH = dirname1:dirname2:dirname3 ...\n"
"Example: [RS274NGC]SUBROUTINE_PATH = ../../nc_files/ngcgui_lib:../../nc_files/ngcgui_lib/utilitysubs\n"
"Note:    Optional, but very useful to organize subfiles and utility files\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [RS274NGC]USER_M_PATH = dirname1:dirname2:dirname3 ...\n"
"Example: [RS274NGC]USER_M_PATH = ../../nc_files/ngcgui_lib/mfiles\n"
"Note:    Optional, needed to locate custom user mfiles\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]EMBED_TAB_NAME = name to display on embedded tab page\n"
"Example: [DISPLAY]EMBED_TAB_NAME = Pyngcgui\n"
"Note:    The entries: EMBED_TAB_NAME,EMBED_TAB_COMMAND,EMBED_TAB_LOCATION\n"
"         define an embedded application for several linuxCNC guis\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]EMBED_TAB_COMMAND = programname followed by arguments\n"
"Example: [DISPLAY]EMBED_TAB_COMMAND = gladevcp -x {XID} pyngcgui_axis.ui\n"
"Note:    For gladevcp applications, see the <<cha:glade-vcp,GladeVCP Chapter>>\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]EMBED_TAB_LOCATION = name_of_location\n"
"Example: [DISPLAY]EMBED_TAB_LOCATION = notebook_main\n"
"Note:    See example INI files for possible locations\n"
"         Not required for the axis gui\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]PROGRAM_PREFIX = dirname\n"
"Example: [DISPLAY]PROGRAM_PREFIX = ../../nc_files\n"
"Note:    Mandatory and needed for numerous linuxCNC functions\n"
"         It is the first directory used in the search for files\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"item:    [DISPLAY]TKPKG = Ngcgui version_number\n"
"Example: [DISPLAY]TKPKG = Ngcgui 1.0\n"
"Note:    Required only for axis gui embedding, specifies loading of ngcgui axis tab pages\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]NGCGUI_FONT = font_descriptor\n"
"Example: [DISPLAY]NGCGUI_FONT = Helvetica -12 normal\n"
"Note:    Optional, font_descriptor is a tcl-compatible font specifier\n"
"         with items for fonttype -fontsize fontweight\n"
"         Default is: Helvetica -10 normal\n"
"         Smaller font sizes may be useful for small screens\n"
"         Larger font sizes may be helpful for touch screen applications\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]NGCGUI_SUBFILE = subfile_filename\n"
"Example: [DISPLAY]NGCGUI_SUBFILE = simp.ngc\n"
"Example: [DISPLAY]NGCGUI_SUBFILE = square.gcmc\n"
"Example: [DISPLAY]NGCGUI_SUBFILE = \"\"\n"
"Note:    Use one or more items to specify ngcgui-compatible\n"
"         subfiles or gcmc programs that require a tab page on startup.\n"
"         A \"Custom\" tab will be created when the filename is \"\".\n"
"         A user can use a \"Custom\" tab to browse the file system\n"
"         and identify preamble, subfile, and postamble files.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]NGCGUI_PREAMBLE = preamble_filename\n"
"Example: [DISPLAY]NGCGUI_PREAMBLE = in_std.ngc\n"
"Note:    Optional, when specified, the file is prepended to a subfile.\n"
"         Files created with \"Custom\" tab pages use the preamble specified\n"
"         with the page.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]NGCGUI_POSTAMBLE = postamble_filename\n"
"Example: [DISPLAY]NGCGUI_POSTAMBLE = bye.ngc\n"
"Note:    Optional, when specified, the file is appended to a subfiles.\n"
"         Files created with \"Custom\" tab pages use the postamble specified\n"
"         with the page.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]NGCGUI_OPTIONS = opt1 opt2 ...\n"
"Example: [DISPLAY]NGCGUI_OPTIONS = nonew noremove\n"
"Note:    Multiple options are separated by blanks.\n"
"         By default, ngcgui configures tab pages so that:\n"
"            1) a user can make new tabs\n"
"            2) a user can remove tabs (except for the last remaining one)\n"
"            3) finalized files are automatically sent to linuxCNC\n"
"            4) an image frame (iframe) is made available to display\n"
"               an image for the subfile (if an image is provided)\n"
"            5) the ngcgui result file sent to linuxCNC is terminated with\n"
"               an m2 (and incurs m2 side-effects)\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"         The options nonew, noremove, noauto, noiframe, nom2 respectively\n"
"         disable these default behaviors.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"         By default, if an image (.png,.gif,jpg,pgm) file\n"
"         is found in the same directory as the subfile, the\n"
"         image is displayed in the iframe.  Specifying\n"
"         the noiframe option makes available additional buttons\n"
"         for selecting a preamble, subfile, and postamble and\n"
"         additional checkboxes.  Selections of the checkboxes\n"
"         are always available with special keys:\n"
"           Ctrl-R Toggle \"Retain values on Subfile read\"\n"
"           Ctrl-E Toggle \"Expand subroutine\"\n"
"           Ctrl-a Toggle \"Autosend\"\n"
"          (Ctrl-k lists all keys and functions)\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"         If noiframe is specified and an image file is found,\n"
"         the image is displayed in a separate window and\n"
"         all functions are available on the tab page.\n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"         The NGCGUI_OPTIONS apply to all ngcgui tabs except that the\n"
"         nonew, noremove, and noiframe options are not applicable\n"
"         for \"Custom\" tabs.  Do not use \"Custom\" tabs if you want\n"
"         to limit the user's ability to select subfiles or create\n"
"         additional tab pages. \n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Item:    [DISPLAY]GCMC_INCLUDE_PATH = dirname1:dirname2:...\n"
"Example: [DISPLAY]GCMC_INCLUDE_PATH = /home/myname/gcmc_includes:/home/myname/gcmc_includes2\n"
"Note:    Optional, each directory will be included when gcmc is invoked\n"
"         using the option: --include dirname\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "File Requirements for NGCGUI Compatibility"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Single-File Gcode (.ngc) Subroutine Requirements"
msgstr ""

#. type: Plain text
msgid ""
"An NGCGUI-compatible subfile contains a single subroutine definition. The "
"name of the subroutine must be the same as the filename (not including the ."
"ngc suffix). LinuxCNC supports named or numbered subroutines, but only named "
"subroutines are compatible with NGCGUI. For more information see the <<cha:o-"
"codes,O-Codes>> Chapter."
msgstr ""

#. type: Plain text
msgid ""
"The first non-comment line should be a sub statement.  The last non-comment "
"line should be a endsub statement."
msgstr ""

#. type: Block title
#, no-wrap
msgid "examp.ngc:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(info: info_text_to_appear_at_top_of_tab_page)\n"
"; comment line beginning with semicolon\n"
"( comment line using parentheses)\n"
"o<examp> sub\n"
"  BODY_OF_SUBROUTINE\n"
"o<examp> endsub\n"
"; comment line beginning with semicolon\n"
"( comment line using parentheses)\n"
msgstr ""

#. type: Plain text
msgid ""
"The body of the subroutine should begin with a set of statements that define "
"local named parameters for each positional parameter expected for the "
"subroutine call. These definitions must be consecutive beginning with #1 and "
"ending with the last used parameter number. Definitions must be provided for "
"each of these parameters (no omissions)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameter Numbering"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#<xparm> = #1\n"
"#<yparm> = #2\n"
"#<zparm> = #3\n"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC considers all numbered parameters in the range #1 thru #30 to be "
"calling parameters so ngcgui provides entry boxes for any occurrence of "
"parameters in this range. It is good practice to avoid use of numbered "
"parameters #1 through #30 anywhere else in the subroutine. Using local, "
"named parameters is recommended for all internal variables."
msgstr ""

#. type: Plain text
msgid ""
"Each defining statement may optionally include a special comment and a "
"default value for the parameter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Statement Prototype"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#<vname> = #n (=default_value)\n"
"or\n"
"#<vname> = #n (comment_text)\n"
"or\n"
"#<vname> = #n (=default_value comment_text)\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameter Examples"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#<xparm> = #1 (=0.0)\n"
"#<yparm> = #2 (Ystart)\n"
"#<zparm> = #3 (=0.0 Z start setting)\n"
msgstr ""

#. type: Plain text
msgid ""
"If a default_value is provided, it will be entered in the entry box for the "
"parameter on startup."
msgstr ""

#. type: Plain text
msgid ""
"If comment_text is included, it will be used to identify the input instead "
"of the parameter name."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Global Named Parameters"
msgstr ""

#. type: Plain text
msgid "Notes on global named parameters and ngcgui:"
msgstr ""

#. type: Plain text
msgid ""
"(global named parameters have a leading underscore in the name, like "
"#<_someglobalname>)"
msgstr ""

#. type: Plain text
msgid ""
"As in many programming languages, use of globals is powerful but can often "
"lead to unexpected consequences. In LinuxCNC, existing global named "
"parameters will be valid at subroutine execution and subroutines can modify "
"or create global named parameters."
msgstr ""

#. type: Plain text
msgid ""
"Passing information to subroutines using global named parameters is "
"discouraged since such usage requires the establishment and maintenance of a "
"well-defined global context that is difficult to maintain. Using numbered "
"parameters #1 thru #30 as subroutine inputs should be sufficient to satisfy "
"a wide range of design requirements."
msgstr ""

#. type: Plain text
msgid ""
"While input global named parameters are discouraged, linuxCNC subroutines "
"must use global named parameters for returning results. Since ngcgui-"
"compatible subfiles are aimed at gui usage, return values are not a common "
"requirement.  However, ngcgui is useful as a testing tool for subroutines "
"which do return global named parameters and it is common for ngcgui-"
"compatible subfiles to call utility subroutine files that return results "
"with global named parameters."
msgstr ""

#. type: Plain text
msgid ""
"To support these usages, ngcgui ignores global named parameters that include "
"a colon (:) character in their name. Use of the colon (:) in the name "
"prevents ngcgui from making entryboxes for these parameters."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<examp> sub\n"
"...\n"
"#<_examp:result> = #5410       (return the current tool diameter)\n"
"...\n"
"o<helper> call [#<x1>] [#<x2>] (call a subroutine)\n"
"#<xresult> = #<_helper:answer> (immediately localize the helper global result)\n"
"#<_helper:answer> = 0.0        (nullify global named parameter used by subroutine)\n"
"...\n"
"o<examp> endsub\n"
msgstr ""

#. type: Plain text
msgid ""
"In the above example, the utility subroutine will be found in a separate "
"file named helper.ngc. The helper routine returns a result in a global named "
"parameter named #<_helper:answer."
msgstr ""

#. type: Plain text
msgid ""
"For good practice, the calling subfile immediately localizes the result for "
"use elsewhere in the subfile and the global named parameter used for "
"returning the result is nullified in an attempt to mitigate its inadvertent "
"use elsewhere in the global context. (A nullification value of 0.0 may not "
"always be a good choice)."
msgstr ""

#. type: Plain text
msgid ""
"Ngcgui supports the creation and concatenation of multiple features for a "
"subfile and for multiple subfiles. It is sometimes useful for subfiles to "
"determine their order at runtime so ngcgui inserts a special global "
"parameter that can be tested within subroutines. The parameter is named "
"#<_feature:>.  Its value begins with a value of 0 and is incremented for "
"each added feature."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Additional Features"
msgstr ""

#. type: Plain text
msgid ""
"A special 'info' comment can be included anywhere in an ngcgui-compatible "
"subfile. The format is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(info: info_text)\n"
msgstr ""

#. type: Plain text
msgid "The info_text is displayed near the top of the ngcgui tab page in axis."
msgstr ""

#. type: Plain text
msgid ""
"Files not intended for use as subfiles can include a special comment so that "
"ngcgui will reject them automatically with a relevant message."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(not_a_subfile)\n"
msgstr ""

#. type: Plain text
msgid ""
"An optional image file (.png,.gif,.jpg,.pgm) can accompany a subfile. The "
"image file can help clarify the parameters used by the subfile. The image "
"file should be in the same directory as the subfile and have the same name "
"with an appropriate image suffix, e.g. the subfile example.ngc could be "
"accompanied by an image file examp.png. Ngcgui attempts to resize large "
"images by subsampling to a size with maximum width of 320 and maximum height "
"of 240 pixels."
msgstr ""

#. type: Plain text
msgid ""
"None of the conventions required for making an ngcgui-compatible subfile "
"preclude its use as general purpose subroutine file for LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC distribution includes a library (ngcgui_lib directory) that "
"includes both example ngcgui-compatible subfiles and utility files to "
"illustrate the features of LinuxCNC subroutines and ngcgui usage.  Another "
"library (gcmc_lib) provides examples for subroutine files for the Gcode meta "
"compiler (gcmc)"
msgstr ""

#. type: Plain text
msgid ""
"Additional user sumitted subroutines can be found on the Forum in the "
"Subroutines Section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Gcode-meta-compiler (.gcmc) file requirements"
msgstr ""

#. type: Plain text
msgid ""
"Files for the Gcode-meta-compiler (gcmc) are read by ngcgui and it creates "
"entry boxes for variables tagged in the file.  When a feature for the file "
"is finalized, ngcgui passes the file as input to the gcmc compiler and, if "
"the compile is successful, the resulting gcode file is sent to linuxCNC for "
"execution.  The resulting file is formatted as single-file subroutine; .gcmc "
"files and .ngc files can be intermixed by ngcgui."
msgstr ""

#. type: Plain text
msgid ""
"The variables identified for inclusion in ngcgui are tagged with lines that "
"will appear as comments to the gcmc compiler."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example variable tags formats"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//ngcgui: varname1 = \n"
"//ngcgui: varname2 = value2\n"
"//ngcgui: varname3 = value3, label3;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//ngcgui: zsafe =\n"
"//ngcgui: feedrate = 10\n"
"//ngcgui: xl = 0, x limit\n"
msgstr ""

#. type: Plain text
msgid ""
"For these examples, the entry box for varname1 will have no default, the "
"entry box for varname2 will have a default of value2, and the entry box for "
"varname 3 will have a default of value 3 and a label label3 (instead of "
"varname3).  The default values must be numbers."
msgstr ""

#. type: Plain text
msgid ""
"To make it easier to modify valid lines in a gcmc file, alternate tag line "
"formats accepted.  The alternate formats ignore trailing semicolons (;) and "
"trailing comment markers (//)  With this provision, it is often makes it "
"possible to just add the //ngcgui: tag to existing lines in a .gcmc file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Alternate variable tag formats"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//ngcgui: varname2 = value2;\n"
"//ngcgui: varname3 = value3; //, label3;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//ngcgui: feedrate = 10;\n"
"//ngcgui: xl = 0; //, x limit\n"
msgstr ""

#. type: Plain text
msgid ""
"An info line that will appear at the top of a tab page may be optionally "
"included with a line tagged as:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Info tag"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "//ngcgui: info: text_to_appear_at_top_of_tab_page\n"
msgstr ""

#. type: Plain text
msgid ""
"When required, options can be passed to the gcmc compiler with a line tagged:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Option line tag format"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "//ngcgui: -option_name [ [=] option_value]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//ngcgui: -I\n"
"//ngcgui: --imperial\n"
"//ngcgui: --precision 5\n"
"//ngcgui: --precision=6\n"
msgstr ""

#. type: Plain text
msgid "Options for gcmc are available with the terminal command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gcmc --help\n"
msgstr ""

#. type: Plain text
msgid ""
"A gcmc program by default uses metric mode.  The mode can be set to inches "
"with the option setting:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "//ngcgui: --imperial\n"
msgstr ""

#. type: Plain text
msgid ""
"A preamble file, if used, can set a mode (g20 or g21) that conflicts with "
"the mode used by a gcmc file.  To ensure that the gcmc program mode is in "
"effect, include the following statement in the .gcmc file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "include(\"ensure_mode.gcmc\")\n"
msgstr ""

#. type: Plain text
msgid ""
"and provide a proper path for gcmc include_files in the ini file, for "
"example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"GCMC_INCLUDE_PATH = ../../nc_files/gcmc_lib\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "DB25 Example"
msgstr ""

#. type: Plain text
msgid ""
"The following shows the DB25 subroutine. In the first photo you see where "
"you fill in the blanks for each variable."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ngcgui-db25-1.png"
msgstr ""

#. type: Plain text
msgid "This photo shows the backplot of the DB25 subroutine."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ngcgui-db25-2.png"
msgstr ""

#. type: Plain text
msgid ""
"This photo shows the use of the new button and the custom tab to create "
"three DB25 cutouts in one program."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ngcgui-db25-3.png"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Touchy GUI"
msgstr ""

#. type: Plain text
msgid ""
"Touchy is a user interface for LinuxCNC meant for use on machine control "
"panels, and therefore does not require keyboard or mouse."
msgstr ""

#. type: Plain text
msgid ""
"It is meant to be used with a touch screen, and works in combination with a "
"wheel/MPG and a few buttons and switches."
msgstr ""

#. type: Plain text
msgid ""
"The 'Handwheel' tab has radio buttons to select between 'Feed Override', "
"'Spindle Override', 'Maximum Velocity' and 'Jogging' functions for the wheel/"
"MPG input. Radio buttons for axis selection and increment for jogging are "
"also provided."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Touchy"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/touchy.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Panel Configuration"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL connections"
msgstr ""

#. type: Plain text
msgid ""
"Touchy looks in the INI file, under the heading '[HAL]' for entries of "
"'POSTGUI_HALFILE=<filename>' + Typically '<filename>' would be "
"'touchy_postgui.hal', but can be any legal filename. + These commands are "
"executed after the screen is built, guaranteeing the widget HAL pins are "
"available. + You can have multiple line of 'POSTGUI_HALFILE=<filename>' in "
"the INI. + Each will be run one after the other in the order they appear in "
"the INI file. +"
msgstr ""

#. type: Plain text
msgid ""
"Touchy used to require that you create a file named 'touchy.hal' in your "
"configuration directory (the directory your INI file is in). For legacy "
"reasons this will continue to work, but INI based postgui files are "
"preferred."
msgstr ""

#. type: Plain text
msgid ""
"Touchy has several output pins that are meant to be connected to the motion "
"controller to control wheel jogging:"
msgstr ""

#. type: Plain text
msgid "'touchy.jog.wheel.increment',"
msgstr ""

#. type: Plain text
msgid "which is to be connected to the 'axis.N.jog-scale' pin of each axis N."
msgstr ""

#. type: Plain text
msgid "'touchy.jog.wheel.N', which is to be connected to 'axis.N.jog-enable'"
msgstr ""

#. type: Plain text
msgid "for each axis N."
msgstr ""

#. type: Plain text
msgid "[NOTE]'N' represents the axis number 0-8."
msgstr ""

#. type: Plain text
msgid ""
"In addition to being connected to 'touchy.wheel-counts', the wheel counts"
msgstr ""

#. type: Plain text
msgid ""
"should also be connected to 'axis.N.jog-counts' for each axis N.  If you use "
"HAL component 'ilowpass' to smooth wheel jogging, be sure to smooth only "
"'axis.N.jog-counts' and not 'touchy.wheel-counts'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Required controls"
msgstr ""

#. type: Plain text
msgid ""
"Abort button (momentary contact) connected to the HAL pin 'touchy.abort'"
msgstr ""

#. type: Plain text
msgid ""
"Cycle start button (momentary contact) connected to 'touchy.cycle-start'"
msgstr ""

#. type: Plain text
msgid ""
"Wheel/MPG, connected to 'touchy.wheel-counts' and motion pins as described "
"above"
msgstr ""

#. type: Plain text
msgid "Single block (toggle switch) connected to 'touchy.single-block'"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Optional controls"
msgstr ""

#. type: Plain text
msgid "For continuous jog, one center-off bidirectional momentary toggle"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"(or two momentary buttons) for each axis, hooked to 'touchy.jog.continuous.x.negative',\n"
"'touchy.jog.continuous.x.positive', etc.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "If a quill up button is wanted (to jog Z to the top of travel at top\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "speed), a momentary button connected to 'touchy.quill-up'.\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Optional panel lamps"
msgstr ""

#. type: Plain text
msgid "'touchy.jog.active' shows when the panel jogging controls are live"
msgstr ""

#. type: Plain text
msgid "'touchy.status-indicator' is on when the machine is executing G-code,"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "and flashes when the machine is executing but is in pause/feedhold.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Recommended for any setup"
msgstr ""

#. type: Plain text
msgid "Estop button hardwired in the estop chain"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Setup"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Enabling Touchy"
msgstr ""

#. type: Plain text
msgid ""
"To use Touchy, in the '[DISPLAY]' section of your ini file change the "
"display selector line to 'DISPLAY = touchy'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preferences"
msgstr ""

#. type: Plain text
msgid ""
"When you start Touchy the first time, check the Preferences tab.  If using a "
"touchscreen, choose the option to hide the pointer for best results."
msgstr ""

#. type: Plain text
msgid ""
"The Status Window is a fixed height, set by the size of a fixed font.  This "
"can be affected by the Gnome DPI, configured in System / Preferences / "
"Appearance / Fonts / Details. If the bottom of the screen is cut off, reduce "
"the DPI setting."
msgstr ""

#. type: Plain text
msgid "All other font sizes can be changed on the Preferences tab."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Macros"
msgstr ""

#. type: Plain text
msgid ""
"Touchy can invoke O-word macros using the MDI interface.  To configure this, "
"in the '[TOUCHY]' section of the ini file, add one or more 'MACRO' lines.  "
"Each should be of the format"
msgstr ""

#. type: Plain text
msgid "'MACRO=increment xinc yinc'"
msgstr ""

#. type: Plain text
msgid ""
"In this example, increment is the name of the macro, and it accepts two "
"parameters, named xinc and yinc."
msgstr ""

#. type: Plain text
msgid ""
"Now, place the macro in a file named 'increment.ngc', in the "
"'PROGRAM_PREFIX' directory or any directory in the 'SUBROUTINE_PATH'."
msgstr ""

#. type: Plain text
msgid "It should look like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<increment> sub\n"
"G91 G0 X#1 Y#2\n"
"G90\n"
"O<increment> endsub\n"
msgstr ""

#. type: Plain text
msgid ""
"Notice the name of the sub matches the file name and macro name exactly, "
"including case."
msgstr ""

#. type: Plain text
msgid ""
"When you invoke the macro by pressing the Macro button on the MDI tab in "
"Touchy, you can enter values for xinc and yinc.  These are passed to the "
"macro as '#1' and '#2' respectively.  Parameters you leave empty are passed "
"as value 0."
msgstr ""

#. type: Plain text
msgid ""
"If there are several different macros, press the Macro button repeatedly to "
"cycle through them."
msgstr ""

#. type: Plain text
msgid ""
"In this simple example, if you enter -1 for xinc and press cycle start, a "
"rapid 'G0' move will be invoked, moving one unit to the left."
msgstr ""

#. type: Plain text
msgid ""
"This macro capability is useful for edge/hole probing and other setup tasks, "
"as well as perhaps hole milling or other simple operations that can be done "
"from the panel without requiring specially-written gcode programs."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Gscreen"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Intro"
msgstr ""

#. type: Plain text
msgid ""
"Gscreen is an infrastructure to display a custom screen to control "
"LinuxCNC.  Gscreen borrows heavily from GladeVCP. GladeVCP uses the GTK "
"widget editor GLADE to build virtual control panels (VCP) by point and "
"click. Gscreen combines this with python programming to create a GUI screen "
"for running a CNC machine."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen is customizable if you want different buttons and status LEDs. "
"Gscreen supports GladeVCP which is used to add controls and indicators. To "
"customize Gscreen you use the Glade editor. Gscreen is not restricted to "
"adding a custom panel on the right or a custom tab it is fully editable."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Gscreen Default Screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen Mill Based Screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gscreen-mill.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Gscreen Silverdragon Screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen's Silverdragon Screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/silverdragon.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Gscreen Spartan Screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen's Spartan Screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/spartan.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Gscreen Gaxis Screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen's Gaxis Screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gaxis.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Gscreen Industrial Screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Gscreen's Industrial Screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/industrial.png"
msgstr ""

#. type: Plain text
msgid ""
"Gscreen is based on 'Glade' (the editor), 'PyGTK' (the widget toolkit), and "
"'GladeVCP' (LinuxCNC's connection to Glade and PyGTK). GladeVCP has some "
"special widgets and actions added just for LinuxCNC A widget is just the "
"generic name used for the buttons, sliders, labels etc of the PyGTK toolkit."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Glade File"
msgstr ""

#. type: Plain text
msgid ""
"A Glade file is a text file organized in the XML standard that describes the "
"layout and the widgets of the screen. PyGTK uses this file to actually "
"display and react to those widgets. The Glade editor makes it relatively "
"easy to build and edit this file You must use the Glade 3.38.2 editor that "
"uses the GTK3 widgets."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PyGTK"
msgstr ""

#. type: Plain text
msgid ""
"PyGTK is the python binding to GTK. GTK is the 'toolkit' of visual widgets, "
"it's programmed in C. PyGTK uses Python to 'bind' with GTK."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GladeVCP"
msgstr ""

#. type: Plain text
msgid ""
"<<cha:glade-vcp,GladeVCP>> binds LinuxCNC, HAL, PyGTK and Glade all "
"together.  LinuxCNC requires some special widgets so GladeVCP supplies them. "
"Many are just HAL extensions to existing PyGTK widgets. GladeVCP creates the "
"HAL pins for the special widgets described in the Glade file. GladeVCP also "
"allows one to add python commands to interact with the widgets, to make them "
"do things not available in their default form If you can build a GladeVCP "
"panel you can customize Gscreen!"
msgstr ""

#. type: Plain text
msgid ""
"There are two files that can be used, individually or in combination to add "
"customizations. Local glade files and handler files. Normally Gscreen uses "
"the stock Glade file and possibly a handler file (if using a sample 'skin')  "
"You can specify Gscreen to use 'local' Glade and handler files. Gscreen "
"looks in the folder that holds all the configuration files for the "
"configuration you selected."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Local Glade Files"
msgstr ""

#. type: Plain text
msgid ""
"If present, local glade files in the configuration folder will be loaded "
"instead of the stock Glade files. Local Glade files allow you to use your "
"customized designs rather then the default screens. There is a switch in the "
"INI file to set set the base name: -c name so Gscreen looks for MYNAME.glade "
"and MYNAME_handler.py."
msgstr ""

#. type: Plain text
msgid ""
"You can tell Gscreen to just load the Glade file and not connect it's "
"internal signals to it. This allows gscreen to load any GTK builder saved "
"Glade file This means you can display a completely custom screen, but also "
"requires you to use a handler file. Gscreen uses the Glade file to define "
"the widgets, so it can show and interact with them. Many of them have "
"specific names, others have Glade given generic names. If the widget will be "
"displayed but never changed then a generic name is fine. If one needs to "
"control or interact with the widget then a hopefully purposeful name is "
"given (all names must be unique). Widgets can also have signals defined for "
"them in the GLADE editor. It defines what signal is given and what method to "
"call."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Modifying Stock Skins"
msgstr ""

#. type: Plain text
msgid ""
"If you change the name of a widget, Gscreen might not be able to find it. If "
"this widget is referenced to from python code, at best this makes the widget "
"not work anymore at worst it will cause an error when loading Gscreen's "
"default screens don't use many signals defined in the editor, it defines "
"them in the python code. If you move (cut and paste) a widget with signals, "
"the signals will not be copied. You must add them again manually."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Handler Files"
msgstr ""

#. type: Plain text
msgid ""
"A handler file is a file containing python code, which Gscreen adds to it's "
"default routines. A handler file allows one to modify defaults, or add logic "
"to a Gscreen skin without having to modify Gscreen proper. You can combine "
"new functions with Gscreen's function to modify behavior as you like. You "
"can completely bypass all of Gscreen's functions and make if work completely "
"differently. If present a handler file named gscreen_handler.py (or "
"MYNAME_handler.py if using the INI switch) will be loaded and registered "
"only one file is allowed Gscreen looks for the handler file, if found it "
"will look for specific function names and call them instead of the default "
"ones. If adding widgets you can set up signal calls from the Glade editor to "
"call routines you have written in the handler file. In this way you can have "
"custom behavior. Handler routines can call Gscreen's default routines, "
"either before or after running it's own code. In this way you can tack on "
"extra behavior such as adding a sound. Please see the <<cha:glade-vcp,"
"GladeVCP Chapter>> for the basics to GladeVCP handler files. Gscreen uses a "
"very similar technique."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Themes"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Gscreen uses the PyGTK toolkit to display the screen.\n"
"Pygtk is the Python language binding to GTK.\n"
"GTK supports 'themes'.\n"
"Themes are a way to modify the look and feel of the widgets on the screen.\n"
"For instance the color or size of buttons and sliders can be changed using\n"
"themes.\n"
"There are many GTK themes available on the web.\n"
"Themes can also be customized to modify visuals of particular named widgets.\n"
"This ties the theme file to the glade file more tightly.\n"
"Some of the sample screen skins allow the user to select any of the themes on \n"
"the system. The sample 'gscreen' is an example.\n"
"Some will load the theme that is the same name in the config file. The sample \n"
"'gscreen-gaxis' is an example. This is done by putting the theme folder in the\n"
" config folder that has the INI and HAL files and naming it: SCREENNAME_theme\n"
"(SCREENNAME being the base name of the files eg. gaxis_theme)\n"
"Inside this folder is another folder call gtk-2.0, inside that is the theme \n"
"files. If you add this file, Gscreen will default to this theme on start up.\n"
"gscreen-gaxis has a sample custom theme that looks for certain named widgets \n"
"and changes the visual behaivor of those specific widgets. The Estop and \n"
"machine-on buttons use different colors then the rest of the buttons so that\n"
"they stand out. This is done in the handler file by giving them specific names\n"
"an by adding specific commands in the theme's gtkrc file.\n"
"For some info on GTK theming (The sample theme uses the pixmap theme engine) See:\n"
msgstr ""

#. type: Plain text
msgid "https://wiki.gnome.org/Attic/GnomeArt/Tutorials/GtkThemes[GTK Themes]"
msgstr ""

#. type: Plain text
msgid ""
"https://wiki.gnome.org/Attic/GnomeArt/Tutorials/GtkEngines/"
"PixmapEngine[Pixmap Theme Engine]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Build a GladeVCP Panel"
msgstr ""

#. type: Plain text
msgid ""
"Gscreen is just a big complicated GladeVCP panel, with python code to "
"control it. To customize it we need the Glade file loaded in the Glade "
"editor."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Installed LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"If you have LinuxCNC 2.6+ installed on Ubuntu 10.04 just start the Glade "
"editor from the applications menu or from the terminal. Newer versions of "
"Linux will require you to install Glade 3.8.0 - 3.8.6 (you may need to "
"compile it yourself)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "RIP compiled commands"
msgstr ""

#. type: Plain text
msgid ""
"Using a compiled from source version of http://wiki.linuxcnc.org/cgi-bin/"
"wiki.pl?Installing_LinuxCNC[LinuxCNC] open a terminal and <<faq:cd,cd>> to "
"the top of the LinuxCNC folder. Set up the environment by entering '. ./"
"scripts/rip-environment' now enter 'glade', you see a bunch of warnings in "
"the terminal that you can ignore and the editor should open. The stock "
"Gscreen Glade file is in: src/emc/usr_intf/gscreen/ sample skins are in /"
"share/gscreen/skins/. This should be copied to a configuration folder. Or "
"you can make a clean-sheet Glade file by saving it in a configuration folder."
msgstr ""

#. type: Plain text
msgid ""
"Ok you have loaded the stock Glade file and now can edit it. The first thing "
"you notice is it does not look in the editor like what it's displayed like "
"Gscreen uses some tricks, such as hiding all boxes of buttons except one and "
"changing that one depending on the mode. The same goes for notebooks, some "
"screens use notebooks with the tabs not shown. To change pages in the editor "
"you need to temporarily show those tabs."
msgstr ""

#. type: Plain text
msgid ""
"When making changes it is far easier to add widgets then subtract widgets "
"and still have the screen work properly making objects 'not visible' is one "
"way to change the display without getting errors. This won't always work "
"some widgets will be set visible again. Changing the names of Gscreen's "
"regular widgets is probably not gonna work well without changing the python "
"code, but moving a widget while keeping the name is usually workable."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen leverages GladeVCP widgets as much as possible, to avoid adding "
"python code. Learning about <<cha:glade-vcp,GladeVCP>> widgets is a "
"prerequisite.  If the existing widgets give you the function you want or "
"need then no python code needs be added, just save the Glade file in your "
"configuration folder.  If you need something more custom then you must do "
"some python programming.  The name of the parent window needs to be window1. "
"Gscreen assumes this name."
msgstr ""

#. type: Plain text
msgid ""
"Remember, if you use a custom screen option YOU are responsible for fixing "
"it (if required) when updating LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Building a simple clean-sheet custom screen"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "simple usable screen"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tester.png"
msgstr ""

#. type: Plain text
msgid ""
"Lets build a simple usable screen. Build this in the Glade editor (if using "
"a RIP package run it from a terminal after using . scripts/rip-environment )."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Things to note:"
msgstr ""

#. type: Plain text
msgid ""
"The top level window must be called the default name, 'window1' - Gscreen "
"relies on this."
msgstr ""

#. type: Plain text
msgid ""
"Add actions by right clicking, and selecting 'add as toplevel widget' they "
"don't add anything visual to the window but are added to the right most "
"action list. Add all the ones you see on the top right."
msgstr ""

#. type: Plain text
msgid ""
"After adding the actions we must link the buttons to the actions for them to "
"work (see below)."
msgstr ""

#. type: Plain text
msgid ""
"The gremlin widget doesn't have a default size so setting a requested size "
"is helpful (see below)."
msgstr ""

#. type: Plain text
msgid ""
"The sourceview widget will try to use the whole window so adding it to a "
"scrolled window will cover this (This is already been done in the example)."
msgstr ""

#. type: Plain text
msgid ""
"The buttons will expand as the window is made larger which is ugly so we "
"will set the box they are in, to not expand (see below)."
msgstr ""

#. type: Plain text
msgid ""
"The button types to use depend on the VCP_action used -eg vcp_toggle_action "
"usually require toggle buttons (Follow the example for now)."
msgstr ""

#. type: Plain text
msgid ""
"The buttons in this example are regular buttons not HAL buttons. We don't "
"need the HAL pins."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Glade editor tester.glade"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tester_editor.png"
msgstr ""

#. type: Plain text
msgid ""
"In this screen we are using VCP_actions to communicate to LinuxCNC the "
"actions we want. This allows us standard functions without adding python "
"code in the handler file. Let's link the estop toggle button to the estop "
"action Select the estop toggle button and under the general tab look for "
"'Related Action' and click the button beside it. Now select the toggle estop "
"action. Now the button will toggle estop on and off when clicked. Under the "
"general tab you can change the text of the button's label to describe it's "
"function. Do this for all the buttons."
msgstr ""

#. type: Plain text
msgid ""
"Select the gremlin widget click the common tab and set the requested height "
"to 100 and click the checkbox beside it."
msgstr ""

#. type: Plain text
msgid ""
"Click the horizontal box that holds the buttons. Click the packing tab and "
"click 'expand' to 'No'."
msgstr ""

#. type: Plain text
msgid ""
"Save it as tester.glade and save it in sim/gscreen/gscreen_custom/ folder. "
"Now launch LinuxCNC and click to sim/gscreen/gscreen_custom/tester and start "
"it.  If all goes well our screen will pop up and the buttons will do their "
"job This works because the tester.ini tells gscreen to look for and load "
"tester.glade and tester_handler.py. The tester_handler.py file is included "
"in that folder and is coded just show the screen and not much else. Since "
"the special widgets directly communicate with LinuxCNC you can still do "
"useful things. If your screen needs are covered by the available special "
"widgets then this is as far as you need to go to build a screen. If you want "
"something more there are still many tricks available from just adding "
"'function calls' to get canned behaviour.  To coding your own python code to "
"customize exactly what you want. But that means learning about handler files."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Handler file example"
msgstr ""

#. type: Plain text
msgid ""
"There are special functions Gscreen checks the handler file for.  If you add "
"these in you handler file Gscreen will call them instead of gscreen's "
"internal same-named functions."
msgstr ""

#. type: Plain text
msgid "initialize_preferences(self): You can install new preference routines."
msgstr ""

#. type: Plain text
msgid ""
"initialize_keybindings(self) You can install new keybinding routines. In "
"most cases you won't want to do this, you will want to override the "
"individual keybinding calls. You can also add more keybindings that will "
"call an arbitrary function."
msgstr ""

#. type: Plain text
msgid "initialize_pins(self): makes / initializes HAL pins"
msgstr ""

#. type: Plain text
msgid ""
"connect_signals(self,handlers): If you are using a completely different "
"screen the default Gscreen you must add this or gscreen will try to connect "
"signals to widgets that are not there. Gscreen's default function is called "
"with self.gscreen.connect_signals(handlers) If you wish to just add extra "
"signals to your screen but still want the default ones call this first then "
"add more signals. If you signals are simple (no user data passed) then you "
"can also use the Glade signal selection in the Glade editor."
msgstr ""

#. type: Plain text
msgid ""
"initialize_widgets(self): You can use this to set up any widgets. Gscreen "
"usually calls 'self.gscreen.initialize_widgets()' which actually calls many "
"separate functions. If you wish to incorporate some of those widgets then "
"just call those functions directly. or add self.gscreen.init_show_windows() "
"so widgets are just shown. Then if desired, initialize/adjust your new "
"widgets."
msgstr ""

#. type: Plain text
msgid ""
"initialize_manual_toolchange(self): allows a complete revamp of the manual "
"toolchange system."
msgstr ""

#. type: Plain text
msgid "set_restart_line(self.line):"
msgstr ""

#. type: Plain text
msgid ""
"timer_interrupt(self): allows one to complete redefine the interrupt routine "
"This is used for calling periodic() and checking for errors from linuxcnc."
"status."
msgstr ""

#. type: Plain text
msgid ""
"check_mode(self): used to check what mode the screen is in. Returns a list[] "
"0 -manual 1- mdi 2- auto 3- jog."
msgstr ""

#. type: Plain text
msgid ""
"on_tool_change(self,widget): You can use this to override the manual tool "
"change dialog -this is called when 'gscreen.tool-change' changes state."
msgstr ""

#. type: Plain text
msgid ""
"dialog_return(self,dialog_widget,displaytype,pinname): Use this to override "
"any user message or manual tool change dialog. Called when the dialog is "
"closed."
msgstr ""

#. type: Plain text
msgid ""
"periodic(self): This is called every (default 100) milliseconds. Use it to "
"update your widgets/HAL pins. You can call Gscreen regular periodic "
"afterwards too, self.gscreen.update_position() or just add pass to not "
"update anything. Gscreen's update_position() actually calls many separate "
"functions. If you wish to incorporate some of those widgets then just call "
"those functions directly."
msgstr ""

#. type: Plain text
msgid ""
"You can also add you own functions to be called in this file. Usually you "
"would add a signal to a widget to call your function."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adding Keybindings Functions"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Our tester example would be more useful if it responded to keyboard commands. +\n"
"There is a function called keybindings() that tries to set this up. +\n"
"While you can override it completely, we didn't - but it assumes some things. +\n"
"It assumes the estop toggle button is call 'button_estop' and that F1 key controls it. +\n"
"It assumes the power button is called 'button_machine_on' and the F2 key controls it. +\n"
"These are easily fixed by renaming the buttons in the Glade editor to match. +\n"
"But instead we are going to override the standard calls and add our own. +\n"
" +\n"
"Add these command to the handler file:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  # override Gscreen Functions\n"
"  # keybinding calls\n"
"  def on_keycall_ESTOP(self,state,SHIFT,CNTRL,ALT):\n"
"    if state: # only if pressed, not released\n"
"      self.widgets.togglebutton1.emit('activate')\n"
"      self.gscreen.audio.set_sound(self.data.alert_sound)\n"
"      self.gscreen.audio.run()\n"
"      return True # stop progression of signal to other widgets\n"
"  def on_keycall_POWER(self,state,SHIFT,CNTRL,ALT):\n"
"    if state:\n"
"      self.widgets.togglebutton2.emit('activate')\n"
"      return True\n"
"  def on_keycall_ABORT(self,state,SHIFT,CNTRL,ALT):\n"
"    if state:\n"
"      self.widgets.button3.emit('activate')\n"
"      return True\n"
msgstr ""

#. type: Plain text
msgid ""
"So now we have overridden Gscreen's function calls of the same name and deal "
"with them in our handler file. + We now reference the widgets by the name we "
"used in the Glade editor. + We also added a built in gscreen function to "
"make a sound when Estop changes. + Note that we we call Gscreen's built in "
"functions we must use self.gscreen.[FUNCTION NAME]() + If we used self."
"[FUNCTION NAME]() it would call the function in our handler file. +"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Lets add another key binding that loads halmeter when F4 is pressed. +\n"
" +\n"
"In the handler file under 'def initialize_widgets(self):' change to:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  def initialize_widgets(self):\n"
"    self.gscreen.init_show_windows()\n"
"    self.gscreen.keylookup.add_conversion('F4','TEST','on_keycall_HALMETER')\n"
msgstr ""

#. type: Plain text
msgid "Then add these functions under the 'HandlerClass' class:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  def on_keycall_HALMETER(self,state,SHIFT,CNTRL,ALT):\n"
"    if state:\n"
"      self.gscreen.on_halmeter()\n"
"      return True\n"
msgstr ""

#. type: Plain text
msgid ""
"This adds a keybinding conversion that directs gscreen to call "
"on_keycall_HALMETER when F4 is pressed. + Then we add the function to the "
"handle file to call a Gscreen builtin function to start halmeter. +"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Linuxcnc State Status"
msgstr ""

#. type: Plain text
msgid ""
"The module 'Gstat' polls linuxcnc's state every 100ms and sends callback "
"messages to user functions when state changes. + You can register messages "
"to act on specific state changes. + As an example we will register to get "
"'file-loaded' messages when linuxcnc loads a new file. + First we must "
"import the module and instantiate it: + In the import section of the handler "
"file add: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"from hal_glib import GStat\n"
"GSTAT = GStat()\n"
msgstr ""

#. type: Plain text
msgid "In the handler file under 'def \\_\\_init__(self):' add: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "GSTAT.connect('file-loaded', self.update_filepath)\n"
msgstr ""

#. type: Plain text
msgid "Then in the 'HandlerClass', add the function: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"self.update_filepath(self, obj, path):\n"
"    self.widgets.my_path_label.set_text(path)\n"
msgstr ""

#. type: Plain text
msgid ""
"When linuxcnc loads a new file, Gstat will send a callback message to the "
"function 'update_filepath'. + In this example we update a label with that "
"path name (assuming there is a label nammed 'my_path_label') in the GLADE "
"file. +"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jogging Keys"
msgstr ""

#. type: Plain text
msgid ""
"There are no special widgets to do screen-button jogging, so we must do it "
"with python code. + Under the connect_signals function add this code: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        for i in('x','y','z'):\n"
"            self.widgets[i+'neg'].connect(\"pressed\", self['jog_'+i],0,True)\n"
"            self.widgets[i+'neg'].connect(\"released\", self['jog_'+i],0,False)\n"
"            self.widgets[i+'pos'].connect(\"pressed\", self['jog_'+i],1,True)\n"
"            self.widgets[i+'pos'].connect(\"released\", self['jog_'+i],1,False)\n"
"        self.widgets.jog_speed.connect(\"value_changed\",self.jog_speed_changed)\n"
msgstr ""

#. type: Plain text
msgid "Add these functions under the HandlerClass class:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    def jog_x(self,widget,direction,state):\n"
"        self.gscreen.do_key_jog(_X,direction,state)\n"
"    def jog_y(self,widget,direction,state):\n"
"        self.gscreen.do_key_jog(_Y,direction,state)\n"
"    def jog_z(self,widget,direction,state):\n"
"        self.gscreen.do_key_jog(_Z,direction,state)\n"
"    def jog_speed_changed(self,widget,value):\n"
"        self.gscreen.set_jog_rate(absolute = value)\n"
msgstr ""

#. type: Plain text
msgid ""
"Finally add two buttons to the GLADE file for each axis - one for positive, "
"one for negative direction jogging. + Name these buttons xneg, xpos, yneg, "
"ypos zneg, zpos respectively. + add a SpeedControl widget to the GLADE file "
"and name it jog_speed +"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Gscreen Start Up"
msgstr ""

#. type: Plain text
msgid ""
"Gscreen is really just infrastructure to load a custom GladeVCP file and "
"interact with it."
msgstr ""

#. type: Plain text
msgid "Gscreen reads the options it was started with."
msgstr ""

#. type: Plain text
msgid "Gscreen sets the debug mode and set the optional skin name."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks to see if there are 'local' XML, handler and/or locale files "
"in the configuration folder. It will use them instead of the default ones "
"(in share/gscreen/skins/) (There can be two separate screens displayed)."
msgstr ""

#. type: Plain text
msgid ""
"The main screen is loaded and translations set up. If present the second "
"screen will be loaded and translations set up."
msgstr ""

#. type: Plain text
msgid "Optional Audio is initialized if available."
msgstr ""

#. type: Plain text
msgid ""
"It reads some of the INI file to initialize the units, and the number/type "
"of axes."
msgstr ""

#. type: Plain text
msgid ""
"Initializes Python's binding to HAL to build a userspace component with the "
"Gscreen name."
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP's makepins is called to parse the XML file to build HAL pins for "
"the HAL widgets and register the LinuxCNC connected widgets."
msgstr ""

#. type: Plain text
msgid ""
"Checks for a 'local' handler file in the configuration folder or else uses "
"the stock one from the skin folder."
msgstr ""

#. type: Plain text
msgid ""
"If there is a handler file gscreen parses it, and registers the function "
"calls into Gscreen's namespace."
msgstr ""

#. type: Plain text
msgid ""
"Glade matches/registers all signal calls to functions in gscreen and the "
"handler file."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the INI file for an option preference file name otherwise it "
"uses '.gscreen_preferences' =."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks to see if there is a preference function call "
"('initialize_preferences(self)') in the handler file otherwise it uses the "
"stock Gscreen one."
msgstr ""

#. type: Plain text
msgid "Gscreen checks for classicladder realtime component."
msgstr ""

#. type: Plain text
msgid "Gscreen checks for the system wide GTK theme."
msgstr ""

#. type: Plain text
msgid "Gscreen collects the jogging increments from the INI file."
msgstr ""

#. type: Plain text
msgid "Gscreen collects the angular jogging increments from the INI file."
msgstr ""

#. type: Plain text
msgid "Gscreen collects the default and max jog rate from the INI."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen collects the max velocity of any axes from the INI's TRAJ section."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks to see if there is angular axes then collects the default and "
"max velocity from the INI file."
msgstr ""

#. type: Plain text
msgid "Gscreen collect all the override setting from the INI."
msgstr ""

#. type: Plain text
msgid "Gscreen checks if its a lathe configuration from the INI file."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen finds the name of the tool_table,tool editor and param file from the "
"INI."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the handler file for keybindings function "
"('initialize_keybindings(self)') or else use Gscreen stock one."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the handler file for pins function ('initialize_pins(self)')  "
"or else use Gscreen stock one."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the handler file for manual_toolchange function "
"('initialize_manual_toolchange(self)') or else use Gscreen stock one."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the handler file for connect_signals function "
"('initialize_connect_signals(self)') or else use Gscreen stock one."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checka the handler file for widgets function "
"('initialize_widgets(self)') or else use Gscreen stock one."
msgstr ""

#. type: Plain text
msgid "Gscreen seta up messages specified in the INI file."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen tells HAL the Gscreen HAL component is finished making pins and is "
"ready. If there is a terminal widget in the screen it will print all the "
"Gscreen pins to it."
msgstr ""

#. type: Plain text
msgid "Gscreen sets the display cycle time based on the INI file."
msgstr ""

#. type: Plain text
msgid ""
"Gscreen checks the handler file for 'timer_interupt(self)' function call "
"otherwise use Gscreen's default function call."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "INI Settings"
msgstr ""

#. type: Plain text
msgid "Under the [DISPLAY] heading:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"DISPLAY = gscreen -c tester\n"
"  options:\n"
"   -d debugging on\n"
"   -v verbose debugging on\n"
msgstr ""

#. type: Plain text
msgid ""
"The -c switch allows one to select a 'skin'. Gscreen assumes the Glade file "
"and the handler file use this same name. The optional second screen will be "
"the same name with a 2 (eg. tester2.glade) There is no second handler file "
"allowed.  It will only be loaded if it is present. Gscreen will search the "
"LinuxCNC configuration file that was launched first for the files, then in "
"the system skin folder."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "User Dialog Messages"
msgstr ""

#. type: Plain text
msgid ""
"This function is used to display pop up dialog messages on the screen. + "
"These are defined in the INI file and controlled by HAL pins. + 'Boldtext' "
"is generally a title. + 'text' is below that and usually longer. + 'Detail' "
"is hidden unless clicked on. + 'pinname' is the basename of the HAL pins. + "
"'type' specifies whether its a yes/no, ok, or status message. + Status "
"messages will be shown in the status bar and the notify dialog. + it "
"requires no user intervention. + ok messages require the user to click ok to "
"close the dialog. + ok messages have one HAL pin to launch the dialog and "
"one to signify it's waiting for response. + yes/no messages require the user "
"to select yes or no buttons to close the dialog. + yes/no messages have "
"three hal pins - one to show the dialog, one for waiting, + and one for the "
"answer. +"
msgstr ""

#. type: Plain text
msgid "Here is a sample INI code. It would be under the [DISPLAY] heading. +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This just shows in the status bar and desktop notify popup.\n"
"MESSAGE_BOLDTEXT = NONE\n"
"MESSAGE_TEXT = This is a statusbar test\n"
"MESSAGE_DETAILS = STATUS DETAILS\n"
"MESSAGE_TYPE = status\n"
"MESSAGE_PINNAME = statustest\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This will pop up a dialog that asks a yes no question\n"
"MESSAGE_BOLDTEXT = NONE\n"
"MESSAGE_TEXT = This is a yes no dialog test\n"
"MESSAGE_DETAILS = Y/N DETAILS\n"
"MESSAGE_TYPE = yesnodialog\n"
"MESSAGE_PINNAME = yndialogtest\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This pops up a dialog that requires an ok response and it shows in the status bar and\n"
"# the destop notify popup.\n"
"MESSAGE_BOLDTEXT = This is the short text\n"
"MESSAGE_TEXT = This is the longer text of the both type test. It can be longer then the status bar text\n"
"MESSAGE_DETAILS = BOTH DETAILS\n"
"MESSAGE_TYPE = okdialog status\n"
"MESSAGE_PINNAME = bothtest\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Copy the Stock Handler/Glade File For Modification"
msgstr ""

#. type: Plain text
msgid ""
"If you wish to use a stock screen but modify it's handler file, you need to "
"copy the stock file to your config file folder. + Gscreen will see this and "
"use the copied file. + But where is the original file? If using a RIP "
"linuxcnc the sample skins are in /share/gscreen/skins/'SCREENNAME' + "
"Installed versions of linuxcnc have them in slightly different places "
"depending on the distribution used. + An easy way to find the location is to "
"open a terminal and start the sim screen you wish to use. + In the terminal "
"the file locations will be printed. + It may help to add the -d switch t0 "
"the gscreen load line in the INI. +"
msgstr ""

#. type: Plain text
msgid "Here is a sample:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"chris@chris-ThinkPad-T500 ~/emc-dev/src $ linuxcnc\n"
"LINUXCNC - 2.7.14\n"
"Machine configuration directory is '/home/chris/emc-dev/configs/sim/gscreen/gscreen_custom'\n"
"Machine configuration file is 'industrial_lathe.ini'\n"
"Starting LinuxCNC...\n"
"Found file(lib): /home/chris/emc-dev/lib/hallib/core_sim.hal\n"
"Note: Using POSIX non-realtime\n"
"Found file(lib): /home/chris/emc-dev/lib/hallib/sim_spindle_encoder.hal\n"
"Found file(lib): /home/chris/emc-dev/lib/hallib/axis_manualtoolchange.hal\n"
"Found file(lib): /home/chris/emc-dev/lib/hallib/simulated_home.hal\n"
"**** GSCREEN WARNING: no audio alerts available - Is python-gst0.10 library installed?\n"
"**** GSCREEN INFO ini: /home/chris/emc-dev/configs/sim/gscreen/gscreen_custom/industrial_lathe.ini\n"
"**** GSCREEN INFO: Skin name = industrial\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "**** GSCREEN INFO:  Using SKIN glade file from /home/chris/emc-dev/share/gscreen/skins/industrial/industrial.glade ****\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"**** GSCREEN INFO:  No Screen 2 glade file present\n"
"**** GSCREEN INFO: handler file path: ['/home/chris/emc-dev/share/gscreen/skins/industrial/industrial_handler.py']\n"
"---- \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "The line: +\n"
msgstr ""

#. type: Plain text
msgid ""
"GSCREEN INFO: handler file path: ['/home/chris/emc-dev/share/gscreen/skins/"
"industrial/industrial_handler.py']"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"shows where the stock file lives. Copy this file to your config folder. +\n"
"This works the same for the Glade file.\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "TkLinuxCNC GUI"
msgstr ""

#. type: Plain text
msgid ""
"TkLinuxCNC is one of the first graphical front-ends for LinuxCNC. It is "
"written in Tcl and uses the Tk toolkit for the display. Being written in Tcl "
"makes it very portable (it runs on a multitude of platforms). A separate "
"backplot window can be displayed as shown."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "TkLinuxCNC Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tkemc.png"
msgstr ""

#. type: Plain text
msgid ""
"To select TkLinuxCNC as the front-end for LinuxCNC, edit the .ini file. In "
"the section '[DISPLAY]' change the 'DISPLAY' line to read"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "DISPLAY = tklinuxcnc\n"
msgstr ""

#. type: Plain text
msgid ""
"Then, start LinuxCNC and select that ini file. The sample configuration 'sim/"
"tklinuxcnc/tklinuxcnc.ini' is already configured to use TkLinuxCNC as its "
"front-end."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "A typical session with TkLinuxCNC"
msgstr ""

#. type: Plain text
msgid "Start LinuxCNC and select a configuration file."
msgstr ""

#. type: Plain text
msgid "Clear the 'E-STOP' condition and turn the machine on (by"
msgstr ""

#. type: Plain text
msgid "pressing F1 then F2)."
msgstr ""

#. type: Plain text
msgid "'Home' each axis."
msgstr ""

#. type: Plain text
msgid "Load the file to be milled."
msgstr ""

#. type: Plain text
msgid "Put the stock to be milled on the table."
msgstr ""

#. type: Plain text
msgid "Set the proper offsets for each axis by jogging and either homing"
msgstr ""

#. type: Plain text
msgid ""
"again or right-clicking an axis name and entering an offset value.  footnote:"
"[For some of these actions it might be necessary to change the mode LinuxCNC "
"is currently running in.]"
msgstr ""

#. type: Plain text
msgid "To mill the same file again, return to step 6. To mill a different"
msgstr ""

#. type: Plain text
msgid "file, return to step 4. When you're done, exit LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Elements of the TkLinuxCNC window"
msgstr ""

#. type: Plain text
msgid "The TkLinuxCNC window contains the following elements:"
msgstr ""

#. type: Plain text
msgid "A menubar that allows you to perform various actions"
msgstr ""

#. type: Plain text
msgid ""
"A set of buttons that allow you to change the current working mode, start/"
"stop spindle and other relevant I/O"
msgstr ""

#. type: Plain text
msgid "Status bar for various offset related displays"
msgstr ""

#. type: Plain text
msgid "Coordinate display area"
msgstr ""

#. type: Plain text
msgid ""
"A set of sliders which control 'Jogging speed', 'Feed Override' , and "
"'Spindle speed Override' which allow you to increase or decrease those "
"settings"
msgstr ""

#. type: Plain text
msgid "Manual data input text box 'MDI'"
msgstr ""

#. type: Plain text
msgid "Status bar display with active G-codes, M-codes, F- and S-words"
msgstr ""

#. type: Plain text
msgid "Interpreter related buttons"
msgstr ""

#. type: Plain text
msgid "A text display area that shows the G-code source of the loaded file"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Main buttons"
msgstr ""

#. type: Plain text
msgid "From left to right, the buttons are:"
msgstr ""

#. type: Plain text
msgid "Machine enable: 'ESTOP' > 'ESTOP RESET' > 'ON'"
msgstr ""

#. type: Plain text
msgid "Toggle mist coolant"
msgstr ""

#. type: Plain text
msgid "Decrease spindle speed"
msgstr ""

#. type: Plain text
msgid "Set spindle direction 'SPINDLE OFF' > 'SPINDLE FORWARD' ."
msgstr ""

#. type: Plain text
msgid "'SPINDLE REVERSE'"
msgstr ""

#. type: Plain text
msgid "Increase spindle speed"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Abort"
msgstr ""

#. type: Plain text
msgid "then on the second line:"
msgstr ""

#. type: Plain text
msgid "Operation mode: 'MANUAL' > 'MDI' > 'AUTO'"
msgstr ""

#. type: Plain text
msgid "Toggle flood coolant"
msgstr ""

#. type: Plain text
msgid "Toggle spindle brake control"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Offset display status bar"
msgstr ""

#. type: Plain text
msgid ""
"The Offset display status bar displays the currently selected tool (selected "
"with Txx M6), the tool length offset (if active), and the work offsets (set "
"by right-clicking the coordinates)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Coordinate Display Area"
msgstr ""

#. type: Plain text
msgid ""
"The main part of the display shows the current position of the tool.  The "
"color of the position readout depends on the state of the axis. If the axis "
"is unhomed the axis will be displayed in yellow letters. Once homed it will "
"be displayed in green letters. If there is an error with the current axis "
"TkLinuxCNC will use red letter to show that. (for example if an hardware "
"limit switch is tripped)."
msgstr ""

#. type: Plain text
msgid ""
"To properly interpret these numbers, refer to the radio boxes on the right. "
"If the position is 'Machine', then the displayed number is in the machine "
"coordinate system. If it is 'Relative', then the displayed number is in the "
"offset coordinate system. Further down the choices can be 'actual' or "
"'commanded'. Actual refers to the feedback coming from encoders (if you have "
"a servo machine), and the 'commanded' refers to the position command send "
"out to the motors. These values can differ for several reasons: Following "
"error, deadband, encoder resolution, or step size. For instance, if you "
"command a movement to X 0.0033 on your mill, but one step of your stepper "
"motor is 0.00125, then the 'Commanded' position will be 0.0033 but the "
"'Actual' position will be 0.0025 (2 steps) or 0.00375 (3 steps)."
msgstr ""

#. type: Plain text
msgid ""
"Another set of radio buttons allows you to choose between 'joint' and "
"'world' view. These make little sense on a normal type of machine (e.g.  "
"trivial kinematics), but help on machines with non-trivial kinematics like "
"robots or stewart platforms. (you can read more about kinematics in the "
"Integrator Manual)."
msgstr ""

#. type: Plain text
msgid ""
"When the machine moves, it leaves a trail called the backplot. You can start "
"the backplot window by selecting ViewâBackplot."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Automatic control"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Buttons for control"
msgstr ""

#. type: Plain text
msgid ""
"The buttons in the lower part of TkLinuxCNC are used to control the "
"execution of a program: 'Open' to load a program, 'Verify' to check it for "
"errors, 'Run' to start the actual cutting, 'Pause' to stop it while running, "
"'Resume' to resume an already paused program, 'Step' to advance one line in "
"the program and 'Optional Stop' to toggle the optional stop switch (if the "
"button is green the program execution will be stopped on any M1 encountered)."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "TkLinuxCNC Interpreter / program control"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tkemc-interp.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Text Program Display Area"
msgstr ""

#. type: Plain text
msgid ""
"When the program is running, the line currently being executed is "
"highlighted in white. The text display will automatically scroll to show the "
"current line."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Implicit keys"
msgstr ""

#. type: Plain text
msgid ""
"TkLinuxCNC allows you to manually move the machine. This action is known as "
"'jogging'. First, select the axis to be moved by clicking it. Then, click "
"and hold the '+' or '-' button depending on the desired direction of motion. "
"The first four axes can also be moved by the keyboard arrow keys (X and Y), "
"the PAGE UP and PAGE DOWN keys (Z) and the '[' and ']' keys (A/4th)."
msgstr ""

#. type: Plain text
msgid ""
"If 'Continuous' is selected, the motion will continue as long as the button "
"or key is pressed. If another value is selected, the machine will move "
"exactly the displayed distance each time the button is clicked or the key is "
"pressed. The available values are: '1.0000, 0.1000, 0.0100, 0.0010, 0.0001'"
msgstr ""

#. type: Plain text
msgid ""
"By pressing 'Home' or the HOME key, the selected axis will be homed.  "
"Depending on your configuration, this may just set the axis value to be the "
"absolute position 0.0, or it may make the machine move to a specific home "
"location through use of 'home switches'. See the <<cha:homing-configuration,"
"Homing Chapter>> for more information."
msgstr ""

#. type: Plain text
msgid ""
"By pressing 'Override Limits', the machine will temporarily be permitted to "
"jog outside the limits defined in the .ini file. (Note: if 'Override Limits' "
"is active the button will be displayed using a red color)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "TkLinuxCNC Override Limits & Jogging increments example"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "TkLinuxCNC Override Limits and Jogging increments example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tkemc-override-limits.png"
msgstr ""

#. type: Plain text
msgid ""
"The button on the first row selects the direction for the spindle to rotate: "
"Counterclockwise, Stopped, Clockwise. The buttons next to it allow the user "
"to increase or decrease the rotation speed. The button on the second row "
"allows the spindle brake to be engaged or released.  Depending on your "
"machine configuration, not all the items in this group may have an effect."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Code Entry"
msgstr ""

#. type: Plain text
msgid ""
"Manual Data Input (also called MDI), allows G-code programs to be entered "
"manually, one line at a time. When the machine is not turned on, and not set "
"to MDI mode, the code entry controls are unavailable."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "The Code Entry tab"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tkemc-mdi.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "MDI:"
msgstr ""

#. type: Plain text
msgid ""
"This allows you to enter a g-code command to be executed. Execute the "
"command by pressing Enter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Active G-Codes"
msgstr ""

#. type: Plain text
msgid ""
"This shows the 'modal codes' that are active in the interpreter. For "
"instance, 'G54' indicates that the 'G54 offset' is applied to all "
"coordinates that are entered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Speed "
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the speed of jogs can be modified. The numbers above "
"refer to axis units / second. The text box with the number is clickable. "
"Once clicked a popup window will appear, allowing for a number to be entered."
msgstr ""

#. type: Plain text
msgid ""
"By moving this slider, the programmed feed rate can be modified. For "
"instance, if a program requests 'F60' and the slider is set to 120%, then "
"the resulting feed rate will be"
msgstr ""

#. type: Plain text
msgid ""
"The text box with the number is clickable. Once clicked a popup window will "
"appear, allowing for a number to be entered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle speed Override"
msgstr ""

#. type: Plain text
msgid ""
"The spindle speed override slider works exactly like the feed override "
"slider, but it controls to the spindle speed. If a program requested S500 "
"(spindle speed 500 RPM), and the slider is set to 80%, then the resulting "
"spindle speed will be 400 RPM. This slider has a minimum and maximum value "
"defined in the ini file. If those are missing the slider is stuck at 100%. "
"The text box with the number is clickable. Once clicked a popup window will "
"appear, allowing for a number to be entered."
msgstr ""

#. type: Plain text
msgid ""
"Almost all actions in TkLinuxCNC can be accomplished with the keyboard.  "
"Many of the shortcuts are unavailable when in MDI mode."
msgstr ""

#. type: Plain text
msgid ""
"The most frequently used keyboard shortcuts are shown in the following table."
msgstr ""

#. type: Table
#, no-wrap
msgid "Send active axis Home"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Preamble"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Except where noted, this guide assumes the user is using the latest version of QtPlasmaC. Version history can be seen by visiting this link:http://htmlpreview.github.io/?https://github.com/LinuxCNC/linuxcnc/blob/master/share/qtvcp/screens/qtplasmac/versions.html[link] which will show the latest available version. The installed QtPlasmaC version is displayed in the title bar. See <<qt_update, Update QtPlasmaC>> for information on updating QtPlasmaC.*\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "License"
msgstr ""

#. type: Plain text
msgid "QtPlasmaC and all of its related software are released under GPLv2."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC is a GUI for plasma cutting which utilises the link:http://"
"linuxcnc.org/docs/devel/html/man/man9/plasmac.9.html[plasmac component] for "
"controlling a plasma table from LinuxCNC v2.9 or later using the Debian "
"Buster or similar distribution."
msgstr ""

#. type: Plain text
msgid ""
"The QtPlasmaC GUI supports up to five axes and uses the QtVCP infrastructure "
"provided with LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"The standard theme is based on a design by user \"pinder\" on the LinuxCNC "
"Forum and the colors are able to be changed by the user."
msgstr ""

#. type: Plain text
msgid ""
"The QtPlasmaC GUI will run on any hardware that is supported by LinuxCNC "
"provided there are enough hardware I/O pins to fulfill the requirements of a "
"plasma configuration."
msgstr ""

#. type: Plain text
msgid "There are three available formats:"
msgstr ""

#. type: Plain text
msgid "16:9 with a minimum resolution of 1366 x 768"
msgstr ""

#. type: Plain text
msgid "9:16 with a minimum resolution of 768 x 1366"
msgstr ""

#. type: Plain text
msgid "4:3 with a minimum resolution of 1024 x 768"
msgstr ""

#. type: Plain text
msgid "Screenshot examples of QtPlasmaC are below:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*16:9*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_16x9.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*9:16*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_9x16.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*4:3*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_4x3.png"
msgstr ""

#. type: Plain text
msgid ""
"The preferred method for installing LinuxCNC is via an ISO image as "
"described below."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to install and run LinuxCNC on a variety of Linux "
"distributions however that is beyond the scope of this User Guide. If the "
"user wishes to install a Linux distribution other than those recommended, "
"they will first need to install their preferred Linux distribution and then "
"install LinuxCNC v2.9 or later along with any required dependencies."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "If The User Does Not Have Linux Installed"
msgstr ""

#. type: Plain text
msgid ""
"Installation instructions are available at: http://linuxcnc.org/docs/devel/"
"html/getting-started/getting-linuxcnc.html"
msgstr ""

#. type: Plain text
msgid ""
"Following these instructions will yield a machine with the current stable "
"branch (v2.8) of LinuxCNC on Debian Buster."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Package Installation (Buildbot) If The User Has Linux with LinuxCNC v2.8"
msgstr ""

#. type: Plain text
msgid ""
"A package installation (Buildbot) uses prebuilt packages from the LinuxCNC "
"Buildbot, instructions for upgrading from 2.8 to 2.9 are available at: "
"http://buildbot.linuxcnc.org"
msgstr ""

#. type: Plain text
msgid ""
"Following these instructions by using the below stanzas will upgrade the "
"machine to the last LinuxCNC Buildbot build master branch (v2.9) of "
"LinuxCNC. This may not always be the latest version of master branch (v2.9) "
"as from time to time the LinuxCNC Buildbot may stop due to errors."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"deb     http://buildbot.linuxcnc.org/ buster master-rtpreempt\n"
"deb-src http://buildbot.linuxcnc.org/ buster master-rtpreempt\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Run In Place Installation If The User Has Linux with LinuxCNC v2.8"
msgstr ""

#. type: Plain text
msgid ""
"A run in place installation runs LinuxCNC from a locally compiled version "
"usually located at ~/linuxcnc-dev, instructions for building a run in place "
"installation are available at: http://linuxcnc.org/docs/master/html/code/"
"building-linuxcnc.html"
msgstr ""

#. type: Plain text
msgid ""
"Following these instructions will install the latest master branch (v2.9) of "
"LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Creating A QtPlasmaC Configuration"
msgstr ""

#. type: Plain text
msgid ""
"Prior to creating a QtPlasmaC configuration, it is important that the user "
"has a firm understanding of the operating modes available, as well as the I/"
"O's that are required for successful plasma operation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Modes"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC requires the selection of one of following three operating modes:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Description*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Uses an external arc voltage input to calculate both Arc Voltage (for Torch Height Control) and Arc OK."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Uses an external arc voltage input to calculate Arc Voltage (for Torch Height Control). +\n"
"   Uses an external Arc OK input for Arc OK."
msgstr ""

#. type: Table
#, no-wrap
msgid "2"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Uses an external Arc OK input for Arc OK. +\n"
"   Use external up/down signals for Torch Height Control."
msgstr ""

#. type: Plain text
msgid ""
"If the plasma power source has an Arc OK (Transfer) output then it is "
"recommended to use that for Arc OK rather than the soft (calculated) Arc OK "
"provided by mode 0. It may also be possible to use a <<qt_reed-arc-ok, reed "
"relay>> as an alternative method to establish an Arc OK signal when the "
"power source does not provide one."
msgstr ""

#. type: Plain text
msgid ""
"For fine tuning of Mode 0 Ark OK see <<mode0-arcok, Tuning Mode 0 Arc OK>> "
"in the Advanced Topics section of the manual."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Available I/Os"
msgstr ""

#. type: Plain text
msgid ""
"This section only touches on the hardware I/O's required for QtPlasmaC. Base "
"machine requirements such as limit switches, home switches, etc. are in "
"addition to these."
msgstr ""

#. type: Table
#, no-wrap
msgid "*Name"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Modes"
msgstr ""

#. type: Table
#, no-wrap
msgid "Arc Voltag"
msgstr ""

#. type: Table
#, no-wrap
msgid "0, 1"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Analog input; *optional.* +\n"
"                  HAL pin name plasmac.arc-voltage-in +\n"
"                  Connected to the velocity output of an encoder equipped breakout board.\n"
"                  This signal is used to read the arc voltage to determine the necessary corrections to maintain the torch distance from the work piece during cutting."
msgstr ""

#. type: Table
#, no-wrap
msgid "Arc OK"
msgstr ""

#. type: Table
#, no-wrap
msgid "1, 2"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional.* +\n"
"            HAL pin name plasmac.arc-ok-in +\n"
"             Connected from the Arc OK output of the plasma power source to an input on the breakout board.\n"
"             This signal is used to determine if the cutting arc has been established and it is ok for the machine to move (sometimes called arc transfer)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Float Switc"
msgstr ""

#. type: Table
#, no-wrap
msgid "0, 1, 2"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional, see info below table:* +\n"
"                      HAL pin name plasmac.float-switch +\n"
"                      Connected from a breakout board input to a switch on the floating head.\n"
"                      This signal is used to mechanically probe the work piece with the torch and set Z zero at the top of the work piece. +\n"
"                      If used and no ohmic probe is configured, this is the probing method. +\n"
"                      If used and an ohmic probe is configured, this is the fallback probing method."
msgstr ""

#. type: Table
#, no-wrap
msgid "Ohmic Prob"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional, see info below table:* +\n"
"                     HAL pin name plasmac.ohmic-probe +\n"
"                     Connected from to the ohmic probe's output to a breakout board input.\n"
"                     This signal is used to probe electronically by completing a circuit using the work piece and the torch consumables and set Z zero at the top of the work piece. +\n"
"                     If used, this is the primary probing method.\n"
"                     If an ohmic probe fails to locate the work piece, and there is no float switch is present, probing will continue until the torch breaks away or the minimum Z limit is reached."
msgstr ""

#. type: Table
#, no-wrap
msgid "Ohmic Probe Enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital output; *optional, see info below table:* +\n"
"                            HAL pin name plasmac.ohmic-enable +\n"
"                            Connected from a breakout board output to an input to control the ohmic probe's power."
msgstr ""

#. type: Table
#, no-wrap
msgid "Breakaway Switc"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional, see info below table:* +\n"
"                          HAL pin name plasmac.breakaway +\n"
"                          Connected from a breakout board input to a torch breakaway detection switch. +\n"
"                          This signal senses if the torch has broken away from its cradle."
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch On"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital output; *required.* +\n"
"                  HAL pin name plasmac.torch-on +\n"
"                  Connected from a breakout board output to the torch-on input of the plasma power supply.\n"
"                  This signal is used to control the plasma power supply and start the arc."
msgstr ""

#. type: Table
#, no-wrap
msgid "Move Up"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional.* +\n"
"           HAL pin name plasmac.move-up +\n"
"           Connected from the up output of the external THC control to a break out board input.\n"
"\t\t   This signal is used to control the Z axis in an upward motion and make necessary corrections to maintain the torch distance from the work piece during cutting."
msgstr ""

#. type: Table
#, no-wrap
msgid "Move Down"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital input; *optional.* +\n"
"             HAL pin name plasmac.move-down +\n"
"             Connected from the down output of the external THC control to a break out board input.\n"
"             This signal is used to control the Z axis in a downward motion and make necessary corrections to maintain the torch distance from the work piece during cutting."
msgstr ""

#. type: Table
#, no-wrap
msgid "Scribe Arming"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital output; *optional.* +\n"
"                       HAL pin name plasmac.scribe-arm +\n"
"                       Connected from a breakout board output to the scribe arming circuit.\n"
"\t\t\t\t\t   This signal is used to place the scribe into position on the work piece ."
msgstr ""

#. type: Table
#, no-wrap
msgid "Scribe On"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital output; *optional.* +\n"
"                   HAL pin name plasmac.scribe-on +\n"
"                   Connected from a breakout board output to the scribe-on circuit.\n"
"                   This signal is used to turn the scribing device on."
msgstr ""

#. type: Table
#, no-wrap
msgid "Laser On"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Digital output; *optional.* +\n"
"                  HAL pin name qtplasmac.laser_on +\n"
"                  This signal is used to turn the alignment laser on."
msgstr ""

#. type: Plain text
msgid ""
"Only one of either *Float Switch* or *Ohmic Probe* is required. If both are "
"used then *Float Switch* will be a fallback if *Ohmic Probe* is not sensed."
msgstr ""

#. type: Plain text
msgid ""
"If *Ohmic Probe* is used then *Ohmic Probe Enable* is required to be checked "
"on the QtPlasmaC GUI."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Breakaway Switch* is not mandatory because the *Float Switch* is treated the same as a breakaway when not probing. If they are two separate switches, and there are not enough inputs on the breakout board, they could be combined and connected as a *Float Switch*.\n"
msgstr ""

#. type: Plain text
msgid ""
"The minimum I/O requirement for a QtPlasmaC configuration to function are: "
"*Arc Voltage* input OR *Arc OK* input, *Float Switch* input, and *Torch On* "
"output. To reiterate, in this case QtPlasmaC will treat the float switch as "
"a breakaway switch when it is not probing."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Recommended Settings:"
msgstr ""

#. type: Plain text
msgid ""
"Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual "
"representation of the terms below."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_Z] MIN_LIMIT* should be just below top of the slats with allowances for float_switch_travel and over travel tolerance. For example, if the user's float switch takes 4mm (0.157\") to activate then set the Z minimum to 5mm (0.197\") plus an allowance for overrun (either calculated using the equation below or allow 5mm (0.2\") below the lowest slat.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_Z] MAX_LIMIT* should be the highest the user wants the Z axis to travel (it must not be lower than Z HOME_OFFSET).\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_Z] HOME* should be set to be approximately 5mm-10mm (0.2\"-0.4\") below the maximum limit.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Floating Head* - it is recommended that a floating head be used and that it has enough movement to allow for overrun during probing. Overrun can be calculated using the following formula:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o = 0.5 Ã a Ã (v Ã· a)^2\n"
msgstr ""

#. type: Plain text
msgid ""
"where: o = overrun, a = acceleration in units/sec2 and v = velocity in units/"
"sec."
msgstr ""

#. type: Plain text
msgid ""
"Metric example: given a Z axis MAX_ACCELERATION of 600mm/s^2^ and "
"MAX_VELOCITY of 60mm/s, the overrun would be 3mm."
msgstr ""

#. type: Plain text
msgid ""
"Imperial example: given a Z axis MAX_ACCELERATION of 24in/s^2^ and "
"MAX_VELOCITY of 2.4in/s, the overrun would be 0.12in."
msgstr ""

#. type: Plain text
msgid ""
"On machines that will utilize an ohmic probe as the primary method of "
"probing, it is highly recommended to install a switch on the floating head "
"as a backup means of stopping Z motion in the event of ohmic probe failure "
"due to dirty surfaces."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configuring"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC provides two configuration wizards which can be used to build a "
"machine configuration. The choice of these wizards is dependent on the "
"hardware used to control the machine."
msgstr ""

#. type: Plain text
msgid ""
"If the user wishes to use a Run In Place installation then prior to running "
"one of the following commands they will need to run the following command "
"from a terminal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "source ~/linuxcnc-dev/scripts/rip-environment\n"
msgstr ""

#. type: Plain text
msgid "If using a Package installation then no additional action is required."
msgstr ""

#. type: Plain text
msgid ""
"If using a parallel port, use the <<cha:stepconf-wizard, StepConf wizard>> "
"(enter the following command into a terminal window):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "stepconf\n"
msgstr ""

#. type: Plain text
msgid ""
"If using a Mesa Electronics board, use the <<cha:pncconf-wizard, PnCConf "
"wizard>> (enter the following command into a terminal window):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "pncconf\n"
msgstr ""

#. type: Plain text
msgid ""
"If using a Pico Systems board: + https://forum.linuxcnc.org/27-driver-"
"boards/14977-pico-systems-faq[This LinuxCNC forum thread] may be helpful."
msgstr ""

#. type: Plain text
msgid ""
"The machine specific settings are not described here, refer to the "
"documentation for the particular configuration wizard that is being used."
msgstr ""

#. type: Plain text
msgid "There are Linuxcnc forum sections available for these wizards:"
msgstr ""

#. type: Plain text
msgid "https://forum.linuxcnc.org/16-stepconf-wizard()[StepConf Wizard]"
msgstr ""

#. type: Plain text
msgid "https://forum.linuxcnc.org/39-pncconf[PnCConf Wizard]"
msgstr ""

#. type: Plain text
msgid ""
"Fill in the required entries to suit the machine wiring/breakout board "
"configuration."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC adds two pages to the LinuxCNC configuration wizards for QtPlasmaC "
"specific parameters, the two pages are QtPlasmaC options and <<qt_custom-"
"user-buttons, User Buttons>>. Complete each of the wizards QtPlasmaC page to "
"suit the machine that is being configured and the user button requirements."
msgstr ""

#. type: Plain text
msgid ""
"Note that PnCConf options allow user selection of Feed Override, Linear "
"Velocity, and Jog Increments whereas in StepConf these are automatically "
"calculated and set."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*PnCConf QtPlasmaC Options:*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_pncconf_screen.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*StepConf QtPlasmaC Options:*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_stepconf_options.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*QtPlasmaC User Buttons:*\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_pncconf_buttons.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*QtPlasmaC THCAD:*\n"
msgstr ""

#. type: Plain text
msgid ""
"The THCAD screen will only appear if a Plasma Encoder is selected in the "
"card screen."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_pncconf_thcad.png"
msgstr ""

#. type: Plain text
msgid "More information on <<qt_mesa-thcad, Mesa THCAD>>."
msgstr ""

#. type: Plain text
msgid ""
"When the configuration is complete, the wizard will save a copy of the "
"configuration that may be loaded and edited at a later time, a working "
"QtPlasmaC configuration will be created in the following directory: ~/"
"linuxcnc/configs/<machine_name>"
msgstr ""

#. type: Plain text
msgid ""
"The newly created QtPlasmaC configuration can be run by entering the "
"following command into a terminal window (*change \"<machine_name>\" to the "
"machine name entered into the configuration wizard*):"
msgstr ""

#. type: Plain text
msgid "For a package installation (Buildbot):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linuxcnc ~/linuxcnc/configs/<machine_name>/<machine_name>.ini\n"
msgstr ""

#. type: Plain text
msgid "For a run in place installation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "~/linuxcnc-dev/scripts/linuxcnc ~/linuxcnc/configs/<machine_name>/<machine_name>.ini\n"
msgstr ""

#. type: Plain text
msgid ""
"After running the above command LinuxCNC should be running with the "
"QtPlasmaC GUI visible."
msgstr ""

#. type: Plain text
msgid ""
"BEFORE PROCEEDING, THE USER SHOULD BE ABLE TO HOME THE MACHINE, ZERO EACH "
"AXIS, JOG ALL AXES TO SOFT LIMITS WITHOUT CRASHING, AND RUN TEST G-CODE "
"PROGRAMS WITHOUT ANY ERRORS."
msgstr ""

#. type: Plain text
msgid ""
"ONLY WHEN this criteria is met should the user proceed with the QtPlasmaC "
"initial setup."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to create a sim configuration using StepConf but it is not "
"possible to have tandem joints in the sim configuration."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Qt Dependency Errors"
msgstr ""

#. type: Plain text
msgid ""
"If any Qt dependency errors are encountered while attempting to run the "
"QtPlasmaC configuration, the user may need to run the QtVCP installation "
"script to resolve these issues."
msgstr ""

#. type: Plain text
msgid ""
"For a package installation (Buildbot) enter the following command in a "
"terminal window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "/usr/lib/python3/dist-packages/qtvcp/designer/install_script\n"
msgstr ""

#. type: Plain text
msgid ""
"For a run in place installation enter the following command in a terminal "
"window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "~/linuxcnc-dev/lib/python/qtvcp/designer/install_script\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Initial Setup"
msgstr ""

#. type: Plain text
msgid ""
"The following heights diagram will help the user visualize the different "
"heights involved in plasma cutting and how they are measured:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_heights_diagram.png"
msgstr ""

#. type: Plain text
msgid ""
"Click on the <<qt_parameters-tab, Parameters Tab>> to view the "
"*CONFIGURATION* section which shows the user settable parameters. It is "
"necessary to ensure every one of these settings is tailored to the machine."
msgstr ""

#. type: Plain text
msgid ""
"To set the Z axis DRO relative to the Z axis MINIMUM_LIMIT, the user should "
"perform the following steps. It is important to understand that in "
"QtPlasmaC, touching off the Z axis DRO has no effect on the Z axis position "
"while running a G-Code program. These steps simply allow the user to more "
"easily set the probe height as after performing the steps, the displayed Z "
"axis DRO value will be relative to Z axis MINIMUM_LIMIT."
msgstr ""

#. type: Plain text
msgid ""
"The user should be familiar with the recommended <<qt_z-settings, Z Axis "
"Settings>>."
msgstr ""

#. type: Plain text
msgid "Home the Z axis."
msgstr ""

#. type: Plain text
msgid ""
"Ensure there is nothing below the torch then jog the Z axis down until it "
"stops at the Z axis MINIMUM_LIMIT then click the 0 next to the Z axis DRO to "
"*Touch Off* with the Z axis selected to set the Z axis at zero offset. This "
"step only serves to allow the user to more easily visualize and adjust "
"*Probe Height* this value is measured from the Z axis MINIMUM_LIMIT up."
msgstr ""

#. type: Plain text
msgid "Home the Z axis again."
msgstr ""

#. type: Plain text
msgid ""
"If the machine is equipped with a float switch then the user will need to "
"set the offset in the *CONFIGURATION* section of the *PARAMETERS* tab. This "
"will be done by running a \"Probe Test\" cycle."
msgstr ""

#. type: Plain text
msgid ""
"Check that the Probe Speed and the Probe Height in the *CONFIGURATION* "
"section of the *PARAMETERS* tab are correct. QtPlasmaC can probe at the full "
"Z axis velocity so long as the machine has enough movement in the float "
"switch to absorb any overrun. If the machine is suitable, the user could set "
"the Probe Height to a value near the Z axis minimum and do all probing at "
"full speed."
msgstr ""

#. type: Plain text
msgid ""
"If the machine is not already homed and in the home position, home the "
"machine."
msgstr ""

#. type: Plain text
msgid "Place some material on the slats under the torch."
msgstr ""

#. type: Plain text
msgid "Press the *PROBE TEST* button."
msgstr ""

#. type: Plain text
msgid ""
"The Z axis will probe down, find the material then move up to the specified "
"*Pierce Height* as set by the currently selected material. The torch will "
"wait in this position for the time set in the <machine_name>.ini file. The "
"default probe test hold time is 10 seconds, this value may be edited in the "
"<machine_name>.ini file. After this the torch will return to the starting "
"height."
msgstr ""

#. type: Plain text
msgid ""
"Measure the distance between the material and the tip of the torch while the "
"torch is waiting at *Pierce Height*."
msgstr ""

#. type: Plain text
msgid ""
"If the measurement is greater than the *Pierce Height* of the currently "
"selected material, then reduce the \"Float Travel\" in the *CONFIGURATION* "
"section of the *PARAMETERS* tab by the difference between the measured value "
"and the specified value. If the measurement is less than *Pierce Height* of "
"the currently selected material, then increase the \"Float Travel\" in the "
"*CONFIGURATION* section of the *PARAMETERS* tab by the difference between "
"the specified value and the measured value."
msgstr ""

#. type: Plain text
msgid ""
"After the adjustments to the \"Float Travel\" have been made, repeat the "
"process from #4 above until the measured distance between the material and "
"the torch tip matches the *Pierce Height* of the currently selected material."
msgstr ""

#. type: Plain text
msgid ""
"CONGRATULATIONS! The user should now have a working QtPlasmaC Configuration."
msgstr ""

#. type: Plain text
msgid ""
"If the amount of time between the torch contacting the material and when the "
"torch moves up and comes to rest at the Pierce Height seems excessive, see "
"<<qt_probing, the probing section>> for a possible solution."
msgstr ""

#. type: Plain text
msgid ""
"IF USING A *Mesa Electronics THCAD* THEN THE *Voltage Scale* VALUE WAS "
"OBTAINED MATHEMATICALLY. IF THE USER INTENDS TO USE CUT VOLTAGES FROM A "
"MANUFACTURE'S CUT CHART THEN IT WOULD BE ADVISABLE TO DO MEASUREMENTS OF "
"ACTUAL VOLTAGES AND FINE TUNE THE *Voltage Scale* AND *Voltage Offset*."
msgstr ""

#. type: Plain text
msgid ""
"PLASMA CUTTING VOLTAGES CAN BE LETHAL, IF THE USER IS NOT EXPERIENCED IN "
"DOING THESE MEASUREMENTS GET SOME QUALIFIED HELP."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Migrating to QtPlasmac From PlasmaC (Axis or Gmoccapy)"
msgstr ""

#. type: Plain text
msgid ""
"There are two methods available to get from a working PlasmaC configuration "
"to a new QtPlasmaC configuration. These methods assume the user is on "
"LinuxCNC v2.9 or later, QtVCP is installed, and all dependency requirements "
"are satisfied."
msgstr ""

#. type: Plain text
msgid ""
"If there are Qt dependency errors, the user should run the <<qt-dependency, "
"QtVCP install script>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Quick Method"
msgstr ""

#. type: Plain text
msgid ""
"A quick method to move to QtPlasmaC from PlasmaC (loaded on top of either "
"Axis or Gmoccapy) is to use the plasmac2qt conversion program which will "
"attempt to create a new QtPlasmaC configuration from an existing PlasmaC ."
"ini file. This program will convert the user's parameters, settings, and "
"materials from the previous PlasmaC configuration and create a new QtPlasmaC "
"configuration folder in the ~/linuxcnc/configs folder."
msgstr ""

#. type: Plain text
msgid ""
"This methods will keep the original PlasmaC config as a backup with _plasmac "
"and a time stamp appended to the directory name."
msgstr ""

#. type: Plain text
msgid ""
"To run the plasmac2qt conversion program, use the following instructions:"
msgstr ""

#. type: Plain text
msgid ""
"For a package installation (Buildbot) enter the following line in a terminal "
"window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "qtplasmac-plasmac2qt\n"
msgstr ""

#. type: Plain text
msgid ""
"For a run in place installation enter the following lines in terminal window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"source ~/linuxcnc-dev/scripts/rip-environment\n"
"qtplasmac-plasmac2qt\n"
msgstr ""

#. type: Plain text
msgid "The following screen will be displayed:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_plasmac2qt.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Mandatory Settings*\n"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Field"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Description"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Examples*"
msgstr ""

#. type: Table
#, no-wrap
msgid "INI FILE IN EXISTING PLASMAC CONFIG"
msgstr ""

#. type: Table
#, no-wrap
msgid "This is the .ini file of the PlasmaC config that requires migrating."
msgstr ""

#. type: Table
#, no-wrap
msgid "<machine_name>.ini"
msgstr ""

#. type: Table
#, no-wrap
msgid "MONITOR ASPECT RATIO"
msgstr ""

#. type: Table
#, no-wrap
msgid "This is the <<qt_formats, aspect ratio format>> for the GUI."
msgstr ""

#. type: Table
#, no-wrap
msgid "16:9"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "ESTOP"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Selects the required Estop type based on the following criteria: +\n"
"      0 - Estop is an indicator only. +\n"
"      1 - Estop indicator is hidden. +\n"
"      2 - Estop is a button."
msgstr ""

#. type: Table
#, no-wrap
msgid "ESTOP:1"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Optional Settings*\n"
msgstr ""

#. type: Plain text
msgid "Leave these blank if they are not used/required."
msgstr ""

#. type: Table
#, no-wrap
msgid "LASER ALIGNMENT X OFFSET"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Required if using a laser crosshair for sheet alignment. +\n"
"          Refers to the X axis offset from the torch center."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"*Metric Example:*  54.7 +\n"
"                                                             *Imperial Example:*  2.15"
msgstr ""

#. type: Table
#, no-wrap
msgid "LASER ALIGNMENT Y OFFSET"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Required if using a laser crosshair for sheet alignment. +\n"
"          Refers to the Y axis offset from the torch center."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"*Metric Example:*  26.3 +\n"
"                                                             *Imperial Example:*  1.03"
msgstr ""

#. type: Table
#, no-wrap
msgid "CAMERA ALIGNMENT X OFFSET:"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Required if using a camera for sheet alignment. +\n"
"           Refers to the X axis offset from the torch center."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"*Metric Example:*  -54.7 +\n"
"                                                             *Imperial Example:*  -2.15"
msgstr ""

#. type: Table
#, no-wrap
msgid "CAMERA ALIGNMENT Y OFFSET:"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Required if using a camera for sheet alignment. +\n"
"           Refers to the Y axis offset from the torch center."
msgstr ""

#. type: Plain text
msgid "After filling in the appropriate entries, press *CONVERT*."
msgstr ""

#. type: Plain text
msgid ""
"This method will not change any existing debounce components to the new "
"dbounce component."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "New Base Config Method"
msgstr ""

#. type: Plain text
msgid ""
"This method to move to QtPlasmaC from PlasmaC (loaded on top of either Axis "
"or Gmoccapy) is to use a <<configuring, configuration wizard>> to create a "
"new configuration. This method then allows changing of the base machine "
"configuration at a later date via the configuration wizard provided that the "
"base ini and base hal files have not been edited."
msgstr ""

#. type: Plain text
msgid ""
"This method requires that the user take note of all HAL pins used in the "
"existing config so they can be entered into the configuration wizard. Any "
"custom HAL commands will also need to be noted and added manually to either "
"the custom.hal file or the custom_postgui.hal file which will be created by "
"the configuration wizard."
msgstr ""

#. type: Plain text
msgid ""
"After using the wizard, the user can then run a conversion program "
"(cfg2prefs) to convert the parameters, settings, and materials from the "
"previous PlasmaC configuration to the new QtPlasmaC configuration. This tool "
"should be used immediately after the user has created a new QtPlasmaC "
"configuration."
msgstr ""

#. type: Plain text
msgid ""
"Prior to running this conversion program, it is mandatory that the user have "
"both an existing PlasmaC configuration and a new QtPlasmaC configuration. "
"This program WILL overwrite the existing QtPlasmaC preferences and materials "
"files, and should be used with caution if it is not being run on a new "
"QtPlasmaC configuration."
msgstr ""

#. type: Plain text
msgid ""
"The program will create a time stamped backup of the original preferences "
"file and the existing materials file (if it exists)."
msgstr ""

#. type: Plain text
msgid ""
"It will read the existing <machine_name>_config.cfg, <machine_name>_run.cfg, "
"<machine_name>_wizards.cfg, and plasmac_stats.var files and write them to an "
"existing qtplasmac.prefs file. It will also copy the <machine_name>_material."
"cfg file to the existing QtPlasmaC configuration."
msgstr ""

#. type: Plain text
msgid ""
"To run the cfg2prefs conversion program, use the following instructions:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "qtplasmac-cfg2prefs\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"source ~/linuxcnc-dev/scripts/rip-environment\n"
"qtplasmac-cfg2prefs\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_cfg2prefs.png"
msgstr ""

#. type: Plain text
msgid ""
"Select the .ini file of the old PlasmaC configuration, select the .ini file "
"of the new QtPlasmaC configuration, then press *CONVERT*."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Other QtPlasmaC Setup Considerations"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Lowpass Filter"
msgstr ""

#. type: Plain text
msgid ""
"The plasmac HAL component has a built in lowpass filter that if used is "
"applied to the *plasmac.arc-voltage-in* input pin to filter any noise that "
"could cause erroneous voltage readings. The lowpass filter should only be "
"used after using Halscope to determine the required frequency and whether "
"the amplitude of the noise is large enough to cause any issues. For most "
"plasma machines lowpass is not required and should not be used unless it is "
"required."
msgstr ""

#. type: Plain text
msgid ""
"The HAL pin assigned to this filter is *plasmac.lowpass-frequency* and is "
"set to 0 (disabled) by default. To apply a lowpass filter to the arc-"
"voltage, the user would edit the following entry in the custom.hal file in "
"the machine's configuration directory to add the appropriate cutoff "
"frequency as measured in Hertz (Hz)."
msgstr ""

#. type: Plain text
msgid "For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.lowpass-frequency 100\n"
msgstr ""

#. type: Plain text
msgid "The above example would give a cutoff frequency of 100Hz."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Contact Bounce"
msgstr ""

#. type: Plain text
msgid ""
"Contact bounce from mechanical relays, switches, or external interference "
"may cause some inconsistent behavior of the following switches:"
msgstr ""

#. type: Plain text
msgid "Float Switch"
msgstr ""

#. type: Plain text
msgid "Ohmic Probe"
msgstr ""

#. type: Plain text
msgid "Breakaway Switch"
msgstr ""

#. type: Plain text
msgid "Arc OK (for modes 1 & 2)"
msgstr ""

#. type: Plain text
msgid ""
"Due to the fact that the software is capable of sampling rates faster than "
"the contact bounce period, it is possible that the software may see contact "
"bounce as several changes in input states occurring in a very small time "
"period, and incorrectly interpret this as a very quick on-off of the input. "
"One method of mitigating contact bounce is to \"debounce\" the input. To "
"summarize debounce, it requires the input state to be stable at the opposite "
"state of the output state for consecutive delay periods before changing the "
"state of the output."
msgstr ""

#. type: Plain text
msgid ""
"Debounce delay periods can be changed by editing the appropriate debounce "
"value in the custom.hal file in the <machine_name> config folder."
msgstr ""

#. type: Plain text
msgid ""
"Each increment of delay adds one servo thread cycle to the debounce time. "
"For example: given a servo thread period of 1000000 (measured in nano "
"seconds), a debounce delay of 5 would equate to 5000000ns, or 5ms."
msgstr ""

#. type: Plain text
msgid ""
"For the Float and Ohmic switches this equates to a 0.001mm (0.00004\") "
"increase in the probed height result."
msgstr ""

#. type: Plain text
msgid ""
"It is recommended to keep the debounce values as low as possible while still "
"achieving consistent results. Using link:http://linuxcnc.org/docs/2.8/html/"
"hal/tutorial.html#_halscope[Halscope] to plot the inputs is a good way to "
"establish the correct value."
msgstr ""

#. type: Plain text
msgid ""
"For QtPlasmaC installations, debounce is achieved by using the HAL link:"
"http://linuxcnc.org/docs/2.8/html/man/man9/dbounce.9.html[dbounce component] "
"which is a later alternative to the original debounce component. This new "
"version allows for the loading and naming of individual debounce instances "
"and is compatible with Twopass HAL file processing."
msgstr ""

#. type: Plain text
msgid ""
"All four signals above have an individual debounce component so the debounce "
"periods can be catered individually to each input. Any changes made to these "
"values in the custom.hal file will not be overwritten by later updates of "
"QtPlasmaC."
msgstr ""

#. type: Plain text
msgid ""
"The default delay for all four inputs is five servo thread periods. In most "
"cases this value will work quite well. If any of the inputs do not use "
"mechanical switches, it may be possible to either reduce or remove the delay "
"for those inputs."
msgstr ""

#. type: Plain text
msgid ""
"If debounce is required for other equipment like home or limit switches etc. "
"then more dbounce components may added in any of the HAL files without any "
"regard to the signals listed here."
msgstr ""

#. type: Plain text
msgid ""
"More information on contact bounce can be seen on page IX of link:https://"
"www.finder-relais.net/en/Finder-general-technical-information-en.pdf[Finder "
"Relays General Technical Information]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Contact Load"
msgstr ""

#. type: Plain text
msgid ""
"Mechanical relays and switches usually require a minimum current passing "
"through the contacts for reliable operation. This current varies with the "
"material that the contacts in the device are made from."
msgstr ""

#. type: Plain text
msgid ""
"Depending on the specified minimum contact current and the current drawn by "
"the input device there may be a need to provide a method to increase the "
"current through the contacts."
msgstr ""

#. type: Plain text
msgid ""
"Most relays using gold contacts will not require any additional current for "
"reliable operation."
msgstr ""

#. type: Plain text
msgid ""
"There are two different methods available to provide this minimum current if "
"it is required:"
msgstr ""

#. type: Plain text
msgid "A 0.1Î¼F film capacitor placed across the contacts."
msgstr ""

#. type: Plain text
msgid "A 1200Î© 1W resistor across the load (see calculations below)."
msgstr ""

#. type: Plain text
msgid ""
"Schematics are shown at <<qt_contact-load-schematics, contact load "
"schematics>>."
msgstr ""

#. type: Plain text
msgid ""
"More information on contact switching load can be seen on page III of link:"
"https://www.finder-relais.net/en/Finder-general-technical-information-en."
"pdf[Finder Relays General Technical Information]"
msgstr ""

#. type: Plain text
msgid "[underline]*Calculations:*"
msgstr ""

#. type: Plain text
msgid ""
"If using a Mesa card, the input resistance could be 5000Î© (7i96) or 10000Î© "
"(7i76E), giving a contact current of 4.8mA or 2.4mA assuming a supply "
"voltage of 24V (I = V/R)."
msgstr ""

#. type: Plain text
msgid ""
"As an example, the typical relay used in a Hypertherm Powermax 65 plasma "
"cutter (link:https://www.te.com/commerce/DocumentDelivery/DDEController?"
"Action=showdoc&DocId=Data+Sheet%7F1308242_T77%7F1011%7Fpdf%7FEnglish"
"%7FENG_DS_1308242_T77_1011.pdf%7F1-1393194-0[TE T77S1D10-24]) requires a "
"minimum contact load of 100mA @ 5VDC which will dissipate 0.5W (P = I * V). "
"If using a 24VDC power supply this would then equate to a minimum current of "
"20.8mA. Because there is less current drawn by the Mesa input than is "
"required by the relay there needs to be an increase in the current."
msgstr ""

#. type: Plain text
msgid "The resistance can be calculated using R = Vs / (Im - Ii) where:"
msgstr ""

#. type: Plain text
msgid "R = calculated resistance"
msgstr ""

#. type: Plain text
msgid "Vs = supply voltage"
msgstr ""

#. type: Plain text
msgid "Im = minimum current required"
msgstr ""

#. type: Plain text
msgid "Ii = input current"
msgstr ""

#. type: Plain text
msgid ""
"Using a 7i76E with an input current of 2.4mA gives a calculated value of "
"1304Î©. (24 / (.0208 - .0024) This could then be rounded down to a commonly "
"available 1200Î© resistor giving a small safety margin."
msgstr ""

#. type: Plain text
msgid "The power dissipation can by calculated using P = Vs^2^ / Rs where:"
msgstr ""

#. type: Plain text
msgid "P = power"
msgstr ""

#. type: Plain text
msgid "Rs = selected resistance"
msgstr ""

#. type: Plain text
msgid ""
"This gives a value of 0.48W. This could then be rounded up to 1W, giving a "
"good safety margin. The final selection would be a 1200Î© 1W resistor. Note "
"that this resistor could be used on either the 7i96 or the 7i76E."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Desktop Launcher"
msgstr ""

#. type: Plain text
msgid ""
"If a link to the launch the configuration was not created when creating the "
"config, the user could create a desktop launcher to the config by right "
"clicking on the desktop and selecting Create Launcher or similar. This will "
"bring up a dialog box to create a launcher. Give the icon a nice short name, "
"enter anything for the command and click OK."
msgstr ""

#. type: Plain text
msgid ""
"After the launcher appears on the desktop, right click on it and then edit "
"it with the user's editor of choice. Edit the file so it looks similar to:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[Desktop Entry]\n"
"Comment=\n"
"Terminal=false\n"
"Name=LinuxCNC\n"
"Exec=sh -c \"linuxcnc $HOME/linuxcnc/configs/<machine_name>/<machine_name>.ini\"\n"
"Type=Application\n"
"Icon=/usr/share/pixmaps/linuxcncicon.png\n"
msgstr ""

#. type: Plain text
msgid ""
"If the user would like a terminal window to open behind the GUI window then "
"change the Terminal line to:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "Terminal=true\n"
msgstr ""

#. type: Plain text
msgid "Displaying a terminal can be handy for error and information messages."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "QtPlasmaC Files"
msgstr ""

#. type: Plain text
msgid ""
"After a successful QtPlasmaC installation, the following files are created "
"in the configuration directory:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Filename"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Function*"
msgstr ""

#. type: Table
#, no-wrap
msgid "A configuration file for the machine."
msgstr ""

#. type: Table
#, no-wrap
msgid "<machine_name>.ha"
msgstr ""

#. type: Table
#, no-wrap
msgid "A HAL for the machine."
msgstr ""

#. type: Table
#, no-wrap
msgid "custom.ha"
msgstr ""

#. type: Table
#, no-wrap
msgid "A HAL file for user customization."
msgstr ""

#. type: Table
#, no-wrap
msgid "custom_postgui.ha"
msgstr ""

#. type: Table
#, no-wrap
msgid "A HAL file for user customization which is run after the GUI has initialized."
msgstr ""

#. type: Table
#, no-wrap
msgid "shutdown.ha"
msgstr ""

#. type: Table
#, no-wrap
msgid "A HAL file which is run during the shutdown sequence."
msgstr ""

#. type: Table
#, no-wrap
msgid "tool.tb"
msgstr ""

#. type: Table
#, no-wrap
msgid "A tool table used to store offset information for additional tools (scribe, etc.) used by the QtPlasmaC configuration."
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac"
msgstr ""

#. type: Table
#, no-wrap
msgid "A link to the directory containing common qtplasmac support files."
msgstr ""

#. type: Table
#, no-wrap
msgid "backup"
msgstr ""

#. type: Table
#, no-wrap
msgid "A directory for backups of config files."
msgstr ""

#. type: Plain text
msgid ""
"<machine_name> is whatever name the user entered into the \"Machine Name\" "
"field of the configuration wizard program NOTE: Custom commands are allowed "
"in custom.hal and the custom_postgui.hal files as they are not overwritten "
"during updates."
msgstr ""

#. type: Plain text
msgid ""
"After running a new configuration for the first time the following files "
"will be created in the configuration directory:"
msgstr ""

#. type: Table
#, no-wrap
msgid "<machine_name>_material.cfg"
msgstr ""

#. type: Table
#, no-wrap
msgid "A file for storing the material settings from the MATERIAL section of the <<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.pref"
msgstr ""

#. type: Table
#, no-wrap
msgid "A file containing the users preferences and parameters. It also stores the current color configuration."
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.qs"
msgstr ""

#. type: Table
#, no-wrap
msgid "This file is used to store the stylesheet for the currently loaded session of QtPlasmaC."
msgstr ""

#. type: Plain text
msgid ""
"The configuration files (<machine_name>.ini and <machine_name>.hal) that are "
"created by configuration wizard are notated to explain the requirements to "
"aid in manual manipulation of these configurations. They may be edited with "
"any text editor."
msgstr ""

#. type: Plain text
msgid "The .prefs file is plain text and may be edited with any text editor."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "INI File"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has some specific <machine_name>.ini file variables as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[QTPLASMAC]* Section\n"
msgstr ""

#. type: Plain text
msgid "These variables are optional."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MODE                = 0 (use external arc voltage in for Arc Voltage)\n"
"                        (use external arc voltage in for Arc OK)\n"
"                    = 1 (use external arc voltage in for Arc Voltage)\n"
"                        (use external Arc OK in for Arc OK)\n"
"                    = 2 (Use external Arc OK in for Arc OK)\n"
"                        (use external up/down for THC)\n"
"                    (0 is the default if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"ESTOP_TYPE          = 0 (estop is a indicator only)\n"
"                    = 1 (estop is hidden)\n"
"                    = 2 (estop is a button)\n"
"                    (0 is the default if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"LASER_TOUCHOFF      = X10.0000  Y0.0000\n"
"                      (X & Y offsets if a laser is installed for alignment)\n"
"                    (the default is none if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"CAMERA_TOUCHOFF     = X-10.0000  Y0.0000\n"
"                      (X & Y offsets if a camera is installed for alignment)\n"
"                    (the default is none if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"PM_PORT             = (port name for RS485 e.g. /dev/ttyUSB0)\n"
"                    (the default is none if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"BUTTON_n_NAME       = <NAME> (the name of a custom user button, n = 1~20)\n"
"BUTTON_n_CODE       = <CODE> (the code run by a custom user button, n= 1~20)\n"
"                    (the default is none if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"DRO_POSITION        = top (move the DRO to the top in the 16:9 and 4:3 formats)\n"
"                    (the default is bottom if not specified)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"HIDE_RUN            = 1 (hide the cycle start button)\n"
"HIDE_PAUSE          = 1 (hide the cycle pause button)\n"
"HIDE_ABORT          = 1 (hide the cycle stop button)\n"
"                    (the default is don't hide if not specified)\n"
msgstr ""

#. type: Plain text
msgid ""
"MODE and ESTOP_TYPE will default to 0 if not specified and all other "
"variables are optional."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[FILTER]* Section\n"
msgstr ""

#. type: Plain text
msgid "These variables are mandatory."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"PROGRAM_EXTENSION   = .ngc,.nc,.tap G-Code File (*.ngc, *.nc, *.tap)\n"
"ngc                     = ./qtplasmac/qtplasmac_gcode.py\n"
"nc                      = ./qtplasmac/qtplasmac_gcode.py\n"
"tap                     = ./qtplasmac/qtplasmac_gcode.py\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[RS274NGC]* Section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"RS274NGC_STARTUP_CODE = o<metric_startup> call (machine startup G-Code)\n"
"SUBROUTINE_PATH       = ./:./qtplasmac:../../nc_files/subroutines (./ must be in this path)\n"
"USER_M_PATH           = ./:./qtplasmac (for M190 material change)\n"
msgstr ""

#. type: Plain text
msgid ""
"SEE <<qt_path-tolerance, PATH TOLERANCE>> FOR RS274NGC_STARTUP_CODE "
"INFORMATION RELATED TO G64."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[HAL]* Section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"HALFILE = HALUI   = halui (required)\n"
"HALFILE = <machine_name>.hal (the machine HAL file)\n"
"HALFILE = plasmac.tcl (the standard QtPlasmaC HAL file )\n"
"HALFILE = custom.hal (Users custom HAL commands)\n"
"POSTGUI_HALFILE = postgui_call_list.hal (required)\n"
"SHUTDOWN = shutdown.hal (shutdown HAL commands)\n"
msgstr ""

#. type: Plain text
msgid ""
"The user could place custom HAL commands in the custom.hal file as this file "
"is not overwritten by QtPlasmaC updates."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[DISPLAY]* Section\n"
msgstr ""

#. type: Plain text
msgid "This variable is mandatory."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"DISPLAY = qtvcp qtplasmac      (use 16:9 resolution)\n"
"        = qtvcp qtplasmac_9x16 (use 9:16 resolution)\n"
"        = qtvcp qtplasmac_4x3  (use 4:3 resolution)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[TRAJ]* Section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SPINDLES = 3\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_X]* Section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MAX_VELOCITY     = double the value in the corresponding joint\n"
"MAX_ACCELERATION = double the value in the corresponding joint\n"
"OFFSET_AV_RATIO  = 0.5\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_Y]* Section\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*[AXIS_Z]* Section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"MIN_LIMIT        = the top of the table's slats or just below\n"
"MAX_VELOCITY     = double the value in the corresponding joint\n"
"MAX_ACCELERATION = double the value in the corresponding joint\n"
"OFFSET_AV_RATIO  = 0.5\n"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC uses the LinuxCNC External Offsets feature for all Z axis motion, "
"and for moving the X and/or Y axis for a consumable change while paused. For "
"more information on this feature, please read <<cha:external-offsets,"
"External Axis Offsets>> in the LinuxCNC documentation."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "QtPlasmaC GUI Overview"
msgstr ""

#. type: Plain text
msgid ""
"The following sections will give a general overview of the QtPlasmaC layout."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "MAIN Tab"
msgstr ""

#. type: Plain text
msgid ""
"Screenshot example of the QtPlasmaC <<qt_main-tab, MAIN Tab>> in *16:9* "
"aspect ratio:"
msgstr ""

#. type: Plain text
msgid ""
"Some functions/features are only used for particular modes and are not "
"displayed if they are not required by the chosen QtPlasmaC mode."
msgstr ""

#. type: Plain text
msgid "[underline]*PREVIEW WINDOW*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Materia"
msgstr ""

#. type: Table
#, no-wrap
msgid "The top header is clickable in this area to reveal a drop down menu. It is used to manually select the current material cut parameters. If there are no materials in the material file then only the default material will be displayed."
msgstr ""

#. type: Table
#, no-wrap
msgid "VEL:"
msgstr ""

#. type: Table
#, no-wrap
msgid "This displays the actual cut feed rate the table is moving at."
msgstr ""

#. type: Table
#, no-wrap
msgid "FR:"
msgstr ""

#. type: Table
#, no-wrap
msgid "If \"View Material\" is selected on the PARAMETERS tab, this displays the currently selected material's Feed Rate."
msgstr ""

#. type: Table
#, no-wrap
msgid "PH:"
msgstr ""

#. type: Table
#, no-wrap
msgid "If \"View Material\" is selected on the PARAMETERS tab, this displays the currently selected material's Pierce Height."
msgstr ""

#. type: Table
#, no-wrap
msgid "PD:"
msgstr ""

#. type: Table
#, no-wrap
msgid "If \"View Material\" is selected on the PARAMETERS tab, this displays the currently selected material's Pierce Delay."
msgstr ""

#. type: Table
#, no-wrap
msgid "CH:"
msgstr ""

#. type: Table
#, no-wrap
msgid "If \"View Material\" is selected on the PARAMETERS tab, this displays the currently selected material's Cut Height."
msgstr ""

#. type: Table
#, no-wrap
msgid "CA:"
msgstr ""

#. type: Table
#, no-wrap
msgid "If \"View Material\" is selected on the PARAMETERS tab, and RS485 communications are enabled, this displays the currently selected material's Cut Amperage."
msgstr ""

#. type: Table
#, no-wrap
msgid "This button changes the preview to an isometric view."
msgstr ""

#. type: Table
#, no-wrap
msgid "Z"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button changes the preview to a top down view."
msgstr ""

#. type: Table
#, no-wrap
msgid "â"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button pans the preview right."
msgstr ""

#. type: Table
#, no-wrap
msgid "â"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button pans the preview left."
msgstr ""

#. type: Table
#, no-wrap
msgid "â"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button pans the preview up."
msgstr ""

#. type: Table
#, no-wrap
msgid "â"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button pans the preview down."
msgstr ""

#. type: Table
#, no-wrap
msgid "This button zooms the preview."
msgstr ""

#. type: Table
#, no-wrap
msgid "-"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button clears the live plot."
msgstr ""

#. type: Plain text
msgid "[underline]*MACHINE*"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"If ESTOP_TYPE = 0 in the <machine_name>.ini file, this button becomes an indicator of the hardware ESTOP's status only. +\n"
"If ESTOP_TYPE = 1 in the <machine_name>.ini file, this button will not be visible. +\n"
"If ESTOP_TYPE = 2 in the <machine_name>.ini file, this button will act as a GUI ESTOP. +\n"
"If ESTOP_TYPE is omitted from the <machine_name>.ini file, this button will default to being an indicator of the hardware ESTOP's status only."
msgstr ""

#. type: Table
#, no-wrap
msgid "POWER"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button turns the GUI on and allows QtPlasmaC/LinuxCNC to control the hardware."
msgstr ""

#. type: Table
#, no-wrap
msgid "CYCLE START"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button starts the cycle for any loaded G-Code file."
msgstr ""

#. type: Table
#, no-wrap
msgid "CYCLE PAUSE"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button pauses the cycle for any loaded G-Code file. +\n"
"If a cycle is paused, this button will display *CYCLE RESUME* and flash. +\n"
"Pressing *CYCLE RESUME* will resume the cycle."
msgstr ""

#. type: Table
#, no-wrap
msgid "CYCLE STOP"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button stops any actively running or paused cycle. +\n"
"This includes: +\n"
"- G-Code Programs +\n"
"- Torch pulse if the pulse was started during *CYCLE PAUSE* (this will cancel the paused G-Code program execution as well) +\n"
"- Probe Test +\n"
"- Framing +\n"
"- Manual Cut"
msgstr ""

#. type: Table
#, no-wrap
msgid "FEED"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This slider overrides the feed rate for all feed moves. +\n"
"Any value other than 100% will cause the label to flash. +\n"
"Clicking the label will return the slider to 100%."
msgstr ""

#. type: Table
#, no-wrap
msgid "RAPID"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This slider overrides the rapid rate for all rapid moves. +\n"
"Any value other than 100% will cause the label to flash. +\n"
"Clicking the label will return the slider to 100%."
msgstr ""

#. type: Table
#, no-wrap
msgid "JOG"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This slider sets the jog rate. +\n"
"Clicking the label will return the slider to the default linear velocity as set in the <machine_name).ini file."
msgstr ""

#. type: Plain text
msgid "[underline]*BUTTONS*"
msgstr ""

#. type: Plain text
msgid ""
"The Button Panel contains buttons useful for the operation of the machine."
msgstr ""

#. type: Plain text
msgid ""
"The *EDIT* and *MDI* buttons are permanent, all other buttons are user "
"programmable in the <machine_name>.ini file."
msgstr ""

#. type: Plain text
msgid ""
"See <<qt_custom-user-buttons, custom user buttons>> for detailed information "
"on custom user buttons."
msgstr ""

#. type: Table
#, no-wrap
msgid "EDIT"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button opens a G-Code editor for the currently loaded program."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button places QtPlasmaC into Manual Data Input mode which will display the MDI HISTORY and an entry box over top of the G-Code window. +\n"
"Once pressed, this button will display \"MDI CLOSE\". +\n"
"Pressing *MDI CLOSE* will close the MDI."
msgstr ""

#. type: Table
#, no-wrap
msgid "OHMIC TEST"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button will enable the Ohmic Probe Enable output signal and if the Ohmic Probe input is sensed, the LED indicator in the SENSOR Panel will light. +\n"
"The main purpose of this is to allow a quick test for a shorted torch tip."
msgstr ""

#. type: Table
#, no-wrap
msgid "PROBE TEST"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will initiate a <<qt_probe-test, Probe Test>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "SINGLE CUT"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will show the dialog box to start an automatic <<qt_single-cut, Single Cut>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "NORMAL CUT"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will toggle between <<qt_cut-types, Cut Types>> (NORMAL CUT and PIERCE ONLY)."
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCH PULSE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will initiate a <<qt_button-torch, Torch Pulse>>."
msgstr ""

#. type: Plain text
msgid "[underline]*ARC*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Displays the actual arc voltage."
msgstr ""

#. type: Table
#, no-wrap
msgid "OK"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates the status of the Arc OK signal."
msgstr ""

#. type: Table
#, no-wrap
msgid "Each press of this button will raise the target voltage by the THC Threshold voltage (The distance changed will be Height Per Volt * THC Threshold voltage)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Each press of this button will lower the target voltage by the THC Threshold voltage (The distance changed will be Height Per Volt * THC Threshold voltage)."
msgstr ""

#. type: Table
#, no-wrap
msgid "OVERRIDE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Clicking this label will return any voltage override to 0.00."
msgstr ""

#. type: Plain text
msgid "[underline]*CONTROL*"
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCH ON"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates the status of the Torch On output signal."
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCH ON ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This box toggles between Enabling and Disabling the torch. +\n"
"This box defaults to unfilled (disabled) when QtPlasmaC is first run. +\n"
"This box must be filled to change it to \"Torch Enabled\" before material cutting can commence. +\n"
"If this box is not filled, then running a loaded program will cause the machine to run the cycle without firing the torch. This is sometimes referred to as a \"dry run\"."
msgstr ""

#. type: Table
#, no-wrap
msgid "VELOCITY A/DIVE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that the THC is locked at the current height due to the cut velocity falling below the VAD Threshold percentage set on the PARAMETERS tab."
msgstr ""

#. type: Table
#, no-wrap
msgid "VELOCITY A/DIVE ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This box toggles between Enabling and Disabling VELOCITY A/DIVE."
msgstr ""

#. type: Table
#, no-wrap
msgid "VOID A/DIVE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that the THC is locked due to a void being sensed."
msgstr ""

#. type: Table
#, no-wrap
msgid "VOID A/DIVE ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This box toggles between Enabling and Disabling VOID A/DIVE."
msgstr ""

#. type: Table
#, no-wrap
msgid "MESH MODE"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This box will enable or disable <<qt_mesh-mode, Mesh Mode>> for the cutting of expanded metal. This check box may be enabled or disabled at any time during normal cutting. +\n"
"Mesh mode: +\n"
"- Will require an Arc OK signal to start machine motion. +\n"
"- Will disable the THC. +\n"
"- Will not stop machine motion if the Arc OK signal is lost. +\n"
"- Will automatically select CPA mode if PowerMax communications are being used. +\n"
"For more information see <<qt_mesh-mode, Mesh Mode (expanded metal)>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "AUTO VOLTS"
msgstr ""

#. type: Table
#, no-wrap
msgid "This box will enable or disable <<qt_thc, Auto Volts>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "IGNORE OK"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This box will determine if QtPlasmaC ignores the Arc OK signal. This check box may be enabled or disabled at any time during normal cutting. Additionally this mode may be enabled or disabled via proper M codes in a running program. +\n"
"Ignore Arc OK mode: +\n"
"- Will not require an Arc OK signal be received before starting machine motion after the \"Torch On\" signal is given. +\n"
"- Will disable the THC. +\n"
"- Will not stop machine motion if the Arc OK signal is lost. +\n"
"For more information see <<qt_ignore-ok, Ignore Arc Ok>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "OHMIC PROBE"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This box enables or disables the ohmic probe input. +\n"
"If the Ohmic Probe input is disabled, the Ohmic Probe LED will still show the status of the probe input, but the Ohmic Probe results will be ignored."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RS485"
msgstr ""

#. type: Table
#, no-wrap
msgid "This box will enable or disable the communications to a PowerMax. This button is only visible if a PM_PORT is configured in the [QTPLASMAC] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "Statu"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When PowerMax communications are enabled, this will display one of the following: +\n"
"*CONNECTING*, *CONNECTED*, *COMMS ERROR*, or a *Fault Code*. +\n"
"For more information, see the <<qt_pm_comms, PowerMax Communications>> section."
msgstr ""

#. type: Plain text
msgid "[underline]*SENSOR*"
msgstr ""

#. type: Table
#, no-wrap
msgid "FLOAT"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that the float switch is activated."
msgstr ""

#. type: Table
#, no-wrap
msgid "OHMIC"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that the probe has sensed the material."
msgstr ""

#. type: Table
#, no-wrap
msgid "BREAK"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that the torch breakaway sensor is activated."
msgstr ""

#. type: Plain text
msgid "[underline]*THC*"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This box determines whether the THC will be enabled or disabled during a cut."
msgstr ""

#. type: Table
#, no-wrap
msgid "ENABLED"
msgstr ""

#. type: Table
#, no-wrap
msgid "This LED indicates whether the THC is enabled or disabled."
msgstr ""

#. type: Table
#, no-wrap
msgid "ACTIVE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This LED indicates that the THC is actively controlling the Z axis."
msgstr ""

#. type: Table
#, no-wrap
msgid "UP"
msgstr ""

#. type: Table
#, no-wrap
msgid "This LED indicates that the THC is commanding the Z axis to raise."
msgstr ""

#. type: Table
#, no-wrap
msgid "DOWN"
msgstr ""

#. type: Table
#, no-wrap
msgid "This LED indicates that the THC is commanding the Z axis to lower."
msgstr ""

#. type: Plain text
msgid "[underline]*JOGGING*"
msgstr ""

#. type: Plain text
msgid ""
"During Paused Motion, this section will become <<qt_cut-recovery, CUT "
"RECOVERY>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "CONTINUOUS"
msgstr ""

#. type: Table
#, no-wrap
msgid "This drop down button will change the jog increment. Options are determined by the values in the [DISPLAY] section of the <machine_name>.ini file and begin with the label \"INCREMENTS =\"."
msgstr ""

#. type: Table
#, no-wrap
msgid "FAST"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will toggle between FAST which is the default linear velocity in the <machine_name>.ini file or SLOW which is 10% of the default value."
msgstr ""

#. type: Table
#, no-wrap
msgid "Y"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the Y axis in the positive direction."
msgstr ""

#. type: Table
#, no-wrap
msgid "Y-"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the Y axis in the negative direction."
msgstr ""

#. type: Table
#, no-wrap
msgid "X"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the X axis in the positive direction."
msgstr ""

#. type: Table
#, no-wrap
msgid "X-"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the X axis in the negative direction."
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the Z axis in the positive direction."
msgstr ""

#. type: Table
#, no-wrap
msgid "Z-"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button moves the Z axis in the negative direction."
msgstr ""

#. type: Plain text
msgid "[underline]*CUT RECOVERY*"
msgstr ""

#. type: Plain text
msgid ""
"During Paused Motion, this section will be shown on top of the JOGGING "
"panel. The following section will cover each button encountered in this "
"panel. Please see <<qt_cut-recovery, CUT RECOVERY>> for a detailed "
"description of the cut recovery functionality."
msgstr ""

#. type: Table
#, no-wrap
msgid "PAUSED MOTION FEED SLIDER"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"In the event of a paused program, this interface allows X/Y motion to follow the programmed path in the reverse or forward direction. +\n"
"This slider's range is from 1%-100% of the Cut Feed Rate for the currently selected material."
msgstr ""

#. type: Table
#, no-wrap
msgid "This displays the paused motion feed rate."
msgstr ""

#. type: Table
#, no-wrap
msgid "REV"
msgstr ""

#. type: Table
#, no-wrap
msgid "In the event of a paused program, this button will move the machine in reverse along the programmed path until it reaches the last M3 command that was either executed or that QtPlasmaC was attempting to execute before the program became paused."
msgstr ""

#. type: Table
#, no-wrap
msgid "FWD"
msgstr ""

#. type: Table
#, no-wrap
msgid "In the event of a paused program, this button will move the machine forward along the programmed path indefinitely until the program's end, skipping over M3 commands."
msgstr ""

#. type: Table
#, no-wrap
msgid "CANCEL"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button will cancel any Cut Recovery movement that was made, and return the torch to the position the Cut Recovery movement was initiated. +\n"
"Note that if FWD or REV were used to move the torch, CANCEL will not return to the position of the torch when the pause occurred."
msgstr ""

#. type: Table
#, no-wrap
msgid "MOVE x.xxx"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This displays the amount of travel that will be incurred with each press of an arrow key, in the direction the arrow key was pressed. +\n"
"This value displayed below MOVE represents the Kerf Width of the currently selected material."
msgstr ""

#. type: Table
#, no-wrap
msgid "DIRECTIONAL ARROWS"
msgstr ""

#. type: Table
#, no-wrap
msgid "These buttons will move the torch in the direction indicated by a distance of one Kerf Width (of the currently selected material) per press."
msgstr ""

#. type: Plain text
msgid "[underline]*G-CODE WINDOW*"
msgstr ""

#. type: Table
#, no-wrap
msgid "OPEN"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will open a FILE OPEN panel over the PREVIEW WINDOW."
msgstr ""

#. type: Table
#, no-wrap
msgid "RELOAD"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will reload the currently loaded G-Code File."
msgstr ""

#. type: Plain text
msgid "[underline]*DRO*"
msgstr ""

#. type: Table
#, no-wrap
msgid "HOME ALL"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will home all of the axes in the order set by HOME_SEQUENCE in the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "WCS G54"
msgstr ""

#. type: Table
#, no-wrap
msgid "This drop down button will change the current work offset."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "CAMERA"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will display a CAMVIEW panel on top of the PREVIEW WINDOW and will allow the user to set an origin with or without rotation. See the <<qt_camera, CAMERA section>> for detailed instructions."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LASER"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will allow the user to set an origin with or without rotation. See the <<qt_laser, LASER section>> for detailed instructions."
msgstr ""

#. type: Table
#, no-wrap
msgid "X0 Y0"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will set the current position to X0 Y0."
msgstr ""

#. type: Table
#, no-wrap
msgid "HOME [AXIS]"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will home the corresponding axis."
msgstr ""

#. type: Table
#, no-wrap
msgid "0 [AXIS]"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This drop down button will display the following options: +\n"
"*Zero* - zeros the axis. +\n"
"*Set* - launches a dialog box to manually input the axis' coordinate. +\n"
"*Divide By 2* - divides the currently displayed coordinate in the DRO by two. +\n"
"*Set To Last* - sets the axis to the previously set coordinate."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "CONVERSATIONAL Tab"
msgstr ""

#. type: Plain text
msgid ""
"Screenshot example of the QtPlasmaC CONVERSATIONAL tab in *16:9* aspect "
"ratio:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_conversational.png"
msgstr ""

#. type: Plain text
msgid ""
"The Conversational tab enables the user to quickly program various simple "
"shapes for quick cutting without the need for CAM software."
msgstr ""

#. type: Plain text
msgid ""
"See <<qt_shape-library, Conversational Shape Library>> for detailed "
"information on the Conversational feature."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to disable this tab so the conversational feature cannot be "
"used by an operator. This may be achieved either by wiring the pin to a "
"physical key-switch or similar or it may also be set in a HAL file using the "
"following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp qtplasmac.conv_disable 1\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PARAMETERS Tab"
msgstr ""

#. type: Plain text
msgid ""
"Screenshot example of the QtPlasmaC PARAMETERS tab in *16:9* aspect ratio:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_parameters.png"
msgstr ""

#. type: Plain text
msgid ""
"Due to space constraints, the 4x3 GUI's PARAMETERS tab will be spread across "
"two tabs, PARAMETERS and SETTINGS."
msgstr ""

#. type: Plain text
msgid ""
"This tab is used to display configuration parameters that are modified "
"infrequently."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to disable this tab so machine settings cannot be modified by "
"unauthorized personnel. This may be achieved either by wiring the pin to a "
"physical key-switch or similar or it may also be set in a HAL file using the "
"following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp qtplasmac.param_disable 1\n"
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - ARC*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Start Fail Timer"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the amount of time (in seconds) QtPlasmaC will wait between commanding a \"Torch On\" and receiving an Arc OK signal before timing out and displaying an error message."
msgstr ""

#. type: Table
#, no-wrap
msgid "Max Start"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the number of times QtPlasmaC will attempt to start the arc."
msgstr ""

#. type: Table
#, no-wrap
msgid "Retry Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the time (in seconds) between an arc failure and another arc start attempt."
msgstr ""

#. type: Table
#, no-wrap
msgid "Voltage Scal"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the arc voltage input scale and is used to display the correct arc voltage. +\n"
"\t\t\t\t\tFor initial setup, see <<qt_calibration-values, Calibration Values>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "Voltage Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the arc voltage offset and is used to display zero volts when there is zero arc voltage input. +\n"
"                    For initial setup, see <<qt_calibration-values, Calibration Values>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "Height Per Volt"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the distance the torch would need to move to change the arc voltage by one volt. +\n"
"                       Used for manual height manipulation only."
msgstr ""

#. type: Table
#, no-wrap
msgid "OK High Volt"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the voltage threshold below which Arc OK signal is valid."
msgstr ""

#. type: Table
#, no-wrap
msgid "OK Low Volt"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the voltage threshold above which the Arc OK signal is valid."
msgstr ""

#. type: Plain text
msgid ""
"When setting the OK Low Volts and OK High Volts in Mode 0, the cut voltage "
"of a stable arc must be greater than the OK Low Volts value but lower than "
"the OK High Volts value for QtPlasmaC to receive a valid Arc OK signal. To "
"further clarify, to have a valid Arc OK, the arc voltage must fall between "
"the two limits."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - PROBING*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Float Trave"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the amount of travel the float switch moves before completing the float switch circuit. This distance can be measured by using the Probe Test button, and the method described in <<qt_initial-setup, Initial Setup>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "Probe Spee"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the speed at which the torch will probe to find the material after it moves to the Probe Height."
msgstr ""

#. type: Table
#, no-wrap
msgid "Probe Height"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the height above the Z axis minimum limit that Probe Speed begins. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Table
#, no-wrap
msgid "Ohmic Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the distance above the material the torch will should go after a successful ohmic probe. It is mainly used to compensate for high probing speeds."
msgstr ""

#. type: Table
#, no-wrap
msgid "Ohmic Retrie"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the number of times QtPlasmaC will retry a failed ohmic probe before falling back to the float switch for material detection."
msgstr ""

#. type: Table
#, no-wrap
msgid "Skip IHS"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the distance threshold used to determine if an Initial Height Sense (probe) can be skipped for the current cut, see <<qt_ihs-skip, IHS Skip>>."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - SAFETY*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Safe Height"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the height above the material that the torch will retract to before executing rapid moves. +\n"
"                   If set to Zero then Z axis maximum height will be used for the safe height. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - SCRIBING*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Arm Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the delay (in seconds) from the time the scribe command is received to the activation of the scribe. This allows the scribe to reach surface of the material before activating the scribe."
msgstr ""

#. type: Table
#, no-wrap
msgid "On Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the delay (in seconds) to allow the scribe mechanism to start before beginning motion."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - SPOTTING*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Threshol"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the arc voltage at which the delay timer will begin. +\n"
"           0V starts the delay when the torch on signal is activated."
msgstr ""

#. type: Table
#, no-wrap
msgid "Time On"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the length of time (in milliseconds) the torch is on after threshold voltage is reached."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - MOTION*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Max. Spee"
msgstr ""

#. type: Table
#, no-wrap
msgid "Displays the maximum velocity the Z axis is capable of (this is controlled by the <machine_name>.ini file)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Setup Spee"
msgstr ""

#. type: Table
#, no-wrap
msgid "The Z axis velocity for setup moves (movements to Probe Height, Pierce Height, Cut Height, etc.)."
msgstr ""

#. type: Plain text
msgid ""
"Setup Speed has no effect on THC speed which is capable of the velocity "
"displayed in the Max. Speed field."
msgstr ""

#. type: Plain text
msgid "[underline]*CONFIGURATION - THC*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the delay (in seconds) measured from the time the Arc OK signal is received until Torch Height Controller (THC) activates."
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the voltage variation allowed from the target voltage before for THC makes movements to correct the torch height."
msgstr ""

#. type: Table
#, no-wrap
msgid "Speed (PID-P)"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the Proportional gain for the THC PID loop. This roughly equates to how quickly the THC attempts to correct changes in height."
msgstr ""

#. type: Table
#, no-wrap
msgid "VAD Threshol"
msgstr ""

#. type: Table
#, no-wrap
msgid "(Velocity Anti Dive) This sets the percentage of the current cut feed rate the machine can slow to before locking the THC to prevent torch dive."
msgstr ""

#. type: Table
#, no-wrap
msgid "Void Overrid"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the size of the change in cut voltage necessary to lock the THC to prevent torch dive (higher values need greater voltage change to lock THC)."
msgstr ""

#. type: Table
#, no-wrap
msgid "PID-I"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the Integral gain for the THC PID loop. Integral gain is associated with the sum of errors in the system over time and is not always needed."
msgstr ""

#. type: Table
#, no-wrap
msgid "PID-D"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the Derivative gain for the THC PID loop. Derivative gain works to dampen the system and reduce over correction oscillations and is not always needed."
msgstr ""

#. type: Plain text
msgid ""
"PID loop tuning is a complicated process and is outside the scope of this "
"User Guide. There are many sources of information available to assist with "
"understanding and tuning PID loops. If the THC is not making corrections "
"fast enough, it is recommended to increase the P gain in small increments "
"until the system operates favorably. Large P gain adjustments can result in "
"over correction and oscillations."
msgstr ""

#. type: Plain text
msgid "[underline]*SAVE & RELOAD Buttons*"
msgstr ""

#. type: Plain text
msgid ""
"The **SAVE** button will save the currently displayed parameters to the "
"qtplasmac.prefs file."
msgstr ""

#. type: Plain text
msgid ""
"The **RELOAD** button will reload all the parameters from the qtplasmac."
"prefs file."
msgstr ""

#. type: Plain text
msgid "[underline]*MATERIAL*"
msgstr ""

#. type: Plain text
msgid "This section shows the parameters which are active for the current cut."
msgstr ""

#. type: Table
#, no-wrap
msgid "The top drop down menu is used to manually select the current material cut parameters. If there are no materials in the material file then only the default material will be displayed."
msgstr ""

#. type: Table
#, no-wrap
msgid "Kerf Widt"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the kerf width for the currently selected material. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Table
#, no-wrap
msgid "Pierce Height"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the pierce height for the currently selected material. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Table
#, no-wrap
msgid "Pierce Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the pierce delay (in seconds) for the currently selected material."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut Height"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the cut height for the currently selected material. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut Feed Rat"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the cut feed rate for the currently selected material."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut Amp"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the cut amperage for the currently selected material. +\n"
"          This is a visual indicator to the operator only, unless PowerMax communications are being used."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut Volt"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the cut voltage for the currently selected material."
msgstr ""

#. type: Table
#, no-wrap
msgid "Puddle Height"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Expressed as a percentage of Pierce Height, this sets the Puddle Jump height for the currently selected material. +\n"
"          Typically used for thicker materials, Puddle Jump allows the torch to have an intermediate step between Pierce Height and Cut Height. +\n"
"          If set, the torch will proceed from Pierce Height to P-Jump Height for a period of time (P-Jump Delay) before proceeding to Cut Height to effectively \"jump\" over the molten puddle. Refer to the <<qt_initial-setup, Heights Diagram>> diagram for a visual representation."
msgstr ""

#. type: Table
#, no-wrap
msgid "Puddle Delay"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the Puddle Jump delay (in seconds) for the currently selected material. +\n"
"         This value is mandatory if P-Jump Height is set as it sets the length of time the torch will stay at the P-Jump Height before proceeding to Cut Height."
msgstr ""

#. type: Table
#, no-wrap
msgid "Pause At En"
msgstr ""

#. type: Table
#, no-wrap
msgid "This sets the amount of time (in seconds) the torch will stay on at the end of the cut before proceeding with the M5 command to turn off and raise the torch. For more information see <<qt_pause-at-end, Pause At End Of Cut>>."
msgstr ""

#. type: Table
#, no-wrap
msgid "Gas Pressur"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the gas pressure for the currently selected material. +\n"
"              This setting is only valid if PowerMax communications are being used. +\n"
"              0 = Use the PowerMax's automatic pressure mode."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut Mod"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This sets the cut mode for the currently selected material. +\n"
"          This setting is only valid if PowerMax communications are being used. +\n"
"          1 = Normal +\n"
"          2 = CPA (Constant Pilot Arc) +\n"
"          3 = Gouge/Mark"
msgstr ""

#. type: Plain text
msgid "[underline]*SAVE, RELOAD, NEW, & DELETE Buttons*"
msgstr ""

#. type: Plain text
msgid ""
"The **SAVE** button will save the current material set to the "
"<machine_name>_material.cfg file."
msgstr ""

#. type: Plain text
msgid ""
"The **RELOAD** button will reload the material set from the "
"<machine_name>_material.cfg file."
msgstr ""

#. type: Plain text
msgid ""
"The **NEW** button will allow a new material to be added to the material "
"file. The user will be prompted for a material number and a material name, "
"all other parameters will be read from the currently selected material. Once "
"entered, QtPlasmaC will reload the material file and display the new "
"material. The Cut Parameters for the new material will then need to be "
"adjusted and saved."
msgstr ""

#. type: Plain text
msgid ""
"The **DELETE** this button is used to delete a material. After pressing it, "
"the user will be prompted for a material number to be deleted, and prompted "
"again to ensure the user is sure. After deletion, the material file will be "
"reloaded and the drop down list will display the default material."
msgstr ""

#. type: Plain text
msgid "[underline]*GUI SETTINGS*"
msgstr ""

#. type: Plain text
msgid ""
"This section shows parameters that effect the GUI appearance and GUI "
"behaviors."
msgstr ""

#. type: Plain text
msgid ""
"To return any of the color changes to their default values, see the "
"<<qt_default_styling, Returning To The Default Styling>> section."
msgstr ""

#. type: Table
#, no-wrap
msgid "Foregroun"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Foreground."
msgstr ""

#. type: Table
#, no-wrap
msgid "Highlight"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Highlight."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LED"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI LED."
msgstr ""

#. type: Table
#, no-wrap
msgid "Backgroun"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Background."
msgstr ""

#. type: Table
#, no-wrap
msgid "Alt Backgroun"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Alternate Background."
msgstr ""

#. type: Table
#, no-wrap
msgid "Frame"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Frames."
msgstr ""

#. type: Table
#, no-wrap
msgid "Estop"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Estop."
msgstr ""

#. type: Table
#, no-wrap
msgid "Disable"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI's Disabled features."
msgstr ""

#. type: Table
#, no-wrap
msgid "This button allows the user to change the color of the GUI Preview Window Background."
msgstr ""

#. type: Table
#, no-wrap
msgid "Soft Keyboar"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This radio button allows the user to enable or disable the soft touchscreen keyboard. +\n"
"               If the \"onboard\" virtual keyboard is installed then the <<custom_kb_layouts, custom layouts>> will be enabled ."
msgstr ""

#. type: Table
#, no-wrap
msgid "KB Shortcut"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This radio button allows the user to enable or disable <<qt_keyboard-shortcuts, Keyboard Shortcuts>> within the GUI (such as keyboard jogging). +\n"
"              In addition to the standard jog keys, a list of the additional shortcuts is available in the <<qt_keyboard-shortcuts, keyboard shortcuts>> section."
msgstr ""

#. type: Table
#, no-wrap
msgid "View Materia"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This radio button allows the user to enable or disable the addition of a visual reference showing key material cut settings to the Preview Windows of the <<qt_main-tab, MAIN>> and <<qt_conversational-tab, CONVERSATIONAL>> tabs. +\n"
"               Examples are:  Feed Rate, Pierce Height, Pierce Delay, and Cut Height. Cut Amps will be shown if PowerMax communications are enabled."
msgstr ""

#. type: Table
#, no-wrap
msgid "Optional Stop"
msgstr ""

#. type: Table
#, no-wrap
msgid "This radio button allows the user to enable or disable whether or not a running program will pause at an *M1* command."
msgstr ""

#. type: Table
#, no-wrap
msgid "Run From Lin"
msgstr ""

#. type: Table
#, no-wrap
msgid "This radio button allows the user to enable or disable <<qt_run-from-line, Run From Line>>. If enabled, the user can click on a line of G-Code and have the program start from that line."
msgstr ""

#. type: Table
#, no-wrap
msgid "Override Limit"
msgstr ""

#. type: Table
#, no-wrap
msgid "This radio button allows the user to temporarily Override the input from a Limit Switch in the event the limit switch becomes tripped during operation. This button will also allow jogging while jogging is inhibited due to a float or breakaway switch activation. This button can only be clicked when a limit switch is tripped or a jog is inhibited."
msgstr ""

#. type: Table
#, no-wrap
msgid "Optional Block"
msgstr ""

#. type: Table
#, no-wrap
msgid "This radio button allows the user to enable or disable whether or not lines starting with \"/\" will be skipped if present in a running program."
msgstr ""

#. type: Table
#, no-wrap
msgid "Grid Siz"
msgstr ""

#. type: Table
#, no-wrap
msgid "This allows a user to change the size of the grid in the Preview Window on the <<qt_main-tab, MAIN Tab>>. Grid size of 0.0 will disable the grid."
msgstr ""

#. type: Table
#, no-wrap
msgid "Cone Siz"
msgstr ""

#. type: Table
#, no-wrap
msgid "This allows a user to change the size of the cone (which represents the current tool) in the Preview Window on the <<qt_main-tab, MAIN Tab>>."
msgstr ""

#. type: Plain text
msgid "[underline]*UTILITIES*"
msgstr ""

#. type: Plain text
msgid ""
"The **BACKUP CONFIG** button will create a complete machine configuration "
"backup for archiving or to aid in fault diagnosis. A compressed backup of "
"the machine configuration will be saved in the user's Linux home directory. "
"The file name will be <machine_name>_<version>_<date>_<time>.tar.gz where "
"<machine_name> is the machine name entered in the configuration wizard, "
"<version> is the current QtPlasmaC version the user is on, <date> is the "
"current date (YY-MM-DD), and <time> is the current time (HH-MM-SS)."
msgstr ""

#. type: Plain text
msgid ""
"Prior to the backup being made, the machine log will be saved to a file in "
"the configuration directory named machine_log_<date>_<time>.txt where <date> "
"and <time> are as described above. This file along with up to five previous "
"machine logs will also be included in the backup."
msgstr ""

#. type: Plain text
msgid ""
"These files are not required by QtPlasmaC and are safe to delete at any time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "STATISTICS Tab"
msgstr ""

#. type: Plain text
msgid ""
"The statistics tab provides statistics to allow for the tracking of "
"consumable wear and job run times."
msgstr ""

#. type: Plain text
msgid ""
"These statistics are shown for the current job as well as the running total."
msgstr ""

#. type: Plain text
msgid "Previous job statistics are reset once the next program is run."
msgstr ""

#. type: Plain text
msgid ""
"The total values may be reset either individually by clicking the "
"corresponding \"RESET\" button, or they may all be reset together by "
"clicking \"RESET ALL\"."
msgstr ""

#. type: Plain text
msgid ""
"The *RS485 PMX STATISTICS* panel will be only be displayed if the user has "
"Hypertherm PowerMax communications and a valid RS485 connection to the "
"PowerMax is established. This panel will show the *ARC ON TIME* for the "
"PowerMax in hh:mm:ss format."
msgstr ""

#. type: Plain text
msgid ""
"The *MACHINE LOG* is also displayed on the statistics tab, this log will "
"display any errors and/or important information that occurs during the "
"current LinuxCNC session. If the user makes a backup of the configuration "
"from the <<qt_parameters-tab, PARAMETERS Tab>> then the machine log is also "
"included in the backup."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_stats.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using QtPlasmaC"
msgstr ""

#. type: Plain text
msgid ""
"Once QtPlasmaC is successfully installed, no Z axis motion is required to be "
"part of the G-Code cut program. In fact, if any Z axis references are "
"present in the cut program, the standard QtPlasmaC configuration will remove "
"them during the program loading process."
msgstr ""

#. type: Plain text
msgid ""
"For reliable use of QtPlasmaC the user should *NOT* use any Z axis offsets "
"other than the coordinate system offsets (G54-G59.3)."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC will automatically add a line of G-Code to move the Z axis to the "
"correct height at the beginning of every G-Code program."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Version Information* - QtPlasmaC will display versioning information in the title of the main window. The information will be displayed as followed \"QtPlasmaC vN.XXX.YYY - powered by QtVCP on LinuxCNC vZ.Z.Z\" where N is the version of QtPlasmaC, XXX is the version of the hal component (PlasmaC.comp), YYY is the GUI version, and Z.Z.Z is the version of LinuxCNC.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Units Systems"
msgstr ""

#. type: Plain text
msgid ""
"All settings and parameters in QtPlasmaC are required to be in the same "
"units as specified in the ini file, being either metric or imperial."
msgstr ""

#. type: Plain text
msgid ""
"If the user is attempting to run a G-Code file that is in the \"other\" "
"units system then all parameters including the material file parameters are "
"still required to be in the native machines units. Any further conversions "
"necessary to run the G-Code file will be handled automatically by the G-Code "
"filter program."
msgstr ""

#. type: Plain text
msgid ""
"For example: if a user had a metric machine and wished to run a G-Code file "
"that was set up to cut 1/4\" thick material using imperial units (inch - "
"G20) then the user with the metric machine would need to ensure that either "
"the material number in the G-Code file was set to the corresponding metric "
"material to be cut, or that a new material is created with the correct "
"metric parameters for the metric material to be cut. If the metric user "
"wanted to cut the G-Code file using imperial material, then the new material "
"parameters would need to be converted from imperial units to metric when "
"they are entered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preamble and Postamble Codes"
msgstr ""

#. type: Plain text
msgid ""
"The following stanzas are the minimum recommended codes to include in the "
"preamble and postamble of any G-Code file to be run by QtPlasmaC:"
msgstr ""

#. type: Plain text
msgid "Metric:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G21 G40 G49 G64p0.1 G80 G90 G92.1 G94 G97\n"
msgstr ""

#. type: Plain text
msgid "Imperial:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G20 G40 G49 G64p0.004 G80 G90 G92.1 G94 G97\n"
msgstr ""

#. type: Plain text
msgid ""
"A detailed explanation of each G-Code can be found in the docs link:http://"
"linuxcnc.org/docs/html/gcode/g-code.html[here]."
msgstr ""

#. type: Plain text
msgid ""
"Note that throughout this user guide there are several additional "
"recommendations for codes that are prudent to add to both the preamble and "
"postamble depending on the features the user wishes to utilize."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Mandatory Codes"
msgstr ""

#. type: Plain text
msgid ""
"Aside from the preamble code, postamble code, and X/Y motion code, the only "
"mandatory G-Code syntax for QtPlasmaC to run a G-Code program using a torch "
"for cutting is *M3 $0 S1* to begin a cut and *M5 $0* to end a cut."
msgstr ""

#. type: Plain text
msgid ""
"For backwards compatibility it is permissible to use *M3 S1* in lieu of *M3 "
"$0 S1* to begin a cutting job and *M5* in lieu of *M5 $0* to end a cutting "
"job. Note that this applies to cutting jobs only, for scribe and spotting "
"jobs the *$n* tool identifier is mandatory."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Coordinates"
msgstr ""

#. type: Plain text
msgid "See <<qt_z-settings, recommended Z axis>> settings."
msgstr ""

#. type: Plain text
msgid ""
"Each time LinuxCNC (QtPlasmaC) is started Joint homing is required. This "
"allows LinuxCNC (QtPlasmaC) to establish the known coordinates of each axis "
"and set the soft limits to the values specified in the <machine_name>.ini "
"file in order to prevent the machine from crashing into a hard stop during "
"normal use."
msgstr ""

#. type: Plain text
msgid ""
"If the machine does not have home switches then the user needs to ensure "
"that all axes are at the home coordinates specified in the <machine_name>."
"ini file before homing."
msgstr ""

#. type: Plain text
msgid ""
"If the machine has home switches then it will move to the specified home "
"coordinates when the Joints are homed."
msgstr ""

#. type: Plain text
msgid ""
"Depending on the machine's configuration there will either be a *Home All* "
"button or each axis will need to be homed individually. Use the appropriate "
"button/buttons to home the machine."
msgstr ""

#. type: Plain text
msgid ""
"As mentioned in the <<qt_initial-setup, Initial Setup>> section, it is "
"recommended that the first time QtPlasmaC is used that the user ensure there "
"is nothing below the torch then jog the Z axis down until it stops at the Z "
"axis MINIMUM_LIMIT then click the 0 next to the Z axis DRO to *Touch Off* "
"with the Z axis selected to set the Z axis at zero offset. This should not "
"need to be done again."
msgstr ""

#. type: Plain text
msgid ""
"If the user intends to place the material in the exact same place on the "
"table every time, the user could jog the X and Y axes to the machine to the "
"corresponding X0 Y0 position as established by the CAM software and then "
"*Touch Off* both axes with a zero offset."
msgstr ""

#. type: Plain text
msgid ""
"If the user intends to place the material randomly on the table then the "
"user must *Touch Off* the X and Y axes at the appropriate position before "
"starting the program."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_camview.png"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has the ability to use a USB camera to set the origin with or "
"without rotation compensation. The CAMERA button will be enabled after the "
"machine is homed."
msgstr ""

#. type: Plain text
msgid ""
"To use this feature, the user must set the camera's offset from the torch "
"center line in the <machine_name>.ini file. This offset may be set by using "
"the appropriate <<configuring, configuration wizard>> or by manually editing "
"the ini file, see <<qt_modify-config, modifying QtPlasmaC>>."
msgstr ""

#. type: Plain text
msgid ""
"To add or modify the offsets manually, the user would add or edit the "
"following line in the [QTPLASMAC] section:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "CAMERA_TOUCHOFF = Xoffset Yoffset\n"
msgstr ""

#. type: Plain text
msgid ""
"\"offset\" is distance from the center line of the torch to the camera's "
"cross hairs. Offsets could be specified as x25.4, X25.4, or 25.4."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*To set the origin with zero rotation:*\n"
msgstr ""

#. type: Plain text
msgid "Jog until the cross hairs are on top of the desired origin point."
msgstr ""

#. type: Plain text
msgid ""
"Press *MARK EDGE*. The *MARK EDGE* button label will change to *SET ORIGIN* "
"and the *GOTO ORIGIN* button will be disabled."
msgstr ""

#. type: Plain text
msgid ""
"Press *SET ORIGIN*. The *SET ORIGIN* button label will change to *MARK EDGE* "
"and the *GOTO ORIGIN* button will be enabled."
msgstr ""

#. type: Plain text
msgid "The offset is now successful set."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*To set the origin with rotation:*\n"
msgstr ""

#. type: Plain text
msgid ""
"Jog until the cross hairs are at the edge of the material a suitable "
"distance away from the desired origin point."
msgstr ""

#. type: Plain text
msgid "Jog until the cross hairs are at the origin point of the material."
msgstr ""

#. type: Plain text
msgid "The offset is now successfully set."
msgstr ""

#. type: Plain text
msgid ""
"In the CAMVIEW panel, the mouse can affect the cross hairs and the zoom "
"level as follows:"
msgstr ""

#. type: Plain text
msgid "Mouse Wheel Scroll - Change cross hair diameter."
msgstr ""

#. type: Plain text
msgid ""
"Mouse Wheel Button Double Click - Restores cross hair diameter to default."
msgstr ""

#. type: Plain text
msgid "Mouse Left Button Clicked + Wheel Scroll - Changes camera zoom level."
msgstr ""

#. type: Plain text
msgid ""
"Mouse Left Button Clicked + Wheel Button Double Click - Restores default "
"camera zoom level."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has the ability to use a laser to set the origin with or without "
"rotation compensation. The LASER button will be enabled after the machine is "
"homed."
msgstr ""

#. type: Plain text
msgid ""
"To use this feature, the user must set the laser's offset from the torch "
"center line in the <machine_name>.ini file. This offset may be set by using "
"the appropriate <<configuring, configuration wizard>> or by manually editing "
"the ini file, see <<qt_modify-config, modifying QtPlasmaC>>."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "LASER_TOUCHOFF = Xoffset Yoffset\n"
msgstr ""

#. type: Plain text
msgid ""
"Additionally, the laser can be tied to any available output to turn the "
"laser on and off via a HAL pin with the following name:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "qtplasmac.laser_on\n"
msgstr ""

#. type: Plain text
msgid "Press the *LASER* button."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*LASER* button label will change to *MARK EDGE* and the HAL pin named qtplasmac.laser_on will be turned on.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Jog until the laser cross hairs are on top of the desired origin point.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Press *MARK EDGE*. The *MARK EDGE* button label will change to *SET ORIGIN*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Press *SET ORIGIN*. The *SET ORIGIN* button label will change to *MARK EDGE* and the HAL pin named qtplasmac.laser_on will be turned off.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "The offset is now successful set.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Jog until the laser cross hairs are at the edge of the material a suitable distance away from the desired origin point.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Jog until the laser cross hairs are at the origin point of the material.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "The offset is now successfully set.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Path Tolerance"
msgstr ""

#. type: Plain text
msgid ""
"The provided <<qt_rs274, RS274NGC_STARTUP_CODE>> files: metric_startup.ngc "
"and imperial_startup.ngc set the motion blending path tolerance with a G64 "
"command P value to 0.1mm and 0.004\" respectively. The P value corresponds "
"to the amount the actual cut path followed by the machine may deviated from "
"the programmed cut path before reducing velocity. If LinuxCNC (QtPlasmaC) "
"receives an E-stop signal at any stage, the path tolerance will be set to "
"the default (no P value) which will maintain the best possible speed and "
"round corners off as a result. To prevent this, it is recommended that the "
"path tolerance is set by placing the appropriate G64 command and P value in "
"the header of each G-Code file."
msgstr ""

#. type: Plain text
msgid "For Metric:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G64 P0.1\n"
msgstr ""

#. type: Plain text
msgid "For Imperial:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G64 P0.004\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Paused Motion"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has the ability to allow the repositioning of the X and Y axes "
"along the current cut path while the G-Code program is paused."
msgstr ""

#. type: Plain text
msgid ""
"In order to use this feature, LinuxCNC's Adaptive Feed Control (M52) must be "
"turned on (P1)."
msgstr ""

#. type: Plain text
msgid ""
"To enable *Paused Motion* The preamble of the G-Code must contain the "
"following line:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M52 P1\n"
msgstr ""

#. type: Plain text
msgid "To turn off *Paused Motion* at any point, use the following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M52 P0\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pause At End Of Cut"
msgstr ""

#. type: Plain text
msgid ""
"This feature can be used to allow the arc to \"catch up\" to the torch "
"position to fully finish the cut. It is usually required for thicker "
"materials and is especially useful when cutting stainless steel."
msgstr ""

#. type: Plain text
msgid ""
"Using this feature will cause all motion to pause at the end of the cut "
"while the torch is still on. After the dwell time (in seconds) set by the "
"*Pause At End* parameter in the MATERIAL section of the <<qt_parameters-tab, "
"PARAMETERS Tab>> has expired, QtPlasmaC will proceed with the M5 command to "
"turn off and raise the torch."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Multiple Tools"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has the ability to allow the use of more than one type of plasma "
"tool by utilizing LinuxCNC spindles as a plasma tool when running a G-Code "
"program."
msgstr ""

#. type: Plain text
msgid "Valid plasma tools for use are:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*TOOL #"
msgstr ""

#. type: Table
#, no-wrap
msgid "Plasma Torc"
msgstr ""

#. type: Table
#, no-wrap
msgid "Used for normal Plasma cutting."
msgstr ""

#. type: Table
#, no-wrap
msgid "Scrib"
msgstr ""

#. type: Table
#, no-wrap
msgid "Used for material engraving."
msgstr ""

#. type: Table
#, no-wrap
msgid "Used for spotting (creating dimples to aid in drilling)."
msgstr ""

#. type: Plain text
msgid ""
"A LinuxCNC spindle number (designated by $n) is required to be in the "
"starting command and also the end command to be able to start and stop the "
"correct plasma tool. Examples:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M3 $0 S1* will select and start the plasma cutting tool.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M3 $1 S1* will select and start the scribe.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M3 $2 S1* will select and start the plasma spotting tool.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M5 $0* will stop the plasma cutting tool.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M5 $1* will stop the scribe.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M5 $2* will stop the plasma spotting tool.\n"
msgstr ""

#. type: Plain text
msgid ""
"It is permissible to use *M5 $-1* in lieu of the M5 $n codes above to stop "
"all tools."
msgstr ""

#. type: Plain text
msgid ""
"In order to use a scribe, it is necessary for the user to add the X and Y "
"axis offsets to the LinuxCNC tool table. The tool.tbl file is found in the "
"<machine_name> config folder. Tool 0 is assigned to the Plasma Torch and "
"Tool 1 is assigned to the scribe. Tools are selected with a *Tn M6* command, "
"and then a *G43 H0* command is required to apply the offsets for the "
"selected tool. It is important to note that the LinuxCNC tool table and tool "
"commands only come into play if the user is using a <<qt_scribe, scribe>> in "
"addition to a plasma torch. For more information, see <<qt_scribe, scribe>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Velocity Reduction"
msgstr ""

#. type: Plain text
msgid ""
"There is a HAL pin available named *motion.analog-out-03* that can be "
"changed in G-Code with the *M67 (Synchronized with Motion)/M68 (Immediate)* "
"commands. This pin will reduce the velocity to the percentage specified in "
"the command."
msgstr ""

#. type: Plain text
msgid ""
"It is important to thoroughly understand the difference between "
"*Synchronized with Motion* and *Immediate*:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M67* (Synchronized with Motion) - The actual change of the specified output (P2 (THC) for example) will happen at the beginning of the next motion command. If there is no subsequent motion command, the output changes will not occur. It is best practice to program a motion code (G0 or G1 for example) right after a M67.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M68* (Immediate) - These commands happen immediately as they are received by the motion controller. Since these are not synchronized with motion, they will break blending. This means if these codes are used in the middle of active motion codes, the motion will pause to activate these commands.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M67 E3 Q0* would set the velocity to 100% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M67 E3 Q40* would set the velocity to 40% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M67 E3 Q60* would set the velocity to 60% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M67 E3 Q100* would set the velocity to 100% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
msgid ""
"The minimum percentage allowed is 10%, values below this will be set to 10%."
msgstr ""

#. type: Plain text
msgid ""
"The maximum percentage allowed is 100%, values above this will be set to "
"100%."
msgstr ""

#. type: Plain text
msgid ""
"If the user intends to use this feature it would be prudent to add *M68 E3 "
"Q0* to both the preamble and postamble of the G-Code program so the machine "
"starts and ends in a known state."
msgstr ""

#. type: Plain text
msgid ""
"Another way of achieving the same result is to use *F#<_hal[plasmac.cut-feed-"
"rate]>* with a multiplier."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "F[#<_hal[plasmac.cut-feed-rate]> * 0.6]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*G-CODE THC* AND *VELOCITY BASED THC* ARE NOT ABLE TO BE USED IF *CUTTER COMPENSATION* IS IN EFFECT; AN ERROR MESSAGE WILL BE DISPLAYED.\n"
msgstr ""

#. type: Plain text
msgid ""
"If Cut Feed Rate in the MATERIAL section of the <<qt_parameters-tab, "
"PARAMETERS Tab>> is set to Zero then QtPlasmaC will use *motion.requested-"
"velocity* (as set by a standard Feedrate call in the G-Code) for the THC "
"calculations. This is not recommended as it is not a reliable way of "
"implementing velocity based THC."
msgstr ""

#. type: Plain text
msgid ""
"All references to CutFeedRate refer to the *Cut Feed Rate* value displayed "
"in the MATERIAL section of the <<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Material File"
msgstr ""

#. type: Plain text
msgid ""
"Material handling uses a material file that was created for the machine "
"configuration when the configuration wizard was ran and allows the user to "
"conveniently store known material settings for easy recall either manually "
"or automatically via G-Code. The resulting <<qt_material-file, material "
"file>> is named *<machine_name>_material.cfg*."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC does not require the use of a material file. Instead, the user "
"could change the cut parameters manually from the MATERIAL section of the "
"<<qt_parameters-tab, PARAMETERS Tab>>. It is also not required to use the "
"automatic material changes. If the user does not wish to use this feature "
"they can simply omit the material change codes from the G-Code file."
msgstr ""

#. type: Plain text
msgid ""
"Material numbers in the materials file do not need to be consecutive nor do "
"they need to be in numerical order."
msgstr ""

#. type: Plain text
msgid ""
"The following variables are mandatory and an error message will appear if "
"any are not found when the material file is loaded."
msgstr ""

#. type: Table
#, no-wrap
msgid "PIERCE_HEIGHT"
msgstr ""

#. type: Table
#, no-wrap
msgid "PIERCE_DELAY"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT_HEIGHT"
msgstr ""

#. type: Plain text
msgid "CUT_SPEED"
msgstr ""

#. type: Plain text
msgid ""
"The following variables are optional. If they are not detected or have no "
"value assigned, they will be assigned a value of 0 and no error message will "
"appear."
msgstr ""

#. type: SH
#, no-wrap
msgid "NAME"
msgstr "NOMBRE"

#. type: Plain text
msgid "KERF_WIDTH"
msgstr ""

#. type: Plain text
msgid "THC"
msgstr ""

#. type: Plain text
msgid "PUDDLE_JUMP_HEIGHT"
msgstr ""

#. type: Plain text
msgid "PUDDLE_JUMP_DELAY"
msgstr ""

#. type: Plain text
msgid "CUT_AMPS"
msgstr ""

#. type: Plain text
msgid "CUT_VOLTS"
msgstr ""

#. type: Table
#, no-wrap
msgid "PAUSE_AT_END"
msgstr ""

#. type: Plain text
msgid "GAS_PRESSURE"
msgstr ""

#. type: Plain text
msgid "CUT_MODE"
msgstr ""

#. type: Plain text
msgid ""
"Material numbers 1000000 and above are reserved for temporary materials."
msgstr ""

#. type: Plain text
msgid ""
"It is the responsibility of the operator to ensure that the variables are "
"included if they are a requirement for the G-Code to be run."
msgstr ""

#. type: Plain text
msgid "The material file uses the following format:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[MATERIAL_NUMBER_1]\n"
"NAME                = name\n"
"KERF_WIDTH          = value\n"
"THC                 = value (0 = off, 1 = on)\n"
"PIERCE_HEIGHT       = value\n"
"PIERCE_DELAY        = value\n"
"PUDDLE_JUMP_HEIGHT  = value\n"
"PUDDLE_JUMP_DELAY   = value\n"
"CUT_HEIGHT          = value\n"
"CUT_SPEED           = value\n"
"CUT_AMPS            = value (for info only unless PowerMax communications is enabled)\n"
"CUT_VOLTS           = value (modes 0 & 1 only, if not using auto voltage sampling)\n"
"PAUSE_AT_END        = value\n"
"GAS_PRESSURE        = value (only used for PowerMax communications)\n"
"CUT_MODE            = value (only used for PowerMax communications)\n"
msgstr ""

#. type: Plain text
msgid ""
"It is possible to add new material, delete material, or edit existing "
"material from the <<qt_parameters-tab, PARAMETERS tab.>> It is also possible "
"to achieve this by using <<qt_magic-comments, magic comments>> in a g-Code "
"file."
msgstr ""

#. type: Plain text
msgid ""
"The material file may be edited with a text editor while LinuxCNC is "
"running. After any changes have been saved, press *Reload* in the MATERIAL "
"section of the <<qt_parameters-tab, PARAMETERS Tab>> to reload the material "
"file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Manual Material Handling"
msgstr ""

#. type: Plain text
msgid ""
"For manual material handling, the user would manually select the material "
"from the materials list in the MATERIAL section of the <<qt_parameters-tab, "
"PARAMETERS Tab>> before starting the G-Code program. In addition to "
"selecting materials with materials list in the MATERIAL section of the "
"<<qt_parameters-tab, PARAMETERS Tab>>, the user could use the MDI to change "
"materials with the following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M190 Pn\n"
msgstr ""

#. type: Plain text
msgid ""
"The following code is the minimum code necessary to have a successful cut "
"using the manual material selection method:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"F#<_hal[plasmac.cut-feed-rate]>\n"
"M3 $0 S1\n"
".\n"
".\n"
"M5 $0\n"
msgstr ""

#. type: Plain text
msgid ""
"Manual material handling will restrict the user to only one material for the "
"entire job."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Automatic Material Handling"
msgstr ""

#. type: Plain text
msgid ""
"For automatic material handling, the user would add commands to their G-Code "
"file which will enable QtPlasmaC to change the material automatically."
msgstr ""

#. type: Plain text
msgid ""
"The following codes may be used to allow QtPlasmaC to automatically change "
"materials:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M190 Pn* - Changes the currently displayed material to material number n.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M66 P3 L3 Q1* - Adds a small delay (1 second in this example) to wait for QtPlasmaC to confirm that it successfully changed materials.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*F#<_hal[plasmac.cut-feed-rate]>* - Sets the cut feed rate to the feed rate shown in the MATERIAL section of the <<qt_parameters-tab, PARAMETERS Tab>>.\n"
msgstr ""

#. type: Plain text
msgid ""
"For automatic material handling, the codes MUST be applied in the order "
"shown. If a G-Code program is loaded which contains one or more material "
"change commands then the first material will be displayed in the top header "
"of the PREVIEW WINDOW on the <<qt_main-tab, MAIN Tab>> as the program is "
"loading. The following code is the minimum code necessary to have a "
"successful cut using the automatic material selection method:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"M190 Pn\n"
"M66 P3 L3 Q1\n"
"F#<_hal[plasmac.cut-feed-rate]>\n"
"M3 $0 S1\n"
".\n"
".\n"
"M5 $0\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Material Converter"
msgstr ""

#. type: Plain text
msgid ""
"This application is used to convert existing tool tables into QtPlasmaC "
"material files. It can also create a material file from manual user input to "
"entry fields."
msgstr ""

#. type: Plain text
msgid ""
"At this stage the only conversions available are for tool tables exported "
"from either SheetCam or Fusion 360."
msgstr ""

#. type: Plain text
msgid ""
"SheetCam tool tables are complete and the conversion is fully automatic. The "
"SheetCam tool file must be in the SheetCam .tools format."
msgstr ""

#. type: Plain text
msgid ""
"Fusion 360 tool tables do not have all of the required fields so the user "
"will be prompted for missing parameters. The Fusion 360 tool file must be in "
"the Fusion 360 .json format."
msgstr ""

#. type: Plain text
msgid ""
"If the user has a format from a different CAM software they would like "
"converted, create a *New Topic* in the https://forum.linuxcnc.org/"
"plasmac[PlasmaC forum] section of the https://forum.linuxcnc.org/[LinuxCNC "
"forum] to request this addition."
msgstr ""

#. type: Plain text
msgid ""
"Material Converter may be run from a terminal using one of the two following "
"methods."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "qtplasmac-materials\n"
msgstr ""

#. type: Plain text
msgid ""
"For a run in place installation enter the following two commands in a "
"terminal window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"source ~/linuxcnc-dev/scripts/rip-environment\n"
"qtplasmac-materials\n"
msgstr ""

#. type: Plain text
msgid ""
"This will bring up the Material Converter Main dialog box with Manual "
"selected as the default."
msgstr ""

#. type: Plain text
msgid "Select one of:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Manual* - to manually create a new material file.\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_material_main_manual.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*SheetCam* - to convert a SheetCam tool file.\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_material_main_sheetcam.png"
msgstr ""

#. type: Plain text
msgid ""
"For SheetCam only, select whether the user requires a metric or imperial "
"output file."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Fusion 360* - to convert a Fusion 360 tool file.\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_material_main_fusion360.png"
msgstr ""

#. type: Plain text
msgid "To convert:"
msgstr ""

#. type: Plain text
msgid ""
"Select the Input File to be converted, press *INPUT* to bring up a file "
"selector or directly enter the file in the entry box."
msgstr ""

#. type: Plain text
msgid ""
"Select the Output File to write to, press *OUTPUT* to bring up a file "
"selector or directly enter the file in the entry box. This would normally be "
"~/linuxcnc/configs/<machine_name>_material.cfg. If necessary, the user could "
"select a different file and hand edit the <machine_name>_material.cfg file."
msgstr ""

#. type: Plain text
msgid "Click *CREATE/CONVERT* and the new material file will be created."
msgstr ""

#. type: Plain text
msgid ""
"For both a Manual creation or a Fusion 360 conversion, a dialog box will "
"show with all available parameters displayed for input. Any entry marked "
"with pass:[***] is mandatory and all other entries are optional depending on "
"the user's configuration needs."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_material_manual_dialog.png"
msgstr ""

#. type: Plain text
msgid ""
"If the user selects ~/linuxcnc/configs/<machine_name>_material.cfg and the "
"file already exists, it will be overwritten."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Magic G-Code Comments"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Keep Z Motion*\n"
msgstr ""

#. type: Plain text
msgid ""
"By default, QtPlasmaC will remove all Z motion from a loaded G-Code file and "
"add an initial Z movement to bring the torch near the top of travel at the "
"beginning of the file. If the user wishes to use their table with a marker, "
"a drag knife, diamond scribe, etc. mounted in the torch holder, QtPlasmaC "
"has the ability to retain the Z movements in a G-Code file via the following "
"magic comment:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "  #<keep-z-motion> = 1\n"
msgstr ""

#. type: Plain text
msgid ""
"Omitting this magic comment, or setting this value to anything but 1 will "
"cause QtPlasmaC to revert to the default behavior of stripping all Z motion "
"from a loaded G-Code file and making an initial Z movement to bring the "
"torch near the top of travel at the beginning of the file."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Materials Adding And Editing Via G-Code*\n"
msgstr ""

#. type: Plain text
msgid ""
"By using \"magic comments\" in a G-Code file it is possible to do the "
"following:"
msgstr ""

#. type: Plain text
msgid "Add new materials to the <machine_name>_material.cfg file."
msgstr ""

#. type: Plain text
msgid "Edit existing materials in the <machine_name>_material.cfg file."
msgstr ""

#. type: Plain text
msgid "Use one or more temporary materials."
msgstr ""

#. type: Plain text
msgid ""
"Temporary materials are numbered automatically by QtPlasmaC and the material "
"change will also be done by QtPlasmaC and should not be added to the G-Code "
"file by CAM software or otherwise. The material numbers begin at 1000000 and "
"are incremented for each temporary material. It is not possible to save a "
"temporary material, however the user could create a new material while a "
"temporary material is displayed and it will use the settings from the "
"temporary material as the defaults."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to use temporary materials only and have an empty "
"<machine_name>_material.cfg file. This negates the need to keep the "
"QtPlasmaC materials file updated with the CAM tool file."
msgstr ""

#. type: Plain text
msgid "The entire comment must be in parentheses."
msgstr ""

#. type: Plain text
msgid "The beginning of the magic comment must be: *(o=*"
msgstr ""

#. type: Plain text
msgid "The equals sign must immediately follow each parameter with no space."
msgstr ""

#. type: Plain text
msgid ""
"The mandatory parameters must be in the magic comment (for option 0, *na* is "
"optional and *nu* is not used)."
msgstr ""

#. type: Plain text
msgid "There can be any number and type of magic comments in a G-Code file."
msgstr ""

#. type: Plain text
msgid ""
"If option 0 is to be used in addition to option 1 and/or option 2 then all "
"option 0 must appear after all option 1 or all option 2 in the G-Code file."
msgstr ""

#. type: Plain text
msgid "The options are:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Option"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Creates a temporary default material. +\n"
"     Material information added with this option will be discarded by a LinuxCNC restart or materials reload. They may also be overwritten by a new G-Code file that has temporary materials."
msgstr ""

#. type: Table
#, no-wrap
msgid "Adds a new material if the number specified does not exist."
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Overwrites an existing material if the number specified exists. +\n"
"     Adds a new material if the number specified does not exist."
msgstr ""

#. type: Plain text
msgid "Mandatory parameters are:"
msgstr ""

#. type: Table
#, no-wrap
msgid "o"
msgstr ""

#. type: Table
#, no-wrap
msgid "Selects the option to be used."
msgstr ""

#. type: Table
#, no-wrap
msgid "nu"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the material number (not used for option 0)."
msgstr ""

#. type: Table
#, no-wrap
msgid "n"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the material name (optional for option 0)."
msgstr ""

#. type: Table
#, no-wrap
msgid "p"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the pierce height."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the pierce delay."
msgstr ""

#. type: Table
#, no-wrap
msgid "c"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the cut height."
msgstr ""

#. type: Table
#, no-wrap
msgid "fr"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the feed rate."
msgstr ""

#. type: Plain text
msgid "Optional parameters are:"
msgstr ""

#. type: Table
#, no-wrap
msgid "kw"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the kerf width."
msgstr ""

#. type: Table
#, no-wrap
msgid "t"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the THC status (0=disabled, 1=enabled)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the cut amps."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the cut voltage."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the pause at end delay."
msgstr ""

#. type: Table
#, no-wrap
msgid "gp"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the gas pressure (PowerMax)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the cut mode (PowerMax)."
msgstr ""

#. type: Table
#, no-wrap
msgid "j"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the puddle jump height."
msgstr ""

#. type: Table
#, no-wrap
msgid "Sets the puddle jump delay."
msgstr ""

#. type: Plain text
msgid "A complete example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(o=1, nu=2, na=5mm Mild Steel 40A, ph=3.1, pd=0.1, ch=0.75, fr=3000, kw=0.5, th=1, ca=45, cv=110, pe=0.1, gp=5, cm=1, jh=0, jd=0)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "THC (Torch Height Controller)"
msgstr ""

#. type: Plain text
msgid ""
"The THC can be enabled or disabled from the THC frame of the <<qt_main-tab, "
"MAIN Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"The THC can also be enabled or disabled directly from the G-Code program."
msgstr ""

#. type: Plain text
msgid ""
"The THC does not become active until the velocity reaches 99.9% of the "
"*CutFeedRate* and then the THC *Delay* time if any in the THC section of the "
"<<qt_parameters-tab, PARAMETERS Tab>> has timed out. This is to allow the "
"arc voltage to stabilize."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC uses a control voltage which is dependent on the state of the "
"*AUTO VOLTS* checkbox on the <<qt_main-tab, MAIN Tab>>:"
msgstr ""

#. type: Plain text
msgid ""
"If *Use Auto Volts* is checked then the actual cut voltage is sampled at the "
"end of the THC *Delay* time and this is used as the target voltage to adjust "
"the height of the torch."
msgstr ""

#. type: Plain text
msgid ""
"If *Use Auto Volts* is not checked then the voltage displayed as Cut Volts "
"in the MATERIAL section of the <<qt_parameters-tab, PARAMETERS Tab>> is used "
"as the target voltage to adjust the height of the torch."
msgstr ""

#. type: Plain text
msgid "[underline]*G-Code THC*"
msgstr ""

#. type: Plain text
msgid ""
"THC may be disabled and enabled directly from G-Code, provided the THC is "
"not disabled in the THC Section of the <<qt_main-tab, MAIN Tab>>, by setting "
"or resetting the *motion.digital-out-02* pin with the M-Codes M62-M65:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M62 P2* will disable THC (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M63 P2* will enable THC (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M64 P2* will disable THC (Immediately)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M65 P2* will enable THC (Immediately)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M62 and M63* (Synchronized with Motion) - The actual change of the specified output (P2 (THC) for example) will happen at the beginning of the next motion command. If there is no subsequent motion command, the output changes will not occur. It is best practice to program a motion code (G0 or G1 for example) right after a M62 or M63.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M64 and M65* (Immediate) - These commands happen immediately as they are received by the motion controller. Since these are not synchronized with motion, they will break blending. This means if these codes are used in the middle of active motion codes, the motion will pause to activate these commands.\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Velocity Based THC*"
msgstr ""

#. type: Plain text
msgid ""
"If the cut velocity falls below a percentage of *CutFeedRate* (as defined by "
"the VAD Threshold % value in the THC frame of the CONFIGURATION section of "
"the <<qt_parameters-tab, PARAMETERS Tab>>) the THC will be locked until the "
"cut velocity returns to at least 99.9% of *CutFeedRate*. This will be made "
"apparent by the *THC Velocity Lock* indicator illuminating in the "
"<<qt_control-panel, CONTROL Panel>> on the <<qt_main-tab, MAIN Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"Velocity based THC prevents the torch height being changed when velocity is "
"reduced for a sharp corner or a small hole."
msgstr ""

#. type: Plain text
msgid ""
"It is important to note that <<qt_velocity-reduction, Velocity Reduction>> "
"affects the Velocity Based THC in the following ways:"
msgstr ""

#. type: Plain text
msgid ""
"If Velocity Reduction is invoked in the middle of the cut, the THC will be "
"locked."
msgstr ""

#. type: Plain text
msgid ""
"The THC will remain locked until the velocity reduction is canceled by "
"returning it to a value that is above the *VAD Threshold*, and the torch "
"actually reaches 99.9% of the *CutFeedRate*."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Cutter Compensation"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC (QtPlasmaC) has the ability to automatically adjust the cut path of "
"the current program by the amount specified in Kerf Width of the selected "
"material's Cut Parameters. This is helpful if the G-Code is programmed to "
"the nominal cut path and the user will be running the program on different "
"thickness materials to help ensure consistently sized parts."
msgstr ""

#. type: Plain text
msgid ""
"To use cutter compensation the user will need to use G41.1, G42.1 and G40 "
"with the kerf width HAL pin:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*G41.1 D#<_hal[plasmac_run.kerf-width-f]>* : offsets torch to the left of the programmed path\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*G42.1 D#<_hal[plasmac_run.kerf-width-f]>* : offsets torch to the right of the programmed path\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*G40* turns the cutter compensation off\n"
msgstr ""

#. type: Plain text
msgid ""
"IF *CUTTER COMPENSATION* IS IN EFFECT *G-CODE THC*, *VELOCITY BASED THC* AND "
"*OVERCUT* ARE NOT ABLE TO BE USED; AN ERROR MESSAGE WILL BE DISPLAYED."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Initial Height Sense (IHS) Skip"
msgstr ""

#. type: Plain text
msgid "IHS may be skipped in one of two different ways:"
msgstr ""

#. type: Plain text
msgid ""
"If the THC is disabled then the IHS skip will occur if the start of the cut "
"is less than *Skip IHS* distance from the last successful probe."
msgstr ""

#. type: Plain text
msgid ""
"If the THC is enabled then the IHS skip will occur if the start of the cut "
"is less than *Skip IHS* distance from the end of the last cut."
msgstr ""

#. type: Plain text
msgid "A value of zero for *Skip IHS* will disable IHS skipping."
msgstr ""

#. type: Plain text
msgid ""
"Any errors encountered during a cut will disable IHS skipping for the next "
"cut if *Skip IHS* is enabled."
msgstr ""

#. type: Table
#, no-wrap
msgid "Probing"
msgstr ""

#. type: Plain text
msgid ""
"Probing may be done with either ohmic sensing or a float switch. It is also "
"possible to combine the two methods, in which case the float switch will "
"provide a fallback to ohmic probing."
msgstr ""

#. type: Plain text
msgid ""
"If the machine's torch does not support ohmic probing, the user could have a "
"separate probe next to the torch. In this case the user would extend the "
"probe below the torch. The probe must NOT extend more than the minimum Cut "
"Height below the torch and the Z axis offset distance needs to be entered as "
"the *Ohmic Offset* in the PROBING frame of the CONFIGURATION section of the "
"<<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"Probing setup is done in the PROBING frame of the CONFIGURATION section of "
"the <<qt_parameters-tab, PARAMETERS Tab>>. Probing speed is controlled of "
"the CONFIGURATION section of the <<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC can probe at the full Z axis velocity so long as the machine has "
"enough movement in the float switch to absorb any overrun. If the machine's "
"float switch travel is suitable, the user could set the Probe Height to near "
"the Z axis MINIMUM_LIMIT and do all probing at full speed."
msgstr ""

#. type: Plain text
msgid ""
"Some float switches can exhibit a large switching hysteresis which shows up "
"in the probing sequence as an excessive time to complete the final probe up."
msgstr ""

#. type: Plain text
msgid "This time may be decreased by changing the speed of the final probe up."
msgstr ""

#. type: Plain text
msgid "This speed defaults to 0.001mm (0.000039\") per servo cycle."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to increase this speed by up to a factor of 10 by adding the "
"following line to the custom.hal file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.probe-final-speed n\n"
msgstr ""

#. type: Plain text
msgid ""
"where n is a value from 1-10. It is recommended to keep this value as low as "
"possible."
msgstr ""

#. type: Plain text
msgid ""
"Using this feature will change the final height slightly and will require "
"thorough probe testing to confirm the final height."
msgstr ""

#. type: Plain text
msgid ""
"This speed value affects ALL probing so if the user uses ohmic probing and "
"the user changes this speed value then the user will need to probe test to "
"set the require offset to compensate for this speed change as well as the "
"float travel."
msgstr ""

#. type: Plain text
msgid ""
"The reliability of this feature will only be as good as the repeatability of "
"the float switch."
msgstr ""

#. type: Plain text
msgid "Probe Height refers to the height above the Z axis MINIMUM_LIMIT."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Cut Types"
msgstr ""

#. type: Plain text
msgid "QtPlasmaC allows two different cut modes:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*NORMAL CUT* - runs the loaded G-Code program to pierce then cut.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*PIERCE ONLY* - converts the loaded G-Code program and then runs the program to pierce the material at the *M3 S1* or *M3 $0 S1* command positions only. Scribe (*M3 $1 S1*) and Spotting (*M3 $2 S1*) commands will be ignored and no pierce will take place in those locations.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Pierce Only* mode is useful for thick materials which may produce enough dross on the material surface from piercing to interfere with the torch while cutting. This enables the entire sheet to be pierced and cleaned off before cutting.\n"
msgstr ""

#. type: Plain text
msgid ""
"This also enables near-end-of-life consumables to be used for piercing and "
"then they can be swapped out for good consumables to be used while cutting."
msgstr ""

#. type: Plain text
msgid "There are two ways of enabling this feature:"
msgstr ""

#. type: Plain text
msgid ""
"Utilize the default <<qt_button-cut, custom user button>> to toggle between "
"the cut types."
msgstr ""

#. type: Plain text
msgid ""
"Adding the following line to the G-Code program before the first cut to "
"enable *Pierce Only* mode for the current file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#<pierce-only> = 1\n"
msgstr ""

#. type: Plain text
msgid ""
"If using a custom user button is utilized then QtPlasmaC will automatically "
"reload the file when the cut type is toggled."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hole Cutting - Intro"
msgstr ""

#. type: Plain text
msgid ""
"It is recommended that any holes to be cut have a diameter no less than one "
"and a half times the thickness of the material to be cut."
msgstr ""

#. type: Plain text
msgid ""
"It is also recommended that holes with a diameter of less than 32mm (1.26\") "
"are cut at 60% of the feed rate used for profile cuts. This should also lock "
"out THC due to velocity constraints."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC can utilize G-Code commands usually set by a CAM Post Processor "
"(PP) to aid in hole cutting or if the user does not have a PP or the user's "
"PP does not support these methods then QtPlasmaC can automatically adapt the "
"G-Code to suit. This automatic mode is disabled by default."
msgstr ""

#. type: Plain text
msgid ""
"There are three methods available for improving the quality of small holes:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Velocity Reduction* - <<qt_hole-cutting-velocity-reduction, Reducing the velocity>> to approximately 60% of the *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Arc Dwell (<<qt_pause-at-end, Pause At End>>)* - Keeping the torch on for a short time at the end of the hole while motion is stopped to allow the arc to catch up.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Overcut* - Turning the torch off at the end of the hole then continue along the path.\n"
msgstr ""

#. type: Plain text
msgid ""
"If both *Arc Dwell* and *Overcut* are active at the same time then *Overcut* "
"will take precedence."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*OVERCUT* IS NOT ABLE TO BE USED IF CUTTER COMPENSATION IS IN EFFECT; AN ERROR MESSAGE WILL BE DISPLAYED.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hole Cutting"
msgstr ""

#. type: Plain text
msgid ""
"G-Code commands can be set up by either by a CAM Post Processor (PP) or by "
"hand coding."
msgstr ""

#. type: Plain text
msgid "[underline]*Hole Cutting Velocity Reduction*"
msgstr ""

#. type: Plain text
msgid ""
"If cutting a hole requires a reduced velocity then the user would use the "
"following command to set the velocity: *M67 E3 Qnn* where nn is the "
"percentage of the velocity desired. For example, *M67 E3 Q60* would set the "
"velocity to 60% of the current material's *CutFeedRate*."
msgstr ""

#. type: Plain text
msgid "See the <<qt_velocity_thc,Velocity Based THC>> section."
msgstr ""

#. type: Plain text
msgid "Sample code:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G21 (metric)\n"
"G64 P0.005\n"
"M52 P1 (allow paused motion)\n"
"F#<_hal[plasmac.cut-feed-rate]> (feed rate from cut parameters)\n"
"G0 X10 Y10\n"
"M3 $0 S1 (start cut)\n"
"G1 X0\n"
"M67 E3 Q60 (reduce feed rate to 60%)\n"
"G3 I10 (the hole)\n"
"M67 E3 Q0 (restore feed rate to 100%)\n"
"M5 $0 (end cut)\n"
"G0 X0 Y0\n"
"M2 (end job)\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Arc Dwell (Pause At End)*"
msgstr ""

#. type: Plain text
msgid ""
"This method can be invoked by setting the <<qt_pause-at-end, Pause At End>> "
"parameter in the MATERIAL frame of the <<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Plain text
msgid "[underline]*Overcut*"
msgstr ""

#. type: Plain text
msgid ""
"The torch can be turned off at the end of the hole by setting the *motion."
"digital-out-03* pin with the M-Codes *M62 (Synchronized with Motion)* or "
"*M64 (Immediate)*. After turning the torch off it is necessary to allow the "
"torch to be turned on again before beginning the next cut by resetting the "
"*motion.digital-out-03* pin with the M-Codes *M63* or *M65*, this will be "
"done automatically by the QtPlasmaC G-Code parser if it reaches an M5 "
"command without seeing a *M63 P3* or *M65 P3*."
msgstr ""

#. type: Plain text
msgid ""
"After the torch is turned off the hole path will be followed for a default "
"length of 4mm (0.157\"). This distance may be specified by adding "
"*#<oclength> = n* to the G-Code file."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M62 P3* will turn the torch off (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M63 P3* will allow the torch to be turned on (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M64 P3* will turn the torch off (Immediately)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M65 P3* will allow the torch to be turned on (Immediately)\n"
msgstr ""

#. type: Plain text
msgid ""
"It is important to thoroughly understand the difference between "
"*Synchronized with motion* and *Immediate*:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G21 (metric)\n"
"G64 P0.005\n"
"M52 P1 (allow paused motion)\n"
"F#<_hal[plasmac.cut-feed-rate]> (feed rate from cut parameters)\n"
"G0 X10 Y10\n"
"M3 $0 S1 (start cut)\n"
"G1 X0\n"
"M67 E3 Q60 (reduce feed rate to 60%)\n"
"G3 I10 (the hole)\n"
"M62 P3 (turn torch off)\n"
"G3 X0.8 Y6.081 I10 (continue motion for 4mm)\n"
"M63 P3 (allow torch to be turned on)\n"
"M67 E3 Q0 (restore feed rate to 100%)\n"
"M5 $0 (end cut)\n"
"G0 X0 Y0\n"
"M2 (end job)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hole Cutting - Automatic"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC has the ability to automatically modify the G-Code to reduce the "
"velocity and/or apply *Overcut* which can be useful when cutting holes."
msgstr ""

#. type: Plain text
msgid ""
"The default hole size for QtPlasmaC hole sensing is 32mm (1.26\"). It is "
"possible to change this value with the following command in a G-Code file:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<h_diameter> = nn* - To set a diameter (nn) in the same units system as the rest of the G-Code file.\n"
msgstr ""

#. type: Plain text
msgid ""
"The default velocity for QtPlasmaC small holes is 60% of the current feed "
"rate. It is possible to change this value with the following command in a G-"
"Code file:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<h_velocity> = nn* - to set the percentage (nn) of the current feed rate required.\n"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC Hole Sensing is disabled by default. It can be enabled/disabled by "
"using the following G-Code parameters to select the desired hole sensing "
"mode:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<holes> = 0* - Causes QtPlasmaC to disable hole sensing if it was previously enabled.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<holes> = 1* - Causes QtPlasmaC to reduce the speed of holes less than 32mm (1.26\") to 60% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<holes> = 2* - Causes QtPlasmaC to <<qt_overcut, Overcut>> the hole in addition to the velocity changes in setting 1.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<holes> = 3* - Causes QtPlasmaC to reduce the speed of holes less than 32mm (1.26\") and arcs less than 16mm (0.63\") to 60% of *CutFeedRate*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<holes> = 4* - Causes QtPlasmaC to <<qt_overcut, Overcut>> the hole in addition to the velocity change in setting 3.\n"
msgstr ""

#. type: Plain text
msgid ""
"This feature can be used in addition to setting the desired hole sensing "
"mode via the appropriate G-Code parameter by setting the <<qt_pause-at-end, "
"Pause At End>> parameter in the MATERIAL frame of the <<qt_parameters-tab, "
"PARAMETERS Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"If Hole Sensing modes 2 or 4 are active, QtPlasmaC will overcut the hole in "
"addition to the velocity changes associated with modes 1 and 3."
msgstr ""

#. type: Plain text
msgid ""
"The default overcut length for QtPlasmaC hole sensing is 4mm (0.157\"). It "
"is possible to change this value with the following command in a G-Code file:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*#<oclength> = nn* to specify an overcut length (nn) in the same units system as the rest of the G-Code file.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G21 (metric)\n"
"G64 P0.005\n"
"M52 P1 (allow paused motion)\n"
"F#<_hal[plasmac.cut-feed-rate]> (feed rate from cut parameters)\n"
"#<holes> = 2 (overcut for holes)\n"
"#<oclength> = 6.5 (optional, 6.5mm overcut length)\n"
"G0 X10 Y10\n"
"M3 $0 S1 (start cut)\n"
"G1 X0\n"
"G3 I10 (the hole)\n"
"M5 $0 (end cut)\n"
"G0 X0 Y0\n"
"M2 (end job)\n"
msgstr ""

#. type: Plain text
msgid ""
"It is OK to have multiple and mixed hole commands in a single G-Code file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Single Cut"
msgstr ""

#. type: Plain text
msgid ""
"A single cut is a single unidirectional cutting move often used to cut a "
"sheet into smaller pieces prior to running a G-Code program."
msgstr ""

#. type: Plain text
msgid "The machine needs to be homed before commencing a single cut."
msgstr ""

#. type: Plain text
msgid "A single cut will commence from the machine's current X/Y position."
msgstr ""

#. type: Plain text
msgid "[underline]*Automatic Single Cut*"
msgstr ""

#. type: Plain text
msgid ""
"This is the preferred method. The parameters for this method are entered in "
"the following dialog box that is displayed after pressing a <<qt_button-"
"single, user button>> which has been coded to run single cut:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_single_cut.png"
msgstr ""

#. type: Plain text
msgid "Jog to the required X/Y start position. +"
msgstr ""

#. type: Plain text
msgid ""
"Set required appropriate material, or edit the Feed Rate for the default "
"material in the PARAMETERS tab. +"
msgstr ""

#. type: Plain text
msgid "Press the assigned single cut user button. +"
msgstr ""

#. type: Plain text
msgid "Enter the length of the cut along the X and/or Y axes. +"
msgstr ""

#. type: Plain text
msgid "Press the *CUT* button and the cut will commence."
msgstr ""

#. type: Plain text
msgid "[underline]*Pendant Single Cut*"
msgstr ""

#. type: Plain text
msgid ""
"If the machine is equipped with a pendant that can start and stop the "
"spindle plus jog the X and Y axes, the user can manually perform a single "
"cut."
msgstr ""

#. type: Plain text
msgid "Set the required feed rate with the Jog Speed slider. +"
msgstr ""

#. type: Plain text
msgid "Start the cut process by starting the spindle. +"
msgstr ""

#. type: Plain text
msgid "After probing the torch will fire. +"
msgstr ""

#. type: Plain text
msgid ""
"When the Arc OK is received the machine can be jogged along the cut line "
"using the jog buttons. +"
msgstr ""

#. type: Plain text
msgid "When the cut is complete stop the spindle. +"
msgstr ""

#. type: Plain text
msgid ""
"The torch will turn off and the Z axis will return to the starting position."
msgstr ""

#. type: Plain text
msgid "[underline]*Manual Single Cut*"
msgstr ""

#. type: Plain text
msgid ""
"Manual single cut requires that either <<qt_keyboard-shortcuts, keyboard "
"shortcuts>> are enabled in the GUI SETTINGS section of the PARAMETERS Tab, "
"or a custom user button is specified as a <<qt_button-mancut, manual cut>> "
"button."
msgstr ""

#. type: Plain text
msgid ""
"If the user is using a custom user button then substitute *F9* with *User "
"Button* in the following description."
msgstr ""

#. type: Plain text
msgid ""
"Start the procedure by pressing *F9*. The jog speed will be automatically "
"set to the feed rate of the currently selected material. The jog label will "
"blink to indicate that the jog speed is temporarily being overridden (jog "
"speed manipulation will be disabled while a manual cut is active). *CYCLE "
"START* will change to *MANUAL CUT* and blink. +"
msgstr ""

#. type: Plain text
msgid ""
"When the Arc OK is received the machine can be jogged along the cut line "
"using the jog keys. +"
msgstr ""

#. type: Plain text
msgid ""
"The Z height will remain locked at the cut height for the duration of the "
"manual cut, regardless of the Torch Height Controller *ENABLE* status."
msgstr ""

#. type: Plain text
msgid ""
"When the cut is complete press *F9* or *Esc* or the *CYCLE STOP* button. +"
msgstr ""

#. type: Plain text
msgid ""
"The torch will turn off and the Z axis will return to the starting position. "
"+"
msgstr ""

#. type: Plain text
msgid ""
"The jog speed will automatically be returned to the value it was prior to "
"initiating the manual cut process, the label will stop blinking and the jog "
"speed manipulation will be enabled. *MANUAL CUT* will stop blinking and "
"revert to *CYCLE START*."
msgstr ""

#. type: Plain text
msgid ""
"If the torch flames out during cutting, the user must still press *F9* or "
"*Esc* or the *CYCLE STOP* button to end the cut. This clears the Z offsets "
"and returns the torch to the starting position."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Mesh Mode (Expanded Metal Cutting)"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC is capable of cutting of expand (mesh) metal provided the machine "
"has a pilot arc torch and it is capable of Constant Pilot Arc (CPA) mode."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Mesh Mode* disables the THC and also ignores a lost Arc OK signal during a cut. It can be selected by checking the *Mesh Mode* check button in the CONTROL section of the <<qt_main-tab, MAIN Tab>>.\n"
msgstr ""

#. type: Plain text
msgid ""
"If the machine has <<qt_pm_comms, RS485>> communications enabled with a "
"Hypertherm PowerMax plasma cutter, selecting *Mesh Mode* will automatically "
"override the *Cut Mode* for the currently selected material and set it to "
"cut mode 2 (CPA). When *Mesh Mode* is disabled, the *Cut Mode* will be "
"return to the default cut mode for the currently selected material."
msgstr ""

#. type: Plain text
msgid ""
"It is also possible to start a *Mesh Mode* cut without receiving an Arc OK "
"signal by checking the *Ignore Arc OK* check button in the CONTROL section "
"of the <<qt_main-tab, MAIN Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"Both *Mesh Mode* and *Ignore Arc OK* can be enabled/disabled at any time "
"during a job."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ignore Arc OK"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Ignore Arc OK* mode disables the THC, will begin a cut without requiring an Arc OK signal, and will ignore a lost Arc OK signal during a cut.\n"
msgstr ""

#. type: Plain text
msgid "This mode can be selected by:"
msgstr ""

#. type: Plain text
msgid ""
"Checking the *Ignore Arc OK* check button in the CONTROL section of the "
"<<qt_main-tab, MAIN Tab>>. +"
msgstr ""

#. type: Plain text
msgid "Setting HAL pin *motion.digital-out-01* to 1 via G-Code."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M62 P1* will enable *Ignore Arc OK* (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M63 P1* will disable *Ignore Arc OK* (Synchronized with Motion)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M64 P1* will enable *Ignore Arc OK* (Immediately)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M65 P1* will disable *Ignore Arc OK* (Immediately)\n"
msgstr ""

#. type: Plain text
msgid ""
"This mode may also be used in conjunction with *Mesh Mode* if the user "
"doesn't require an Arc OK signal to begin the cut."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Cut Recovery"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_cut_recovery.png"
msgstr ""

#. type: Plain text
msgid ""
"This feature will produce a CUT RECOVERY panel that will allow the torch to "
"be moved away from the cut path during a <<qt_paused-motion, paused motion>> "
"event in order to position the torch over a scrap portion of the material "
"being cut so that the cut restarts with a minimized arc-divot. The CUT "
"RECOVERY panel will display automatically over top of the JOGGING panel when "
"motion is paused."
msgstr ""

#. type: Plain text
msgid ""
"It is preferable to make torch position adjustments from the point at which "
"paused motion occurred, however if moving along the cut path is necessary "
"prior to setting the new start point, the user may use the paused motion "
"controls (*REV*, *FWD*, and a *JOG-SPEED* slider) at the top of the CUT "
"RECOVERY panel. Once the user is satisfied with the positioning of the torch "
"along the cut path, moving off the cut path is achieved by pressing the "
"*DIRECTION* buttons. Each press of the *DIRECTION* button will move the "
"torch a distance equivalent to the *Kerf Width* parameter of the currently "
"selected material."
msgstr ""

#. type: Plain text
msgid ""
"The moment the torch has been moved off the cut path, the paused motion "
"controls (*REV*, *FWD*, and a *JOG-SPEED* slider) at the top of the CUT "
"RECOVERY panel will become disabled."
msgstr ""

#. type: Plain text
msgid ""
"Once the torch position is satisfactory, press *CYCLE RESUME* and the cut "
"will resume from the new position and travel the shortest distance to the "
"original paused motion location. The CUT RECOVERY panel will close and the "
"JOGGING panel will display when the torch returns to the original paused "
"motion location."
msgstr ""

#. type: Plain text
msgid ""
"Pressing *CANCEL* (or *CYCLE STOP*) will cause the torch to move back to "
"where it was positioned when the motion became paused and the CUT RECOVERY "
"panel overlay will return to the JOGGING panel."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Run From Line"
msgstr ""

#. type: Plain text
msgid ""
"If the user has the Run From Line option enabled in the GUI SETTINGS section "
"of the <<qt_parameters-tab, PARAMETERS Tab>> they will have the ability to "
"start from any line in a G-Code program via the following methods:"
msgstr ""

#. type: Plain text
msgid "Clicking any line in the Preview Window"
msgstr ""

#. type: Plain text
msgid "Clicking any line in the G-Code Window"
msgstr ""

#. type: Plain text
msgid ""
"Note that the Run From Line function will run from the beginning of the "
"selected line."
msgstr ""

#. type: Plain text
msgid ""
"It is important to note that G-Code programs can be run from any selected "
"line using this method, however a leadin may not be possible depending on "
"the line selected. In this case, an error message will be displayed to let "
"the user know the leadin calculation was not possible."
msgstr ""

#. type: Plain text
msgid ""
"Once the user has selected the starting place, the *CYCLE START* button will "
"blink *\"SELECTED nn\"* where nn is the corresponding line number selected. "
"Clicking this button will bring up the following Run From Line dialog box:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_run_from_line.png"
msgstr ""

#. type: Table
#, no-wrap
msgid "USE LEADIN"
msgstr ""

#. type: Table
#, no-wrap
msgid "This radio button will allow the user to start the selected line with a leadin."
msgstr ""

#. type: Table
#, no-wrap
msgid "LEADIN LENGTH"
msgstr ""

#. type: Table
#, no-wrap
msgid "If USE LEADIN is selected, this will set the length of the lead in the machine units."
msgstr ""

#. type: Table
#, no-wrap
msgid "LEADIN ANGLE"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"If USE LEADIN is selected, this will set the angle of approach for the leadin. +\n"
"            The angle is measured such that positive increases in value move the leadin counter-clockwise: +\n"
"            0 Degrees = 3 o'clock position +\n"
"            90 Degrees = 12 o'clock position +\n"
"            180 Degrees = 9 o'clock position +\n"
"            270 Degrees = 6 o'clock position"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button will cancel the Run From Line dialog box and any selections."
msgstr ""

#. type: Table
#, no-wrap
msgid "LOAD"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"This button will load a temporary \"rfl.ngc\" program with any selected leadin parameters applied. +\n"
"        If the leadin cannot be calculated for the selected line, the following error message will be displayed: +\n"
"        \"Unable to calculate a leadin for this cut +\n"
"        Program will run from selected line with no leadin applied\""
msgstr ""

#. type: Plain text
msgid ""
"After pressing *LOAD*, the blinking \"SELECTED nn\" button will change to "
"*RUN FROM LINE CYCLE START* button. Click this button to start the program "
"from the beginning of the selected line."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Run From Line selections may be canceled in the following ways:*\n"
msgstr ""

#. type: Plain text
msgid ""
"Click the background of the preview window - this method will cancel a "
"selection of either a cut line in the preview window, or a G-Code line in "
"the G-Code window."
msgstr ""

#. type: Plain text
msgid ""
"Clicking *RELOAD* in the G-Code window header - this method will cancel the "
"Run From Line process if LOAD was clicked on the Run From Line dialog box "
"and \"rfl.ngc\" is displayed as the loaded file name in the G-Code window "
"header. This will return the user to the originally loaded file."
msgstr ""

#. type: Plain text
msgid ""
"It is not possible to select a new line once Run From Line is active. To "
"select a different line, the user must press *RELOAD* and start over."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Scribe"
msgstr ""

#. type: Plain text
msgid "A scribe may be operated by QtPlasmaC in addition to the plasma torch."
msgstr ""

#. type: Plain text
msgid ""
"Using a scribe requires the use of the LinuxCNC tool table. Tool 0 is "
"assigned to the plasma torch and Tool 1 is assigned to the scribe. The "
"scribe X and Y axes offsets from the plasma torch need to be entered into "
"the LinuxCNC tool table. This is done by editing the tool table via the main "
"GUI, or by editing the *tool.tbl* file in the *<machine_name>* configuration "
"directory. This will be done after the scribe can move to the work piece to "
"help determine the appropriate offset."
msgstr ""

#. type: Plain text
msgid ""
"The plasma torch offsets for X and Y will always be zero. The tools are "
"selected by the *Tn M6* command followed by a *G43 H0* command which is "
"required to apply the offsets. The tool is then started with a *M3 $n S1* "
"command. For *n*, use 0 for torch cutting or 1 for scribing."
msgstr ""

#. type: Plain text
msgid "To stop the scribe, use the G-Code command *M5 $1*."
msgstr ""

#. type: Plain text
msgid ""
"If the user has not yet assigned the HAL pins for the scribe in the "
"configuration wizard then they may do so by using the appropriate "
"<<configuring, configuration wizard>> or by manually editing the hal file, "
"see <<qt_modify-config, modifying QtPlasmaC>>."
msgstr ""

#. type: Plain text
msgid ""
"There are two HAL output pins used to operate the scribe, the first pin is "
"used to arm the scribe which moves the scribe to the surface of the "
"material. After the <<qt_scribe-config, Arm Delay>> has elapsed, the second "
"pin is used to start the scribe. After the <<qt_scribe-config, On Delay>> "
"has elapsed, motion will begin."
msgstr ""

#. type: Plain text
msgid ""
"Using QtPlasmaC after enabling the scribe requires the selection of either "
"the torch or the scribe in each G-Code file as a LinuxCNC tool."
msgstr ""

#. type: Plain text
msgid ""
"The next step is to open the tool table editor in the GUI or edit *tool.tbl* "
"in the *<machine_name>* configuration directory and enter the X and Y axes "
"offsets. These are the distances in X and Y the scribe is away from the "
"torch as measured from the center of the torch nozzle. In most cases, if the "
"user is standing at the front of the machine and the scribe is to the right "
"of the torch, a positive X offset would be required. Similarly, if the "
"scribe is to the rear of the torch, a positive Y offset would be required. "
"The offsets for the torch should always be zero."
msgstr ""

#. type: Plain text
msgid ""
"The final step is to set the <<qt_scribe-config, scribe delays>> required:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Arm Delay* - allows time for the scribe to descend to the surface of the material.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*On Delay* - allows time for the scribe to start before motion begins.\n"
msgstr ""

#. type: Plain text
msgid "Save the parameters in the Config tab."
msgstr ""

#. type: Plain text
msgid ""
"After the above directions are completed, the scribe may be tested manually "
"by issuing a *M3 $1 S1* command in the MDI input. The user may find it "
"helpful to use this method to scribe a small divot and then try to pulse the "
"torch in the same location to align the offsets between the scribe and the "
"torch."
msgstr ""

#. type: Plain text
msgid "To use the scribe from G-Code:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"...\n"
"M52 P1 (paused motion on)\n"
"F#<_hal[plasmac.cut-feed-rate]>\n"
"T1 M6 (select scribe)\n"
"G43 H0 (apply offsets for current tool)\n"
"M3 $1 S1 (start the scribe)\n"
".\n"
"M5 $1 (stop the scribe)\n"
".\n"
"T0 M6 (select torch)\n"
"G43 H0 (apply offsets for current tool)\n"
"G0 X0 Y0 (parking position)\n"
"M5 $-1 (end all)\n"
msgstr ""

#. type: Plain text
msgid ""
"It is a good idea to switch back to the torch at the end of the program "
"before the final rapid parking move so the machine is always in the same "
"state at idle."
msgstr ""

#. type: Plain text
msgid ""
"The user can switch between the torch and the scribe any number of times "
"during a program by using the appropriate G-Codes."
msgstr ""

#. type: Plain text
msgid ""
"Issuing *M3 S1* (without $n) will cause the machine to behave as if an *M3 "
"$0 S1* had been issued and issuing *M5* (without $n) will cause the machine "
"to behave as if an *M5 $0* had been issued. This will control the torch "
"firing by default in order to provide backward compatibility for previous G-"
"Code files."
msgstr ""

#. type: Plain text
msgid ""
"If there is an existing manual tool change parameter set in the "
"<machine_name>.hal file then QtPlasmaC will convert it to an automatic tool "
"change."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spotting"
msgstr ""

#. type: Plain text
msgid ""
"To achieve spotting to mark the material prior to drilling etc., QtPlasmaC "
"can pulse the torch for a short duration to mark the spot to drill."
msgstr ""

#. type: Plain text
msgid "Spotting can be configured by following these steps:"
msgstr ""

#. type: Plain text
msgid ""
"Set the arc voltage *Threshold* in the Spotting section of the "
"<<qt_parameters-tab, PARAMETERS Tab>>. Setting the voltage threshold to zero "
"will cause the delay timer to begin immediately upon starting the torch. "
"Setting the voltage threshold above zero will cause the delay timer to begin "
"when the arc voltage reaches the threshold voltage."
msgstr ""

#. type: Plain text
msgid ""
"Set the *Time On* in the Spotting section of the <<qt_parameters-tab, "
"PARAMETERS Tab>>. When the *Time On* timer has elapsed, the torch will turn "
"off. Times are adjustable from 0 to 9999 milliseconds."
msgstr ""

#. type: Plain text
msgid ""
"The torch is then turned on in G-Code with the *M3 $2 S1* command which "
"selects the plasma torch as a spotting tool."
msgstr ""

#. type: Plain text
msgid "To turn the torch off, use the G-Code command *M5 $2*."
msgstr ""

#. type: Plain text
msgid ""
"For more information on multiple tools, see <<qt_multi-tool, multiple "
"tools>>."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC (QtPlasmaC) requires some motion between any *M3* and *M5* "
"commands. For this reason, a minimal movement at a high speed is required to "
"be programmed."
msgstr ""

#. type: Plain text
msgid "An example G-Code is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G21 (metric)\n"
"F99999 (high feed rate)\n"
".\n"
".\n"
"G0 X10 Y10\n"
"M3 $2 S1 (spotting on)\n"
"G91 (relative distance mode)\n"
"G1 X0.000001\n"
"G90 (absolute distance mode)\n"
"M5 $2 (spotting off)\n"
".\n"
".\n"
"G0 X0 Y0\n"
"G90\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"The *high feed rate* of 99999 is to ensure that the motion is at the "
"machine's highest feed rate."
msgstr ""

#. type: Plain text
msgid ""
"SOME PLASMA CUTTERS WILL NOT BE SUITABLE FOR THIS FEATURE. + IT IS "
"RECOMMENDED THAT THE USER CARRY OUT SOME TEST SPOTTING TO ENSURE THAT THE "
"PLASMA CUTTER IS CAPABLE OF UTILIZING THIS FEATURE."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Virtual Keyboard Custom Layouts"
msgstr ""

#. type: Plain text
msgid ""
"Virtual keyboard support is available for only the \"onboard\" onscreen "
"keyboard. If it is not already on the system it may be installed by typing "
"the following in a terminal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt install onboard\n"
msgstr ""

#. type: Plain text
msgid "The following two custom layouts are used for soft key support:"
msgstr ""

#. type: Named 'title' AttributeList argument for macro 'image'
#, no-wrap
msgid "Number keypad - used for the CONVERSATIONAL Tab and the PARAMETERS Tab"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_numpad.png"
msgstr ""

#. type: Named 'title' AttributeList argument for macro 'image'
#, no-wrap
msgid "Alpha-numeric keypad - used for G-Code editing and file management."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_keypad.png"
msgstr ""

#. type: Plain text
msgid ""
"If the virtual keyboard has been repositioned and on the next opening of a "
"virtual keyboard it is not visible then clicking twice on the onboard icon "
"in the system tray will reposition the virtual keyboard so the move handle "
"is visible."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Keyboard Shortcuts"
msgstr ""

#. type: Plain text
msgid "Below is a list of all available keyboard shortcuts in QtPlasmaC."
msgstr ""

#. type: Plain text
msgid "All keyboard shortcuts are disabled by default."
msgstr ""

#. type: Plain text
msgid ""
"In order to utilize them, *KB Shortcuts* must be enabled in the *GUI "
"SETTINGS* section of the *PARAMETERS Tab*."
msgstr ""

#. type: Table
#, no-wrap
msgid "*Keyboard Shortcut"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Action*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Aborts current automated motion (example: a running program, a probe test, etc.) as well as an active torch pulse (behaves the same as clicking CYCLE STOP)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggles the E-STOP button (if the GUI E-STOP button is enabled)."
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggles the GUI power button."
msgstr ""

#. type: Table
#, no-wrap
msgid "F9"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggles the \"Cutting\" command, used to begin or end a manual cut."
msgstr ""

#. type: Table
#, no-wrap
msgid "F12"
msgstr ""

#. type: Table
#, no-wrap
msgid "Show stylesheet editor."
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 10% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 20% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 30% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 40% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 50% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "6"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 60% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "7"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 70% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 80% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 90% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes jog speed to 100% of the value present in the DEFAULT_LINEAR_VELOCITY variable in the [DISPLAY] section of the <machine_name>.ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 10%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 20%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 30%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 40%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 50%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+6"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 60%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+7"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 70%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 80%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+9"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 90%."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT+0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes rapid speed to 100%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 10%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 20%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 30%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 40%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 50%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+6"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 60%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+7"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 70%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 80%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+9"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 90%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Changes feed rate to 100%."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+H or HOME"
msgstr ""

#. type: Table
#, no-wrap
msgid "Homes all axes if they are not yet homed and have a homing sequence set in the <machine_name>.ini file. If they are already homed, they will no longer be homed."
msgstr ""

#. type: Table
#, no-wrap
msgid "CTRL+R"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cycle Start if the program is not already running. Cycle Resume if the program is paused."
msgstr ""

#. type: Table
#, no-wrap
msgid "END"
msgstr ""

#. type: Table
#, no-wrap
msgid "Touches off X and Y to 0."
msgstr ""

#. type: Table
#, no-wrap
msgid "SPACE BAR"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pause motion."
msgstr ""

#. type: Table
#, no-wrap
msgid "Opens a new program."
msgstr ""

#. type: Table
#, no-wrap
msgid "L"
msgstr ""

#. type: Table
#, no-wrap
msgid "Loads the previously opened program if no program is loaded. Reloads the current program if there is a program loaded."
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the X axis positive."
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the X axis negative."
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the Y axis positive."
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the Y axis negative."
msgstr ""

#. type: Table
#, no-wrap
msgid "PAGE UP"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the Z axis positive."
msgstr ""

#. type: Table
#, no-wrap
msgid "PAGE DOWN"
msgstr ""

#. type: Table
#, no-wrap
msgid "jog the Z axis negative."
msgstr ""

#. type: Table
#, no-wrap
msgid "["
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the A axis positive."
msgstr ""

#. type: Table
#, no-wrap
msgid "]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the A axis negative."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "."
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the B axis positive."
msgstr ""

#. type: Table
#, no-wrap
msgid ","
msgstr ""

#. type: Table
#, no-wrap
msgid "Jogs the B axis negative."
msgstr ""

#. type: Table
#, no-wrap
msgid "SHIFT (+ Jog Key)"
msgstr ""

#. type: Table
#, no-wrap
msgid "The shift key is used with any jog key to invoke a rapid jog."
msgstr ""

#. type: Table
#, no-wrap
msgid "+ (+ Jog Key)"
msgstr ""

#. type: Table
#, no-wrap
msgid "The plus key can be used with any jog key to invoke a rapid jog (behaves the same as SHIFT)."
msgstr ""

#. type: Table
#, no-wrap
msgid "- (+ Jog Key)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"The minus key can be used with any jog key to invoke a slow jog (10% of the displayed jog speed) +\n"
"   If SLOW jogging is already active, the axis will jog at the displayed jog speed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Conversational Shape Library"
msgstr ""

#. type: Plain text
msgid ""
"The *Conversational Shape Library* consists of several basic shapes and "
"functions to assist the user with generating quick G-Code at the machine to "
"cut simple shapes quickly. This feature is found on the <<qt_conversational-"
"tab, CONVERSATIONAL Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"The Conversational Library is not meant to be a CAD/CAM replacement as there "
"are limitations to what can be achieved."
msgstr ""

#. type: Plain text
msgid ""
"Blank entries in the shape input boxes will use the current setting at the "
"time the G-Code was generated. For example, if *X start* was left blank then "
"the current X axis position would be used."
msgstr ""

#. type: Plain text
msgid "All lead-ins and lead-outs are arcs except for:"
msgstr ""

#. type: Plain text
msgid "Small holes"
msgstr ""

#. type: Plain text
msgid "Stars"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*The cut order will occur in the same order as the shape was built.*\n"
msgstr ""

#. type: Plain text
msgid ""
"Pressing *Return* on the keyboard while editing parameters will "
"automatically show the preview of the shape if there are enough parameters "
"entered to create the shape. Clicking any of the available check boxes will "
"do the same."
msgstr ""

#. type: Plain text
msgid "The general functions are as follows:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Material Drop Down"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Allows the user to select the desired material for cutting. +\n"
"                    If \"VIEW MATERIAL\" is selected on the <<qt_parameters-tab, PARAMETERS Tab>>, a visual reference showing key material cut settings will be displayed on the Conversational Preview Window. +\n"
"                    Examples are:  Feed Rate, Pierce Height, Pierce Delay, Cut Height, and Kerf Width (for Conversational only). Cut Amps will be shown if PowerMax communications are enabled."
msgstr ""

#. type: Table
#, no-wrap
msgid "NEW"
msgstr ""

#. type: Table
#, no-wrap
msgid "Removes the current G-Code file and load a blank G-Code file."
msgstr ""

#. type: Table
#, no-wrap
msgid "SAVE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Opens a dialog box allowing the current shape to be saved as a G-Code file."
msgstr ""

#. type: Table
#, no-wrap
msgid "SETTINGS"
msgstr ""

#. type: Table
#, no-wrap
msgid "Allows the changing of the global settings."
msgstr ""

#. type: Table
#, no-wrap
msgid "SEND"
msgstr ""

#. type: Table
#, no-wrap
msgid "Loads the current shape into LinuxCNC (QtPlasmaC). If the last edit was not added then it will be discarded."
msgstr ""

#. type: Table
#, no-wrap
msgid "PREVIEW"
msgstr ""

#. type: Table
#, no-wrap
msgid "Displays a preview of the current shape provided the required information is present."
msgstr ""

#. type: Table
#, no-wrap
msgid "CONTINUE"
msgstr ""

#. type: Table
#, no-wrap
msgid "This button is used for lines and arcs only. Allows another segment to be added to the current segment/segments."
msgstr ""

#. type: Table
#, no-wrap
msgid "ADD"
msgstr ""

#. type: Table
#, no-wrap
msgid "Stores the current shape into the current job."
msgstr ""

#. type: Table
#, no-wrap
msgid "UNDO"
msgstr ""

#. type: Table
#, no-wrap
msgid "Reverts to the previously stored state. +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Reloads the original G-Code file or a blank file if none was loaded."
msgstr ""

#. type: Plain text
msgid ""
"If there is a G-Code file loaded in LinuxCNC (QtPlasmaC) when the "
"CONVERSATIONAL Tab is selected, that code will be imported into the "
"conversational as the first shape of the job. If this code is not required "
"then it can be removed by pressing the *NEW* button."
msgstr ""

#. type: Plain text
msgid ""
"If there is an added shape that is unsaved or unsent then it is not possible "
"to switch tabs in the GUI. To re-enable switching tabs it is necessary to "
"either *SAVE* the shape, *SEND* the shape, or press *NEW* to remove the "
"shape."
msgstr ""

#. type: Plain text
msgid ""
"If *NEW* is pressed to remove an added shape that is unsaved or unsent then "
"a warning dialog will be displayed."
msgstr ""

#. type: Plain text
msgid ""
"All distances are in machine units relative to the current User Coordinate "
"System and all angles are in degrees."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Settings"
msgstr ""

#. type: Plain text
msgid ""
"Global settings for the shape library can be set by pressing the *SETTINGS* "
"button in the CONVERSATIONAL Tab. This will display all of the available "
"settings parameters that are used for G-Code program creation. These include:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Preamble*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Postamble*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Origin (Center or Bottom Left)*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Lead-in length*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Lead-out length*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Small hole diameter*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Small hole speed*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Preview Window Grid Size*\n"
msgstr ""

#. type: Plain text
msgid ""
"Any internal circle that has a diameter less than *Small hole diameter* is "
"classified as a small hole and will have a straight lead-in with a length "
"that is the lesser of either the radius of the hole or the specified lead-in "
"length. It will also have its feed rate set to *Small hole speed*."
msgstr ""

#. type: Plain text
msgid "Pressing the *RELOAD* button will discard any changed settings."
msgstr ""

#. type: Plain text
msgid "Pressing the *SAVE* button will save all the settings as displayed."
msgstr ""

#. type: Plain text
msgid ""
"After pressing *SAVE* or *RELOAD*, the settings panel will close and the "
"user may press click on any shape to start/resume the Conversational process."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Lines And Arcs"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_conv_line.png"
msgstr ""

#. type: Plain text
msgid ""
"Lines and arcs have an additional option in that they may be strung together "
"to create a complex shape."
msgstr ""

#. type: Plain text
msgid "There are two line types and three arc types available:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Line* given a start point and an end point.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Line* given a start point, length, and angle.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Arc* given a start point, way point, and end point.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Arc* given a start point, end point, and radius.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Arc* given a start point, length, angle, and radius.\n"
msgstr ""

#. type: Plain text
msgid "To use lines and arcs:"
msgstr ""

#. type: Plain text
msgid "Select the *Lines and Arcs* icon."
msgstr ""

#. type: Plain text
msgid "Select the type of line or arc to create."
msgstr ""

#. type: Plain text
msgid ""
"Choose the material from the MATERIAL drop down. If no material is chosen, "
"the default material (00000) will be used."
msgstr ""

#. type: Plain text
msgid "Enter the desired parameters."
msgstr ""

#. type: Plain text
msgid "Press *PREVIEW* to see the shape."
msgstr ""

#. type: Plain text
msgid "If satisfied with the shape press *CONTINUE*."
msgstr ""

#. type: Plain text
msgid ""
"Change the line or arc type if needed and continue this procedure until the "
"shape is complete."
msgstr ""

#. type: Plain text
msgid ""
"Press *SEND* to send the G-Code file to LinuxCNC (QtPlasmaC) for cutting."
msgstr ""

#. type: Plain text
msgid ""
"If the user wishes to create a closed shape, they will need to create any "
"required lead-in as the first segment of the shape. If a lead-out is "
"required it will need to be the last segment of the shape."
msgstr ""

#. type: Plain text
msgid ""
"At this stage there is no automatic option for a lead-in/lead-out creation "
"if the shape is closed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Single Shape"
msgstr ""

#. type: Plain text
msgid "The following shapes are available for creation:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_conv_shapes.png"
msgstr ""

#. type: Plain text
msgid "To create a shape:"
msgstr ""

#. type: Plain text
msgid ""
"Select the corresponding icon for the shape to create. The available "
"parameters will be displayed."
msgstr ""

#. type: Plain text
msgid "Enter the appropriate values and press *PREVIEW* to display the shape."
msgstr ""

#. type: Plain text
msgid ""
"If the shape is not correct, edit the values and press *PREVIEW* and the new "
"shape will be displayed. Repeat until satisfied with the shape."
msgstr ""

#. type: Plain text
msgid "Press *ADD* to add the shape to the G-Code file."
msgstr ""

#. type: Plain text
msgid ""
"For *CIRCLE*, the *OVERCUT* button will become valid when a CUT TYPE of "
"INTERNAL is selected and the value entered in the DIAMETER field is less "
"than the Small Hole Diameter parameter in the Conversational SETTINGS "
"section."
msgstr ""

#. type: Plain text
msgid ""
"For *BOLT CIRCLE* the *OVERCUT* button will become valid if the value "
"entered in the HOLE DIA field is less than the SMALL HOLES DIAMETER "
"parameter in the Conversational SETTINGS section."
msgstr ""

#. type: Plain text
msgid ""
"For the following shapes, KERF OFFSET will become active once a LEAD IN is "
"specified:"
msgstr ""

#. type: Plain text
msgid "TRIANGLE"
msgstr ""

#. type: Plain text
msgid "RECTANGLE"
msgstr ""

#. type: Plain text
msgid "POLYGON"
msgstr ""

#. type: Plain text
msgid "SLOT"
msgstr ""

#. type: Plain text
msgid "STAR"
msgstr ""

#. type: Plain text
msgid "GUSSET"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Group Of Shapes"
msgstr ""

#. type: Plain text
msgid "Multiple shapes can be added together to create a complex group."
msgstr ""

#. type: Plain text
msgid ""
"The cut order of the group is determined by the order in which the "
"individual shapes are added to the group."
msgstr ""

#. type: Plain text
msgid "Once a shape is added to the group it cannot be edited or removed."
msgstr ""

#. type: Plain text
msgid "Groups cannot have shapes removed, only added to."
msgstr ""

#. type: Plain text
msgid "To create a group of shapes:"
msgstr ""

#. type: Plain text
msgid "Create the first shape as in *Single Shape*."
msgstr ""

#. type: Plain text
msgid "Press *ADD* and the shape will be added to the group."
msgstr ""

#. type: Plain text
msgid ""
"If the user wishes to add another version of the same shape then edit the "
"required parameters and press *ADD* when satisfied with the shape."
msgstr ""

#. type: Plain text
msgid ""
"If the user wishes to add a different shape, select that shape and create it "
"as in *Single Shape*."
msgstr ""

#. type: Plain text
msgid ""
"Repeat until all the required shapes to complete the group have been added."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Block"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_conv_block.png"
msgstr ""

#. type: Plain text
msgid ""
"The Conversational Block feature allows block operations to be performed on "
"the current shape or group of shapes displayed in the <<qt_conversational-"
"tab, CONVERSATIONAL Tab>>. This can include a G-Code file not created using "
"the Conversational Shape Library that has been previously loaded from the "
"<<qt_main-tab, MAIN Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"A previously saved Block G-Code file may also be loaded from the <<qt_main-"
"tab, MAIN Tab>> and then have any of its operations edited using the "
"Conversational Block feature."
msgstr ""

#. type: Plain text
msgid "Block operations:"
msgstr ""

#. type: Plain text
msgid "Rotate"
msgstr ""

#. type: Plain text
msgid "Scale"
msgstr ""

#. type: Plain text
msgid "Array"
msgstr ""

#. type: Plain text
msgid "Mirror"
msgstr ""

#. type: Plain text
msgid "Flip"
msgstr ""

#. type: Plain text
msgid "To create a block:"
msgstr ""

#. type: Plain text
msgid "Create a shape, a group, or use a previously loaded G-Code file."
msgstr ""

#. type: Plain text
msgid "Click the *Block* icon to open the Block tab."
msgstr ""

#. type: Plain text
msgid ""
"Enter the appropriate values in the Block tab and press *PREVIEW* to display "
"the resulting changes."
msgstr ""

#. type: Plain text
msgid ""
"If the result is not correct, edit the values and press *PREVIEW* and the "
"new result will be shown. Repeat until satisfied with the result."
msgstr ""

#. type: Plain text
msgid "Press *ADD* to complete the procedure."
msgstr ""

#. type: Plain text
msgid ""
"Press *SEND* to send the G-Code file to LinuxCNC (QtPlasmaC) for cutting, or "
"*SAVE* to save the G-Code file."
msgstr ""

#. type: Plain text
msgid ""
"COLUMNS & ROWS - specifies the number of duplicates of the original shape "
"arranged in columns and rows as well as the offset distance from the "
"original shape."
msgstr ""

#. type: Plain text
msgid "ORIGIN - offset the result from the origin coordinates."
msgstr ""

#. type: Plain text
msgid "ANGLE - rotate the result."
msgstr ""

#. type: Plain text
msgid "SCALE - scale the result."
msgstr ""

#. type: Plain text
msgid "ROTATION - rotate the shape within the result."
msgstr ""

#. type: Plain text
msgid "MIRROR - mirror the shape about its X coordinates within the result."
msgstr ""

#. type: Plain text
msgid "FLIP - flip the shape about its Y coordinates within the result."
msgstr ""

#. type: Plain text
msgid ""
"If the result is an array of shapes then the cut order of the result is from "
"the left column to the right column, starting at the bottom row and ending "
"at the top row."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Conversational Saving A Job"
msgstr ""

#. type: Plain text
msgid ""
"The current job displayed in the Preview Panel may be saved at any time by "
"using the bottom *SAVE* button. If the G-Code has been sent to LinuxCNC "
"(QtPlasmaC) and the user has left the CONVERSATIONAL Tab, the user may still "
"save the G-Code file from the GUI. Alternatively, the user could click the "
"CONVERSATIONAL Tab which will reload the job, at which time they can press "
"the *SAVE* button."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Error Messages"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error Logging"
msgstr ""

#. type: Plain text
msgid ""
"All errors are logged into the machine log which is able to be viewed in the "
"STATISTICS tab. The log file is saved into the configuration directory when "
"QtPlasmaC is shutdown. The five last logfiles are kept, after which the "
"oldest logfile is deleted each time a new log file is created. These saved "
"log files may be viewed with any text editor."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Critical Errors"
msgstr ""

#. type: Plain text
msgid ""
"There are a number of error messages printed by QtPlasmaC to inform the user "
"of faults as they occur. The messages can be split into two groups, "
"*Critical* and *Warning*."
msgstr ""

#. type: Plain text
msgid ""
"Critical Errors will cause the running program to pause, and the operator "
"will need to clear the cause of the error before proceeding."
msgstr ""

#. type: Plain text
msgid ""
"If the error was received during cutting then forward or reverse motion is "
"allowed while the machine is paused to enable the user to reposition the "
"machine prior to resuming the cut."
msgstr ""

#. type: Plain text
msgid "When the error is cleared the program may be resumed."
msgstr ""

#. type: Plain text
msgid ""
"These errors indicate the corresponding sensor was activated during cutting:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*breakaway switch activated program is paused*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*float switch activated program is paused*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*ohmic probe activated program is paused*\n"
msgstr ""

#. type: Plain text
msgid ""
"These errors indicate the corresponding sensor was activated before probing "
"commenced:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*ohmic probe detected before probing program is paused*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*float switch detected before probing program is paused*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*breakaway switch detected before probing program is paused*\n"
msgstr ""

#. type: Plain text
msgid ""
"The Arc OK signal was lost during cutting motion, before the *M5* command "
"was reached:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*valid arc lost program is paused*\n"
msgstr ""

#. type: Plain text
msgid "The Z axis reached the bottom limit before the work piece was detected:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*bottom limit reached while probing down program is paused*\n"
msgstr ""

#. type: Plain text
msgid "The work piece is too high for any safe rapid removes:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*material too high for safe traverse program is paused*\n"
msgstr ""

#. type: Plain text
msgid ""
"One of these values in MATERIAL section of the <<qt_parameters-tab, "
"PARAMETERS Tab>> is invalid (For example: if they are set to zero):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*invalid pierce height or invalid cut height or invalid cut volts program is paused*\n"
msgstr ""

#. type: Plain text
msgid ""
"No arc has been detected after attempting to start the number of times "
"indicated by *Max Starts* in the ARC frame of the CONFIGURATION section of "
"the <<qt_parameters-tab, PARAMETERS Tab>>:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*no arc detected after <n>d start attempts program is paused*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*no arc detected after <n>d start attempts manual cut is stopped*\n"
msgstr ""

#. type: Plain text
msgid "THC has caused the bottom limit to be reached while cutting:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*bottom limit reached while THC moving down program is paused*\n"
msgstr ""

#. type: Plain text
msgid "THC has caused the top limit to be reached while cutting:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*top limit reached while THC moving up program is paused*\n"
msgstr ""

#. type: Plain text
msgid ""
"These errors indicate move to pierce height would exceed the Z Axis "
"MAX_LIMIT for the corresponding probe method:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum limit condition found while moving to probe height during float switch probing*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum limit condition found while moving to probe height during ohmic probing*\n"
msgstr ""

#. type: Plain text
msgid ""
"These errors indicate the move to pierce height would exceed the Z axis "
"maximum safe height for the corresponding probe method:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum safe height condition found while float switch probing*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum safe height condition found while ohmic probing*\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Warning Errors"
msgstr ""

#. type: Plain text
msgid ""
"Warning errors will not pause a running program and are informational only."
msgstr ""

#. type: Plain text
msgid ""
"These errors indicate the corresponding sensor was activated before a probe "
"test commenced:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*ohmic probe detected before probing probe test aborted*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*float switch detected before probing probe test aborted*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*breakaway switch detected before probing probe test aborted*\n"
msgstr ""

#. type: Plain text
msgid ""
"This indicates that the corresponding sensor was activated during a "
"consumable change:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*breakaway, float, or ohmic activated during consumable change, motion is paused* +\n"
"*WARNING: MOTION WILL RESUME IMMEDIATELY UPON RESOLVING THIS CONDITION!*\n"
msgstr ""

#. type: Plain text
msgid ""
"CONSUMABLE CHANGE MOTION WILL RESUME IMMEDIATELY UPON RESOLVING THE "
"CORRESPONDING SENSOR ACTIVATION."
msgstr ""

#. type: Plain text
msgid ""
"This indicates that the corresponding sensor was activated during probe "
"testing:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*breakaway switch detected during probe test*\n"
msgstr ""

#. type: Plain text
msgid ""
"This indicates that probe contact was lost before probing up to find the "
"zero point:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*probe trip error while probing*\n"
msgstr ""

#. type: Plain text
msgid "This indicates that the bottom limit was reached during a probe test:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*bottom limit reached while probe testing*\n"
msgstr ""

#. type: Plain text
msgid ""
"This indicates that the move to pierce height would exceed the Z Axis "
"MAX_LIMIT during the corresponding probe method:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum limit condition found while moving to probe height during float switch probe testing*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pierce height would exceed Z axis maximum limit condition found while moving to probe height during ohmic probe testing*\n"
msgstr ""

#. type: Plain text
msgid ""
"This indicates that the safe height has been reduced due to THC raising the "
"Z axis during cutting:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*safe traverse height has been reduced*\n"
msgstr ""

#. type: Plain text
msgid ""
"This indicates that the value for the Arc Voltage was invalid (NAN or INF) "
"when QtPlasmaC launched."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*invalid arc-voltage-in*\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Updating QtPlasmaC"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Standard Update"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC update notices are posted at: https://forum.linuxcnc.org/"
"plasmac/37233-plasmac-updates"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Users are strongly encouraged to create a Username and subscribe to the above thread to receive update notices.*\n"
msgstr ""

#. type: Plain text
msgid ""
"For a standard ISO installation, LinuxCNC will only be updated when a new "
"minor release has been released. QtPlasmaC will then automatically update "
"its configuration the first time it is run after a LinuxCNC update."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is normally updated by entering the following commands into a "
"terminal window (one at a time):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"sudo apt update\n"
"sudo apt dist-upgrade\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Continuous Update"
msgstr ""

#. type: Plain text
msgid ""
"Enhancements and bug fixes will not be available on a standard installation "
"until a new minor release of LinuxCNC has been released. If the user wishes "
"to update whenever a new QtPlasmaC version has been pushed, they could use "
"the LinuxCNC Buildbot repository rather than the standard LinuxCNC "
"repository by following the instructions at: http://buildbot.linuxcnc.org/"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modify An Existing QtPlasmaC Configuration"
msgstr ""

#. type: Plain text
msgid "There are two ways to modify an existing QtPlasmaC configuration:"
msgstr ""

#. type: Plain text
msgid ""
"Running the appropriate <<configuring, configuration wizard>> and loading "
"the conf file saved by the wizard."
msgstr ""

#. type: Plain text
msgid "Manually edit the .ini and/or the .hal file of the configuration."
msgstr ""

#. type: Plain text
msgid ""
"Any manual modification to the <machine_name>.ini and <machine_name>.hal "
"files will not be registered in PnCConf or StepConf."
msgstr ""

#. type: Plain text
msgid ""
"If unsure of the HAL pin's full name, the user may start LinuxCNC and run "
"*HalShow* for a full listing of all HAL pins."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Customizing QtPlasmaC GUI"
msgstr ""

#. type: Plain text
msgid ""
"Styling of the QtPlasmaC GUI is done with Qt stylesheets and some "
"customization may be achieved by the use of a custom stylesheet. This allows "
"the user to change some GUI items such as color, border, size, etc. It "
"cannot change the layout of the GUI."
msgstr ""

#. type: Plain text
msgid ""
"Information on Qt stylesheets is available link:https://doc.qt.io/archives/"
"qt-5.11/stylesheet.html[here]."
msgstr ""

#. type: Plain text
msgid "There are two methods available to apply custom styles:"
msgstr ""

#. type: Plain text
msgid "Add A Custom Style: use this for minor style changes."
msgstr ""

#. type: Plain text
msgid "Create A New Style use this for a complete style change."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Add A Custom Style"
msgstr ""

#. type: Plain text
msgid ""
"Adding style changes to the default stylesheet is achieved by creating a "
"file in the <machine_name> configuration folder. This file MUST be named "
"qtplasmac_custom.qss. Any required style changes are then added to this file."
msgstr ""

#. type: Plain text
msgid ""
"For example the user may want the arc voltage display in red, a green Torch "
"On LED of a larger size and a larger Torch Enable button. This would be done "
"with the following code in qtplasmac_custom.qss:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#arc_voltage {\n"
"    color: #ff0000 }\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#led_torch_on {\n"
"    qproperty-diameter: 30;\n"
"    qproperty-color: green }\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#torch_enable::indicator {\n"
"    width: 30;\n"
"    height: 30}\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Create A New Style"
msgstr ""

#. type: Plain text
msgid ""
"Custom stylesheets are enable by a setting in the [QTPLASMAC] section of the "
"INI file with the filename of the stylesheet."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "CUSTOM_STYLE = the_cool_style.qss\n"
msgstr ""

#. type: Plain text
msgid ""
"The filename may be any valid filename. The standard extension name is .qss "
"but this is not mandatory."
msgstr ""

#. type: Plain text
msgid ""
"There are some constraints on the custom stylesheet for QtPlasmaC, e.g. the "
"jog buttons, cut-recovery buttons, and the conversational shape buttons are "
"image files and are not able to be custom styled."
msgstr ""

#. type: Plain text
msgid "The custom style file requires a header in the following format:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"/*****************************\n"
"Custom Stylesheet Header\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"color1 = #000000\n"
"#QtPlasmaC default = #ffee06\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"color2 = #e0e0e0\n"
"#QtPlasmaC default = #16160e\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"color3 = #c0c0c0\n"
"#QtPlasmaC default = #ffee06\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"color4 = #e0e0e0\n"
"#QtPlasmaC default = #26261e\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"color5 = #808080\n"
"#QtPlasmaC default = #b0b0b0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "*****************************/\n"
msgstr ""

#. type: Plain text
msgid "The colors may be expressed in any valid stylesheet format."
msgstr ""

#. type: Plain text
msgid ""
"The above colors are used for the following widgets. So any custom styling "
"will need to take these into account. The colors shown below are the "
"defaults used in QtPlasmaC along with the color name from the PARAMETERS tab."
msgstr ""

#. type: Table
#, no-wrap
msgid "*Color"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Parameter"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Affects*"
msgstr ""

#. type: Table
#, no-wrap
msgid "color1 (#ffee06)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"foreground of jog buttons +\n"
"                  foreground of latching user buttons +\n"
"                  foreground of camera/laser buttons +\n"
"                  foreground of conversational shape buttons +\n"
"                  background of active conversational shape buttons"
msgstr ""

#. type: Table
#, no-wrap
msgid "color2 (#16160e)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"background of latching user buttons +\n"
"                  background of camera/laser buttons +\n"
"                  background of G-Code editor active line +\n"
"                  background of conversational shape buttons"
msgstr ""

#. type: Table
#, no-wrap
msgid "color3 (#ffee06)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"background of active latching user buttons +\n"
"                  background of active camera/laser buttons +\n"
"                  foreground of G-Code editor cursor"
msgstr ""

#. type: Table
#, no-wrap
msgid "color4 (#36362e)"
msgstr ""

#. type: Table
#, no-wrap
msgid "background of G-Code display active line"
msgstr ""

#. type: Table
#, no-wrap
msgid "color5 (#b0b0b0)"
msgstr ""

#. type: Table
#, no-wrap
msgid "foreground of disabled buttons"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Returning To The Default Styling"
msgstr ""

#. type: Plain text
msgid ""
"The user may return to the default styling at any time by following the "
"following steps:"
msgstr ""

#. type: Plain text
msgid "Close QtPlasmaC if open."
msgstr ""

#. type: Plain text
msgid "Delete qtplasmac.qss from the machine config folder."
msgstr ""

#. type: Plain text
msgid ""
"Delete qtplasmac_custom.qss from the machine config folder (if it exists)."
msgstr ""

#. type: Plain text
msgid ""
"Comment out or delete any CUSTOM_STYLE lines from the <machine_name>.ini "
"file."
msgstr ""

#. type: Plain text
msgid ""
"Open qtplasmac.prefs and delete the \"[COLOR_OPTIONS]\" section. Save the "
"file."
msgstr ""

#. type: Plain text
msgid ""
"The next time QtPlasmaC is loaded all custom styling will be removed and the "
"default styling will return."
msgstr ""

#. type: Plain text
msgid "Below is an example of the section to be deleted from qtplasmac.prefs:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[COLOR_OPTIONS]\n"
"Foreground = #ffee06\n"
"Highlight = #ffee06\n"
"LED = #ffee06\n"
"Background = #16160e\n"
"Background Alt = #36362e\n"
"Frames = #ffee06\n"
"Estop = #ff0000\n"
"Disabled = #b0b0b0\n"
"Preview = #000000\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "QtPlasmaC Advanced Topics"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Custom User Buttons"
msgstr ""

#. type: Plain text
msgid ""
"The QtPlasmaC GUI offers user buttons that can be customized by adding "
"commands in the <machine_name>.ini file."
msgstr ""

#. type: Plain text
msgid ""
"The number of user buttons varies by display type and resolution as follows:"
msgstr ""

#. type: Plain text
msgid "16:9 and 4:3 - Minimum 8, Maximum 20"
msgstr ""

#. type: Plain text
msgid "9:16 - Minimum 15, Maximum 20"
msgstr ""

#. type: Plain text
msgid ""
"The user will need to run QtPlasmaC at the desired screen size to determine "
"how many user buttons are available for use."
msgstr ""

#. type: Plain text
msgid ""
"All <machine_name>.ini file settings for the buttons are found in the "
"[QTPLASMAC] section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Button Names"
msgstr ""

#. type: Plain text
msgid "The text that appears on the button is set the following way:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_NAME = HAL Show\n"
msgstr ""

#. type: Plain text
msgid "Where n is the button number and *HAL Show* is the text."
msgstr ""

#. type: Plain text
msgid "For text on multiple lines, split the text with a \\"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_NAME = HAL\\Show\n"
msgstr ""

#. type: Plain text
msgid ""
"If an ampersand is required to be displayed as text then two consecutive "
"ampersands are required:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_NAME = PIERCE\\&&CUT\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Button Code"
msgstr ""

#. type: Plain text
msgid "Buttons can run the following:"
msgstr ""

#. type: Plain text
msgid "<<qt_button-cmds, External commands>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-code, G-Code commands>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-toggle, Toggle a HAL pin>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-pulse, Pulse a HAL pin>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-probe, Probe test>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-ohmic, Ohmic Test>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-cut, Cut Type>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-consumables, Change consumables>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-load, Load a G-Code program>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-torch, Pulse the torch on>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-single, Single unidirectional cut>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-framing, Framing a job>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-mancut, Begin/End a manual cut>>"
msgstr ""

#. type: Plain text
msgid "<<qt_button-offsets, Display/Hide an offsets viewer>>"
msgstr ""

#. type: Plain text
msgid ""
"<<qt_button-latest, Load the latest modified ngc file found in a directory>>"
msgstr ""

#. type: Plain text
msgid "[underline]*External Commands*"
msgstr ""

#. type: Plain text
msgid "To run an external command, the command is preceded by a % character."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = %halshow\n"
msgstr ""

#. type: Plain text
msgid "[underline]*G-Code*"
msgstr ""

#. type: Plain text
msgid "To run G-Code, just enter the code to be run."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = G0 X100\n"
msgstr ""

#. type: Plain text
msgid "To run an existing subroutine."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = o<the_subroutine> call\n"
msgstr ""

#. type: Plain text
msgid ""
"<machine_name>.ini file variables can be entered by using {} (a space must "
"be placed after the })"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"BUTTON_n_CODE = G0 X{JOINT_0 HOME} Y1\n"
"BUTTON_n_CODE = G53 G0 Z[{AXIS_Z MAX_LIMIT} - 1.001]\n"
msgstr ""

#. type: Plain text
msgid ""
"Multiple codes can be run by separating the codes with a \\ symbol. The "
"exception is the special commands which are required to be a single command "
"per button."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = G0 X0 Y0 \\ G1 X5 \\ G1 Y5\n"
msgstr ""

#. type: Plain text
msgid "External commands and G-Code may be mixed on the same button."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = %halshow \\ g0x.5y.5 \\ %halmeter\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Toggle HAL Pin*"
msgstr ""

#. type: Plain text
msgid ""
"The following code will allow the user to use a button to invert the current "
"state of a HAL bit pin:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = toggle-halpin the-hal-pin-name\n"
msgstr ""

#. type: Plain text
msgid ""
"This code is required to be used as a single command and may only control "
"one HAL bit pin per button."
msgstr ""

#. type: Plain text
msgid "The button colors will follow the state of the hal pin."
msgstr ""

#. type: Plain text
msgid ""
"After setting the code, upon clicking, the button will invert colors and the "
"HAL pin will invert pin state. The button will stay \"latched\" until the "
"button is clicked again, which will return the button to the original colors "
"and the HAL pin to the original pin state."
msgstr ""

#. type: Plain text
msgid ""
"There are three <<qt_ext-hal-pin, External HAL Pins>> that are available to "
"toggle as an output, the pin names are qtplasmac.ext_out_0, qtplasmac."
"ext_out_1, and qtplasmac.ext_out_2."
msgstr ""

#. type: Plain text
msgid ""
"It is possible for the user to mark a toggle-halpin button's associated hal "
"pin as being required to be turned \"ON\" before *CYCLE START* can be "
"pressed by adding \"runcritical\" after the hal pin in the button code."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = toggle-halpin the-hal-pin-name runcritical\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Pulse HAL Pin*"
msgstr ""

#. type: Plain text
msgid ""
"The following code will allow the user to use a button to pulse a HAL bit "
"pin for a duration of 0.5 seconds:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = pulse-halpin the-hal-pin-name 0.5\n"
msgstr ""

#. type: Plain text
msgid ""
"The pulse duration is specified in seconds, if the pulse duration is not "
"specified then it will default to one second."
msgstr ""

#. type: Plain text
msgid ""
"After setting the code, upon clicking the button, the button will invert "
"colors, the HAL pin will invert pin state, and the time remaining will be "
"displayed on the button. The button color and the pin state will stay "
"inverted until the pulse duration timer has completed, which will return the "
"button to the original colors, the HAL pin to the original pin state, and "
"the original button name."
msgstr ""

#. type: Plain text
msgid "An active pulse can be canceled by clicking the button again."
msgstr ""

#. type: Plain text
msgid ""
"There are three <<qt_ext-hal-pin, External HAL Pins>> that are available to "
"pulse as an output, the pin names are qtplasmac.ext_out_0, qtplasmac."
"ext_out_1, and qtplasmac.ext_out_2."
msgstr ""

#. type: Plain text
msgid "[underline]*Probe Test*"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC will begin a probe and when the material is detected, the Z axis "
"will rise to the Pierce Height currently displayed in the MATERIAL section "
"of the <<qt_parameters-tab, PARAMETERS Tab>>. If the user has \"View Material"
"\" selected in the GUI SETTINGS section of the <<qt_parameters-tab, "
"PARAMETERS Tab>>, this value will be displayed in the top left corner of the "
"PREVIEW Window next to *PH:*."
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC will then wait in this state for the time specified (rounded to no "
"decimal places) before returning the Z axis to the starting position. An "
"example of a 6 second delay is below. If there is no time specified then the "
"probe time will default to 10 seconds."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = probe-test 6\n"
msgstr ""

#. type: Plain text
msgid ""
"Enabling a user button as a Probe Test button will add an <<qt_ext-hal-pin, "
"external HAL pin>> that may be connected from a pendant etc."
msgstr ""

#. type: Plain text
msgid "[underline]*Ohmic Test*"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC will enable the Ohmic Probe Enable output signal and if the Ohmic "
"Probe input is sensed, the LED indicator in the SENSOR Panel will light. The "
"main purpose of this is to allow a quick test for a shorted torch tip."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = ohmic-test\n"
msgstr ""

#. type: Plain text
msgid ""
"Enabling a user button as an Ohmic Test button will add an <<qt_ext-hal-pin, "
"external HAL pin>> that may be connected from a pendant etc."
msgstr ""

#. type: Plain text
msgid "[underline]*Cut Type*"
msgstr ""

#. type: Plain text
msgid ""
"This button if selected will toggle between the two <<qt_cut-types, cut "
"types>>, Pierce and Cut (default cutting mode) or Pierce Only."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = cut-type\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Change Consumables*"
msgstr ""

#. type: Plain text
msgid ""
"Pressing this button moves the torch to the specified coordinates when the "
"machine is paused to allow the user easy access to change the torch "
"consumables."
msgstr ""

#. type: Plain text
msgid ""
"Valid entries are Xnnn Ynnn Fnnn. Feed Rate (F) is mandatory and at least "
"one of the X or Y coordinates are required."
msgstr ""

#. type: Plain text
msgid ""
"The X and Y coordinates are in absolute machine coordinates. If X or Y are "
"missing then the current coordinate for that axis will be used."
msgstr ""

#. type: Plain text
msgid "There are three methods to return to the previous coordinates:"
msgstr ""

#. type: Plain text
msgid ""
"Press the *Change Consumables* button again - the torch will return to the "
"original coordinates and the machine will wait in this position for the user "
"to resume the program."
msgstr ""

#. type: Plain text
msgid ""
"Press *CYCLE RESUME* - the torch to return to the original coordinates and "
"the program will resume."
msgstr ""

#. type: Plain text
msgid ""
"Press *CYCLE STOP* - the torch to return to the original coordinates and the "
"program will abort."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = change-consumables X10 Y10 F1000\n"
msgstr ""

#. type: Plain text
msgid ""
"Enabling a user button as a Change Consumables button will add an <<qt_ext-"
"hal-pin, external HAL pin>> that may be connected from a pendant etc."
msgstr ""

#. type: Plain text
msgid "[underline]*Load*"
msgstr ""

#. type: Plain text
msgid ""
"Loading a G-Code program from the directory specified by the "
"*PROGRAM_PREFIX* variable in the <machine_name>.ini file (usually ~/linuxcnc/"
"nc_files) is possible by using the following format:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = load G-Code.ngc\n"
msgstr ""

#. type: Plain text
msgid ""
"If the user's G-Code file is located in a sub-directory of the "
"*PROGRAM_PREFIX* directory, it would be accessed by adding the sub-directory "
"name to the beginning of the G-Code file name. Example for a sub-directory "
"named *plasma*:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = load plasma/G-Code.ngc\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that the first \"/\" is not necessary as it will be added automatically."
msgstr ""

#. type: Plain text
msgid "[underline]*Torch Pulse*"
msgstr ""

#. type: Plain text
msgid ""
"Pulse the torch on for a predetermined time. The time must be specified in "
"seconds using up to one decimal place. The maximum allowable time is 3 "
"seconds, anything specified above that value will be limited to 3 seconds. "
"An example of a 0.5 second pulse is below. It there is no time specified "
"then it will default to 1 second. Pulse times with more than one decimal "
"place will be rounded to one decimal place."
msgstr ""

#. type: Plain text
msgid ""
"Pressing the button again during the countdown will cause the torch to be "
"turned off, as will pressing Esc if keyboard shortcuts are enabled in the "
"PARAMETERS tab."
msgstr ""

#. type: Plain text
msgid ""
"If the button is released before the countdown is complete then the torch "
"will turn off at countdown completion, holding the button on until after the "
"countdown has completed will cause the torch to remain on until the button "
"has been released."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = torch-pulse 0.5\n"
msgstr ""

#. type: Plain text
msgid ""
"Enabling a user button as a Torch Pulse button will add an <<qt_ext-hal-pin, "
"external HAL pin>> that may be connected from a pendant etc."
msgstr ""

#. type: Plain text
msgid "[underline]*Single Cut*"
msgstr ""

#. type: Plain text
msgid ""
"Run a single unidirectional cut. This utilises the automatic <<qt_single-"
"cut, Single Cut>> feature."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = single-cut\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Framing*"
msgstr ""

#. type: Plain text
msgid ""
"Framing is the ability to move the torch around the perimeter of a rectangle "
"that encompasses the bounds of the current job."
msgstr ""

#. type: Plain text
msgid ""
"The laser enable HAL pin (qtplasmac.laser_on) will be enabled during the "
"framing moves and any X/Y offsets for the laser pointer in the "
"<machine_name>.ini file will also be applied to the X/Y motion."
msgstr ""

#. type: Plain text
msgid ""
"Upon starting a Framing cycle, it is important to note that by default the Z "
"axis will be moved to a height of [AXIS_Z]MAX_LIMIT - 5mm before X/Y motion "
"begins."
msgstr ""

#. type: Plain text
msgid ""
"The velocity for the XY movements of the Framing motion can be specified so "
"that Framing motion always occurs at a set velocity. This can be achieved by "
"adding the feed rate (F) as the as the last portion of the button code. If "
"the feed rate is omitted from the button code, Framing motion velocity will "
"default to the feed rate for the currently selected material."
msgstr ""

#. type: Plain text
msgid ""
"The following GUI buttons and Keyboard Shortcuts (if enabled in the "
"<<qt_parameters-tab, PARAMETERS Tab>>) are valid during Framing motion:"
msgstr ""

#. type: Plain text
msgid ""
"Pressing *CYCLE STOP* or the ESC <<qt_keyboard-shortcuts, keyboard "
"shortcut>> - Stops Framing motion."
msgstr ""

#. type: Plain text
msgid ""
"Pressing *CYCLE PAUSE* or the SPACE BAR <<qt_keyboard-shortcuts, keyboard "
"shortcut>>- Pauses Framing motion."
msgstr ""

#. type: Plain text
msgid ""
"Pressing *CYCLE RESUME* or the CTRL+r <<qt_keyboard-shortcuts, keyboard "
"shortcut>>- Resumes paused Framing motion."
msgstr ""

#. type: Plain text
msgid ""
"Changing the *FEED SLIDER* or any of the CTRL+0-9 <<qt_keyboard-shortcuts, "
"keyboard shortcuts>> - Slows the feed rate."
msgstr ""

#. type: Plain text
msgid ""
"IF THE FEED RATE IS CHANGED FOR THE FRAMING MOTION, IT WILL BE NECESSARY TO "
"RETURN THE FEED SLIDER TO 100% BEFORE PRESSING CYCLE START AND CUTTING THE "
"LOADED JOB."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = framing\n"
msgstr ""

#. type: Plain text
msgid ""
"It is possible for the user to omit the initial default Z movement and run "
"the framing sequence at the current Z height by adding \"usecurrentzheight\" "
"after \"framing\"."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = framing usecurrentzheight\n"
msgstr ""

#. type: Plain text
msgid "To specify a feed rate:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = framing F100\n"
msgstr ""

#. type: Plain text
msgid "or:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = framing usecurrentzheight F100\n"
msgstr ""

#. type: Plain text
msgid ""
"Enabling a user button as a Framing button will add an <<qt_ext-hal-pin, "
"external HAL pin>> that may be connected from a pendant etc."
msgstr ""

#. type: Plain text
msgid "[underline]*Manual Cut*"
msgstr ""

#. type: Plain text
msgid ""
"Manual Cut functions identically to the *F9* button to begin or end a "
"<<qt_manual-single-cut, manual cut>>."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = manual-cut\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Offset Viewer*"
msgstr ""

#. type: Plain text
msgid ""
"This allows the showing/hiding of an offset viewing screen that displays all "
"machine offsets. All relative offsets can be edited and the G54 ~ G59.3 work "
"system coordinates are able to be given custom names."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = offsets-view\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Load Latest File"
msgstr ""

#. type: Plain text
msgid ""
"this allows the loading of the last modified file in a directory. The "
"directory name is optional and if omitted will default to the last directory "
"a file was loaded from."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "BUTTON_n_CODE = latest-file /home/me/linuxcnc/nc_files/qtplasmac-test\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "External HAL Pins"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC creates some HAL pins that may be used to connect a momentary "
"external button or pendant etc."
msgstr ""

#. type: Plain text
msgid ""
"The following HAL bit pins are always created. The HAL pin has the identical "
"behaviour of the related QtPlasmaC GUI button."
msgstr ""

#. type: Table
#, no-wrap
msgid "*User Button Function"
msgstr ""

#. type: Table
#, no-wrap
msgid "*HAL Pin"
msgstr ""

#. type: Table
#, no-wrap
msgid "*GUI Function"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle machine power"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_power"
msgstr ""

#. type: Table
#, no-wrap
msgid "Run the loaded G-Code progra"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_run"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pause/Resume the loaded G-Code progra"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_paus"
msgstr ""

#. type: Table
#, no-wrap
msgid "Abort the loaded G-Code progra"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_abort"
msgstr ""

#. type: Table
#, no-wrap
msgid "Touchoff X & Y axes to zero"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_touchoff"
msgstr ""

#. type: Table
#, no-wrap
msgid "X0Y0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Run/Pause/Resume the loaded G-Code progra"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_run_paus"
msgstr ""

#. type: Table
#, no-wrap
msgid "CYCLE START, CYCLE PAUSE, CYCLE RESUME in sequence"
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch height override plu"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_plu"
msgstr ""

#. type: Table
#, no-wrap
msgid "OVERRIDE +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch height override minu"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_minu"
msgstr ""

#. type: Table
#, no-wrap
msgid "OVERRIDE -"
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch height override reset"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_reset"
msgstr ""

#. type: Table
#, no-wrap
msgid "OVERRIDE RESET TO 0.00"
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch height override scal"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_scal"
msgstr ""

#. type: Table
#, no-wrap
msgid "N/A"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle jogging speed between fast and slow"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_jog_slow"
msgstr ""

#. type: Table
#, no-wrap
msgid "JOGGING FAST/SLOW"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle THC enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_thc_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "THC ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle torch enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_torch_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCH ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle corner Lock enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cornerlock_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "VELOCITY ANTI DIVE ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle kerfkross enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_kerfcross_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "VOID ANTI DIVE ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle use auto volt"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_auto_volts_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle ohmic probe enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_ohmic_probe_enabl"
msgstr ""

#. type: Table
#, no-wrap
msgid "OHMIC ENABLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle mesh mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_mesh_mod"
msgstr ""

#. type: Table
#, no-wrap
msgid "Toggle arc ignore OK"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_ignore_arc_ok"
msgstr ""

#. type: Table
#, no-wrap
msgid "Forward along the programmed path"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_fw"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY FWD"
msgstr ""

#. type: Table
#, no-wrap
msgid "Reverse along the programmed path"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_re"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY REV"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cancel any Cut Recovery movement"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_cance"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY CANCEL"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move up"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_n"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow up"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move down"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow down"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move right"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow right"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move left"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_w"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow left"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move up-right"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow up-right"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move up-left"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_nw"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow up-left"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move down-right"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_s"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow down-right"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move down-left"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_cutrec_sw"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT RECOVERY arrow down-left"
msgstr ""

#. type: Plain text
msgid ""
"The following HAL pins which allow the use of an MPG to control height "
"override are always created."
msgstr ""

#. type: Table
#, no-wrap
msgid "*Function"
msgstr ""

#. type: Table
#, no-wrap
msgid "*HAL Pin*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Enable MPG height contro"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_count_enable"
msgstr ""

#. type: Table
#, no-wrap
msgid "MPG height chang"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_height_ovr_counts"
msgstr ""

#. type: Plain text
msgid ""
"The following HAL bit pins are only created if the function is specified in "
"a <<qt_custom-user-buttons, custom user button>>. The HAL pin has the "
"identical behaviour of the related custom user button."
msgstr ""

#. type: Table
#, no-wrap
msgid "Probe Test"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_probe"
msgstr ""

#. type: Table
#, no-wrap
msgid "Torch Puls"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_pulse"
msgstr ""

#. type: Table
#, no-wrap
msgid "Ohmic Test"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_ohmic"
msgstr ""

#. type: Table
#, no-wrap
msgid "Change Consumable"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_consumables"
msgstr ""

#. type: Table
#, no-wrap
msgid "Framing"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_frame_job"
msgstr ""

#. type: Plain text
msgid ""
"The following HAL bit output pins are always created and can be used by "
"either the <<qt_button-toggle, Toggle HAL Pin>> or <<qt_button-pulse, Pulse "
"HAL Pin>> custom user buttons to change the state of an output."
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_out_0"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_out_1"
msgstr ""

#. type: Table
#, no-wrap
msgid "qtplasmac.ext_out_2"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hide Program Buttons"
msgstr ""

#. type: Plain text
msgid ""
"If the user has external buttons and/or a pendant that emulates any of the "
"program buttons, CYCLE START, CYCLE PAUSE, or CYCLE STOP then it is possible "
"to hide any or all of these GUI program buttons by adding the following code "
"to the [QTPLASMAC] section of the <machine_name>.ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"HIDE_RUN       = 1\n"
"HIDE_PAUSE     = 1\n"
"HIDE_ABORT     = 1\n"
msgstr ""

#. type: Plain text
msgid ""
"For the 16:9 or 4:3 GUIs, the hiding of each of these GUI buttons will "
"expose two more custom user buttons in the GUI."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tuning Void Sensing"
msgstr ""

#. type: Plain text
msgid ""
"Void sensing may be further tuned by adjusting the required number of "
"consecutive times that the threshold has been exceeded before applying the "
"void lock to the THC."
msgstr ""

#. type: Plain text
msgid ""
"The HAL pin for adjusting this is named plasmac.kerf-errors-max and the "
"default value is 2. To change this value, add the pin and the required value "
"to the custom.hal file. The following example would set the required number "
"of consecutive times to exceed the threshold to 3:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.kerf-error-max 3\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Lost Arc Delay"
msgstr ""

#. type: Plain text
msgid ""
"Some plasma power sources/machine configurations may lose the Arc OK signal "
"either momentarily during a cut, or permanently near the end of a cut "
"causing QtPlasmaC to pause the program and report a \"valid arc lost\" "
"error. There is a HAL pin named *plasmac.arc-lost-delay* that may be used to "
"set a delay (in seconds) that will prevent a paused program/error if the "
"lost Arc OK signal is regained, or the *M5* command is reached before the "
"set delay period expires. It is important to note that the THC will be "
"disabled and locked at the cutting height at the time the Arc OK signal was "
"lost."
msgstr ""

#. type: Plain text
msgid "The following code would set a delay of 0.1 seconds:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.arc-lost-delay 0.1\n"
msgstr ""

#. type: Plain text
msgid "It is recommended that the user set this pin in the custom.hal file."
msgstr ""

#. type: Plain text
msgid ""
"This setting should only be used if the user experiences the above symptoms. "
"It should also be noted that the user could use the appropriate <<qt_ignore-"
"ok, Ignore Arc OK>> G-Code commands to achieve a similar result."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tuning Mode 0 Arc OK"
msgstr ""

#. type: Plain text
msgid ""
"Mode 0 Arc OK relies on the arc voltage to set the Arc OK signal. This is "
"accomplished by sampling the arc voltage every servo thread cycle. There "
"needs to be a specified number of consecutive samples all within a specified "
"threshold for the Arc OK signal to be set. These voltages are also required "
"to be within a specified range."
msgstr ""

#. type: Plain text
msgid ""
"There are two settings in the <<qt_parameters-tab, PARAMETERS Tab>> for "
"setting the range, these are:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*OK HIGH VOLTS* which is the upper value of the voltage range. The default is 250V.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*OK LOW VOLTS* which is the lower value of the voltage range. The default is 60V.\n"
msgstr ""

#. type: Plain text
msgid ""
"Both of these values may be changed by direct entry or by the use of the "
"increment/decrement buttons."
msgstr ""

#. type: Plain text
msgid ""
"There are also two HAL pins that have been provided to allow the user to "
"tune the set point. These HAL pins are:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*plasmac.arc-ok-counts* which is the number of consecutive readings within the threshold that are required to set the Arc OK signal. The default is 10.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*plasmac.arc-ok-threshold* which is the maximum voltage deviation that is allowed for a valid voltage to set the Arc OK signal. The default is 10.\n"
msgstr ""

#. type: Plain text
msgid ""
"The following example would set the number of valid consecutive readings "
"required to 6:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.arc-ok-counts 6\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Zero Window"
msgstr ""

#. type: Plain text
msgid ""
"Small fluctuations in the arc voltage displayed while the machine is at idle "
"are possible depending on many different variables (electrical noise, "
"incorrect THCAD tuning, etc.). After all contributing factors have been "
"mitigated, if a small fluctuation still exists it is possible to eliminate "
"it by widening the voltage window for which QtPlasmaC will display 0v."
msgstr ""

#. type: Plain text
msgid ""
"The pin for adjusting this value is named plasmac.zero-window and the "
"default value is set to 0.1. To change this value, add the pin and the "
"required value to the custom.hal file. The following example would set the "
"voltage window to be displayed as 0v from -5v to +5v:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.zero-window 5\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Max Offset"
msgstr ""

#. type: Plain text
msgid ""
"Max Offset is the distance (in millimeters) away from the Z MAX_LIMIT that "
"QtPlasmaC will allow the Z axis to travel while under machine control."
msgstr ""

#. type: Plain text
msgid ""
"The pin for adjusting this value is named plasmac.max-offset and the default "
"value (in millimeters) is set to 5. To change this value, add the pin and "
"the required value to the custom.hal file. It is not recommended to use "
"values less than 5mm as offset overrun may cause unforeseen issues."
msgstr ""

#. type: Plain text
msgid "The following example would set the distance from Z MAX_LIMIT to 10mm:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp plasmac.max-offset 10\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "QtPlasmaC State Outputs"
msgstr ""

#. type: Plain text
msgid ""
"The plasmac HAL component has a HAL pin named *plasmac.state-out* which can "
"be used to interface with user-coded components to provide the current state "
"of the component."
msgstr ""

#. type: Plain text
msgid "The different states QtPlasmaC could encounter are as follows:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*State"
msgstr ""

#. type: Table
#, no-wrap
msgid "IDLE"
msgstr ""

#. type: Table
#, no-wrap
msgid "idle and waiting for a start command"
msgstr ""

#. type: Table
#, no-wrap
msgid "PROBE_HEIGHT"
msgstr ""

#. type: Table
#, no-wrap
msgid "move down to probe height"
msgstr ""

#. type: Table
#, no-wrap
msgid "PROBE_DOWN"
msgstr ""

#. type: Table
#, no-wrap
msgid "probe down until material sensed"
msgstr ""

#. type: Table
#, no-wrap
msgid "PROBE_UP"
msgstr ""

#. type: Table
#, no-wrap
msgid "probe up until material not sensed, this sets the zero height"
msgstr ""

#. type: Table
#, no-wrap
msgid "ZERO_HEIGHT"
msgstr ""

#. type: Table
#, no-wrap
msgid "not used at present"
msgstr ""

#. type: Table
#, no-wrap
msgid "move up to pierce height"
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCH_ON"
msgstr ""

#. type: Table
#, no-wrap
msgid "turn the torch on"
msgstr ""

#. type: Table
#, no-wrap
msgid "ARC_OK"
msgstr ""

#. type: Table
#, no-wrap
msgid "wait until arc ok detected"
msgstr ""

#. type: Table
#, no-wrap
msgid "wait for pierce delay time"
msgstr ""

#. type: Table
#, no-wrap
msgid "PUDDLE_JUMP"
msgstr ""

#. type: Table
#, no-wrap
msgid "xy motion begins, move to puddle jump height"
msgstr ""

#. type: Table
#, no-wrap
msgid "move to cut height"
msgstr ""

#. type: Table
#, no-wrap
msgid "11"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT_MODE_01"
msgstr ""

#. type: Table
#, no-wrap
msgid "cutting in either mode 0 or mode 1"
msgstr ""

#. type: Table
#, no-wrap
msgid "12"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT_MODE_2"
msgstr ""

#. type: Table
#, no-wrap
msgid "cutting in mode 2"
msgstr ""

#. type: Table
#, no-wrap
msgid "13"
msgstr ""

#. type: Table
#, no-wrap
msgid "pause motion at end of cut"
msgstr ""

#. type: Table
#, no-wrap
msgid "14"
msgstr ""

#. type: Table
#, no-wrap
msgid "SAFE_HEIGHT"
msgstr ""

#. type: Table
#, no-wrap
msgid "move to safe height"
msgstr ""

#. type: Table
#, no-wrap
msgid "15"
msgstr ""

#. type: Table
#, no-wrap
msgid "MAX_HEIGHT"
msgstr ""

#. type: Table
#, no-wrap
msgid "move to maximum height"
msgstr ""

#. type: Table
#, no-wrap
msgid "16"
msgstr ""

#. type: Table
#, no-wrap
msgid "END_CUT"
msgstr ""

#. type: Table
#, no-wrap
msgid "end the current cut"
msgstr ""

#. type: Table
#, no-wrap
msgid "17"
msgstr ""

#. type: Table
#, no-wrap
msgid "END_JOB"
msgstr ""

#. type: Table
#, no-wrap
msgid "end the current job"
msgstr ""

#. type: Table
#, no-wrap
msgid "18"
msgstr ""

#. type: Table
#, no-wrap
msgid "TORCHPULSE"
msgstr ""

#. type: Table
#, no-wrap
msgid "a torch pulse is active"
msgstr ""

#. type: Table
#, no-wrap
msgid "19"
msgstr ""

#. type: Table
#, no-wrap
msgid "PAUSED_MOTION"
msgstr ""

#. type: Table
#, no-wrap
msgid "cut recovery motion is active while paused"
msgstr ""

#. type: Table
#, no-wrap
msgid "20"
msgstr ""

#. type: Table
#, no-wrap
msgid "OHMIC_TEST"
msgstr ""

#. type: Table
#, no-wrap
msgid "an ohmic test is active"
msgstr ""

#. type: Table
#, no-wrap
msgid "21"
msgstr ""

#. type: Table
#, no-wrap
msgid "PROBE_TEST"
msgstr ""

#. type: Table
#, no-wrap
msgid "a probe test is active"
msgstr ""

#. type: Table
#, no-wrap
msgid "22"
msgstr ""

#. type: Table
#, no-wrap
msgid "SCRIBING"
msgstr ""

#. type: Table
#, no-wrap
msgid "a scribing job is active"
msgstr ""

#. type: Table
#, no-wrap
msgid "23"
msgstr ""

#. type: Table
#, no-wrap
msgid "CONSUMABLE_CHANGE_ON"
msgstr ""

#. type: Table
#, no-wrap
msgid "move to consumable change coordinates"
msgstr ""

#. type: Table
#, no-wrap
msgid "24"
msgstr ""

#. type: Table
#, no-wrap
msgid "CONSUMABLE_CHANGE_OFF"
msgstr ""

#. type: Table
#, no-wrap
msgid "return from consumable change coordinates"
msgstr ""

#. type: Table
#, no-wrap
msgid "25"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT_RECOVERY_ON"
msgstr ""

#. type: Table
#, no-wrap
msgid "cut recovery is active"
msgstr ""

#. type: Table
#, no-wrap
msgid "26"
msgstr ""

#. type: Table
#, no-wrap
msgid "CUT_RECOVERY_OFF"
msgstr ""

#. type: Table
#, no-wrap
msgid "cut recovery is deactivated"
msgstr ""

#. type: Table
#, no-wrap
msgid "27"
msgstr ""

#. type: Table
#, no-wrap
msgid "DEBUG"
msgstr ""

#. type: Plain text
msgid ""
"The DEBUG state is for testing purposes only and will not normally be "
"encountered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "QtPlasmaC Debug Print"
msgstr ""

#. type: Plain text
msgid ""
"The plasmac HAL component has a HAL pin named *plasmac.debug-print* which if "
"set to 1 (true) will print to terminal every state change as a debug aid."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hypertherm PowerMax Communications"
msgstr ""

#. type: Plain text
msgid ""
"Communications can be established with a Hypertherm PowerMax plasma cutter "
"that has a RS485 port. This feature enables the setting of *Cut Mode*, "
"*Cutting Amperage* and *Gas Pressure* automatically from the *Cut "
"Parameters* of the material file. In addition, the user will be able to view "
"the PowerMax's *Arc On Time* in hh:mm:ss format on the <<qt_statistics-tab, "
"STATISTICS Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"If *Gas Pressure* is set to Zero then the PowerMax will automatically "
"calculate the required pressure from the *Cut Mode*, *Cut Current*, torch "
"type, and torch length."
msgstr ""

#. type: Plain text
msgid ""
"Changing the cutting mode will set the gas pressure to zero causing the "
"machine to use its automatic gas pressure mode."
msgstr ""

#. type: Plain text
msgid ""
"The maximum and minimum values of these parameters are read from the plasma "
"cutter and the related spin-buttons in the Cut Parameters are then limited "
"by these values. Gas pressure cannot be changed from zero until "
"communications have been established."
msgstr ""

#. type: Plain text
msgid ""
"This feature is enabled by setting the correct port name for the PM_PORT "
"variable in the [QTPLASMAC] section of the <machine_name>.ini file. If the "
"PM_PORT variable is not set in the <machine_name>.ini file then the widgets "
"associated with this feature will not be visible."
msgstr ""

#. type: Plain text
msgid ""
"Example showing enabling the Hypertherm PowerMax Communications on USB0:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[QTPLASMAC]\n"
"PM_PORT = /dev/ttyusb0\n"
msgstr ""

#. type: Plain text
msgid ""
"If the user is unsure of the name of the port, there is a python script in "
"the configuration directory that will show all available ports and can also "
"be used to test communications with the plasma unit prior to enabling this "
"feature in the QtPlasmaC GUI."
msgstr ""

#. type: Plain text
msgid "To use the test script follow these instructions:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "pmx485-test\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"source ~/linuxcnc-dev/scripts/rip-environment\n"
"pmx485-test\n"
msgstr ""

#. type: Plain text
msgid ""
"The gas pressure units display (psi or bar) is determined by the data "
"received during initial setup of the communication link and is then shown "
"next to the Gas Pressure setting in the MATERIAL section of the "
"<<qt_parameters-tab, PARAMETERS Tab>>."
msgstr ""

#. type: Plain text
msgid ""
"The PowerMax machine will go into remote mode after communications have been "
"established and may only be controlled remotely (via the QtPlasmaC GUI) at "
"this point. The connection can be validated by observing the PowerMax "
"display."
msgstr ""

#. type: Plain text
msgid "To switch the PowerMax back to local mode the user can either:"
msgstr ""

#. type: Plain text
msgid "Disable PowerMax Comms from the <<qt_main-tab, MAIN Tab>>"
msgstr ""

#. type: Plain text
msgid ""
"Close LinuxCNC which will put the PowerMax into local mode during shutdown."
msgstr ""

#. type: Plain text
msgid "Turn the PowerMax off for 30 seconds and then power it back on."
msgstr ""

#. type: Plain text
msgid ""
"If PowerMax communications is active then selecting <<qt_mesh-mode, Mesh "
"Mode>> will automatically select CPA mode on the PowerMax unit."
msgstr ""

#. type: Plain text
msgid ""
"To use the PowerMax communications feature it is necessary to have the "
"python pyserial module installed. + If pyserial is not installed an error "
"message will be displayed."
msgstr ""

#. type: Plain text
msgid ""
"To install pyserial, enter the following command into a terminal window:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo apt install python-serial\n"
msgstr ""

#. type: Plain text
msgid ""
"A typical <<qt_rs485_connections, connection diagram>> is shown in the "
"appendix of this document as well as confirmed working interfaces."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Internationalisation"
msgstr ""

#. type: Plain text
msgid ""
"It is possible to create translation files for QtPlasmaC to display in the "
"language of the current locale."
msgstr ""

#. type: Plain text
msgid ""
"To create and or edit a translation file requires that LinuxCNC has been "
"installed as run in place."
msgstr ""

#. type: Plain text
msgid ""
"The following assumes that the linuxcnc git directory is ~/linuxcnc-dev."
msgstr ""

#. type: Plain text
msgid "The *$* indicates a terminal prompt."
msgstr ""

#. type: Plain text
msgid ""
"All language files are kept in ~/linuxcnc-dev/share/screens/qtplasmac/"
"languages."
msgstr ""

#. type: Plain text
msgid ""
"The qtplasmac.py file is a python version of the GUI file used for "
"translation purposes."
msgstr ""

#. type: Plain text
msgid ""
"The .ts files are the translation source files for the translations. These "
"are the files that require creating/editing for each language."
msgstr ""

#. type: Plain text
msgid "The .qm files are the compiled translation files used by pyqt."
msgstr ""

#. type: Plain text
msgid ""
"The language is determined by an underscore plus the first two letters of "
"the locale, for example if an Italian translation was being done then it "
"would be \"\\_it\". It will be referred to as \"_xx\" in this document, so "
"\"qtplasmac_xx.ts\" in this document would actually be \"qtplasmac_it.ts\" "
"for an Italian translation."
msgstr ""

#. type: Plain text
msgid ""
"The default locale for QtPlasmaC is \"_en\" which means that any translation "
"files created as \"qtplasmac_en.*\" will not be used for translations."
msgstr ""

#. type: Plain text
msgid ""
"If any of the required utilities (pyuic5, pylupdate5, linguist) are not "
"installed then the user will need to install pyqt5-dev-tools:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ sudo apt install pyqt5-dev-tools\n"
msgstr ""

#. type: Plain text
msgid "Change to the languages directory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd ~/linuxcnc-dev/share/qtvcp/screens/qtplasmac/languages\n"
msgstr ""

#. type: Plain text
msgid ""
"If any text changes have been made to the GUI then run the following to "
"update the GUI python file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ pyuic5 ../qtplasmac.ui > qtplasmac.py\n"
msgstr ""

#. type: Plain text
msgid ""
"The user can either create a new translation source file for a non-existing "
"language translation or modify an existing translation source file due to "
"changes being made to some text in a QtPlasmaC source file. If modifying an "
"existing translation that has had no source file changes then this step is "
"not required."
msgstr ""

#. type: Plain text
msgid "Create or edit a .ts file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ langfile xx\n"
msgstr ""

#. type: Plain text
msgid ""
"this command is a script which runs the following: $ pylupdate5 *.py ../*."
"py ../../../../../lib/python/qtvcp/lib/qtplasmac/*.py -ts qtplasmac_xx.ts"
msgstr ""

#. type: Plain text
msgid "The editing of the translation is done with the linguist application:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ linguist\n"
msgstr ""

#. type: Plain text
msgid "Then open the required translation file."
msgstr ""

#. type: Plain text
msgid ""
"It is not necessary to provide a translation for every text string, if no "
"translation is specified for a string then the original string will be used "
"in the application.  The user needs to be careful with the length of strings "
"that appear on widgets as space is limited. If possible try to make the "
"translation no longer than the original."
msgstr ""

#. type: Plain text
msgid "When editing is complete save the file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "File > Save\n"
msgstr ""

#. type: Plain text
msgid "Then create the .qm file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "File > Release\n"
msgstr ""

#. type: Plain text
msgid ""
"Then create links to the compiled .qm file for the other QtPlasmaC GUIs."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ ln -s qtplasmac_en.qm ../../qtplasmac_4x3/languages/\n"
"$ ln -s qtplasmac_en.qm ../../qtplasmac_9x16/languages/\n"
msgstr ""

#. type: Plain text
msgid ""
"QtPlasmaC will be translated to the language of the current locale on the "
"next start so long as a .qm file exists in that language."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Appendix"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Example Configurations"
msgstr ""

#. type: Plain text
msgid ""
"There are example configuration files which use the QtPlasmaC GUI to "
"simulate plasma cutting machines."
msgstr ""

#. type: Plain text
msgid ""
"They can be found in the LinuxCNC chooser under: Sample Configurations -> "
"by_machine -> qtplasmac"
msgstr ""

#. type: Plain text
msgid "Three versions are available in both metric and imperial units:"
msgstr ""

#. type: Plain text
msgid "qtplasmac_l - 16:9 format, minimum resolution 1366x768"
msgstr ""

#. type: Plain text
msgid "qtplasmac_p - 9:16 format, minimum resolution 786x1366"
msgstr ""

#. type: Plain text
msgid "qtplasmac_s - 4:3 format, minimum resolution 1024x768"
msgstr ""

#. type: Plain text
msgid ""
"Each sample configuration includes a popup control panel to simulate various "
"inputs to the GUI such as:"
msgstr ""

#. type: Plain text
msgid "ARC VOLTAGE"
msgstr ""

#. type: Plain text
msgid "OHMIC SENSE"
msgstr ""

#. type: Plain text
msgid "FLOAT SWITCH"
msgstr ""

#. type: Plain text
msgid "BREAKAWAY SWITCH"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "NGC Samples"
msgstr ""

#. type: Plain text
msgid "There are some sample G-Code files in nc_files/plasmac."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Change Type Of LinuxCNC Installation"
msgstr ""

#. type: Plain text
msgid ""
"It is recommended that a <<qt_backup, backup>> copy of the existing "
"QtPlasmaC configuration is made before proceeding."
msgstr ""

#. type: Plain text
msgid ""
"To change the type of LinuxCNC installation from a Package installation "
"(Buildbot) to a Run In Place or vice versa the user will need to run the "
"qtplasmac-setup program."
msgstr ""

#. type: Plain text
msgid ""
"Enter the following command into a terminal window do one of the following:"
msgstr ""

#. type: Plain text
msgid "Switch to a Package installation (Buildbot):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "qtplasmac-setup\n"
msgstr ""

#. type: Plain text
msgid "Switch to a Run In Place installation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"source ~/linuxcnc-dev/scripts/rip-environment\n"
"qtplasmac-setup\n"
msgstr ""

#. type: Plain text
msgid "This will load the setup program:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_setup.png"
msgstr ""

#. type: Plain text
msgid ""
"press 'SELECT' which will open a file dialog box, select the .ini file of "
"the QtPlasmaC configuration then press 'SWITCH'. The installation type will "
"now be changed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "QtPlasmaC Specific G-Codes"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Code*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Begin <<qt_multi-tool, cut>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M3 $0 S1"
msgstr ""

#. type: Table
#, no-wrap
msgid "End <<qt_multi-tool, cut>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M5 $0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Begin <<qt_scribe, scribe>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M3 $1 S1"
msgstr ""

#. type: Table
#, no-wrap
msgid "End <<qt_scribe, scribe>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M5 $1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Begin <<qt_spotting, center spot>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M3 $2 S1"
msgstr ""

#. type: Table
#, no-wrap
msgid "End <<qt_spotting, center spot>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "M5 $2"
msgstr ""

#. type: Table
#, no-wrap
msgid "End all the above"
msgstr ""

#. type: Table
#, no-wrap
msgid "M5 $-1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select a <<qt_material-handling, material>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M190 Pn +\n"
"    n denotes the material number"
msgstr ""

#. type: Table
#, no-wrap
msgid "Wait for <<qt_material-handling, material>> change confirmation"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M66 P3 L3 Qn +\n"
"    n is delay time (in seconds)\n"
"    This value may need to be increased for very\n"
"    large material files"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set feed rate from <<qt_material-handling, material>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "F#<_hal[plasmac.cut-feed-rate]>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Enable <<qt_ignore-ok, Ignore Arc OK>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M62 P1 (synchronized with motion) +\n"
"    M64 P1 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Disable <<qt_ignore-ok, Ignore Arc OK>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M63 P1 (synchronized with motion) +\n"
"    M65 P1 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Disable <<qt_thc, THC>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M62 P2 (synchronized with motion) +\n"
"    M64 P2 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Enable <<qt_thc, THC>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M63 P2 (synchronized with motion) +\n"
"    M65 P2 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Disable <<qt_overcut, Torch>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M62 P3 (synchronized with motion) +\n"
"    M64 P3 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Enable <<qt_overcut, Torch>>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M63 P3 (synchronized with motion) +\n"
"    M65 P3 (immediate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set <<qt_velocity_thc, velocity>> to a percentage of feed rate"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M67 E3 Qn (synchronized with motion) +\n"
"    M68 E3 Qn (immediate) +\n"
"    n is the percentage to set +\n"
"    10 is the minimum, below this will be set to 100% +\n"
"    100 is the maximum, above this will be set to 100%\n"
"    *It is recommended to have M68 E3 Q0 in both the preamble and postamble*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cutter <<qt_cutter-compensation, compensation>> - left of path"
msgstr ""

#. type: Table
#, no-wrap
msgid "G41.1 D#<_hal[plasmac_run.kerf-width-f]>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cutter <<qt_cutter-compensation, compensation>> - right of path"
msgstr ""

#. type: Table
#, no-wrap
msgid "G42.1 D#<_hal[plasmac_run.kerf-width-f]>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cutter <<qt_cutter-compensation, compensation>> off"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G40 +\n"
"    *Note that M62 through M68 are invalid while cutter compensation is on*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut <<qt_hole-cutting, holes>> at 60% feed rate"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"#<holes> = 1 +\n"
"    for holes less than 32mm (1.26\") diameter"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Cut <<qt_hole-cutting, holes>> at 60% feed rate, +\n"
"turn torch off at hole end, +\n"
"continue hole path for overcut"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"#<holes> = 2 +\n"
"    for holes less than 32mm (1.26\") diameter\n"
"    overcut length = 4mm (0.157\")"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut <<qt_hole-cutting, holes>> and arcs at 60% feed rate"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"#<holes> = 3 +\n"
"    for holes less than 32mm (1.26\") diameter +\n"
"    for arcs less than 16mm (0.63\") radius"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Cut <<qt_hole-cutting, holes>> and arcs at 60% feed rate, +\n"
"turn torch off at hole end, +\n"
"continue hole path for overcut"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"#<holes> = 4 +\n"
"    for holes less than 32mm (1.26\") diameter +\n"
"    for arcs less than 16mm (0.63\") radius +\n"
"    overcut length = 4mm (0.157\")"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Specify <<qt_hole-cutting, hole>> diameter for +\n"
"#<holes> = 1-4"
msgstr ""

#. type: Table
#, no-wrap
msgid "#<h_diameter> = n (n is the diameter, use the same units system as the rest of the G-Code file)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Specify <<qt_hole-cutting, hole>> velocity for +\n"
"#<holes> = 1-4"
msgstr ""

#. type: Table
#, no-wrap
msgid "#<h_velocity> = n (n is the percentage, set the percentage of the current feed rate)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Specify <<qt_overcut, overcut>> length"
msgstr ""

#. type: Table
#, no-wrap
msgid "#<oclength> = n (n is the length, use the same units system as the rest of the G-Code file)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Specify <<qt_cut-types, pierce-only>> mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "#<pierce-only> = n (n is the mode, 0=normal cut mode, 1=pierce only mode)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Create or edit materials. +\n"
"options: +\n"
"1 - Create temporary default +\n"
"2 - Add if not existing +\n"
"3 - Overwrite if existing else add new +"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"mandatory parameters: +\n"
"    (o=<option>, nu=<nn>, na=<ll>, ph=<nn>, pd=<nn>, ch=<nn>, fr=<nn>) +\n"
"    optional parameters: +\n"
"    (kw=<nn>, th=<nn>, ca=<nn>, cv=<nn>, pe=<nn>, gp=<nn>, cm=<nn>, jh=<nn>, jd=<nn>)"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<qt_magic-comments, Keep Z Motion>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "#<keep-z-motion> = 1"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "QtPlasmaC G-code Examples"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Example*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select material and do a normal cut"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"M190 P3 +\n"
"    M66 P3 L3 Q1 +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    M3 $0 S1 +\n"
"    . +\n"
"    . +\n"
"    M5 $0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set velocity to 100% of CutFeedRate"
msgstr ""

#. type: Table
#, no-wrap
msgid "M67 E3 Q0 or M67 E3 Q100"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set velocity to 60% of CutFeedRate"
msgstr ""

#. type: Table
#, no-wrap
msgid "M67 E3 Q60"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set velocity to 40% of CutFeedRate"
msgstr ""

#. type: Table
#, no-wrap
msgid "M67 E3 Q40"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut a hole with 60% reduced speed using velocity setting"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G21 (metric) +\n"
"    G64 P0.05 +\n"
"    M52 P1 (allow paused motion) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    G0 X10 Y10 +\n"
"    M3 $0 S1 (start cut) +\n"
"    G1 X0 +\n"
"    M67 E3 Q60 (reduce feed rate to 60%) +\n"
"    G3 I10 (the hole) +\n"
"    M67 E3 Q100 (restore feed rate to 100%) +\n"
"    M5 $0 (end cut) +\n"
"    G0 X0 Y0 +\n"
"    M2 (end job)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut a hole with 60% reduced speed using the #<holes> command"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G21 (metric) +\n"
"    G64 P0.05 +\n"
"    M52 P1 (allow paused motion) +\n"
"    \\#<holes> = 1 (velocity reduction for holes) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    G0 X10 Y10 +\n"
"    M3 $0 S1 (start cut) +\n"
"    G1 X0 +\n"
"    G3 I10 (the hole) +\n"
"    M5 $0 (end cut) +\n"
"    G0 X0 Y0 +\n"
"    M2 (end job)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut a hole with overcut using torch disable"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G21 (metric) +\n"
"    G64 P0.05 +\n"
"    M52 P1 (allow paused motion) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    G0 X10 Y10 +\n"
"    M3 $0 S1 (start cut) +\n"
"    G1 X0 +\n"
"    M67 E3 Q60 (reduce feed rate to 60%) +\n"
"    G3 I10 (the hole) +\n"
"    M62 P3 (turn torch off) +\n"
"    G3 X0.8 Y6.081 I10 (continue motion for 4mm) +\n"
"    M63 P3 (allow torch to be turned on) +\n"
"    M67 E3 Q0 (restore feed rate to 100%) +\n"
"    M5 $0 (end cut) +\n"
"    G0 X0 Y0 +\n"
"    M2 (end job) +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut a hole with overcut using the #<holes> command"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G21 (metric) +\n"
"    G64 P0.05 +\n"
"    M52 P1 (allow paused motion) +\n"
"    \\#<holes> = 2 (overcut for holes) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    G0 X10 Y10 +\n"
"    M3 $0 S1 (start cut) +\n"
"    G1 X0 +\n"
"    G3 I10 (the hole) +\n"
"    M5 $0 (end cut) +\n"
"    G0 X0 Y0 +\n"
"    M2 (end job) +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cut a hole with 6.5mm overcut using the #<holes> command"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"G21 (metric) +\n"
"    G64 P0.05 +\n"
"    M52 P1 (allow paused motion) +\n"
"    \\#<holes> = 2 (overcut for holes) +\n"
"    #<oclength> = 6.5 (6.5mm overcut length) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    G0 X10 Y10 +\n"
"    M3 $0 S1 (start cut) +\n"
"    G1 X0 +\n"
"    G3 I10 (the hole) +\n"
"    M5 $0 (end cut) +\n"
"    G0 X0 Y0 +\n"
"    M2 (end job)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select scribe and select torch at end of scribing"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
". +\n"
"    . +\n"
"    M52 P1 (paused motion on) +\n"
"    F#<_hal[plasmac.cut-feed-rate]> +\n"
"    T1 M6 (select scribe) +\n"
"    G43 H0 (apply offsets) +\n"
"    M3 $1 S1 (start plasmac with scribe) +\n"
"    . +\n"
"    . +\n"
"    T0 M6 (select torch) +\n"
"    G43 H0 (apply offsets) +\n"
"    G0 X0 Y0 (parking position) +\n"
"    M5 $1 (end)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Hole center spotting. +"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"(Requires a small motion command or nothing happens) +\n"
"    G21 (metric) +\n"
"    F99999 (high feed rate) +\n"
"    G0 X10 Y10 +\n"
"    M3 $2 S1 (spotting on) +\n"
"    G91 (relative distance mode) +\n"
"    G1 X0.000001 +\n"
"    G90 (absolute distance mode) +\n"
"    M5 $2 (spotting off) +\n"
"    G0 X0 Y0 +\n"
"    G90 +\n"
"    M2 +"
msgstr ""

#. type: Table
#, no-wrap
msgid "Create temporary default material"
msgstr ""

#. type: Table
#, no-wrap
msgid "(o=1, nu=2, na=5mm Mild Steel 40A, ph=3.1, pd=0.1, ch=0.75, fr=3000)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Edit material, if not existing create a new one"
msgstr ""

#. type: Table
#, no-wrap
msgid "(o=3, nu=2, na=5mm Mild Steel 40A, ph=3.1, pd=0.1, ch=0.75, fr=3000, kw=1.0)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Mesa THCAD"
msgstr ""

#. type: Plain text
msgid ""
"The Mesa THCAD is a common way of obtaining the arc voltage from a plasma "
"cutter and is also useful for ohmic sensing of the material during probing. "
"The THCAD may be used for parallel port configurations as well as "
"configurations using Mesa Electronics hardware. The THCAD is available in "
"three different models, THCAD-5, THCAD-10, and THCAD-300."
msgstr ""

#. type: Plain text
msgid ""
"There is a mode jumper on each THCAD card which should be set to *UNIPOLAR*"
msgstr ""

#. type: Plain text
msgid ""
"There is a frequency divider jumper on each THCAD card which should be set "
"according to the hardware type:"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Parallel Port"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Mesa Card*"
msgstr ""

#. type: Table
#, no-wrap
msgid "F/64"
msgstr ""

#. type: Table
#, no-wrap
msgid "F/32"
msgstr ""

#. type: Plain text
msgid "This value is required to be entered into PNcConf during installation."
msgstr ""

#. type: Plain text
msgid ""
"If using a parallel port and the user's computer has very good latency then "
"they may be able to use *F/32*"
msgstr ""

#. type: Plain text
msgid "Located on the rear of the THCAD is a calibration sticker showing:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    THCAD-nnn\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
" 0V  121.1 kHz\n"
" 5V  925.3 kHz\n"
msgstr ""

#. type: Plain text
msgid ""
"or similar values, these values are required to be entered into PNcConf "
"during installation."
msgstr ""

#. type: Plain text
msgid ""
"PNcConf has entries for all required THCAD parameters and will calculate and "
"configure any required settings. The calculations used are as follows:"
msgstr ""

#. type: Plain text
msgid "[underline]*Voltage Scale*"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "vs = r / ((f - z) / d / v)\n"
msgstr ""

#. type: Plain text
msgid "[underline]*Voltage Offset*"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "vo = z / d\n"
msgstr ""

#. type: Plain text
msgid "_r_ = divider ratio (see below)."
msgstr ""

#. type: Plain text
msgid "_f_ = full scale value from calibration sticker."
msgstr ""

#. type: Plain text
msgid "_z_ = 0V value from calibration sticker."
msgstr ""

#. type: Plain text
msgid "_d_ = value from jumper above."
msgstr ""

#. type: Plain text
msgid "_v_ = full scale voltage of THCAD"
msgstr ""

#. type: Plain text
msgid "[underline]*Divider Ratio*"
msgstr ""

#. type: Plain text
msgid "_THCAD-5 or THCAD-10_"
msgstr ""

#. type: Plain text
msgid ""
"If connecting to a plasma CNC port then the divider ratio is selected from "
"the plasma machine. A common ratio used is 20:1"
msgstr ""

#. type: Plain text
msgid ""
"If connecting to the plasma machines full arc voltage then a common setup "
"for a THCAD-10 is to use a 1 Megohm resistor from arc negative to THCAD "
"negative and a 1 Megohm resistor from arc positive to THCAD positive.  The "
"divider ratio is obtained by:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "r = (total_resistance + 100000) / 100000\n"
msgstr ""

#. type: Plain text
msgid "_THCAD-300_"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "r = 1\n"
msgstr ""

#. type: Plain text
msgid ""
"IF THE USER IS USING A HF START PLASMA POWER SUPPLY THEN EACH OF THESE "
"RESISTANCES SHOULD BE MADE UP OF SEVERAL HIGH VOLTAGE RESISTORS."
msgstr ""

#. type: Plain text
msgid ""
"IF THE USER IS USING A HF START PLASMA POWER SUPPLY THEN OHMIC SENSING IS "
"NOT RECOMMENDED."
msgstr ""

#. type: Plain text
msgid ""
"These values can be calculated by using https://jscalc.io/calc/"
"NTr5QDX6WgMThBVb[this online calculator]."
msgstr ""

#. type: Plain text
msgid ""
"There is a <<qt_lowpass, lowpass filter>> available which may be useful if "
"using a THCAD and there is a lot of noise on the returned arc voltage."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RS485 Connections"
msgstr ""

#. type: Plain text
msgid ""
"Hypertherm RS485 Wiring Diagram (wire colors inside the Hypertherm in "
"parentheses):"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Connection at Machine Pin #"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Connection at Breakout Board*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*1* - Tx+ (Red)"
msgstr ""

#. type: Table
#, no-wrap
msgid "->RXD+"
msgstr ""

#. type: Table
#, no-wrap
msgid "*2* - Tx- (Black)"
msgstr ""

#. type: Table
#, no-wrap
msgid "->RXD-"
msgstr ""

#. type: Table
#, no-wrap
msgid "*3* - Rx+ (Brown)"
msgstr ""

#. type: Table
#, no-wrap
msgid "->T/R+"
msgstr ""

#. type: Table
#, no-wrap
msgid "*4* - Rx- (White)"
msgstr ""

#. type: Table
#, no-wrap
msgid "->T/R-"
msgstr ""

#. type: Table
#, no-wrap
msgid "*5* - GND (Green)"
msgstr ""

#. type: Table
#, no-wrap
msgid "->GND"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_rs485_pmx.png"
msgstr ""

#. type: Plain text
msgid "RS485 interfaces that are known to work:"
msgstr ""

#. type: Plain text
msgid "DTECH DT-5019 USB to RS485 converter adapter:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_rs485_dtech.png"
msgstr ""

#. type: Plain text
msgid ""
"The following is necessary to convert a motherboard Serial connection or "
"Serial card (RS232) to RS485:"
msgstr ""

#. type: Plain text
msgid "DTECH RS232 to RS485 converter:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_rs485_converter.png"
msgstr ""

#. type: Plain text
msgid ""
"Serial card example (Sunnix SER5037A PCI Card shown with Breakout Board):"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_rs485_sunnix.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Arc OK With A Reed Relay"
msgstr ""

#. type: Plain text
msgid ""
"An effective and very reliable method of obtaining an Arc OK signal from a "
"plasma power supply without a CNC port is to mount a reed relay inside a non-"
"conductive tube and wrap and secure three turns of the work lead around the "
"tube."
msgstr ""

#. type: Plain text
msgid ""
"This assembly will now act as a relay that will switch on when current is "
"flowing through the work lead which only occurs when a cutting arc has been "
"established."
msgstr ""

#. type: Plain text
msgid ""
"This will require that QtPlasmaC be operated in Mode 1 rather than Mode 0. "
"See the <<qt_ini-mode, INI File>> and <<qt_mode, QtPlasmaC Modes>> sections "
"for more information."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_reed_arc_ok.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Contact Load Schematics"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/qtplasmac_relay_contact.png"
msgstr ""

#. type: Plain text
msgid "A full description is at <<qt-contact-load, Contact Load>>"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Known Issues"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Keyboard Jogging"
msgstr ""

#. type: Plain text
msgid ""
"There is a known issue with some combinations of hardware and keyboards that "
"may affect the autorepeat feature of the keyboard and will then affect "
"keyboard jogging by intermittent stopping and starting during jogging. This "
"issue can be prevented by disabling the Operating System's autorepeat "
"feature for all keys. QtPlasmaC uses this disabling feature by default for "
"all keys only when the <<qt_main-tab, MAIN Tab>> is visible, with the "
"following exceptions when autorepeat is allowed with the <<qt_main-tab, MAIN "
"Tab>> visible: G-Code editor is active, MDI is active. When QtPlasmaC is "
"shut down, the Operating System's autorepeat feature will be enabled for all "
"keys."
msgstr ""

#. type: Plain text
msgid ""
"If the user wishes to prevent QtPlasmaC from changing the Operating System's "
"autorepeat settings, enter the following in the [QTPLASMAC] section of the "
"<machine_name>.ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "AUTOREPEAT_ALL == ENABLE\n"
msgstr ""

#. type: Plain text
msgid "This issue does not affect any jogging using the GUI jog buttons."
msgstr ""

#. type: Plain text
msgid ""
"Disconnecting and reconnecting a keyboard during an active QtPlasmaC session "
"will cause the autorepeat feature to re-enable itself automatically which "
"may cause intermittent stopping and starting during jogging. The user must "
"restart QtPlasmaC to disable the autorepeat feature again."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Support"
msgstr ""

#. type: Plain text
msgid ""
"Online help and support is available from the https://forum.linuxcnc.org/"
"plasmac[PlasmaC section] of the https://forum.linuxcnc.org/[LinuxCNC Forum]."
msgstr ""

#. type: Plain text
msgid ""
"The user can create a compressed file containing the complete machine "
"configuration to aid in fault diagnosis by pressing following the directions "
"in the <<qt_backup, backup>> section. The resulting file is suitable for "
"attaching to a post on the LinuxCNC Forum to help the community diagnose "
"specific issues."
msgstr ""

#. type: Plain text
msgid ""
"This chapter introduces you to offsets as they are used by the LinuxCNC.  "
"These include:"
msgstr ""

#. type: Plain text
msgid "Machine Coordinates (G53)"
msgstr ""

#. type: Plain text
msgid "Nine Coordinate System Offsets (G54-G59.3)"
msgstr ""

#. type: Plain text
msgid "Global Offsets (G92) and Local Offsets (G52)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Machine Coordinate System"
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC is started the positions of each axis is the machine origin. "
"Once an axis homed the the machine origin for that axis is set to the homed "
"position.  The machine origin is the machine coordinate system which all "
"other coordinate systems are based. The <<gcode:g53,G53>> G code can be used "
"to move in the machine coordinate system."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Example of Coordinate Systems"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/offsets.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Coordinate System Offsets"
msgstr ""

#. type: Plain text
msgid "G54 - use coordinate system 1"
msgstr ""

#. type: Plain text
msgid "G55 - use coordinate system 2"
msgstr ""

#. type: Plain text
msgid "G56 - use coordinate system 3"
msgstr ""

#. type: Plain text
msgid "G57 - use coordinate system 4"
msgstr ""

#. type: Plain text
msgid "G58 - use coordinate system 5"
msgstr ""

#. type: Plain text
msgid "G59 - use coordinate system 6"
msgstr ""

#. type: Plain text
msgid "G59.1 - use coordinate system 7"
msgstr ""

#. type: Plain text
msgid "G59.2 - use coordinate system 8"
msgstr ""

#. type: Plain text
msgid "G59.3 - use coordinate system 9"
msgstr ""

#. type: Plain text
msgid ""
"Coordinate system offsets are used to shift the coordinate system from the "
"machine coordinate system. This allows the G code to be programmed for the "
"part without regard to the part location on the machine. Using coordinate "
"system offsets would allow you to machine parts in multiple locations with "
"the same G code."
msgstr ""

#. type: Plain text
msgid ""
"The values for offsets are stored in the VAR file that is requested by the "
"INI file during the startup of an LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"In the VAR file scheme, the first variable number stores the X offset, the "
"second the Y offset and so on for all nine axes. There are numbered sets "
"like this for each of the coordinate system offsets."
msgstr ""

#. type: Plain text
msgid ""
"Each of the graphical interfaces has a way to set values for these offsets.  "
"You can also set these values by editing the VAR file itself and then "
"restart LinuxCNC so that the LinuxCNC reads the new values however this is "
"not the recommended way. Using G10, G52, G92, G28.1, etc are better ways to "
"set the variables."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example of G55 parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "Variable"
msgstr ""

#. type: Table
#, no-wrap
msgid "Value"
msgstr ""

#. type: Table
#, no-wrap
msgid "5241"
msgstr ""

#. type: Table
#, no-wrap
msgid "2.000000"
msgstr ""

#. type: Table
#, no-wrap
msgid "5242"
msgstr ""

#. type: Table
#, no-wrap
msgid "1.000000"
msgstr ""

#. type: Table
#, no-wrap
msgid "5243"
msgstr ""

#. type: Table
#, no-wrap
msgid "-2.000000"
msgstr ""

#. type: Table
#, no-wrap
msgid "A"
msgstr ""

#. type: Table
#, no-wrap
msgid "5244"
msgstr ""

#. type: Table
#, no-wrap
msgid "0.000000"
msgstr ""

#. type: Table
#, no-wrap
msgid "B"
msgstr ""

#. type: Table
#, no-wrap
msgid "5245"
msgstr ""

#. type: Table
#, no-wrap
msgid "5246"
msgstr ""

#. type: Table
#, no-wrap
msgid "U"
msgstr ""

#. type: Table
#, no-wrap
msgid "5247"
msgstr ""

#. type: Table
#, no-wrap
msgid "5248"
msgstr ""

#. type: Table
#, no-wrap
msgid "W"
msgstr ""

#. type: Table
#, no-wrap
msgid "5249"
msgstr ""

#. type: Plain text
msgid ""
"You should read this as moving the zero positions of G55 to X = 2 units, Y= "
"1 unit, and Z = -2 units away from the absolute zero position."
msgstr ""

#. type: Plain text
msgid ""
"Once there are values assigned, a call to G55 in a program block would shift "
"the zero reference by the values stored. The following line would then move "
"each axis to the new zero position. Unlike G53, G54 through G59.3 are modal "
"commands. They will act on all blocks of code after one of them has been "
"set. The program that might be run using fixture offsets would require only "
"a single coordinate reference for each of the locations and all of the work "
"to be done there. The following code is offered as an example of making a "
"square using the G55 offsets that we set above."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G55 ; use coordinate system 2\n"
"G0 X0 Y0 Z0\n"
"G1 F2 Z-0.2000\n"
"X1\n"
"Y1\n"
"X0\n"
"Y0\n"
"G0 Z0\n"
"G54 ; use coordinate system 1\n"
"G0 X0 Y0 Z0\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"In this example the G54 near the end leaves the G54 coordinate system with "
"all zero offsets so that there is a modal code for the absolute machine "
"based axis positions. This program assumes that we have done that and use "
"the ending command as a command to machine zero. It would have been possible "
"to use G53 and arrive at the same place but that command would not have been "
"modal and any commands issued after it would have returned to using the G55 "
"offsets because that coordinate system would still be in effect."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Default Coordinate System"
msgstr ""

#. type: Plain text
msgid ""
"One other variable in the VAR file becomes important when we think about "
"offset systems. This variable is named 5220. In the default files its value "
"is set to 1.00000. This means that when the LinuxCNC starts up it should use "
"the first coordinate system as its default. If you set this to 9.00000 it "
"would use the ninth offset system as its default for start up and reset. Any "
"value other than an integer (decimal really)  between 1 and 9, or a missing "
"5220 variable will cause the LinuxCNC to revert to the default value of "
"1.00000 on start up."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting Coordinate System Offsets"
msgstr ""

#. type: Plain text
msgid "The G10 L2x command can be used to set coordinate system offsets:"
msgstr ""

#. type: Plain text
msgid ""
"'G10 L2 P(1-9)' - Set offset(s) to a value. Current position irrelevant."
msgstr ""

#. type: Plain text
msgid "(see <<gcode:g10-l2,G10 L2>> for details)"
msgstr ""

#. type: Plain text
msgid "'G10 L20 P(1-9)' - Set offset(s) so current position becomes a value."
msgstr ""

#. type: Plain text
msgid "(see <<gcode:g10-l20,G10 L20>> for details)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Local and Global Offsets[[sec:g52-and-g92-offsets]]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The G52 command[[sec:g52]]"
msgstr ""

#. type: Plain text
msgid ""
"'G52' is used in a part program as a temporary \"local coordinate system "
"offset\" within the workpiece coordinate system.  An example use case is "
"when machining several identical features at different locations on a part.  "
"For each feature, 'G52' programs a local reference point within workpiece "
"coordinates, and a subprogram is called to machine the feature relative to "
"that point."
msgstr ""

#. type: Plain text
msgid ""
"'G52' axis offsets are programmed relative to workpiece coordinate offsets "
"'G54' through 'G59.3'.  As a local offset, 'G52' is applied after the "
"workpiece offset, including rotation.  Thus, a part feature will be machined "
"identically on each part regardless of the part's orientation on the pallet."
msgstr ""

#. type: Plain text
msgid ""
"As a temporary offset, set and unset within the localized scope of a part "
"program, in other g-code interpreters 'G52' does not persist after machine "
"reset, 'M02' or 'M30'.  In LinuxCNC, 'G52' shares parameters with 'G92', "
"which, for historical reasons, *does* persist these parameters.  See <<sec:"
"g92-persistence-cautions,G92 Persistence Cautions>> below."
msgstr ""

#. type: Plain text
msgid ""
"'G52' and 'G92' share the same offset registers.  Therefore, setting 'G52' "
"will override any earlier 'G92' setting, and 'G52' will persist across "
"machine reset when 'G92' persistence is enabled.  These interactions may "
"result in unexpected offsets.  See <<sec:g92-g52-interaction-cautions,G92 "
"and G52 Interaction Cautions>> below."
msgstr ""

#. type: Plain text
msgid ""
"Programming 'G52 X1 Y2' offsets the current workpiece coordinate system X "
"axis by 1 and Y axis by 2.  Accordingly, on the DRO, the current tool "
"position's X and Y coordinates will be reduced by 1 and 2, respectively.  "
"Axes unset in the command, such as Z in the previous example, will be "
"unaffected: any previous 'G52' Z offset will remain in effect, and otherwise "
"the Z offset will be zero."
msgstr ""

#. type: Plain text
msgid ""
"The temporary local offset may be canceled with 'G52 X0 Y0'.  Any axes not "
"explicitly zeroed will retain the previous offset."
msgstr ""

#. type: Plain text
msgid ""
"'G52' shares the same offset registers as 'G92', and thus 'G52' is visible "
"on the DRO and preview labeled with 'G92'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The G92 commands[[sec:g92-commands]]"
msgstr ""

#. type: Plain text
msgid ""
"'G92' is typically used in two conceptually different ways: as a \"global "
"coordinate system offset\" or as a \"local coordinate system offset\".  The "
"'G92' set of commands includes:"
msgstr ""

#. type: Plain text
msgid "'G92' - This command, when used with axis names, sets values to offset"
msgstr ""

#. type: Plain text
msgid "variables."
msgstr ""

#. type: Plain text
msgid "'G92.1' - This command sets zero values to the G92 variables."
msgstr ""

#. type: Plain text
msgid "'G92.2' - This command suspends but does not zero out the G92"
msgstr ""

#. type: Plain text
msgid "'G92.3' - This command applies offset values that have been suspended."
msgstr ""

#. type: Plain text
msgid ""
"As a global offset, 'G92' is used to shift all workpiece coordinate systems "
"'G54' through 'G59.3'.  An example use case is when machining several "
"identical parts in fixtures with known locations on a pallet, but the pallet "
"location may change between runs or between machines.  Each fixture location "
"offset, relative to a reference point on the pallet, is preset in one of the "
"workpiece coordinate systems, 'G54' through 'G59.3', and 'G92' is used to "
"\"touch off\" on the pallet reference point.  Then, for each part, the "
"corresponding workpiece coordinate system is selected and the part program "
"is executed."
msgstr ""

#. type: Plain text
msgid ""
"'G10 R-' workpiece coordinate system rotation is specific to the 'rs274ngc' "
"interpreter, and the 'G92' offset is applied 'after' rotation.  When using "
"'G92' as a global offset, workpiece coordinate system rotations may have "
"unexpected results."
msgstr ""

#. type: Plain text
msgid ""
"As a local coordinate system, 'G92' is used as a temporary offset within the "
"workpiece coordinate system.  An example use case is when machining a part "
"with several identical features at different locations.  For each feature, "
"'G92' is used to set a local reference point, and a subprogram is called to "
"machine the feature starting at that point."
msgstr ""

#. type: Plain text
msgid ""
"The use of 'G92' is discouraged for programming with local coordinate "
"systems in a part program.  Instead, see <<sec:g52,'G52'>>, a local "
"coordinate system offset more intuitive when desired offset relative to the "
"workpiece is known but current tool location may not be known."
msgstr ""

#. type: Plain text
msgid ""
"Programming 'G92 X0 Y0 Z0' sets the current tool location to the coordinates "
"X0, Y0, and Z0, without motion.  G92 *does not* work from absolute machine "
"coordinates.  It works from *current location*."
msgstr ""

#. type: Plain text
msgid ""
"'G92' also works from current location as modified by any other offsets that "
"are in effect when the 'G92' command is invoked. While testing for "
"differences between work offsets and actual offsets it was found that a "
"'G54' offset could cancel out a 'G92' and thus give the appearance that no "
"offsets were in effect. However, the 'G92' was still in effect for all "
"coordinates and did produce expected work offsets for the other coordinate "
"systems."
msgstr ""

#. type: Plain text
msgid ""
"By default, 'G92' offsets are restored after the machine is started.  "
"Programmers that wish for Fanuc behavior, where 'G92' offsets are cleared at "
"machine start and after a reset or program end, may disable 'G92' "
"persistence by setting 'DISABLE_G92_PERSISTENCE = 1' in the '[RS274NGC]' "
"section of the '.ini' file."
msgstr ""

#. type: Plain text
msgid ""
"It is good practice to clear the 'G92' offsets at the end of their use with "
"'G92.1' or 'G92.2'.  When starting up LinuxCNC with 'G92' persistence "
"enabled (the default), any offsets in the 'G92' variables will be applied "
"when an axis is homed.  See <<sec:g92-persistence-cautions,G92 Persistence "
"Cautions>> below."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting G92 Values"
msgstr ""

#. type: Plain text
msgid ""
"G92 commands work from current axis location and add and subtract correctly "
"to give the current axis position the value assigned by the G92 command. The "
"effects work even though previous offsets are in."
msgstr ""

#. type: Plain text
msgid ""
"So if the X axis is currently showing 2.0000 as its position a 'G92 X0' will "
"set an offset of -2.0000 so that the current location of X becomes zero. A "
"'G92 X2' will set an offset of 0.0000 and the displayed position will not "
"change. A 'G92 X5.0000' will set an offset of 3.0000 so that the current "
"displayed position becomes 5.0000."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G92 Persistence Cautions[[sec:g92-persistence-cautions]]"
msgstr ""

#. type: Plain text
msgid ""
"By default, the values of a 'G92' offset will be saved in the VAR file and "
"be restored after a machine reset or startup."
msgstr ""

#. type: Plain text
msgid "The G92 parameters are:"
msgstr ""

#. type: Plain text
msgid "5210 - Enable/disable flag (1.0/0.0)"
msgstr ""

#. type: Plain text
msgid "5211 - X Axis Offset"
msgstr ""

#. type: Plain text
msgid "5212 - Y Axis Offset"
msgstr ""

#. type: Plain text
msgid "5213 - Z Axis Offset"
msgstr ""

#. type: Plain text
msgid "5214 - A Axis Offset"
msgstr ""

#. type: Plain text
msgid "5215 - B Axis Offset"
msgstr ""

#. type: Plain text
msgid "5216 - C Axis Offset"
msgstr ""

#. type: Plain text
msgid "5217 - U Axis Offset"
msgstr ""

#. type: Plain text
msgid "5218 - V Axis Offset"
msgstr ""

#. type: Plain text
msgid "5219 - W Axis Offset"
msgstr ""

#. type: Plain text
msgid ""
"where 5210 is the 'G92' enable flag (1 for enabled, 0 for disabled)  and "
"5211 to 5219 are the axis offsets. If you are seeing unexpected positions as "
"the result of a commanded move, as a result of storing an offset in a "
"previous program and not clearing them at the end then issue a G92.1 in the "
"MDI window to clear the stored offsets."
msgstr ""

#. type: Plain text
msgid ""
"If G92 values exist in the VAR file when LinuxCNC starts up, the G92 values "
"in the var file will be applied to the values of the current location of "
"each axis. If this is home position and home position is set as machine zero "
"everything will be correct. Once home has been established using real "
"machine switches, or by moving each axis to a known home position and "
"issuing an axis home command, any G92 offsets will be applied. If you have a "
"G92 X1 in effect when you home the X axis the DRO will read 'X: 1.000' "
"instead of the expected 'X: 0.000' because the G92 was applied to the "
"machine origin. If you issue a G92.1 and the DRO now reads all zeros then "
"you had a G92 offset in effect when you last ran LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"Unless your intention is to use the same G92 offsets in the next program, "
"the best practice is to issue a G92.1 at the end of any G code files where "
"you use G92 offsets."
msgstr ""

#. type: Plain text
msgid ""
"When a program is aborted during processing that has 'G92' offsets in effect "
"a startup will cause them to become active again.  As a safeguard, always "
"have your preamble to set the environment as you expect it.  Additionally, "
"'G92' persistence may be disabled by setting 'DISABLE_G92_PERSISTENCE = 1' "
"in the '[RS274NGC]' section of the '.ini' file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G92 and G52 Interaction Cautions[[sec:g92-g52-interaction-cautions]]"
msgstr ""

#. type: Plain text
msgid ""
"'G52' and 'G92' share the same offset registers.  Unless 'G92' persistence "
"is disabled in the '.ini' file (see <<sec:g92-commands,G92 Commands>>), "
"'G52' offsets will also persist after machine reset, 'M02' or 'M30'.  Beware "
"that a 'G52' offset in effect during a program abort may result in "
"unintended offsets when the next program is run.  See <<sec:g92-persistence-"
"cautions,G92 Persistence Cautions>> above."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Sample Programs Using Offsets"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Sample Program Using Workpiece Coordinate Offsets"
msgstr ""

#. type: Plain text
msgid ""
"This sample engraving project mills a set of four .1 radius circles in "
"roughly a star shape around a center circle. We can setup the individual "
"circle pattern like this."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G10 L2 P1 X0 Y0 Z0 (ensure that G54 is set to machine zero)\n"
"G0 X-0.1 Y0 Z0\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G0 Z0\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"We can issue a set of commands to create offsets for the four other circles "
"like this."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G10 L2 P2 X0.5 (offsets G55 X value by 0.5 inch)\n"
"G10 L2 P3 X-0.5 (offsets G56 X value by -0.5 inch)\n"
"G10 L2 P4 Y0.5 (offsets G57 Y value by 0.5 inch)\n"
"G10 L2 P5 Y-0.5 (offsets G58 Y value by -0.5 inch)\n"
msgstr ""

#. type: Plain text
msgid "We put these together in the following program:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(a program for milling five small circles in a diamond shape)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G10 L2 P1 X0 Y0 Z0 (ensure that G54 is machine zero)\n"
"G10 L2 P2 X0.5 (offsets G55 X value by 0.5 inch)\n"
"G10 L2 P3 X-0.5 (offsets G56 X value by -0.5 inch)\n"
"G10 L2 P4 Y0.5 (offsets G57 Y value by 0.5 inch)\n"
"G10 L2 P5 Y-0.5 (offsets G58 Y value by -0.5 inch)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G54 G0 X-0.1 Y0 Z0 (center circle)\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G0 Z0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G55 G0 X-0.1 Y0 Z0 (first offset circle)\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G0 Z0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G56 G0 X-0.1 Y0 Z0 (second offset circle)\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G0 Z0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G57 G0 X-0.1 Y0 Z0 (third offset circle)\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G0 Z0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G58 G0 X-0.1 Y0 Z0 (fourth offset circle)\n"
"G1 F1 Z-0.25\n"
"G3 X-0.1 Y0 I0.1 J0\n"
"G54 G0 X0 Y0 Z0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M2\n"
msgstr ""

#. type: Plain text
msgid ""
"Now comes the time when we might apply a set of G92 offsets to this program. "
"You'll see that it is running in each case at Z0. If the mill were at the "
"zero position, a G92 Z1.0000 issued at the head of the program would shift "
"everything an inch. You might also shift the whole pattern around in the XY "
"plane by adding some X and Y offsets with G92. If you do this you should add "
"a G92.1 command just before the M2 that ends the program. If you do not, "
"other programs that you might run after this one will also use that G92 "
"offset. Furthermore it would save the G92 values when you shut down the "
"LinuxCNC and they will be recalled when you start up again."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Sample Program Using G52 Offsets"
msgstr ""

#. type: Plain text
msgid "(To be written)"
msgstr ""

#. type: Title =
#, no-wrap
msgid "G Code Overview"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC G Code language is based on the RS274/NGC language. The G Code "
"language is based on lines of code. Each line (also called a 'block') may "
"include commands to do several different things. Lines of code may be "
"collected in a file to make a program."
msgstr ""

#. type: Plain text
msgid ""
"A typical line of code consists of an optional line number at the beginning "
"followed by one or more 'words'. A word consists of a letter followed by a "
"number (or something that evaluates to a number). A word may either give a "
"command or provide an argument to a command. For example, 'G1 X3' is a valid "
"line of code with two words. 'G1' is a command meaning 'move in a straight "
"line at the programmed feed rate to the programmed end point', and 'X3' "
"provides an argument value (the value of X should be 3 at the end of the "
"move).  Most LinuxCNC G Code commands start with either G or M (for General "
"and Miscellaneous). The words for these commands are called 'G codes' and 'M "
"codes.'"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC language has no indicator for the start of a program. The "
"Interpreter, however, deals with files. A single program may be in a single "
"file, or a program may be spread across several files. A file may demarcated "
"with percents in the following way. The first non-blank line of a file may "
"contain nothing but a percent sign, '%', possibly surrounded by white space, "
"and later in the file (normally at the end of the file) there may be a "
"similar line. Demarcating a file with percents is optional if the file has "
"an 'M2' or 'M30' in it, but is required if not. An error will be signaled if "
"a file has a percent line at the beginning but not at the end. The useful "
"contents of a file demarcated by percents stop after the second percent "
"line. Anything after that is ignored."
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC G Code language has two commands ('M2' or 'M30'), either of "
"which ends a program. A program may end before the end of a file. Lines of a "
"file that occur after the end of a program are not to be executed. The "
"interpreter does not even read them."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Format of a line"
msgstr ""

#. type: Plain text
msgid ""
"A permissible line of input code consists of the following, in order, with "
"the restriction that there is a maximum (currently 256) to the number of "
"characters allowed on a line."
msgstr ""

#. type: Plain text
msgid "an optional block delete character, which is a slash '/'."
msgstr ""

#. type: Plain text
msgid "an optional line number."
msgstr ""

#. type: Plain text
msgid "any number of words, parameter settings, and comments."
msgstr ""

#. type: Plain text
msgid "an end of line marker (carriage return or line feed or both)."
msgstr ""

#. type: Plain text
msgid ""
"Any input not explicitly allowed is illegal and will cause the Interpreter "
"to signal an error."
msgstr ""

#. type: Plain text
msgid ""
"Spaces and tabs are allowed anywhere on a line of code and do not change the "
"meaning of the line, except inside comments. This makes some strange-looking "
"input legal. The line 'G0X +0. 12 34Y 7' is equivalent to 'G0 x+0.1234 Y7', "
"for example."
msgstr ""

#. type: Plain text
msgid "Blank lines are allowed in the input. They are to be ignored."
msgstr ""

#. type: Plain text
msgid ""
"Input is case insensitive, except in comments, i.e., any letter outside a "
"comment may be in upper or lower case without changing the meaning of a line."
msgstr ""

#. type: Plain text
msgid "[[sub:block-delete]](((Block Delete)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Block Delete"
msgstr ""

#. type: Plain text
msgid ""
"The optional block delete character the slash '/' when placed first on a "
"line can be used by some user interfaces to skip lines of code when needed. "
"In Axis the key combination Alt-m-/ toggles block delete on and off. When "
"block delete is on any lines starting with the slash '/' are skipped."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Line Number"
msgstr ""

#. type: Plain text
msgid "(((Line Number)))"
msgstr ""

#. type: Plain text
msgid ""
"A line number is the letter N followed by an unsigned integer, optionally "
"followed by a period and another unsigned integer. For example, 'N1234' and "
"'N56.78' are valid line numbers. They may be repeated or used out of order, "
"although normal practice is to avoid such usage. Line numbers may also be "
"skipped, and that is normal practice. A line number is not required to be "
"used, but must be in the proper place if used."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Word"
msgstr ""

#. type: Plain text
msgid "A word is a letter other than N followed by a real value."
msgstr ""

#. type: Plain text
msgid ""
"Words may begin with any of the letters shown in the following Table.  The "
"table includes N for completeness, even though, as defined above, line "
"numbers are not words. Several letters (I, J, K, L, P, R) may have different "
"meanings in different contexts.  Letters which refer to axis names are not "
"valid on a machine which does not have the corresponding axis."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Words and their meanings"
msgstr ""

#. type: Table
#, no-wrap
msgid "Letter"
msgstr ""

#. type: Table
#, no-wrap
msgid "Meaning"
msgstr ""

#. type: Table
#, no-wrap
msgid "A axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "B axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "C axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "D"
msgstr ""

#. type: Table
#, no-wrap
msgid "Tool radius compensation number"
msgstr ""

#. type: Table
#, no-wrap
msgid "F"
msgstr ""

#. type: Table
#, no-wrap
msgid "G"
msgstr ""

#. type: Table
#, no-wrap
msgid "General function (See table  <<cap:modal-groups,Modal Groups>>)"
msgstr ""

#. type: Table
#, no-wrap
msgid "H"
msgstr ""

#. type: Table
#, no-wrap
msgid "Tool length offset index"
msgstr ""

#. type: Table
#, no-wrap
msgid "X offset for arcs and G87 canned cycles"
msgstr ""

#. type: Table
#, no-wrap
msgid "J"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y offset for arcs and G87 canned cycles"
msgstr ""

#. type: Table
#, no-wrap
msgid "K"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z offset for arcs and G87 canned cycles."
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle-Motion Ratio for G33 synchronized movements."
msgstr ""

#. type: Table
#, no-wrap
msgid "generic parameter word for G10, M66 and others"
msgstr ""

#. type: Table
#, no-wrap
msgid "M"
msgstr ""

#. type: Table
#, no-wrap
msgid "Miscellaneous function (See table  <<cap:modal-groups,Modal Groups>>)"
msgstr ""

#. type: Table
#, no-wrap
msgid "N"
msgstr ""

#. type: Table
#, no-wrap
msgid "Line number"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dwell time in canned cycles and with G4."
msgstr ""

#. type: Table
#, no-wrap
msgid "Key used with G10."
msgstr ""

#. type: Table
#, no-wrap
msgid "Q"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed increment in G73, G83 canned cycles"
msgstr ""

#. type: Table
#, no-wrap
msgid "Arc radius or canned cycle plane"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle speed"
msgstr ""

#. type: Table
#, no-wrap
msgid "T"
msgstr ""

#. type: Table
#, no-wrap
msgid "Tool selection"
msgstr ""

#. type: Table
#, no-wrap
msgid "U axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "V axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "W axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "X axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y axis of machine"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z axis of machine"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Number"
msgstr ""

#. type: Plain text
msgid ""
"The following rules are used for (explicit) numbers. In these rules a digit "
"is a single character between 0 and 9."
msgstr ""

#. type: Plain text
msgid "A number consists of (1) an optional plus or minus sign, followed by"
msgstr ""

#. type: Plain text
msgid "zero to many digits, followed, possibly, by (3) one decimal point,"
msgstr ""

#. type: Plain text
msgid ""
"followed by (4) zero to many digits - provided that there is at least one "
"digit somewhere in the number."
msgstr ""

#. type: Plain text
msgid "There are two kinds of numbers: integers and decimals. An integer does"
msgstr ""

#. type: Plain text
msgid "not have a decimal point in it; a decimal does."
msgstr ""

#. type: Plain text
msgid "Numbers may have any number of digits, subject to the limitation on"
msgstr ""

#. type: Plain text
msgid ""
"line length. Only about seventeen significant figures will be retained, "
"however (enough for all known applications)."
msgstr ""

#. type: Plain text
msgid "A non-zero number with no sign as the first character is assumed to be"
msgstr ""

#. type: Plain text
msgid "positive."
msgstr ""

#. type: Plain text
msgid ""
"Notice that initial (before the decimal point and the first non-zero digit) "
"and trailing (after the decimal point and the last non-zero digit) zeros are "
"allowed but not required. A number written with initial or trailing zeros "
"will have the same value when it is read as if the extra zeros were not "
"there."
msgstr ""

#. type: Plain text
msgid ""
"Numbers used for specific purposes in RS274/NGC are often restricted to some "
"finite set of values or some to some range of values. In many uses, decimal "
"numbers must be close to integers; this includes the values of indices (for "
"parameters and carousel slot numbers, for example), M codes, and G codes "
"multiplied by ten. A decimal number which is intended to represent an "
"integer is considered close enough if it is within 0.0001 of an integer "
"value."
msgstr ""

#. type: Plain text
msgid "[[gcode:parameters]](((Parameters)))"
msgstr ""

#. type: Plain text
msgid ""
"The RS274/NGC language supports 'parameters' - what in other programming "
"languages would be called 'variables'. There are several types of parameter "
"of different purpose and appearance, each described in the following "
"sections. The only value type supported by parameters is floating-point; "
"there are no string, boolean or integer types in G-code like in other "
"programming languages. However, logic expressions can be formulated with "
"<<gcode:binary-operators,boolean operators>> ( 'AND', 'OR', 'XOR', and the "
"comparison operators 'EQ','NE','GT','GE','LT','LE'), and the 'MOD', 'ROUND', "
"'FUP' and 'FIX' <<gcode:functions,operators>> support integer arithmetic."
msgstr ""

#. type: Plain text
msgid ""
"Parameters differ in syntax, scope, behavior when not yet initialized, mode, "
"persistence and intended use."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Syntax"
msgstr ""

#. type: Plain text
msgid "There are three kinds of syntactic appearance:"
msgstr ""

#. type: Plain text
msgid "'numbered' - #4711"
msgstr ""

#. type: Plain text
msgid "'named local' - #<localvalue>"
msgstr ""

#. type: Plain text
msgid "'named global' - #<_globalvalue>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Scope"
msgstr ""

#. type: Plain text
msgid ""
"The scope of a parameter is either global, or local within a subroutine. "
"Subroutine parameters and local named variables have local scope. Global "
"named parameters and numbered parameters starting from number 31 are global "
"in scope. RS274/NGC uses 'lexical scoping' - in a subroutine only the local "
"variables defined therein, and any global variables are visible. The local "
"variables of a calling procedure are not visible in a called procedure."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Behavior of uninitialized parameters"
msgstr ""

#. type: Plain text
msgid "Uninitialized global parameters, and unused subroutine parameters"
msgstr ""

#. type: Plain text
msgid "return the value zero when used in an expression."
msgstr ""

#. type: Plain text
msgid ""
"Uninitialized named parameters signal an error when used in an expression."
msgstr ""

#. type: Plain text
msgid ""
"Most parameters are read/write and may be assigned to within an assignment "
"statement. However, for many predefined parameters this does not make sense, "
"so they are are read-only - they may appear in expressions, but not on the "
"left-hand side of an assignment statement."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Persistence"
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC is shut down, volatile parameters lose their values. All "
"parameters except numbered parameters in the current persistent range "
"footnoteref:[persistent_range,The range of persistent parameters may change "
"as development progresses. This range is currently 5161- 5390. It is defined "
"in the '_required_parameters array' in file the src/emc/rs274ngc/"
"interp_array.cc .] are volatile.  Persistent parameters are saved in the ."
"var file and restored to their previous values when LinuxCNC is started "
"again. Volatile numbered parameters are reset to zero."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Intended Use"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "* user parameters"
msgstr ""

#. type: Plain text
msgid ""
"numbered parameters in the range 31..5000, and named global and local "
"parameters except predefined parameters. These are available for general-"
"purpose storage of floating-point values, like intermediate results, flags "
"etc, throughout program execution. They are read/write (can be assigned a "
"value)."
msgstr ""

#. type: Plain text
msgid ""
"<<sub:subroutine-parameters,subroutine parameters>> - these are used to hold "
"the actual parameters passed to a subroutine."
msgstr ""

#. type: Plain text
msgid ""
"<<sub:numbered-parameters,numbered parameters>> - most of these are used to "
"access offsets of coordinate systems."
msgstr ""

#. type: Plain text
msgid ""
"<<sub:system-parameters,system parameters>> - used to determine the current"
msgstr ""

#. type: Plain text
msgid "running version. They are read-only."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Numbered Parameters"
msgstr ""

#. type: Plain text
msgid ""
"A numbered parameter is the pound character '#' followed by an integer "
"between 1 and (currently) 5602 footnote:[The RS274/NGC interpreter maintains "
"an array of numbered parameters. Its size is defined by the symbol "
"'RS274NGC_MAX_PARAMETERS' in the file src/emc/rs274ngc/interp_internal.hh). "
"This number of numerical parameters may also increase as development adds "
"support for new parameters. ]. The parameter is referred to by this integer, "
"and its value is whatever number is stored in the parameter."
msgstr ""

#. type: Plain text
msgid "A value is stored in a parameter with the = operator; for example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#3 = 15 (set parameter 3 to 15)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"A parameter setting does not take\n"
"effect until after all parameter values on the same line have been\n"
"found. For example, if parameter 3 has been previously set to 15 and\n"
" the line '#3=6 G1 X#3' is interpreted, a straight move to a point\n"
"where X equals 15 will\n"
"occur and the value of parameter 3 will be 6.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The '\\#'  character takes precedence over other operations, so that, for\n"
" example, '\\#1+2' means the number found by adding 2 to the value of\n"
"parameter 1, not \n"
" the value found in parameter 3. Of course, '\\#[1+2]' does mean the\n"
"value found in parameter 3. The '\\#' character may be repeated; for\n"
"example '##2'  means the value of the parameter whose index is the\n"
"(integer) value of parameter 2.\n"
msgstr ""

#. type: Plain text
msgid ""
"'31-5000' - G code user parameters. These parameters are global in the G "
"code file, and available for general use. Volatile."
msgstr ""

#. type: Plain text
msgid ""
"'5061-5069' - Coordinates of a <<gcode:g38,G38>> probe result (X, Y, Z, A, "
"B, C, U, V & W).  Coordinates are in the coordinate system in which the G38 "
"took place.  Volatile."
msgstr ""

#. type: Plain text
msgid ""
"'5070' - <<gcode:g38,G38>> probe result: 1 if success, 0 if probe failed to "
"close.  Used with G38.3 and G38.5. Volatile."
msgstr ""

#. type: Plain text
msgid "'5161-5169' - \"G28\" Home for X, Y, Z, A, B, C, U, V & W. Persistent."
msgstr ""

#. type: Plain text
msgid "'5181-5189' - \"G30\" Home for X, Y, Z, A, B, C, U, V & W. Persistent."
msgstr ""

#. type: Plain text
msgid "'5210' - 1 if \"G52\" or \"G92\" offset is currently applied, 0"
msgstr ""

#. type: Plain text
msgid ""
"otherwise.  Volatile by default; persistent if 'DISABLE_G92_PERSISTENCE = 1' "
"in the '[RS274NGC]' section of the '.ini' file."
msgstr ""

#. type: Plain text
msgid ""
"'5211-5219' - Shared \"G52\" and \"G92\" offset for X, Y, Z, A, B, C, U, V & "
"W.  Volatile by default; persistent if 'DISABLE_G92_PERSISTENCE = 1' in the "
"'[RS274NGC]' section of the '.ini' file."
msgstr ""

#. type: Plain text
msgid "'5220' - Coordinate System number 1 - 9 for G54 - G59.3. Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5221-5230' - Coordinate System 1, G54 for X, Y, Z, A, B, C, U, V, W & R.  R "
"denotes the XY rotation angle around the Z axis. Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5241-5250' - Coordinate System 2, G55 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5261-5270' - Coordinate System 3, G56 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5281-5290' - Coordinate System 4, G57 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5301-5310' - Coordinate System 5, G58 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5321-5330' - Coordinate System 6, G59 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5341-5350' - Coordinate System 7, G59.1 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5361-5370' - Coordinate System 8, G59.2 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid ""
"'5381-5390' - Coordinate System 9, G59.3 for X, Y, Z, A, B, C, U, V, W & R.  "
"Persistent."
msgstr ""

#. type: Plain text
msgid "'5399' - Result of M66 - Check or wait for input. Volatile."
msgstr ""

#. type: Plain text
msgid "'5400' - Tool Number. Volatile."
msgstr ""

#. type: Plain text
msgid "'5401-5409' - Tool Offsets for X, Y, Z, A, B, C, U, V & W. Volatile."
msgstr ""

#. type: Plain text
msgid "'5410' - Tool Diameter. Volatile."
msgstr ""

#. type: Plain text
msgid "'5411' - Tool Front Angle. Volatile."
msgstr ""

#. type: Plain text
msgid "'5412' - Tool Back Angle. Volatile."
msgstr ""

#. type: Plain text
msgid "'5413' - Tool Orientation. Volatile."
msgstr ""

#. type: Plain text
msgid ""
"'5420-5428' - Current relative position in the active coordinate system "
"including all offsets and in the current program units for X, Y, Z, A, B, C, "
"U, V & W, volatile."
msgstr ""

#. type: Plain text
msgid "'5599' - Flag for controlling the output of (DEBUG,) statements."
msgstr ""

#. type: Plain text
msgid "1=output, 0=no output; default=1. Volatile."
msgstr ""

#. type: Plain text
msgid ""
"'5600' - Toolchanger fault indicator. Used with the iocontrol-v2 component."
msgstr ""

#. type: Plain text
msgid "1: toolchanger faulted, 0: normal. Volatile."
msgstr ""

#. type: Plain text
msgid "'5601' - Toolchanger fault code. Used with the iocontrol-v2 component."
msgstr ""

#. type: Plain text
msgid ""
"Reflects the value of the 'toolchanger-reason' HAL pin if a fault occurred.  "
"Volatile."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Numbered Parameters Persistence"
msgstr ""

#. type: Plain text
msgid ""
"The values of parameters in the persistent range are retained over time, "
"even if the machining center is powered down. LinuxCNC uses a parameter file "
"to ensure persistence. It is managed by the Interpreter. The Interpreter "
"reads the file when it starts up, and writes the file when it exits."
msgstr ""

#. type: Plain text
msgid ""
"The format of a parameter file is shown in Table <<gcode:format-parameter-"
"file,Parameter File Format>>."
msgstr ""

#. type: Plain text
msgid ""
"The Interpreter expects the file to have two columns. It skips any lines "
"which do not contain exactly two numeric values. The first column is "
"expected to contain an integer value (the parameter's number). The second "
"column contains a floating point number (this parameter's last value). The "
"value is represented as a double-precision floating point number inside the "
"Interpreter, but a decimal point is not required in the file."
msgstr ""

#. type: Plain text
msgid ""
"Parameters in the user-defined range (31-5000) may be added to this file. "
"Such parameters will be read by the Interpreter and written to the file as "
"it exits."
msgstr ""

#. type: Plain text
msgid ""
"Missing Parameters in the persistent range will be initialized to zero and "
"written with their current values on the next save operation."
msgstr ""

#. type: Plain text
msgid ""
"The parameter numbers must be arranged in ascending order. An 'Parameter "
"file out of order' error will be signaled if they are not in ascending order."
msgstr ""

#. type: Plain text
msgid ""
"The original file is saved as a backup file when the new file is written."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Subroutine Parameters"
msgstr ""

#. type: Plain text
msgid ""
"'1-30' Subroutine local parameters of call arguments. These parameters are "
"local to the subroutine. Volatile. See also the chapter on <<cha:o-codes,O-"
"Codes>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Named Parameters"
msgstr ""

#. type: Plain text
msgid ""
"Named parameters work like numbered parameters but are easier to read.  All "
"parameter names are converted to lower case and have spaces and tabs "
"removed, so '#<param>' and '#<P a R am >' refer to the same parameter. Named "
"parameters must be enclosed with '< >' marks."
msgstr ""

#. type: Plain text
msgid ""
"'#<named parameter>' is a local named parameter. By default, a named "
"parameter is local to the scope in which it is assigned. You can't access a "
"local parameter outside of its subroutine. This means that two subroutines "
"can use the same parameter names without fear of one subroutine overwriting "
"the values in another."
msgstr ""

#. type: Plain text
msgid ""
"'#<_global named parameter>' is a global named parameter. They are "
"accessible from within called subroutines and may set values within "
"subroutines that are accessible to the caller. As far as scope is concerned, "
"they act just like regular numeric parameters. They are not stored in files."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Declaration of named global variable"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#<_endmill_dia> = 0.049 \n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Reference to previously declared global variable"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#<_endmill_rad> = [#<_endmill_dia>/2.0] \n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Mixed literal and named parameters"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o100 call [0.0] [0.0] [#<_inside_cutout>-#<_endmill_dia>] [#<_Zcut>] [#<_feedrate>]\n"
msgstr ""

#. type: Plain text
msgid ""
"Named parameters spring into existence when they are assigned a value for "
"the first time. Local named parameters vanish when their scope is left: when "
"a subroutine returns, all its local parameters are deleted and cannot be "
"referred to anymore."
msgstr ""

#. type: Plain text
msgid ""
"It is an error to use a non-existent named parameter within an expression, "
"or at the right-hand side of an assignment. Printing the value of a non-"
"existent named parameter with a DEBUG statement - like '(DEBUG, "
"#<no_such_parameter>)' will display the string '######'."
msgstr ""

#. type: Plain text
msgid ""
"Global parameters, as well as local parameters assigned to at the global "
"level, retain their value once assigned even when the program ends, and have "
"these values when the program is run again."
msgstr ""

#. type: Plain text
msgid ""
"The <<gcode:functions,'EXISTS' function>> tests whether a given named "
"parameter exists."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Predefined Named Parameters"
msgstr ""

#. type: Plain text
msgid ""
"The following global read only named parameters are available to access "
"internal state of the interpreter and machine state. They can be used in "
"arbitrary expressions, for instance to control flow of the program with if-"
"then-else statements. Note that new <<remap:adding-predefined-named-"
"parameters,predefined named parameters>> can be added easily without changes "
"to the source code."
msgstr ""

#. type: Plain text
msgid ""
"'#<_vmajor>' - Major package version. If current version was 2.5.2 would "
"return 2.5."
msgstr ""

#. type: Plain text
msgid ""
"'#<_vminor>' - Minor package version. If current version was 2.6.2 it would "
"return 0.2."
msgstr ""

#. type: Plain text
msgid ""
"'#<_line>' - Sequence number. If running a G-Code file, this returns the "
"current line number."
msgstr ""

#. type: Plain text
msgid "'#<_motion_mode>' - Return the interpreter's current motion mode:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Motion mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "return value"
msgstr ""

#. type: Table
#, no-wrap
msgid "G1"
msgstr ""

#. type: Table
#, no-wrap
msgid "G2"
msgstr ""

#. type: Table
#, no-wrap
msgid "G3"
msgstr ""

#. type: Table
#, no-wrap
msgid "30"
msgstr ""

#. type: Table
#, no-wrap
msgid "G33"
msgstr ""

#. type: Table
#, no-wrap
msgid "330"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G38.2"
msgstr ""

#. type: Table
#, no-wrap
msgid "382"
msgstr ""

#. type: Table
#, no-wrap
msgid "G38.3"
msgstr ""

#. type: Table
#, no-wrap
msgid "383"
msgstr ""

#. type: Table
#, no-wrap
msgid "G38.4"
msgstr ""

#. type: Table
#, no-wrap
msgid "384"
msgstr ""

#. type: Table
#, no-wrap
msgid "G38.5"
msgstr ""

#. type: Table
#, no-wrap
msgid "385"
msgstr ""

#. type: Table
#, no-wrap
msgid "G5.2"
msgstr ""

#. type: Table
#, no-wrap
msgid "52"
msgstr ""

#. type: Table
#, no-wrap
msgid "G73"
msgstr ""

#. type: Table
#, no-wrap
msgid "730"
msgstr ""

#. type: Table
#, no-wrap
msgid "G76"
msgstr ""

#. type: Table
#, no-wrap
msgid "760"
msgstr ""

#. type: Table
#, no-wrap
msgid "G80"
msgstr ""

#. type: Table
#, no-wrap
msgid "800"
msgstr ""

#. type: Table
#, no-wrap
msgid "G81"
msgstr ""

#. type: Table
#, no-wrap
msgid "810"
msgstr ""

#. type: Table
#, no-wrap
msgid "G82"
msgstr ""

#. type: Table
#, no-wrap
msgid "820"
msgstr ""

#. type: Table
#, no-wrap
msgid "G83"
msgstr ""

#. type: Table
#, no-wrap
msgid "830"
msgstr ""

#. type: Table
#, no-wrap
msgid "G84"
msgstr ""

#. type: Table
#, no-wrap
msgid "840"
msgstr ""

#. type: Table
#, no-wrap
msgid "G85"
msgstr ""

#. type: Table
#, no-wrap
msgid "850"
msgstr ""

#. type: Table
#, no-wrap
msgid "G86"
msgstr ""

#. type: Table
#, no-wrap
msgid "860"
msgstr ""

#. type: Table
#, no-wrap
msgid "G87"
msgstr ""

#. type: Table
#, no-wrap
msgid "870"
msgstr ""

#. type: Table
#, no-wrap
msgid "G88"
msgstr ""

#. type: Table
#, no-wrap
msgid "880"
msgstr ""

#. type: Table
#, no-wrap
msgid "G89"
msgstr ""

#. type: Table
#, no-wrap
msgid "890"
msgstr ""

#. type: Plain text
msgid "'#<_plane>' -"
msgstr ""

#. type: Plain text
msgid "returns the value designating the current plane:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Plane"
msgstr ""

#. type: Table
#, no-wrap
msgid "G17"
msgstr ""

#. type: Table
#, no-wrap
msgid "170"
msgstr ""

#. type: Table
#, no-wrap
msgid "G18"
msgstr ""

#. type: Table
#, no-wrap
msgid "180"
msgstr ""

#. type: Table
#, no-wrap
msgid "G19"
msgstr ""

#. type: Table
#, no-wrap
msgid "190"
msgstr ""

#. type: Table
#, no-wrap
msgid "G17.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "171"
msgstr ""

#. type: Table
#, no-wrap
msgid "G18.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "181"
msgstr ""

#. type: Table
#, no-wrap
msgid "G19.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "191"
msgstr ""

#. type: Plain text
msgid "'#<_ccomp>' -"
msgstr ""

#. type: Plain text
msgid "Status of cutter compensation. Return values:"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "G40"
msgstr ""

#. type: Table
#, no-wrap
msgid "400"
msgstr ""

#. type: Table
#, no-wrap
msgid "G41"
msgstr ""

#. type: Table
#, no-wrap
msgid "410"
msgstr ""

#. type: Table
#, no-wrap
msgid "G41.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "411"
msgstr ""

#. type: Table
#, no-wrap
msgid "G42"
msgstr ""

#. type: Table
#, no-wrap
msgid "420"
msgstr ""

#. type: Table
#, no-wrap
msgid "G42.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "421"
msgstr ""

#. type: Plain text
msgid "'#<_metric>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G21 is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_imperial>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G20 is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_absolute>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G90 is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_incremental>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G91 is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_inverse_time>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if inverse feed mode (G93) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_units_per_minute>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if Units/minute feed mode (G94) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_units_per_rev>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if Units/revolution mode (G95) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_coord_system>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return a float of the current coordinate system name(G54..G59.3).  For "
"example if your in G55 coordinate system the return value is 550.000000 and "
"if your in G59.1 the return value is 591.000000."
msgstr ""

#. type: Table
#, no-wrap
msgid "G54"
msgstr ""

#. type: Table
#, no-wrap
msgid "540"
msgstr ""

#. type: Table
#, no-wrap
msgid "G55"
msgstr ""

#. type: Table
#, no-wrap
msgid "550"
msgstr ""

#. type: Table
#, no-wrap
msgid "G56"
msgstr ""

#. type: Table
#, no-wrap
msgid "560"
msgstr ""

#. type: Table
#, no-wrap
msgid "G57"
msgstr ""

#. type: Table
#, no-wrap
msgid "570"
msgstr ""

#. type: Table
#, no-wrap
msgid "G58"
msgstr ""

#. type: Table
#, no-wrap
msgid "580"
msgstr ""

#. type: Table
#, no-wrap
msgid "G59"
msgstr ""

#. type: Table
#, no-wrap
msgid "590"
msgstr ""

#. type: Table
#, no-wrap
msgid "G59.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "591"
msgstr ""

#. type: Table
#, no-wrap
msgid "G59.2"
msgstr ""

#. type: Table
#, no-wrap
msgid "592"
msgstr ""

#. type: Table
#, no-wrap
msgid "G59.3"
msgstr ""

#. type: Table
#, no-wrap
msgid "593"
msgstr ""

#. type: Plain text
msgid "'#<_tool_offset>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if tool offset (G43) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_retract_r_plane>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G98 is set, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_retract_old_z>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if G99 is on, else 0."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "System Parameters"
msgstr ""

#. type: Plain text
msgid "'#<_spindle_rpm_mode>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if spindle rpm mode (G97) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_spindle_css_mode>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if constant surface speed mode (G96) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_ijk_absolute_mode>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if Absolute Arc distance mode (G90.1) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_lathe_diameter_mode>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return 1 if this is a lathe configuration and diameter (G7) mode is on, else "
"0."
msgstr ""

#. type: Plain text
msgid "'#<_lathe_radius_mode>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return 1 if this is a lathe configuration and radius (G8) mode is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_spindle_on>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if spindle currently running (M3 or M4) else 0."
msgstr ""

#. type: Plain text
msgid "'#<_spindle_cw>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if spindle direction is clockwise (M3) else 0."
msgstr ""

#. type: Plain text
msgid "'#<_mist>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if mist (M7) is on."
msgstr ""

#. type: Plain text
msgid "'#<_flood>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if flood (M8) is on."
msgstr ""

#. type: Plain text
msgid "'#<_speed_override>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if feed override (M48 or M50 P1) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_feed_override>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if feed override (M48 or M51 P1) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_adaptive_feed>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if adaptive feed (M52 or M52 P1) is on, else 0."
msgstr ""

#. type: Plain text
msgid "'#<_feed_hold>' -"
msgstr ""

#. type: Plain text
msgid "Return 1 if feed hold switch is enabled (M53 P1), else 0."
msgstr ""

#. type: Plain text
msgid "'#<_feed>' -"
msgstr ""

#. type: Plain text
msgid "Return the current value of F, not the actual feed rate."
msgstr ""

#. type: Plain text
msgid "'#<_rpm>' -"
msgstr ""

#. type: Plain text
msgid "Return the current value of S, not the actual spindle speed."
msgstr ""

#. type: Plain text
msgid "'#<_x>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative X coordinate including all offsets. Same as #5420."
msgstr ""

#. type: Plain text
msgid "'#<_y>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative Y coordinate including all offsets. Same as #5421."
msgstr ""

#. type: Plain text
msgid "'#<_z>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative Z coordinate including all offsets. Same as #5422."
msgstr ""

#. type: Plain text
msgid "'#<_a>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative A coordinate including all offsets. Same as #5423."
msgstr ""

#. type: Plain text
msgid "'#<_b>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative B coordinate including all offsets. Same as #5424."
msgstr ""

#. type: Plain text
msgid "'#<_c>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative C coordinate including all offsets. Same as #5425."
msgstr ""

#. type: Plain text
msgid "'#<_u>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative U coordinate including all offsets. Same as #5426."
msgstr ""

#. type: Plain text
msgid "'#<_v>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative V coordinate including all offsets. Same as #5427."
msgstr ""

#. type: Plain text
msgid "'#<_w>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return current relative W coordinate including all offsets. Same as #5428."
msgstr ""

#. type: Plain text
msgid "'#<_abs_x>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute X coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_abs_y>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute Y coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_abs_z>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute Z coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_abs_a>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute A coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_abs_b>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute B coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_abs_c>' -"
msgstr ""

#. type: Plain text
msgid "Return current absolute C coordinate (G53) including no offsets."
msgstr ""

#. type: Plain text
msgid "'#<_current_tool>' -"
msgstr ""

#. type: Plain text
msgid "Return number of the current tool in spindle. Same as #5400."
msgstr ""

#. type: Plain text
msgid "'#<_current_pocket>' -"
msgstr ""

#. type: Plain text
msgid "Return the tooldata index for the current tool."
msgstr ""

#. type: Plain text
msgid "'#<_selected_tool>' -"
msgstr ""

#. type: Plain text
msgid "Return number of the selected tool post a T code. Default -1."
msgstr ""

#. type: Plain text
msgid "'#<_selected_pocket>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return the tooldata index of the selected pocket post a T code. Default -1 "
"(no pocket selected)."
msgstr ""

#. type: Plain text
msgid "'#<_value>' -"
msgstr ""

#. type: Plain text
msgid ""
"Return value from the last O-word 'return' or 'endsub'. Default value 0 if "
"no expression after 'return' or 'endsub'. Initialized to 0 on program start."
msgstr ""

#. type: Plain text
msgid "'#<_value_returned>' -"
msgstr ""

#. type: Plain text
msgid ""
"1.0 if the last O-word 'return' or 'endsub' returned a value, 0 otherwise. "
"Cleared by the next O-word call."
msgstr ""

#. type: Plain text
msgid "'#<_task>' -"
msgstr ""

#. type: Plain text
msgid ""
"1.0 if the executing interpreter instance is part of milltask, 0.0 "
"otherwise. Sometimes it is necessary to treat this case specially to retain "
"proper preview, for instance when testing the success of a probe (G38.n) by "
"inspecting #5070, which will always fail in the preview interpreter (e.g. "
"Axis)."
msgstr ""

#. type: Plain text
msgid "'#<_call_level>' -"
msgstr ""

#. type: Plain text
msgid "current nesting level of O-word procedures. For debugging."
msgstr ""

#. type: Plain text
msgid "'#<_remap_level>' -"
msgstr ""

#. type: Plain text
msgid ""
"current level of the remap stack. Each remap in a block adds one to the "
"remap level. For debugging."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL pins and INI values"
msgstr ""

#. type: Plain text
msgid ""
"If enabled in the <<gcode:ini-features, INI file>> G-code has access to the "
"values of INI file entries and HAL pins."
msgstr ""

#. type: Plain text
msgid ""
"'#<_ini[section]name>' Returns the value of the corresponding item in the "
"INI file.  For example, if the ini file looks like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[SETUP]\n"
"XPOS = 3.145\n"
"YPOS = 2.718\n"
msgstr ""

#. type: Plain text
msgid ""
"you may refer to the named parameters `#<_ini[setup]xpos>` and "
"`#<_ini[setup]ypos>` within G-code."
msgstr ""

#. type: Plain text
msgid "`EXISTS` can be used to test for presence of a given ini file variable:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 if [EXISTS[#<_ini[setup]xpos>]]\n"
"  (debug, [setup]xpos exists: #<_ini[setup]xpos>)\n"
"o100 else\n"
"  (debug, [setup]xpos does not exist)\n"
"o100 endif\n"
msgstr ""

#. type: Plain text
msgid ""
"The value is read from the inifile once, and cached in the interpreter. "
"These parameters are read-only - assigning a value will cause a runtime "
"error. The names are not case sensitive - they are converted to uppercase "
"before consulting the ini file."
msgstr ""

#. type: Plain text
msgid ""
"'#<_hal[Hal item]>' Allows G-code programs to read the values of HAL pins "
"Variable access is read-only, the only way to _set_ HAL pins from G-code "
"remains M62-M65, M67, M68 and custom M100-M199 codes.  Note that the value "
"read will not update in real-time, typically the value that was on the pin "
"when the G-code program was started will be returned. It is possible to work "
"round this by forcing a state synch.  One way to do this is with a dummy M66 "
"command: M66E0L0"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(debug, #<_hal[motion-controller.time]>)\n"
msgstr ""

#. type: Plain text
msgid ""
"Access of HAL items is read-only. Currently, only all-lowercase HAL names "
"can be accessed this way."
msgstr ""

#. type: Plain text
msgid "`EXISTS` can be used to test for the presence of a given HAL item:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 if [EXISTS[#<_hal[motion-controller.time]>]]\n"
"  (debug, [motion-controller.time] exists: #<_hal[motion-controller.time]>)\n"
"o100 else\n"
"  (debug, [motion-controller.time] does not exist)\n"
"o100 endif\n"
msgstr ""

#. type: Plain text
msgid ""
"This feature was motivated by the desire for stronger coupling between user "
"interface components like `GladeVCP` and `PyVCP` to act as parameter source "
"for driving NGC file behavior. The alternative - going through the M6x pins "
"and wiring them - has a limited, non-mnemonic namespace and is unnecessarily "
"cumbersome just as a UI/Interpreter communications mechanism."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Expressions"
msgstr ""

#. type: Plain text
msgid ""
"An expression is a set of characters starting with a left bracket '[' and "
"ending with a balancing right bracket ']' . In between the brackets are "
"numbers, parameter values, mathematical operations, and other expressions. "
"An expression is evaluated to produce a number. The expressions on a line "
"are evaluated when the line is read, before anything on the line is "
"executed. An example of an expression is '[1 + acos[0] - [#3 ** [4.0/2]]]'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Binary Operators"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Binary operators only appear inside expressions. There are four basic\n"
"mathematical operations: addition ('+'), subtraction ('-'),\n"
"multiplication ('\\*'), and division ('/'). There are three logical\n"
"operations: non-exclusive or ('OR'), exclusive or ('XOR'), and logical\n"
"and ('AND'). The eighth operation is the modulus operation ('MOD'). The\n"
"ninth operation is the 'power' operation ('**') of raising the number\n"
"on the left of the operation to the power on \n"
" the right. The relational operators are equality ('EQ'), inequality\n"
"('NE'), strictly greater than ('GT'), greater than or equal to ('GE'),\n"
"strictly less than ('LT'), and less than or equal to ('LE').\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The binary operations are divided into several groups according to their\n"
"precedence. If operations in different precedence groups are strung together\n"
"(for example in the expression '[2.0 / 3 * 1.5 - 5.5 / 11.0]'), operations\n"
"in a higher group are to be performed before operations\n"
"in a lower group. If an expression contains more than one operation\n"
" from the same group (such as the first '/' and '*'  in the example),\n"
"the operation on the left is performed first. Thus,\n"
" the example is equivalent to: '[ [ [2.0 / 3] * 1.5] - [5.5 / 11.0] ]' ,\n"
"which is equivalent to to '[1.0 - 0.5]' , which is '0.5'.\n"
msgstr ""

#. type: Plain text
msgid ""
"The logical operations and modulus are to be performed on any real numbers, "
"not just on integers. The number zero is equivalent to logical false, and "
"any non-zero number is equivalent to logical true."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Operator Precedence"
msgstr ""

#. type: Table
#, no-wrap
msgid "Operators"
msgstr ""

#. type: Table
#, no-wrap
msgid "Precedence"
msgstr ""

#. type: Table
#, no-wrap
msgid "**"
msgstr ""

#. type: Table
#, no-wrap
msgid "'highest'"
msgstr ""

#. type: Table
#, no-wrap
msgid "* / MOD"
msgstr ""

#. type: Table
#, no-wrap
msgid "+ -"
msgstr ""

#. type: Table
#, no-wrap
msgid "EQ NE GT GE LT LE"
msgstr ""

#. type: Table
#, no-wrap
msgid "AND OR XOR"
msgstr ""

#. type: Table
#, no-wrap
msgid "'lowest'"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Equality and floating-point values"
msgstr ""

#. type: Plain text
msgid ""
"The RS274/NGC language only supports floating-point values of finite "
"precision. Therefore, testing for equality or inequality of two floating-"
"point values is inherently problematic. The interpreter solves this problem "
"by considering values equal if their absolute difference is less than 0.0001 "
"(this value is defined as 'TOLERANCE_EQUAL' in src/emc/rs274ngc/"
"interp_internal.hh)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Functions"
msgstr ""

#. type: Plain text
msgid ""
"The available functions are shown in following table. Arguments to unary "
"operations which take angle measures ('COS', 'SIN', and 'TAN' ) are in "
"degrees. Values returned by unary operations which return angle measures "
"('ACOS', 'ASIN', and 'ATAN') are also in degrees."
msgstr ""

#. type: Table
#, no-wrap
msgid "Function Name"
msgstr ""

#. type: Table
#, no-wrap
msgid "Function result"
msgstr ""

#. type: Table
#, no-wrap
msgid "ATAN[arg]/[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Four quadrant inverse tangent"
msgstr ""

#. type: Table
#, no-wrap
msgid "ABS[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Absolute value"
msgstr ""

#. type: Table
#, no-wrap
msgid "ACOS[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Inverse cosine"
msgstr ""

#. type: Table
#, no-wrap
msgid "ASIN[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Inverse sine"
msgstr ""

#. type: Table
#, no-wrap
msgid "COS[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cosine"
msgstr ""

#. type: Table
#, no-wrap
msgid "EXP[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "e raised to the given power"
msgstr ""

#. type: Table
#, no-wrap
msgid "FIX[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Round down to integer"
msgstr ""

#. type: Table
#, no-wrap
msgid "FUP[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Round up to integer"
msgstr ""

#. type: Table
#, no-wrap
msgid "ROUND[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Round to nearest integer"
msgstr ""

#. type: Table
#, no-wrap
msgid "LN[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Base-e logarithm"
msgstr ""

#. type: Table
#, no-wrap
msgid "SIN[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sine"
msgstr ""

#. type: Table
#, no-wrap
msgid "SQRT[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Square Root"
msgstr ""

#. type: Table
#, no-wrap
msgid "TAN[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Tangent"
msgstr ""

#. type: Table
#, no-wrap
msgid "EXISTS[arg]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Check named Parameter"
msgstr ""

#. type: Plain text
msgid ""
"The 'FIX' function rounds towards the left (less positive or more negative)  "
"on a number line, so that 'FIX[2.8] =2' and 'FIX[-2.8] = -3'."
msgstr ""

#. type: Plain text
msgid ""
"The 'FUP' operation rounds towards the right (more positive or less "
"negative) on a number line; 'FUP[2.8] = 3' and 'FUP[-2.8] = -2'."
msgstr ""

#. type: Plain text
msgid ""
"The 'EXISTS' function checks for the existence of a single named parameter.  "
"It takes only one named parameter and returns 1 if it exists and 0 if it "
"does not exist. It is an error if you use a numbered parameter or an "
"expression.  Here is an example for the usage of the EXISTS function:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<test> sub\n"
"o10 if [EXISTS[#<_global>]]\n"
"    (debug, _global exists and has the value #<_global>)\n"
"o10 else\n"
"    (debug, _global does not exist)\n"
"o10 endif\n"
"o<test> endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<test> call\n"
"#<_global> = 4711\n"
"o<test> call\n"
"m2\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Repeated Items"
msgstr ""

#. type: Plain text
msgid ""
"A line may have any number of G words, but two G words from the same modal "
"group may not appear on the same line See the <<gcode:modal-groups,Modal "
"Groups>> Section for more information."
msgstr ""

#. type: Plain text
msgid ""
"A line may have zero to four M words. Two M words from the same modal group "
"may not appear on the same line."
msgstr ""

#. type: Plain text
msgid ""
"For all other legal letters, a line may have only one word beginning with "
"that letter."
msgstr ""

#. type: Plain text
msgid ""
"If a parameter setting of the same parameter is repeated on a line, '#3=15 "
"#3=6', for example, only the last setting will take effect.  It is silly, "
"but not illegal, to set the same parameter twice on the same line."
msgstr ""

#. type: Plain text
msgid ""
"If more than one comment appears on a line, only the last one will be used; "
"each of the other comments will be read and its format will be checked, but "
"it will be ignored thereafter. It is expected that putting more than one "
"comment on a line will be very rare."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Item order"
msgstr ""

#. type: Plain text
msgid ""
"The three types of item whose order may vary on a line (as given at the "
"beginning of this section) are word, parameter setting, and comment. Imagine "
"that these three types of item are divided into three groups by type."
msgstr ""

#. type: Plain text
msgid ""
"The first group (the words) may be reordered in any way without changing the "
"meaning of the line."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"If the second group (the parameter settings) is reordered, there will\n"
"be no change in the meaning of the line unless the same parameter is\n"
"set more than once. In this case, only the last setting of the\n"
"parameter will take effect. For example, after the line '#3=15 #3=6'\n"
"has been interpreted, the value of parameter 3 will be 6. If the\n"
" order is reversed to '#3=6 #3=15' and the line is interpreted, the\n"
"value of parameter 3 will be 15.\n"
msgstr ""

#. type: Plain text
msgid ""
"If the third group (the comments) contains more than one comment and is "
"reordered, only the last comment will be used."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"If each group is kept in order or reordered without changing the\n"
"meaning of the line, then the three groups may be interleaved in any\n"
"way without changing the meaning of the line. For example, the line\n"
"'g40 g1 #3=15 (foo) #4=-7.0' has five items and means exactly the\n"
"same thing in any of the 120\n"
" possible orders (such as '#4=-7.0 g1 #3=15 g40 (foo)') for the five\n"
"items.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Commands and Machine Modes"
msgstr ""

#. type: Plain text
msgid ""
"Many commands cause the controller to change from one mode to another, and "
"the mode stays active until some other command changes it implicitly or "
"explicitly. Such commands are called 'modal'. For example, if coolant is "
"turned on, it stays on until it is explicitly turned off. The G codes for "
"motion are also modal. If a G1 (straight move) command is given on one line, "
"for example, it will be executed again on the next line if one or more axis "
"words is available on the line, unless an explicit command is given on that "
"next line using the axis words or canceling motion."
msgstr ""

#. type: Plain text
msgid ""
"'Non-modal' codes have effect only on the lines on which they occur.  For "
"example, G4 (dwell) is non-modal."
msgstr ""

#. type: Plain text
msgid "(((Polar Coordinates)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Polar Coordinates"
msgstr ""

#. type: Plain text
msgid ""
"Polar Coordinates can be used to specify the XY coordinate of a move.  The "
"@n is the distance and ^n is the angle. The advantage of this is for things "
"like bolt hole circles which can be done very simply by moving to a point in "
"the center of the circle, setting the offset and then moving out to the "
"first hole then run the drill cycle.  Polar Coordinates always are from the "
"current XY zero position.  To shift the Polar Coordinates from machine zero "
"use an offset or select a coordinate system."
msgstr ""

#. type: Plain text
msgid ""
"In Absolute Mode the distance and angle is from the XY zero position and the "
"angle starts with 0 on the X Positive axis and increases in a CCW direction "
"about the Z axis. The code G1 @1^90 is the same as G1 Y1."
msgstr ""

#. type: Plain text
msgid ""
"In Relative Mode the distance and angle is also from the XY zero position "
"but it is cumulative.  This can be confusing at first how this works in "
"incremental mode."
msgstr ""

#. type: Plain text
msgid ""
"For example if you have the following program you might expect it to be a "
"square pattern."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"F100 G1 @.5 ^90 \n"
"G91 @.5 ^90 \n"
"@.5 ^90\n"
"@.5 ^90\n"
"@.5 ^90\n"
"G90 G0 X0 Y0 M2\n"
msgstr ""

#. type: Plain text
msgid ""
"You can see from the following figure that the output is not what you might "
"expect. Because we added 0.5 to the distance each time the distance from the "
"XY zero position increased with each line."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Polar Spiral"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/polar01.png"
msgstr ""

#. type: Plain text
msgid "The following code will produce our square pattern."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"F100 G1 @.5 ^90 \n"
"G91 ^90\n"
"^90\n"
"^90\n"
"^90\n"
"G90 G0 X0 Y0 M2\n"
msgstr ""

#. type: Plain text
msgid ""
"As you can see by only adding to the angle by 90 degrees each time the end "
"point distance is the same for each line."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Polar Square"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/polar02.png"
msgstr ""

#. type: Plain text
msgid "It is an error if:"
msgstr ""

#. type: Plain text
msgid "An incremental move is started at the origin"
msgstr ""

#. type: Plain text
msgid "A mix of Polar and X or Y words are used"
msgstr ""

#. type: Plain text
msgid "[[gcode:modal-groups]](((Modal Groups)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modal Groups"
msgstr ""

#. type: Plain text
msgid ""
"Modal commands are arranged in sets called 'modal groups', and only one "
"member of a modal group may be in force at any given time. In general, a "
"modal group contains commands for which it is logically impossible for two "
"members to be in effect at the same time - like measure in inches vs. "
"measure in millimeters. A machining center may be in many modes at the same "
"time, with one mode from each modal group being in effect. The modal groups "
"are shown in the following Table."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G-Code Modal Groups[[cap:modal-groups]]"
msgstr ""

#. type: Table
#, no-wrap
msgid "Modal Group Meaning"
msgstr ""

#. type: Table
#, no-wrap
msgid "Member Words"
msgstr ""

#. type: Table
#, no-wrap
msgid "Non-modal codes (Group 0)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G4, G10 G28, G30, G52, G53, G92, G92.1, G92.2, G92.3,"
msgstr ""

#. type: Table
#, no-wrap
msgid "Motion (Group 1)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G0, G1, G2, G3, G33, G38.n, G73, G76, G80, G81"
msgstr ""

#. type: Table
#, no-wrap
msgid "G82, G83, G84, G85, G86, G87, G88, G89"
msgstr ""

#. type: Table
#, no-wrap
msgid "Plane selection (Group 2)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G17, G18, G19, G17.1, G18.1, G19.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Distance Mode (Group 3)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G90, G91"
msgstr ""

#. type: Table
#, no-wrap
msgid "Arc IJK Distance Mode (Group 4)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G90.1, G91.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed Rate Mode (Group 5)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G93, G94, G95"
msgstr ""

#. type: Table
#, no-wrap
msgid "Units (Group 6)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G20, G21"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cutter Diameter Compensation (Group 7)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G40, G41, G42, G41.1, G42.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Tool Length Offset (Group 8)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G43, G43.1, G49"
msgstr ""

#. type: Table
#, no-wrap
msgid "Canned Cycles Return Mode (Group 10)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G98, G99"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinate System (Group 12)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G54, G55, G56, G57, G58, G59, G59.1, G59.2, G59.3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Control Mode (Group 13)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G61, G61.1, G64"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle Speed Mode (Group 14)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G96, G97"
msgstr ""

#. type: Table
#, no-wrap
msgid "Lathe Diameter Mode (Group 15)"
msgstr ""

#. type: Table
#, no-wrap
msgid "G7, G8"
msgstr ""

#. type: Block title
#, no-wrap
msgid "M-Code Modal Groups"
msgstr ""

#. type: Table
#, no-wrap
msgid "Stopping (Group 4)"
msgstr ""

#. type: Table
#, no-wrap
msgid "M0, M1, M2, M30, M60"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle (Group 7)"
msgstr ""

#. type: Table
#, no-wrap
msgid "M3, M4, M5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coolant (Group 8)"
msgstr ""

#. type: Table
#, no-wrap
msgid "(M7 M8 can both be on), M9"
msgstr ""

#. type: Table
#, no-wrap
msgid "Override Switches (Group 9)"
msgstr ""

#. type: Table
#, no-wrap
msgid "M48, M49"
msgstr ""

#. type: Table
#, no-wrap
msgid "User Defined (Group 10)"
msgstr ""

#. type: Table
#, no-wrap
msgid "M100-M199"
msgstr ""

#. type: Plain text
msgid ""
"For several modal groups, when a machining center is ready to accept "
"commands, one member of the group must be in effect. There are default "
"settings for these modal groups. When the machining center is turned on or "
"otherwise re-initialized, the default values are automatically in effect."
msgstr ""

#. type: Plain text
msgid ""
"Group 1, the first group on the table, is a group of G codes for motion. One "
"of these is always in effect. That one is called the current motion mode."
msgstr ""

#. type: Plain text
msgid ""
"It is an error to put a G-code from group 1 and a G-code from group 0 on the "
"same line if both of them use axis words. If an axis word-using G-code from "
"group 1 is implicitly in effect on a line (by having been activated on an "
"earlier line), and a group 0 G-code that uses axis words appears on the "
"line, the activity of the group 1 G-code is suspended for that line. The "
"axis word-using G-codes from group 0 are G10, G28, G30, G52 and G92."
msgstr ""

#. type: Plain text
msgid ""
"It is an error to include any unrelated words on a line with 'O-' flow "
"control."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Comments"
msgstr ""

#. type: Plain text
msgid ""
"Comments can be added to lines of G code to help clear up the intention of "
"the programmer. Comments can be embedded in a line using parentheses () or "
"for the remainder of a line using a semi-colon. The semi-colon is not "
"treated as the start of a comment when enclosed in parentheses."
msgstr ""

#. type: Plain text
msgid ""
"Comments may appear between words, but not between words and their "
"corresponding parameter. So, 'S100(set speed)F200(feed)' is OK while "
"'S(speed)100F(feed)' is not."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 (Rapid to start) X1 Y1\n"
"G0 X1 Y1 (Rapid to start; but don't forget the coolant)\n"
"M2 ; End of program.\n"
msgstr ""

#. type: Plain text
msgid ""
"There are several 'active' comments which look like comments but cause some "
"action, like '(debug,..)' or '(print,..)'. If there are several comments on "
"a line, only the last comment will be interpreted according to these rules. "
"Hence, a normal comment following an active comment will in effect disable "
"the active comment. For example, '(foo)  (debug,#1)' will print the value of "
"parameter '#1', however '(debug,#1)(foo)' will not."
msgstr ""

#. type: Plain text
msgid ""
"A comment introduced by a semicolon is by definition the last comment on "
"that line, and will always be interpreted for active comment syntax."
msgstr ""

#. type: Plain text
msgid ""
"Inline comments on O words should not be used see the O Code <<ocode:"
"comments, comments>> section for more information."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Messages"
msgstr ""

#. type: Plain text
msgid ""
"'(MSG,)' - displays message if 'MSG' appears after the left parenthesis and "
"before any other printing characters. Variants of 'MSG' which include white "
"space and lower case characters are allowed. The rest of the characters "
"before the right parenthesis are considered to be a message.  Messages "
"should be displayed on the message display device of the user interface if "
"provided."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Message Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "(MSG, This is a message)\n"
msgstr ""

#. type: Plain text
msgid "(((Probe Logging)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Probe Logging"
msgstr ""

#. type: Plain text
msgid ""
"'(PROBEOPEN filename.txt)' - will open filename.txt and store the 9-number "
"coordinate consisting of XYZABCUVW of each successful straight probe in it."
msgstr ""

#. type: Plain text
msgid ""
"'(PROBECLOSE)' - will close the open probelog file. For more information on "
"probing see the <<gcode:g38,G38>> Section."
msgstr ""

#. type: Plain text
msgid "(((Logging)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Logging"
msgstr ""

#. type: Plain text
msgid ""
"'(LOGOPEN,filename.txt)' - opens the named log file. If the file already "
"exists, it is truncated."
msgstr ""

#. type: Plain text
msgid ""
"'(LOGAPPEND,filename)' - opens the named log file. If the file already "
"exists, the data is appended."
msgstr ""

#. type: Plain text
msgid "'(LOGCLOSE)' - closes an open log file."
msgstr ""

#. type: Plain text
msgid ""
"'(LOG,)' - everything past the ',' is written to the log file if it is "
"open.  Supports expansion of parameters as described below."
msgstr ""

#. type: Plain text
msgid ""
"Examples of logging are in 'nc_files/examples/smartprobe.ngc' and in "
"'nc_files/ngcgui_lib/rectange_probe.ngc' sample G code files."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Debug Messages"
msgstr ""

#. type: Plain text
msgid "(((Debug Messages)))"
msgstr ""

#. type: Plain text
msgid ""
"'(DEBUG,)' - displays a message like '(MSG,)' with the addition of special "
"handling for comment parameters as described below."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Print Messages"
msgstr ""

#. type: Plain text
msgid "(((Print Messages)))"
msgstr ""

#. type: Plain text
msgid ""
"'(PRINT,)' - messages are output to 'stderr' with special handling for "
"comment parameters as described below."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Comment Parameters"
msgstr ""

#. type: Plain text
msgid "(((Comment Parameters)))"
msgstr ""

#. type: Plain text
msgid ""
"In the DEBUG, PRINT and LOG comments, the values of parameters in the "
"message are expanded."
msgstr ""

#. type: Plain text
msgid ""
"For example: to print a named global variable to stderr (the default console "
"window)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameters Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(print,endmill dia = #<_endmill_dia>)\n"
"(print,value of variable 123 is: #123)\n"
msgstr ""

#. type: Plain text
msgid ""
"Inside the above types of comments, sequences like '\\#123' are replaced by "
"the value of the parameter 123. Sequences like '\\#<named parameter>' are "
"replaced by the value of the named parameter. Named parameters will have "
"white space removed from them. So, '\\#<named parameter>' will be converted "
"to '#<namedparameter>'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "File Requirements"
msgstr ""

#. type: Plain text
msgid ""
"A G code file must contain one or more lines of G code and be terminated "
"with a <<mcode:m2-m30,Program End>>. Any G code past the program end is not "
"evaluated."
msgstr ""

#. type: Plain text
msgid ""
"If a program end code is not used a pair of percent signs '%' with the first "
"percent sign on the first line of the file followed by one or more lines of "
"G code and a second percent sign. Any code past the second percent sign is "
"not evaluated."
msgstr ""

#. type: Plain text
msgid ""
"Using % to wrap a G code file will not do the same thing as using a program "
"end. The machine will be in what ever state the program left it in using %, "
"the spindle and coolant may still be on and things like G90/91 are left as "
"the last program set them. If you don't use a proper preamble the next "
"program could start in a dangerous condition."
msgstr ""

#. type: Plain text
msgid ""
"The file must be created with a text editor like Gedit and not a word "
"processor like Open Office Word Processor."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "File Size"
msgstr ""

#. type: Plain text
msgid ""
"The interpreter and task are carefully written so that the only limit on "
"part program size is disk capacity. The TkLinuxCNC and Axis interface both "
"load the program text to display it to the user, though, so RAM becomes a "
"limiting factor. In Axis, because the preview plot is drawn by default, the "
"redraw time also becomes a practical limit on program size. The preview can "
"be turned off in Axis to speed up loading large part programs. In Axis "
"sections of the preview can be turned off using <<axis:preview-control,"
"preview control>> comments."
msgstr ""

#. type: Plain text
msgid "[[gcode:order-of-execution]](((G Code Order of Execution)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G Code Order of Execution"
msgstr ""

#. type: Plain text
msgid ""
"The order of execution of items on a line is defined not by the position of "
"each item on the line, but by the following list:"
msgstr ""

#. type: Plain text
msgid ""
"O-word commands (optionally followed by a comment but no other words allowed "
"on the same line)"
msgstr ""

#. type: Plain text
msgid "Comment (including message)"
msgstr ""

#. type: Plain text
msgid "Set feed rate mode (G93, G94)."
msgstr ""

#. type: Plain text
msgid "Set feed rate (F)."
msgstr ""

#. type: Plain text
msgid "Set spindle speed (S)."
msgstr ""

#. type: Plain text
msgid "Select tool (T)."
msgstr ""

#. type: Plain text
msgid "HAL pin I/O (M62-M68)."
msgstr ""

#. type: Plain text
msgid "Change tool (M6) and Set Tool Number (M61)."
msgstr ""

#. type: Plain text
msgid "Spindle on or off (M3, M4, M5)."
msgstr ""

#. type: Plain text
msgid "Save State (M70, M73), Restore State (M72), Invalidate State (M71)."
msgstr ""

#. type: Plain text
msgid "Coolant on or off (M7, M8, M9)."
msgstr ""

#. type: Plain text
msgid "Enable or disable overrides (M48, M49,M50,M51,M52,M53)."
msgstr ""

#. type: Plain text
msgid "User-defined Commands (M100-M199)."
msgstr ""

#. type: Plain text
msgid "Dwell (G4)."
msgstr ""

#. type: Plain text
msgid "Set active plane (G17, G18, G19)."
msgstr ""

#. type: Plain text
msgid "Set length units (G20, G21)."
msgstr ""

#. type: Plain text
msgid "Cutter radius compensation on or off (G40, G41, G42)"
msgstr ""

#. type: Plain text
msgid "Cutter length compensation on or off (G43, G49)"
msgstr ""

#. type: Plain text
msgid ""
"Coordinate system selection (G54, G55, G56, G57, G58, G59, G59.1, G59.2, "
"G59.3)."
msgstr ""

#. type: Plain text
msgid "Set path control mode (G61, G61.1, G64)"
msgstr ""

#. type: Plain text
msgid "Set distance mode (G90, G91)."
msgstr ""

#. type: Plain text
msgid "Set retract mode (G98, G99)."
msgstr ""

#. type: Plain text
msgid ""
"Go to reference location (G28, G30) or change coordinate system data (G10) "
"or set axis offsets (G52, G92, G92.1, G92.2, G94)."
msgstr ""

#. type: Plain text
msgid ""
"Perform motion (G0 to G3, G33, G38.n, G73, G76, G80 to G89), as modified "
"(possibly) by G53."
msgstr ""

#. type: Plain text
msgid "Stop (M0, M1, M2, M30, M60)."
msgstr ""

#. type: Plain text
msgid "(((G Code Best Practices)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G Code Best Practices"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Use an appropriate decimal precision"
msgstr ""

#. type: Plain text
msgid ""
"Use at least 3 digits after the decimal when milling in millimeters, and at "
"least 4 digits after the decimal when milling in inches."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Use consistent white space"
msgstr ""

#. type: Plain text
msgid ""
"G-code is most legible when at least one space appears before words.  While "
"it is permitted to insert white space in the middle of numbers, there is no "
"reason to do so."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Use Center-format arcs"
msgstr ""

#. type: Plain text
msgid ""
"Center-format arcs (which use 'I- J- K-' instead of 'R-' ) behave more "
"consistently than R-format arcs, particularly for included angles near 180 "
"or 360 degrees."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Use a Preamble set modal groups"
msgstr ""

#. type: Plain text
msgid ""
"When correct execution of your program depends on modal settings, be sure to "
"set them at the beginning of the part program. Modes can carry over from "
"previous programs and from the MDI commands."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example Preamble for a Mill"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G17 G20 G40 G49 G54 G80 G90 G94 \n"
msgstr ""

#. type: Plain text
msgid ""
"G17 use XY plane, G20 inch mode, G40 cancel diameter compensation, G49 "
"cancel length offset, G54 use coordinate system 1, G80 cancel canned cycles, "
"G90 absolute distance mode, G94 feed/minute mode."
msgstr ""

#. type: Plain text
msgid ""
"Perhaps the most critical modal setting is the distance units--If you do not "
"include G20 or G21, then different machines will mill the program at "
"different scales. Other settings, such as the return mode in canned cycles "
"may also be important."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Don't put too many things on one line"
msgstr ""

#. type: Plain text
msgid ""
"Ignore everything in Section <<gcode:order-of-execution,Order of "
"Execution>>, and instead write no line of code that is the slightest bit "
"ambiguous."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Don't set & use a parameter on the same line"
msgstr ""

#. type: Plain text
msgid ""
"Don't use and set a parameter on the same line, even though the semantics "
"are well defined. Updating a variable to a new value, such as '#1=[#1+#2]' "
"is OK."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Don't use line numbers"
msgstr ""

#. type: Plain text
msgid ""
"Line numbers offer no benefits. When line numbers are reported in error "
"messages, the numbers refer to the line number in the file, not the N-word "
"value."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Linear and Rotary Axis"
msgstr ""

#. type: Plain text
msgid ""
"Because the meaning of an F-word in feed-per-minute mode varies depending on "
"which axes are commanded to move, and because the amount of material removed "
"does not depend only on the feed rate, it may be easier to use G93 inverse "
"time feed mode to achieve the desired material removal rate."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Common Error Messages"
msgstr ""

#. type: Plain text
msgid ""
"'G code out of range' - A G code greater than G99 was used, the scope of G "
"codes in LinuxCNC is 0 - 99. Not every number between 0 and 99 is a valid G "
"code."
msgstr ""

#. type: Plain text
msgid ""
"'Unknown g code used' - A G code was used that is not part of the LinuxCNC G "
"code language."
msgstr ""

#. type: Plain text
msgid ""
"'i,j,k word with no Gx to use it' - i, j and k words must be used on the "
"same line as the G code."
msgstr ""

#. type: Plain text
msgid ""
"'Cannot use axis values without a g code that uses them' - Axis values can "
"not be used on a line without either a modal G code in effect or a G code on "
"the same line."
msgstr ""

#. type: Plain text
msgid ""
"'File ended with no percent sign or program end' - Every G code file must "
"end in a M2 or M30 or be wrapped with the percent sign %."
msgstr ""

#. type: Title =
#, no-wrap
msgid "G Codes"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Conventions"
msgstr ""

#. type: Plain text
msgid "Conventions used in this section"
msgstr ""

#. type: Plain text
msgid ""
"In the G code prototypes the hyphen ('-') stands for a real value and ('<>') "
"denotes an optional item."
msgstr ""

#. type: Plain text
msgid ""
"If 'L-' is written in a prototype the '-' will often be referred to as the "
"'L number', and so on for any other letter."
msgstr ""

#. type: Plain text
msgid ""
"In the G code prototypes the word 'axes' stands for any axis as defined in "
"your configuration."
msgstr ""

#. type: Plain text
msgid "An optional value will be written like this '<L->'."
msgstr ""

#. type: Plain text
msgid "A real value may be:"
msgstr ""

#. type: Plain text
msgid "An explicit number, '4'"
msgstr ""

#. type: Plain text
msgid "An expression, '[2+2]'"
msgstr ""

#. type: Plain text
msgid "A parameter value, '#88'"
msgstr ""

#. type: Plain text
msgid "A unary function value, 'acos[0]'"
msgstr ""

#. type: Plain text
msgid ""
"In most cases, if 'axis' words are given (any or all of 'X Y Z A B C U V "
"W'), they specify a destination point."
msgstr ""

#. type: Plain text
msgid ""
"Axis numbers are in the currently active coordinate system, unless "
"explicitly described as being in the absolute coordinate system."
msgstr ""

#. type: Plain text
msgid ""
"Where axis words are optional, any omitted axes will retain their original "
"value."
msgstr ""

#. type: Plain text
msgid ""
"Any items in the G code prototypes not explicitly described as optional are "
"required."
msgstr ""

#. type: Plain text
msgid ""
"The values following letters are often given as explicit numbers.  Unless "
"stated otherwise, the explicit numbers can be real values. For example, 'G10 "
"L2' could equally well be written 'G[2*5] L[1+1]'. If the value of parameter "
"100 were 2, 'G10 L#100' would also mean the same."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G Code Quick Reference Table[[gcode:quick-reference-table]]"
msgstr ""

#. type: Plain text
msgid "(((G Code Table)))"
msgstr ""

#. type: Table
#, no-wrap
msgid "Code"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g0,G0>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinated Motion at Rapid Rate"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g1,G1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinated Motion at Feed Rate"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g2-g3,G2 G3>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinated Helical Motion at Feed Rate"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g4,G4>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dwell"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g5,G5>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cubic Spline"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g5.1,G5.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Quadratic B-Spline"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g5.2-g5.3,G5.2,G5.3>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "NURBS, add control point"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g7,G7>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Diameter Mode (lathe)"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g8,G8>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Radius Mode (lathe)"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g10-l1,G10 L1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set Tool Table Entry"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g10-l10,G10 L10>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set Tool Table, Calculated, Workpiece"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g10-l11,G10 L11>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set Tool Table, Calculated, Fixture"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g10-l2,G10 L2>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinate System Origin Setting"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g10-l20,G10 L20>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinate System Origin Setting Calculated"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g17-g19.1,G17 - G19.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Plane Select"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g20-g21,G20 G21>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set Units of Measure"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g28-g28.1,G28 - G28.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Go to Predefined Position"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g30-g30.1,G30 - G30.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g33,G33>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g33.1,G33.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rigid Tapping"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g38,G38.2 - G38.5>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g40,G40>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cancel Cutter Compensation"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g41-g42,G41 G42>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g41.1-g42.1,G41.1 G42.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dynamic Cutter Compensation"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g43,G43>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Use Tool Length Offset from Tool Table"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g43.1,G43.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dynamic Tool Length Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g43.2,G43.2>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Apply additional Tool Length Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g49,G49>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cancel Tool Length Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g52,G52>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Local Coordinate System Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g53,G53>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Move in Machine Coordinates"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g54-g59.3,G54-G59.3>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select Coordinate System (1 - 9)"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g61,G61>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Exact Path Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g61.1,G61.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Exact Stop Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g64,G64>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Path Control Mode with Optional Tolerance"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g70,G70>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Lathe finishing cycle"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g71-g72,G71-G72>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Lathe roughing cycle"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g73,G73>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Drilling Cycle with Chip Breaking"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g74,G74>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Left-hand Tapping Cycle with Dwell"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g76,G76>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Multi-pass Threading Cycle (Lathe)"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g80,G80>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cancel Motion Modes"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g81,G81>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Drilling Cycle"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g82,G82>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Drilling Cycle with Dwell"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g83,G83>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Drilling Cycle with Peck"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g84,G84>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Right-hand Tapping Cycle with Dwell"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g85,G85>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Boring Cycle, No Dwell, Feed Out"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g86,G86>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Boring Cycle, Stop, Rapid Out"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g89,G89>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Boring Cycle, Dwell, Feed Out"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g90-g91,G90 G91>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Distance Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g90.1-g91.1,G90.1 G91.1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Arc Distance Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g92,G92>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinate System Offset"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g92.1-g92.2,G92.1 G92.2>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Cancel G92 Offsets"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g92.3,G92.3>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Restore G92 Offsets"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g93-g94-g95,G93 G94 G95>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed Modes"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g96-g97,G96>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle Control Mode"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<gcode:g98-g99,G98 G99>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Canned Cycle Z Retract Mode"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G0 Rapid Move"
msgstr ""

#. type: Plain text
msgid "(((G0 Rapid Move)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G0 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"For rapid motion, program 'G0 axes', where all the axis words are optional.  "
"The 'G0' is optional if the current motion mode is 'G0'. This will produce "
"coordinated motion to the destination point at the maximum rapid rate (or "
"slower). 'G0' is typically used as a positioning move."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Rapid Velocity Rate"
msgstr ""

#. type: Plain text
msgid ""
"The MAX_VELOCITY setting in the ini file [TRAJ] section defines the maximum "
"rapid traverse rate. The maximum rapid traverse rate can be higher than the "
"individual axes MAX_VELOCITY setting during a coordinated move. The maximum "
"rapid traverse rate can be slower than the MAX_VELOCITY setting in the "
"[TRAJ] section if an axis MAX_VELOCITY or trajectory constraints limit it."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G0 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute distance mode)\n"
"G0 X1 Y-2.3 (Rapid linear move from current location to X1 Y-2.3)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g90-g91,G90>> & <<mcode:m2-m30,M2>> sections for more "
"information."
msgstr ""

#. type: Plain text
msgid ""
"If cutter compensation is active, the motion will differ from the above; see "
"the <<sec:cutter-compensation,Cutter Compensation>> Section."
msgstr ""

#. type: Plain text
msgid ""
"If 'G53' is programmed on the same line, the motion will also differ; see "
"the <<gcode:g53,G53>> Section for more information."
msgstr ""

#. type: Plain text
msgid ""
"The path of a G0 rapid motion can be rounded at direction changes and "
"depends on the <<sec:trajectory-control,trajectory control>> settings and "
"maximum acceleration of the axes."
msgstr ""

#. type: Plain text
msgid "An axis letter is without a real value."
msgstr ""

#. type: Plain text
msgid "An axis letter is used that is not configured"
msgstr ""

#. type: Plain text
msgid "[[gcode:g1]](((G1 Linear Move)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G1 Linear Move"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G1 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"For linear (straight line) motion at programmed <<sec:set-feed-rate,feed "
"rate>> (for cutting or not), program 'G1 'axes'', where all the axis words "
"are optional. The 'G1' is optional if the current motion mode is 'G1'. This "
"will produce coordinated motion to the destination point at the current feed "
"rate (or slower)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G1 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute distance mode)\n"
"G1 X1.2 Y-3 F10 (linear move at a feed rate of 10 from current position to X1.2 Y-3)\n"
"Z-2.3 (linear move at same feed rate from current position to Z-2.3)\n"
"Z1 F25 (linear move at a feed rate of 25 from current position to Z1)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g90-g91,G90>> & <<sec:set-feed-rate,F>> & <<mcode:m2-m30,M2>> "
"sections for more information."
msgstr ""

#. type: Plain text
msgid "No feed rate has been set."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G2, G3 Arc Move"
msgstr ""

#. type: Plain text
msgid "(((G2, G3 Arc Move)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G2 or G3 axes offsets (center format)\n"
"G2 or G3 axes R- (radius format)\n"
"G2 or G3 offsets|R- <P-> (full circles)\n"
msgstr ""

#. type: Plain text
msgid ""
"A circular or helical arc is specified using either 'G2' (clockwise arc) or "
"'G3' (counterclockwise arc) at the current <<sec:set-feed-rate,feed rate>>. "
"The direction (CW, CCW) is as viewed from the positive end of the axis about "
"which the circular motion occurs."
msgstr ""

#. type: Plain text
msgid ""
"The axis of the circle or helix must be parallel to the X, Y, or Z axis of "
"the machine coordinate system.  The axis (or, equivalently, the plane "
"perpendicular to the axis)  is selected with 'G17' (Z-axis, XY-plane), "
"'G18' (Y-axis, XZ-plane), or 'G19' (X-axis, YZ-plane).  Planes '17.1', "
"'18.1', and '19.1' are not currently supported.  If the arc is circular, it "
"lies in a plane parallel to the selected plane."
msgstr ""

#. type: Plain text
msgid ""
"To program a helix, include the axis word perpendicular to the arc plane, "
"for example, if in the 'G17' plane, include a 'Z' word. This will cause the "
"'Z' axis to move to the programmed value during the circular 'XY' motion."
msgstr ""

#. type: Plain text
msgid ""
"To program an arc that gives more than one full turn, use the 'P' word "
"specifying the number of full turns plus the programmed arc. The 'P' word "
"must be an integer. If 'P' is unspecified, the behavior is as if 'P1' was "
"given that is, only one full or partial turn will result. For example, if a "
"180 degree arc is programmed with a P2, the resulting motion will be 1 1/2 "
"rotations. For each P increment above 1 an extra full circle is added to the "
"programmed arc. Multi turn helical arcs are supported and give motion useful "
"for milling holes or threads."
msgstr ""

#. type: Plain text
msgid ""
"If the pitch of the helix is very small (less than the <<programming-the-"
"planner,naive CAM tolerance>> then the helix might be converted into a "
"straight line.  https://github.com/LinuxCNC/linuxcnc/issues/222[Bug #222]"
msgstr ""

#. type: Plain text
msgid ""
"If a line of code makes an arc and includes rotary axis motion, the rotary "
"axes turn at a constant rate so that the rotary motion starts and finishes "
"when the XYZ motion starts and finishes.  Lines of this sort are hardly ever "
"programmed."
msgstr ""

#. type: Plain text
msgid ""
"The arc center is absolute or relative as set by <<gcode:g90.1-g91.1,G90.1 "
"or G91.1>> respectively."
msgstr ""

#. type: Plain text
msgid ""
"Two formats are allowed for specifying an arc: Center Format and Radius "
"Format."
msgstr ""

#. type: Plain text
msgid "The P word is not an integer."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Center Format Arcs"
msgstr ""

#. type: Plain text
msgid ""
"Center format arcs are more accurate than radius format arcs and are the "
"preferred format to use."
msgstr ""

#. type: Plain text
msgid ""
"The end point of the arc along with the offset to the center of the arc from "
"the current location are used to program arcs that are less than a full "
"circle. It is OK if the end point of the arc is the same as the current "
"location."
msgstr ""

#. type: Plain text
msgid ""
"The offset to the center of the arc from the current location and optionally "
"the number of turns are used to program full circles."
msgstr ""

#. type: Plain text
msgid ""
"When programming arcs an error due to rounding can result from using a "
"precision of less than 4 decimal places (0.0000) for inch and less than 3 "
"decimal places (0.000) for millimeters."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Incremental Arc Distance Mode"
msgstr ""

#. type: Plain text
msgid ""
"Arc center offsets are a relative distance from the start location of the "
"arc.  Incremental Arc Distance Mode is default."
msgstr ""

#. type: Plain text
msgid ""
"One or more axis words and one or more offsets must be programmed for an arc "
"that is less than 360 degrees."
msgstr ""

#. type: Plain text
msgid ""
"No axis words and one or more offsets must be programmed for full circles.  "
"The 'P' word defaults to 1 and is optional."
msgstr ""

#. type: Plain text
msgid ""
"For more information on 'Incremental Arc Distance Mode see the <<gcode:g90.1-"
"g91.1,G91.1>> section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Absolute Arc Distance Mode"
msgstr ""

#. type: Plain text
msgid ""
"Arc center offsets are the absolute distance from the current 0 position of "
"the axis."
msgstr ""

#. type: Plain text
msgid ""
"One or more axis words and 'both' offsets must be programmed for arcs less "
"than 360 degrees."
msgstr ""

#. type: Plain text
msgid ""
"No axis words and both offsets must be programmed for full circles.  The 'P' "
"word defaults to 1 and is optional."
msgstr ""

#. type: Plain text
msgid ""
"For more information on 'Absolute Arc Distance Mode see the <<gcode:g90.1-"
"g91.1,G90.1>> section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "XY-plane (G17)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G2 or G3 <X- Y- Z- I- J- P->\n"
msgstr ""

#. type: Plain text
msgid "'Z' - helix"
msgstr ""

#. type: Plain text
msgid "'I' - X offset"
msgstr ""

#. type: Plain text
msgid "'J' - Y offset"
msgstr ""

#. type: Plain text
msgid "'P' - number of turns"
msgstr ""

#. type: Block title
#, no-wrap
msgid "XZ-plane (G18)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G2 or G3 <X- Z- Y- I- K- P->\n"
msgstr ""

#. type: Plain text
msgid "'Y' - helix"
msgstr ""

#. type: Plain text
msgid "'K' - Z offset"
msgstr ""

#. type: Block title
#, no-wrap
msgid "YZ-plane (G19)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G2 or G3 <Y- Z- X- J- K- P->\n"
msgstr ""

#. type: Plain text
msgid "'X' - helix"
msgstr ""

#. type: Plain text
msgid "No feed rate is set with the <<sec:set-feed-rate,F>> word."
msgstr ""

#. type: Plain text
msgid "No offsets are programmed."
msgstr ""

#. type: Plain text
msgid ""
"When the arc is projected on the selected plane, the distance from the "
"current point to the center differs from the distance from the end point to "
"the center by more than (.05 inch/.5 mm)  OR ((.0005 inch/.005mm) AND .1% of "
"radius)."
msgstr ""

#. type: Plain text
msgid ""
"Deciphering the Error message 'Radius to end of arc differs from radius to "
"start:'"
msgstr ""

#. type: Plain text
msgid "'start' - the current position"
msgstr ""

#. type: Plain text
msgid "'center' - the center position as calculated using the i, j, or k words"
msgstr ""

#. type: Plain text
msgid "'end' - the programmed end point"
msgstr ""

#. type: Plain text
msgid "'r1' - radius from the start position to the center"
msgstr ""

#. type: Plain text
msgid "'r2' - radius from the end position to the center"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Center Format Examples"
msgstr ""

#. type: Plain text
msgid ""
"Calculating arcs by hand can be difficult at times. One option is to draw "
"the arc with a cad program to get the coordinates and offsets.  Keep in mind "
"the tolerance mentioned above, you may have to change the precision of your "
"cad program to get the desired results. Another option is to calculate the "
"coordinates and offset using formulas. As you can see in the following "
"figures a triangle can be formed from the current position the end position "
"and the arc center."
msgstr ""

#. type: Plain text
msgid ""
"In the following figure you can see the start position is X0 Y0, the end "
"position is X1 Y1. The arc center position is at X1 Y0. This gives us an "
"offset from the start position of 1 in the X axis and 0 in the Y axis. In "
"this case only an I offset is needed."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G2 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X0 Y0\n"
"G2 X1 Y1 I1 F10 (clockwise arc in the XY plane)\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "G2 Example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g2_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In the next example we see the difference between the offsets for Y if we "
"are doing a G2 or a G3 move. For the G2 move the start position is X0 Y0, "
"for the G3 move it is X0 Y1. The arc center is at X1 Y0.5 for both moves. "
"The G2 move the J offset is 0.5 and the G3 move the J offset is -0.5."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G2-G3 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X0 Y0\n"
"G2 X0 Y1 I1 J0.5 F25 (clockwise arc in the XY plane)\n"
"G3 X0 Y0 I1 J-0.5 F25 (counterclockwise arc in the XY plane)\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "G2-G3 Example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g2-3_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"In the next example we show how the arc can make a helix in the Z axis by "
"adding the Z word."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G2 Example Helix"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X0 Y0 Z0\n"
"G17 G2 X10 Y16 I3 J4 Z-1 (helix arc with Z added)\n"
msgstr ""

#. type: Plain text
msgid ""
"In the next example we show how to make more than one turn using the P word."
msgstr ""

#. type: Block title
#, no-wrap
msgid "P word Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X0 Y0 Z0\n"
"G2 X0 Y1 Z-1 I1 J0.5 P2 F25\n"
msgstr ""

#. type: Plain text
msgid ""
"In the center format, the radius of the arc is not specified, but it may be "
"found easily as the distance from the center of the circle to either the "
"current point or the end point of the arc."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Radius Format Arcs"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G2 or G3 axes R- <P->\n"
msgstr ""

#. type: Plain text
msgid "'R' - radius from current position"
msgstr ""

#. type: Plain text
msgid ""
"It is not good practice to program radius format arcs that are nearly full "
"circles or nearly semicircles because a small change in the location of the "
"end point will produce a much larger change in the location of the center of "
"the circle (and, hence, the middle of the arc). The magnification effect is "
"large enough that rounding error in a number can produce out-of-tolerance "
"cuts. For instance, a 1% displacement of the endpoint of a 180 degree arc "
"produced a 7% displacement of the point 90 degrees along the arc. Nearly "
"full circles are even worse. Other size arcs (in the range tiny to 165 "
"degrees or 195 to 345 degrees) are OK."
msgstr ""

#. type: Plain text
msgid ""
"In the radius format, the coordinates of the end point of the arc in the "
"selected plane are specified along with the radius of the arc.  Program 'G2' "
"'axes' 'R-' (or use 'G3' instead of 'G2' ). R is the radius. The axis words "
"are all optional except that at least one of the two words for the axes in "
"the selected plane must be used. The R number is the radius. A positive "
"radius indicates that the arc turns through less than 180 degrees, while a "
"negative radius indicates a turn of more than 180 degrees. If the arc is "
"helical, the value of the end point of the arc on the coordinate axis "
"parallel to the axis of the helix is also specified."
msgstr ""

#. type: Plain text
msgid "both of the axis words for the axes of the selected plane are omitted"
msgstr ""

#. type: Plain text
msgid "the end point of the arc is the same as the current point."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G17 G2 X10 Y15 R20 Z5 (radius format with arc)\n"
msgstr ""

#. type: Plain text
msgid ""
"The above example makes a clockwise (as viewed from the positive Z-axis)  "
"circular or helical arc whose axis is parallel to the Z-axis, ending where "
"X=10, Y=15, and Z=5, with a radius of 20. If the starting value of Z is 5, "
"this is an arc of a circle parallel to the XY-plane; otherwise it is a "
"helical arc."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G4 Dwell"
msgstr ""

#. type: Plain text
msgid "(((G4 Dwell)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G4 P-\n"
msgstr ""

#. type: Plain text
msgid "'P' - seconds to dwell (floating point)"
msgstr ""

#. type: Plain text
msgid ""
"The P number is the time in seconds that all axes will remain unmoving.  The "
"P number is a floating point number so fractions of a second may be used.  "
"G4 does not affect spindle, coolant and any I/O."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G4 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G4 P0.5 (wait for 0.5 seconds before proceeding)\n"
msgstr ""

#. type: Plain text
msgid "the P number is negative or not specified."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G5 Cubic Spline"
msgstr ""

#. type: Plain text
msgid "(((G5 Cubic spline)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G5 X- Y- <I- J-> P- Q-\n"
msgstr ""

#. type: Plain text
msgid "'I' - X incremental offset from start point to first control point"
msgstr ""

#. type: Plain text
msgid "'J' - Y incremental offset from start point to first control point"
msgstr ""

#. type: Plain text
msgid "'P' - X incremental offset from end point to second control point"
msgstr ""

#. type: Plain text
msgid "'Q' - Y incremental offset from end point to second control point"
msgstr ""

#. type: Plain text
msgid ""
"G5 creates a cubic B-spline in the XY plane with the X and Y axes only.  P "
"and Q must both be specified for every G5 command."
msgstr ""

#. type: Plain text
msgid ""
"For the first G5 command in a series of G5 commands, I and J must both be "
"specified.  For subsequent G5 commands, either both I and J must be "
"specified, or neither.  If I and J are unspecified, the starting direction "
"of this cubic will automatically match the ending direction of the previous "
"cubic (as if I and J are the negation of the previous P and Q)."
msgstr ""

#. type: Plain text
msgid "For example, to program a curvy N shape:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "G5 Sample initial cubic spline"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 G17\n"
"G0 X0 Y0\n"
"G5 I0 J3 P0 Q-3 X1 Y1\n"
msgstr ""

#. type: Plain text
msgid ""
"A second curvy N that attaches smoothly to this one can now be made without "
"specifying I and J:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "G5 Sample subsequent cubic spline"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G5 P0 Q-3 X2 Y2\n"
msgstr ""

#. type: Plain text
msgid "P and Q are not both specified"
msgstr ""

#. type: Plain text
msgid "Just one of I or J are specified"
msgstr ""

#. type: Plain text
msgid "I or J are unspecified in the first of a series of G5 commands"
msgstr ""

#. type: Plain text
msgid "An axis other than X or Y is specified"
msgstr ""

#. type: Plain text
msgid "The active plane is not G17"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G5.1 Quadratic Spline"
msgstr ""

#. type: Plain text
msgid "(((G5.1 Quadratic spline)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G5.1 X- Y- I- J-\n"
msgstr ""

#. type: Plain text
msgid "'I' - X incremental offset from start point to control point"
msgstr ""

#. type: Plain text
msgid "'J' - Y incremental offset from start point to control point"
msgstr ""

#. type: Plain text
msgid ""
"G5.1 creates a quadratic B-spline in the XY plane with the X and Y axis "
"only.  Not specifying I or J gives zero offset for the unspecified axis, so "
"one or both must be given."
msgstr ""

#. type: Plain text
msgid ""
"For example, to program a parabola, through the origin, from X-2 Y4 to X2 Y4:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "G5.1 Sample quadratic spline"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 G17\n"
"G0 X-2 Y4\n"
"G5.1 X2 I2 J-8\n"
msgstr ""

#. type: Plain text
msgid "both I and J offset are unspecified or zero"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G5.2 G5.3 NURBS Block"
msgstr ""

#. type: Plain text
msgid "(((G5.2 G5.3 NURBS Block)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G5.2 <P-> <X- Y-> <L->\n"
"X- Y- <P->\n"
"...\n"
"G5.3\n"
msgstr ""

#. type: Plain text
msgid "Warning: G5.2, G5.3 is experimental and not fully tested."
msgstr ""

#. type: Plain text
msgid ""
"G5.2 is for opening the data block defining a NURBS and G5.3 for closing the "
"data block. In the lines between these two codes the curve control points "
"are defined with both their related 'weights' (P) and the parameter (L) "
"which determines the order of the curve."
msgstr ""

#. type: Plain text
msgid ""
"The current coordinate, before the first G5.2 command, is always taken as "
"the first NURBS control point.  To set the weight for this first control "
"point, first program G5.2 P- without giving any X Y."
msgstr ""

#. type: Plain text
msgid ""
"The default weight if P is unspecified is 1.  The default order if L is "
"unspecified is 3."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G5.2 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X0 Y0 (rapid move)\n"
"F10 (set feed rate)\n"
"G5.2 P1 L3\n"
"     X0 Y1 P1\n"
"     X2 Y2 P1\n"
"     X2 Y0 P1\n"
"     X0 Y0 P2\n"
"G5.3\n"
"; The rapid moves show the same path without the NURBS Block\n"
"G0 X0 Y1\n"
"   X2 Y2\n"
"   X2 Y0\n"
"   X0 Y0\n"
"M2\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Sample NURBS Output"
msgstr ""

#. type: Plain text
msgid "image:images/nurbs01.png[align=\"center\", alt=\"Sample NURBS Output\"]"
msgstr ""

#. type: Plain text
msgid "More information on NURBS can be found here:"
msgstr ""

#. type: Plain text
msgid ""
"http://wiki.linuxcnc.org/cgi-bin/wiki.pl?NURBS[http://wiki.linuxcnc.org/cgi-"
"bin/wiki.pl?NURBS]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G7 Lathe Diameter Mode"
msgstr ""

#. type: Plain text
msgid "(((G7 Lathe Diameter Mode)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G7\n"
msgstr ""

#. type: Plain text
msgid ""
"Program G7 to enter the diameter mode for axis X on a lathe. When in the "
"diameter mode the X axis moves on a lathe will be 1/2 the distance to the "
"center of the lathe. For example X1 would move the cutter to 0.500â from the "
"center of the lathe thus giving a 1â diameter part."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G8 Lathe Radius Mode"
msgstr ""

#. type: Plain text
msgid "(((G8 Lathe Radius Mode)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G8\n"
msgstr ""

#. type: Plain text
msgid ""
"Program G8 to enter the radius mode for axis X on a lathe. When in Radius "
"mode the X axis moves on a lathe will be the distance from the center. Thus "
"a cut at X1 would result in a part that is 2\" in diameter.  G8 is default "
"at power up."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G10 L1 Set Tool Table"
msgstr ""

#. type: Plain text
msgid "(((G10 L1 Tool Table)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L1 P- axes <R- I- J- Q->\n"
msgstr ""

#. type: Plain text
msgid "'P' - tool number"
msgstr ""

#. type: Plain text
msgid "'R' - radius of tool"
msgstr ""

#. type: Plain text
msgid "'I' - front angle (lathe)"
msgstr ""

#. type: Plain text
msgid "'J' - back angle (lathe)"
msgstr ""

#. type: Plain text
msgid "'Q' - orientation (lathe)"
msgstr ""

#. type: Plain text
msgid ""
"G10 L1 sets the tool table for the 'P' tool number to the values of the "
"words."
msgstr ""

#. type: Plain text
msgid "A valid G10 L1 rewrites and reloads the tool table."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G10 L1 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G10 L1 P1 Z1.5 (set tool 1 Z offset from the machine origin to 1.5)\n"
"G10 L1 P2 R0.015 Q3 (lathe example setting tool 2 radius to 0.015 and orientation to 3)\n"
msgstr ""

#. type: Plain text
msgid "Cutter Compensation is on"
msgstr ""

#. type: Plain text
msgid "The P number is unspecified"
msgstr ""

#. type: Plain text
msgid "The P number is not a valid tool number from the tool table"
msgstr ""

#. type: Plain text
msgid "The P number is 0"
msgstr ""

#. type: Plain text
msgid ""
"For more information on cutter orientation used by the 'Q' word, see the "
"<<lathe-tool-orientation,Lathe Tool Orientation>> diagram."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G10 L2 Set Coordinate System"
msgstr ""

#. type: Plain text
msgid "(((G10 L2 Coordinate System)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L2 P- <axes R->\n"
msgstr ""

#. type: Plain text
msgid "'P' - coordinate system (0-9)"
msgstr ""

#. type: Plain text
msgid "'R' - rotation about the Z axis"
msgstr ""

#. type: Plain text
msgid ""
"G10 L2 offsets the origin of the axes in the coordinate system specified to "
"the value of the axis word. The offset is from the machine origin "
"established during homing. The offset value will replace any current offsets "
"in effect for the coordinate system specified. Axis words not used will not "
"be changed."
msgstr ""

#. type: Plain text
msgid "Program P0 to P9 to specify which coordinate system to change."
msgstr ""

#. type: Table
#, no-wrap
msgid "Coordinate System"
msgstr ""

#. type: Table
#, no-wrap
msgid "P Value"
msgstr ""

#. type: Table
#, no-wrap
msgid "G code"
msgstr ""

#. type: Table
#, no-wrap
msgid "Active"
msgstr ""

#. type: Table
#, no-wrap
msgid "n/a"
msgstr ""

#. type: Plain text
msgid ""
"Optionally program R to indicate the rotation of the XY axis around the Z "
"axis.  The direction of rotation is CCW as viewed from the positive end of "
"the Z axis."
msgstr ""

#. type: Plain text
msgid "All axis words are optional."
msgstr ""

#. type: Plain text
msgid ""
"Being in incremental distance mode (<<gcode:g90-g91,'G91'>>) has no effect "
"on 'G10 L2'."
msgstr ""

#. type: Plain text
msgid "Important Concepts:"
msgstr ""

#. type: Plain text
msgid ""
"G10 L2 Pn does not change from the current coordinate system to the one "
"specified by P, you have to use G54-59.3 to select a coordinate system."
msgstr ""

#. type: Plain text
msgid ""
"When a rotation is in effect jogging an axis will only move that axis in a "
"positive or negative direction and not along the rotated axis."
msgstr ""

#. type: Plain text
msgid ""
"If a 'G52' local offset or 'G92' origin offset was in effect before 'G10 "
"L2', it will continue to be in effect afterwards."
msgstr ""

#. type: Plain text
msgid ""
"When programming a coordinate system with R, any 'G52' or 'G92' will be "
"applied *after* the rotation."
msgstr ""

#. type: Plain text
msgid ""
"The coordinate system whose origin is set by a 'G10' command may be active "
"or inactive at the time the 'G10' is executed.  If it is currently active, "
"the new coordinates take effect immediately."
msgstr ""

#. type: Plain text
msgid "The P number does not evaluate to an integer in the range 0 to 9."
msgstr ""

#. type: Plain text
msgid "An axis is programmed that is not defined in the configuration."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G10 L2 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L2 P1 X3.5 Y17.2\n"
msgstr ""

#. type: Plain text
msgid ""
"In the above example the origin of the first coordinate system (the one "
"selected by 'G54') is set to be X=3.5 and Y=17.2.  Because only X and Y are "
"specified, the origin point is only moved in X and Y; the other coordinates "
"are not changed."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L2 P1 X0 Y0 Z0 (clear offsets for X,Y & Z axes in coordinate system 1)\n"
msgstr ""

#. type: Plain text
msgid ""
"The above example sets the XYZ coordinates of the coordinate system 1 to the "
"machine origin."
msgstr ""

#. type: Plain text
msgid ""
"The coordinate system is described in the <<cha:coordinate-system,Coordinate "
"System>> Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G10 L10 Set Tool Table"
msgstr ""

#. type: Plain text
msgid "(((G10 L10 Set Tool Table)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L10 P- axes <R- I- J- Q->\n"
msgstr ""

#. type: Plain text
msgid ""
"G10 L10 changes the tool table entry for tool P so that if the tool offset "
"is reloaded, with the machine in its current position and with the current "
"G5x and G52/G92 offsets active, the current coordinates for the given axes "
"will become the given values. The axes that are not specified in the G10 L10 "
"command will not be changed. This could be useful with a probe move as "
"described in the <<gcode:g38,G38>> section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G10 L10 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"T1 M6 G43 (load tool 1 and tool length offsets)\n"
"G10 L10 P1 Z1.5 (set the current position for Z to be 1.5)\n"
"G43 (reload the tool length offsets from the changed tool table)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<sec:select-tool,T>> & <<mcode:m6,M6>>, and <<gcode:g43,G43>>/<<gcode:"
"g43.1,G43.1>> sections for more information."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G10 L11 Set Tool Table"
msgstr ""

#. type: Plain text
msgid "(((G10 L11 Set Tool Table)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L11 P- axes <R- I- J- Q->\n"
msgstr ""

#. type: Plain text
msgid ""
"G10 L11 is just like G10 L10 except that instead of setting the entry "
"according to the current offsets, it is set so that the current coordinates "
"would become the given value if the new tool offset is reloaded and the "
"machine is placed in the G59.3 coordinate system without any G52/G92 offset "
"active."
msgstr ""

#. type: Plain text
msgid ""
"This allows the user to set the G59.3 coordinate system according to a fixed "
"point on the machine, and then use that fixture to measure tools without "
"regard to other currently-active offsets."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G10 L20 Set Coordinate System"
msgstr ""

#. type: Plain text
msgid "(((G10 L20 Set Coordinate System)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L20 P- axes\n"
msgstr ""

#. type: Plain text
msgid ""
"G10 L20 is similar to G10 L2 except that instead of setting the offset/entry "
"to the given value, it is set to a calculated value that makes the current "
"coordinates become the given value."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G10 L20 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G10 L20 P1 X1.5 (set the X axis current location in coordinate system 1 to 1.5)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G17 - G19.1 Plane Select"
msgstr ""

#. type: Plain text
msgid "(((G17 - G19.1 Plane Select)))"
msgstr ""

#. type: Plain text
msgid "These codes set the current plane as follows:"
msgstr ""

#. type: Plain text
msgid "'G17' - XY (default)"
msgstr ""

#. type: Plain text
msgid "'G18' - ZX"
msgstr ""

#. type: Plain text
msgid "'G19' - YZ"
msgstr ""

#. type: Plain text
msgid "'G17.1' - UV"
msgstr ""

#. type: Plain text
msgid "'G18.1' - WU"
msgstr ""

#. type: Plain text
msgid "'G19.1' - VW"
msgstr ""

#. type: Plain text
msgid "The UV, WU and VW planes do not support arcs."
msgstr ""

#. type: Plain text
msgid ""
"It is a good idea to include a plane selection in the preamble of each G "
"code file."
msgstr ""

#. type: Plain text
msgid ""
"The effects of having a plane selected are discussed in Section <<gcode:g2-"
"g3,G2 G3 Arcs>> and Section <<gcode:g80-g89,G81 G89>>"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G20, G21 Units"
msgstr ""

#. type: Plain text
msgid "(((G20 Units)))"
msgstr ""

#. type: Plain text
msgid "'G20' - to use inches for length units."
msgstr ""

#. type: Plain text
msgid "'G21' - to use millimeters for length units."
msgstr ""

#. type: Plain text
msgid "It is a good idea to include units in the preamble of each G code file."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G28, G28.1 Go/Set Predefined Position"
msgstr ""

#. type: Plain text
msgid "(((G28 Go/Set Predefined Position)))"
msgstr ""

#. type: Plain text
msgid ""
"Only use G28 when your machine is homed to a repeatable position and the "
"desired G28 position has been stored with G28.1."
msgstr ""

#. type: Plain text
msgid ""
"G28 uses the values stored in <<sub:numbered-parameters,parameters>> "
"5161-5169 as the X Y Z A B C U V W final point to move to. The parameter "
"values are 'absolute' machine coordinates in the native machine 'units' as "
"specified in the ini file. All axes defined in the ini file will be moved "
"when a G28 is issued. If no positions are stored with G28.1 then all axes "
"will go to the <<sec.machine-coordinate-system,machine origin>>."
msgstr ""

#. type: Plain text
msgid ""
"'G28' - makes a <<gcode:g0,rapid move>> from the current position to the "
"'absolute' position of the values in parameters 5161-5166."
msgstr ""

#. type: Plain text
msgid ""
"'G28 axes' - makes a rapid move to the position specified by 'axes' "
"including any offsets, then will make a rapid move to the 'absolute' "
"position of the values in parameters 5161-5166 for all 'axes' specified. Any "
"'axis' not specified will not move."
msgstr ""

#. type: Plain text
msgid ""
"'G28.1' - stores the current 'absolute' position into parameters 5161-5166."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G28 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G28 Z2.5 (rapid to Z2.5 then to Z location specified in #5163)\n"
msgstr ""

#. type: Plain text
msgid "It is an error if :"
msgstr ""

#. type: Plain text
msgid "Cutter Compensation is turned on"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G30, G30.1 Go/Set Predefined Position"
msgstr ""

#. type: Plain text
msgid "(((G30 Go/Set Predefined Position)))"
msgstr ""

#. type: Plain text
msgid ""
"Only use G30 when your machine is homed to a repeatable position and the "
"desired G30 position has been stored with G30.1."
msgstr ""

#. type: Plain text
msgid ""
"G30 functions the same as G28 but uses the values stored in <<sub:numbered-"
"parameters,parameters>> 5181-5189 as the X Y Z A B C U V W final point to "
"move to. The parameter values are 'absolute' machine coordinates in the "
"native machine 'units' as specified in the ini file.  All axes defined in "
"the ini file will be moved when a G30 is issued.  If no positions are stored "
"with G30.1 then all axes will go to the <<sec.machine-coordinate-system,"
"machine origin>>."
msgstr ""

#. type: Plain text
msgid ""
"G30 parameters will be used to move the tool when a M6 is programmed if "
"TOOL_CHANGE_AT_G30=1 is in the [EMCIO] section of the ini file."
msgstr ""

#. type: Plain text
msgid ""
"'G30' - makes a <<gcode:g0,rapid move>> from the current position to the "
"'absolute' position of the values in parameters 5181-5189."
msgstr ""

#. type: Plain text
msgid ""
"'G30 axes' - makes a rapid move to the position specified by 'axes' "
"including any offsets, then will make a rapid move to the 'absolute' "
"position of the values in parameters 5181-5189 for all 'axes' specified. Any "
"'axis' not specified will not move."
msgstr ""

#. type: Plain text
msgid ""
"'G30.1' - stores the current absolute position into parameters 5181-5186."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G30 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G30 Z2.5 (rapid to Z2.5 then to the Z location specified in #5i83)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G33 Spindle Synchronized Motion"
msgstr ""

#. type: Plain text
msgid "(((G33 Spindle Synchronized Motion)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G33 X- Y- Z- K- $-\n"
msgstr ""

#. type: Plain text
msgid "'K' - distance per revolution"
msgstr ""

#. type: Plain text
msgid ""
"For spindle-synchronized motion in one direction, code 'G33 X- Y- Z- K-' "
"where K gives the distance moved in XYZ for each revolution of the spindle.  "
"For instance, if starting at 'Z=0', 'G33 Z-1 K.0625' produces a 1 inch "
"motion in Z over 16 revolutions of the spindle.  This command might be part "
"of a program to produce a 16TPI thread.  Another example in metric, 'G33 "
"Z-15 K1.5' produces a movement of 15mm while the spindle rotates 10 times "
"for a thread of 1.5mm."
msgstr ""

#. type: Plain text
msgid ""
"The (optional) $ argument sets which spindle the motion is synchronised to "
"(default is zero). For example G33 Z10 K1 $1 will move the spindle in "
"synchrony with the spindle.N.revs HAL pin value."
msgstr ""

#. type: Plain text
msgid ""
"Spindle-synchronized motion waits for the spindle index and spindle at speed "
"pins, so multiple passes line up. 'G33' moves end at the programmed "
"endpoint.  G33 could be used to cut tapered threads or a fusee."
msgstr ""

#. type: Plain text
msgid "All the axis words are optional, except that at least one must be used."
msgstr ""

#. type: Plain text
msgid ""
"K follows the drive line described by 'X- Y- Z-'. K is not parallel to the Z "
"axis if X or Y endpoints are used for example when cutting tapered threads."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Technical Info[[gcode:g33-tech-info]]"
msgstr ""

#. type: Plain text
msgid ""
"At the beginning of each G33 pass, LinuxCNC uses the spindle speed and the "
"machine acceleration limits to calculate how long it will take Z to "
"accelerate after the index pulse, and determines how many degrees the "
"spindle will rotate during that time. It then adds that angle to the index "
"position and computes the Z position using the corrected spindle angle. That "
"means that Z will reach the correct position just as it finishes "
"accelerating to the proper speed, and can immediately begin cutting a good "
"thread."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL Connections"
msgstr ""

#. type: Plain text
msgid ""
"The pin 'spindle.N.at-speed' must be set or driven true for the motion to "
"start. Additionally spindle.N.revs must increase by 1 for each revolution of "
"the spindle and the spindle.N.index-enable pin must be connected to an "
"encoder (or resolver) counter which resets index-enable once per rev."
msgstr ""

#. type: Plain text
msgid ""
"See the Integrators Manual for more information on spindle synchronized "
"motion."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G33 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (absolute distance mode)\n"
"G0 X1 Z0.1 (rapid to position)\n"
"S100 M3 (start spindle turning)\n"
"G33 Z-2 K0.125 (move Z axis to -2 at a rate to equal 0.125 per revolution)\n"
"G0 X1.25 (rapid move tool away from work)\n"
"Z0.1 (rapid move to starting Z position)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g90-g91,G90>> & <<gcode:g0,G0>> & <<mcode:m2-m30,M2>> sections "
"for more information."
msgstr ""

#. type: Plain text
msgid "All axis words are omitted."
msgstr ""

#. type: Plain text
msgid "The spindle is not turning when this command is executed"
msgstr ""

#. type: Plain text
msgid "The requested linear motion exceeds machine velocity limits"
msgstr ""

#. type: Plain text
msgid "due to the spindle speed"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G33.1 Rigid Tapping"
msgstr ""

#. type: Plain text
msgid "(((G33.1 Rigid Tapping)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G33.1 X- Y- Z- K- I- $-\n"
msgstr ""

#. type: Plain text
msgid "'I' - optional spindle speed multiplier for faster return move"
msgstr ""

#. type: Plain text
msgid "'$' - optional spindle selector"
msgstr ""

#. type: Plain text
msgid ""
"For Z only tapping preposition the XY location prior to calling G33.1 and "
"only use a Z word in the G33.1. If the coordinates specified are not the "
"current coordinates when calling G33.1 for tapping the move will not be "
"along the Z axis but will be a coordinated, spindle-synchronized move from "
"the current location to the location specified and back."
msgstr ""

#. type: Plain text
msgid ""
"For rigid tapping (spindle synchronized motion with return), code 'G33.1 X- "
"Y- Z- K-' where 'K-' gives the distance moved for each revolution of the "
"spindle."
msgstr ""

#. type: Plain text
msgid "A rigid tapping move consists of the following sequence:"
msgstr ""

#. type: Plain text
msgid ""
"A move from the current coordinate to the specified coordinate, synchronized"
msgstr ""

#. type: Plain text
msgid ""
"with the selected spindle at the given ratio and starting from the current "
"coordinate with a spindle index pulse."
msgstr ""

#. type: Plain text
msgid ""
"When reaching the endpoint, a command to reverse the spindle, and speed up "
"by a factor set by the multiplier (e.g., from clockwise to counterclockwise)."
msgstr ""

#. type: Plain text
msgid "Continued synchronized motion beyond the specified end coordinate"
msgstr ""

#. type: Plain text
msgid "until the spindle actually stops and reverses."
msgstr ""

#. type: Plain text
msgid "Continued synchronized motion back to the original coordinate."
msgstr ""

#. type: Plain text
msgid "When reaching the original coordinate,"
msgstr ""

#. type: Plain text
msgid ""
"a command to reverse the spindle a second time (e.g., from counterclockwise "
"to clockwise)."
msgstr ""

#. type: Plain text
msgid "Continued synchronized motion beyond the original coordinate"
msgstr ""

#. type: Plain text
msgid "An *unsynchronized* move back to the original coordinate."
msgstr ""

#. type: Plain text
msgid ""
"Spindle-synchronized motions wait for spindle index, so multiple passes line "
"up.'G33.1' moves end at the original coordinate."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G33.1 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute mode)\n"
"G0 X1.000 Y1.000 Z0.100 (rapid move to starting position)\n"
"S100 M3 (turn on the spindle, 100 RPM)\n"
"G33.1 Z-0.750 K0.05 (rigid tap a 20 TPI thread 0.750 deep)\n"
"M2 (end program)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G38.n Straight Probe"
msgstr ""

#. type: Plain text
msgid "(((G38.n Probe)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G38.n axes\n"
msgstr ""

#. type: Plain text
msgid ""
"'G38.2' - probe toward workpiece, stop on contact, signal error if failure"
msgstr ""

#. type: Plain text
msgid "'G38.3' - probe toward workpiece, stop on contact"
msgstr ""

#. type: Plain text
msgid ""
"'G38.4' - probe away from workpiece, stop on loss of contact, signal error "
"if failure"
msgstr ""

#. type: Plain text
msgid "'G38.5' - probe away from workpiece, stop on loss of contact"
msgstr ""

#. type: Plain text
msgid ""
"You will not be able to use a probe move until your machine has been set up "
"to provide a probe input signal.  The probe input signal must be connected "
"to 'motion.probe-input' in a .hal file.  G38.n uses motion.probe-input to "
"determine when the probe has made (or lost) contact.  TRUE for probe contact "
"closed (touching), FALSE for probe contact open."
msgstr ""

#. type: Plain text
msgid ""
"Program 'G38.n axes' to perform a straight probe operation.  The axis words "
"are optional, except that at least one of them must be used.  The axis words "
"together define the destination point that the probe will move towards, "
"starting from the current location. If the probe is not tripped before the "
"destination is reached G38.2 and G38.4 will signal an error."
msgstr ""

#. type: Plain text
msgid "The tool in the spindle must be a probe or contact a probe switch."
msgstr ""

#. type: Plain text
msgid ""
"In response to this command, the machine moves the controlled point (which "
"should be at the center of the probe ball) in a straight line at the current "
"<<sec:set-feed-rate,feed rate>> toward the programmed point.  In inverse "
"time feed mode, the feed rate is such that the whole motion from the current "
"point to the programmed point would take the specified time.  The move stops "
"(within machine acceleration limits)  when the programmed point is reached, "
"or when the requested change in the probe input takes place, whichever "
"occurs first."
msgstr ""

#. type: Plain text
msgid ""
"After successful probing, parameters #5061 to #5069 will be set to the X, Y, "
"Z, A, B, C, U, V, W coordinates of the location of the controlled point at "
"the time the probe changed state (in the current work coordinate system).  "
"After unsuccessful probing, they are set to the coordinates of the "
"programmed point.  Parameter 5070 is set to 1 if the probe succeeded and 0 "
"if the probe failed.  If the probing operation failed, G38.2 and G38.4 will "
"signal an error by posting an message on screen if the selected GUI supports "
"that.  And by halting program execution."
msgstr ""

#. type: Plain text
msgid ""
"A comment of the form '(PROBEOPEN filename.txt)' will open 'filename.txt' "
"and store the 9-number coordinate consisting of XYZABCUVW of each successful "
"straight probe in it.  The file must be closed with '(PROBECLOSE)'. For more "
"information see the <<gcode:comments, Comments>> Section."
msgstr ""

#. type: Plain text
msgid ""
"An example file 'smartprobe.ngc' is included (in the examples directory)  to "
"demonstrate using probe moves to log to a file the coordinates of a part.  "
"The program 'smartprobe.ngc' could be used with 'ngcgui' with minimal "
"changes."
msgstr ""

#. type: Plain text
msgid "the current point is the same as the programmed point."
msgstr ""

#. type: Plain text
msgid "no axis word is used"
msgstr ""

#. type: Plain text
msgid "cutter compensation is enabled"
msgstr ""

#. type: Plain text
msgid "the feed rate is zero"
msgstr ""

#. type: Plain text
msgid "the probe is already in the target state"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G40 Compensation Off"
msgstr ""

#. type: Plain text
msgid "(((G40 Cutter Compensation Off)))"
msgstr ""

#. type: Plain text
msgid "'G40' - turn cutter compensation off. If tool compensation was on the"
msgstr ""

#. type: Plain text
msgid ""
"next move must be a linear move and longer than the tool diameter.  It is OK "
"to turn compensation off when it is already off."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G40 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; current location is X1 after finishing cutter compensated move\n"
"G40 (turn compensation off)\n"
"G0 X1.6 (linear move longer than current cutter diameter)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g0,G0>> & <<mcode:m2-m30,M2>> sections for more information."
msgstr ""

#. type: Plain text
msgid "A G2/G3 arc move is programmed next after a G40."
msgstr ""

#. type: Plain text
msgid ""
"The linear move after turning compensation off is less than the tool "
"diameter."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G41, G42 Cutter Compensation"
msgstr ""

#. type: Plain text
msgid "(((G41 G42 Cutter Compensation)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G41 <D-> (left of programmed path)\n"
"G42 <D-> (right of programmed path)\n"
msgstr ""

#. type: Plain text
msgid "'D' - tool number"
msgstr ""

#. type: Plain text
msgid ""
"The D word is optional; if there is no D word the radius of the currently "
"loaded tool will be used (if no tool is loaded and no D word is given, a "
"radius of 0 will be used)."
msgstr ""

#. type: Plain text
msgid ""
"If supplied, the D word is the tool number to use.  This would normally be "
"the number of the tool in the spindle (in which case the D word is redundant "
"and need not be supplied), but it may be any valid tool number."
msgstr ""

#. type: Plain text
msgid ""
"'G41/G42 D0' is a little special.  Its behavior is different on random tool "
"changer machines and nonrandom tool changer machines (see the <<mcode:m6,"
"Tool Change>> section).  On nonrandom tool changer machines, 'G41/G42 D0' "
"applies the TLO of the tool currently in the spindle, or a TLO of 0 if no "
"tool is in the spindle.  On random tool changer machines, 'G41/G42 D0' "
"applies the TLO of the tool T0 defined in the tool table file (or causes an "
"error if T0 is not defined in the tool table)."
msgstr ""

#. type: Plain text
msgid ""
"To start cutter compensation to the left of the part profile, use G41.  G41 "
"starts cutter compensation to the left of the programmed line as viewed from "
"the positive end of the axis perpendicular to the plane."
msgstr ""

#. type: Plain text
msgid ""
"To start cutter compensation to the right of the part profile, use G42.  G42 "
"starts cutter compensation to the right of the programmed line as viewed "
"from the positive end of the axis perpendicular to the plane."
msgstr ""

#. type: Plain text
msgid ""
"The lead in move must be at least as long as the tool radius.  The lead in "
"move can be a rapid move."
msgstr ""

#. type: Plain text
msgid ""
"Cutter compensation may be performed if the XY-plane or XZ-plane is active."
msgstr ""

#. type: Plain text
msgid "User M100-M199 commands are allowed when Cutter Compensation is on."
msgstr ""

#. type: Plain text
msgid ""
"The behavior of the machining center when cutter compensation is on is "
"described in the <<sec:cutter-compensation,Cutter Compensation>> Section "
"along with code examples."
msgstr ""

#. type: Plain text
msgid "The D number is not a valid tool number or 0."
msgstr ""

#. type: Plain text
msgid "The YZ plane is active."
msgstr ""

#. type: Plain text
msgid "Cutter compensation is commanded to turn on when it is already on."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G41.1, G42.1 Dynamic Cutter Compensation"
msgstr ""

#. type: Plain text
msgid "(((G41.1 G42.1 Dynamic Compensation)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G41.1 D- <L-> (left of programmed path)\n"
"G42.1 D- <L-> (right of programmed path)\n"
msgstr ""

#. type: Plain text
msgid "'D' - cutter diameter"
msgstr ""

#. type: Plain text
msgid ""
"'L' - tool orientation (see <<lathe-tool-orientation,lathe tool "
"orientation>>)"
msgstr ""

#. type: Plain text
msgid ""
"G41.1 & G42.1 function the same as G41 & G42 with the added scope of being "
"able to program the tool diameter. The L word defaults to 0 if unspecified."
msgstr ""

#. type: Plain text
msgid "The L number is not in the range from 0 to 9 inclusive."
msgstr ""

#. type: Plain text
msgid "The L number is used when the XZ plane is not active."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G43 Tool Length Offset"
msgstr ""

#. type: Plain text
msgid "(((G43 Tool Length Offset)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G43 <H->\n"
msgstr ""

#. type: Plain text
msgid "'H' - tool number (optional)"
msgstr ""

#. type: Plain text
msgid ""
"G43 enables tool length compensation.  G43 changes subsequent motions by "
"offsetting the axis coordinates by the length of the offset. G43 does not "
"cause any motion. The next time a compensated axis is moved, that axis's "
"endpoint is the compensated location."
msgstr ""

#. type: Plain text
msgid ""
"'G43' without an H word uses the currently loaded tool from the last 'Tn M6'."
msgstr ""

#. type: Plain text
msgid "'G43 Hn' uses the offset for tool n."
msgstr ""

#. type: Plain text
msgid ""
"'G43 H0' is a little special.  Its behavior is different on random tool "
"changer machines and nonrandom tool changer machines (see the <<sec:tool-"
"changers,Tool Changers>> section).  On nonrandom tool changer machines, 'G43 "
"H0' applies the TLO of the tool currently in the spindle, or a TLO of 0 if "
"no tool is in the spindle.  On random tool changer machines, 'G43 H0' "
"applies the TLO of the tool T0 defined in the tool table file (or causes an "
"error if T0 is not defined in the tool table)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G43 H- Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G43 H1 (set tool offsets using the values from tool 1 in the tool table)\n"
msgstr ""

#. type: Plain text
msgid "the H number is not an integer, or"
msgstr ""

#. type: Plain text
msgid "the H number is negative, or"
msgstr ""

#. type: Plain text
msgid "the H number is not a valid tool number (though note that 0 is a valid"
msgstr ""

#. type: Plain text
msgid ""
"tool number on nonrandom tool changer machines, it means \"the tool "
"currently in the spindle\")"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G43.1 Dynamic Tool Length Offset"
msgstr ""

#. type: Plain text
msgid "(((G43.1 Dynamic Tool Length Offset)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G43.1 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"'G43.1 axes' - change subsequent motions by replacing the current offset(s)"
msgstr ""

#. type: Plain text
msgid ""
"of axes. G43.1 does not cause any motion. The next time a compensated axis "
"is moved, that axis's endpoint is the compensated location."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G43.1 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute mode)\n"
"T1 M6 G43 (load tool 1 and tool length offsets, Z is at machine 0 and DRO shows Z1.500)\n"
"G43.1 Z0.250 (offset current tool offset by 0.250, DRO now shows Z1.250)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g90-g91,G90>> & <<sec:select-tool,T>> & <<mcode:m6,M6>> sections "
"for more information."
msgstr ""

#. type: Plain text
msgid "motion is commanded on the same line as 'G43.1'"
msgstr ""

#. type: Plain text
msgid "G43.1 does not write to the tool table."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G43.2 Apply additional Tool Length Offset"
msgstr ""

#. type: Plain text
msgid "(((G43.2 Apply additional Tool Length Offset)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G43.2 H- axes-\n"
msgstr ""

#. type: Plain text
msgid "'H' - tool number"
msgstr ""

#. type: Plain text
msgid "G43.2 applies an additional simultaneous tool offset."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G43.2 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute mode)\n"
"T1 M6 (load tool 1)\n"
"G43 (or G43 H1 - replace all tool offsets with T1's offset)\n"
"G43.2 H10 (also add in T10's tool offset)\n"
"M2 (end program)\n"
msgstr ""

#. type: Plain text
msgid ""
"You can sum together an arbitrary number of offsets by calling G43.2 more "
"times.  There are no built-in assumptions about which numbers are geometry "
"offsets and which are wear offsets, or that you should have only one of each."
msgstr ""

#. type: Plain text
msgid ""
"Like the other G43 commands, G43.2 does not cause any motion.  The next time "
"a compensated axis is moved, that axis's endpoint is the compensated "
"location."
msgstr ""

#. type: Plain text
msgid "'H' is unspecified and no axis offsets are specified"
msgstr ""

#. type: Plain text
msgid ""
"'H is specified and the given tool number does not exist in the tool table"
msgstr ""

#. type: Plain text
msgid "'H' is specified and axes are also specified"
msgstr ""

#. type: Plain text
msgid "G43.2 does not write to the tool table."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G49 Cancel Tool Length Compensation"
msgstr ""

#. type: Plain text
msgid "(((G49 Cancel Tool Length Offset)))"
msgstr ""

#. type: Plain text
msgid "'G49' - cancels tool length compensation"
msgstr ""

#. type: Plain text
msgid ""
"It is OK to program using the same offset already in use. It is also OK to "
"program using no tool length offset if none is currently being used."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G52 Local Coordinate System Offset"
msgstr ""

#. type: Plain text
msgid "(((Local Offsets)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G52 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"G52 is used in a part program as a temporary \"local coordinate system offset"
"\" within the workpiece coordinate system. More information on G52 is in the "
"<<sec:g52, Local and Global Offsets>> section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G53 Move in Machine Coordinates"
msgstr ""

#. type: Plain text
msgid "(((G53 Machine Coordinates)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G53 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"To move in the <<sec.machine-coordinate-system,machine coordinate system>>, "
"program 'G53' on the same line as a linear move. 'G53' is not modal and must "
"be programmed on each line. 'G0' or 'G1' does not have to be programmed on "
"the same line if one is currently active."
msgstr ""

#. type: Plain text
msgid ""
"For example 'G53 G0 X0 Y0 Z0' will move the axes to the home position even "
"if the currently selected coordinate system has offsets in effect."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G53 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G53 G0 X0 Y0 Z0 (rapid linear move to the machine origin)\n"
"G53 X2 (rapid linear move to absolute coordinate X2)\n"
msgstr ""

#. type: Plain text
msgid "See <<gcode:g0,G0>> section for more information."
msgstr ""

#. type: Plain text
msgid "G53 is used without G0 or G1 being active,"
msgstr ""

#. type: Plain text
msgid "or G53 is used while cutter compensation is on."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G54-G59.3 Select Coordinate System"
msgstr ""

#. type: Plain text
msgid "(((G54-G59.3 Select Coordinate System)))"
msgstr ""

#. type: Plain text
msgid "'G54' - select coordinate system 1"
msgstr ""

#. type: Plain text
msgid "'G55' - select coordinate system 2"
msgstr ""

#. type: Plain text
msgid "'G56' - select coordinate system 3"
msgstr ""

#. type: Plain text
msgid "'G57' - select coordinate system 4"
msgstr ""

#. type: Plain text
msgid "'G58' - select coordinate system 5"
msgstr ""

#. type: Plain text
msgid "'G59' - select coordinate system 6"
msgstr ""

#. type: Plain text
msgid "'G59.1' - select coordinate system 7"
msgstr ""

#. type: Plain text
msgid "'G59.2' - select coordinate system 8"
msgstr ""

#. type: Plain text
msgid "'G59.3' - select coordinate system 9"
msgstr ""

#. type: Plain text
msgid ""
"The coordinate systems store the axis values and the XY rotation angle "
"around the Z axis in the parameters shown in the following table."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Coordinate System Parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "Select"
msgstr ""

#. type: Table
#, no-wrap
msgid "CS"
msgstr ""

#. type: Table
#, no-wrap
msgid "5221"
msgstr ""

#. type: Table
#, no-wrap
msgid "5222"
msgstr ""

#. type: Table
#, no-wrap
msgid "5223"
msgstr ""

#. type: Table
#, no-wrap
msgid "5224"
msgstr ""

#. type: Table
#, no-wrap
msgid "5225"
msgstr ""

#. type: Table
#, no-wrap
msgid "5226"
msgstr ""

#. type: Table
#, no-wrap
msgid "5227"
msgstr ""

#. type: Table
#, no-wrap
msgid "5228"
msgstr ""

#. type: Table
#, no-wrap
msgid "5229"
msgstr ""

#. type: Table
#, no-wrap
msgid "5230"
msgstr ""

#. type: Table
#, no-wrap
msgid "5250"
msgstr ""

#. type: Table
#, no-wrap
msgid "5261"
msgstr ""

#. type: Table
#, no-wrap
msgid "5262"
msgstr ""

#. type: Table
#, no-wrap
msgid "5263"
msgstr ""

#. type: Table
#, no-wrap
msgid "5264"
msgstr ""

#. type: Table
#, no-wrap
msgid "5265"
msgstr ""

#. type: Table
#, no-wrap
msgid "5266"
msgstr ""

#. type: Table
#, no-wrap
msgid "5267"
msgstr ""

#. type: Table
#, no-wrap
msgid "5268"
msgstr ""

#. type: Table
#, no-wrap
msgid "5269"
msgstr ""

#. type: Table
#, no-wrap
msgid "5270"
msgstr ""

#. type: Table
#, no-wrap
msgid "5281"
msgstr ""

#. type: Table
#, no-wrap
msgid "5282"
msgstr ""

#. type: Table
#, no-wrap
msgid "5283"
msgstr ""

#. type: Table
#, no-wrap
msgid "5284"
msgstr ""

#. type: Table
#, no-wrap
msgid "5285"
msgstr ""

#. type: Table
#, no-wrap
msgid "5286"
msgstr ""

#. type: Table
#, no-wrap
msgid "5287"
msgstr ""

#. type: Table
#, no-wrap
msgid "5288"
msgstr ""

#. type: Table
#, no-wrap
msgid "5289"
msgstr ""

#. type: Table
#, no-wrap
msgid "5290"
msgstr ""

#. type: Table
#, no-wrap
msgid "5301"
msgstr ""

#. type: Table
#, no-wrap
msgid "5302"
msgstr ""

#. type: Table
#, no-wrap
msgid "5303"
msgstr ""

#. type: Table
#, no-wrap
msgid "5304"
msgstr ""

#. type: Table
#, no-wrap
msgid "5305"
msgstr ""

#. type: Table
#, no-wrap
msgid "5306"
msgstr ""

#. type: Table
#, no-wrap
msgid "5307"
msgstr ""

#. type: Table
#, no-wrap
msgid "5308"
msgstr ""

#. type: Table
#, no-wrap
msgid "5309"
msgstr ""

#. type: Table
#, no-wrap
msgid "5310"
msgstr ""

#. type: Table
#, no-wrap
msgid "5321"
msgstr ""

#. type: Table
#, no-wrap
msgid "5322"
msgstr ""

#. type: Table
#, no-wrap
msgid "5323"
msgstr ""

#. type: Table
#, no-wrap
msgid "5324"
msgstr ""

#. type: Table
#, no-wrap
msgid "5325"
msgstr ""

#. type: Table
#, no-wrap
msgid "5326"
msgstr ""

#. type: Table
#, no-wrap
msgid "5327"
msgstr ""

#. type: Table
#, no-wrap
msgid "5328"
msgstr ""

#. type: Table
#, no-wrap
msgid "5329"
msgstr ""

#. type: Table
#, no-wrap
msgid "5330"
msgstr ""

#. type: Table
#, no-wrap
msgid "5341"
msgstr ""

#. type: Table
#, no-wrap
msgid "5342"
msgstr ""

#. type: Table
#, no-wrap
msgid "5343"
msgstr ""

#. type: Table
#, no-wrap
msgid "5344"
msgstr ""

#. type: Table
#, no-wrap
msgid "5345"
msgstr ""

#. type: Table
#, no-wrap
msgid "5346"
msgstr ""

#. type: Table
#, no-wrap
msgid "5347"
msgstr ""

#. type: Table
#, no-wrap
msgid "5348"
msgstr ""

#. type: Table
#, no-wrap
msgid "5349"
msgstr ""

#. type: Table
#, no-wrap
msgid "5350"
msgstr ""

#. type: Table
#, no-wrap
msgid "5361"
msgstr ""

#. type: Table
#, no-wrap
msgid "5362"
msgstr ""

#. type: Table
#, no-wrap
msgid "5363"
msgstr ""

#. type: Table
#, no-wrap
msgid "5364"
msgstr ""

#. type: Table
#, no-wrap
msgid "5365"
msgstr ""

#. type: Table
#, no-wrap
msgid "5366"
msgstr ""

#. type: Table
#, no-wrap
msgid "5367"
msgstr ""

#. type: Table
#, no-wrap
msgid "5368"
msgstr ""

#. type: Table
#, no-wrap
msgid "5369"
msgstr ""

#. type: Table
#, no-wrap
msgid "5370"
msgstr ""

#. type: Table
#, no-wrap
msgid "5381"
msgstr ""

#. type: Table
#, no-wrap
msgid "5382"
msgstr ""

#. type: Table
#, no-wrap
msgid "5383"
msgstr ""

#. type: Table
#, no-wrap
msgid "5384"
msgstr ""

#. type: Table
#, no-wrap
msgid "5385"
msgstr ""

#. type: Table
#, no-wrap
msgid "5386"
msgstr ""

#. type: Table
#, no-wrap
msgid "5387"
msgstr ""

#. type: Table
#, no-wrap
msgid "5388"
msgstr ""

#. type: Table
#, no-wrap
msgid "5389"
msgstr ""

#. type: Table
#, no-wrap
msgid "5390"
msgstr ""

#. type: Plain text
msgid "selecting a coordinate system is used while cutter compensation is on."
msgstr ""

#. type: Plain text
msgid ""
"See the <<cha:coordinate-system,Coordinate System>> Section for an overview "
"of coordinate systems."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G61 Exact Path Mode"
msgstr ""

#. type: Plain text
msgid "(((G61 G61.1 G64 Path Mode)))"
msgstr ""

#. type: Plain text
msgid ""
"'G61' - Exact path mode, movement exactly as programmed. Moves will slow or "
"stop as needed to reach every programmed point. If two sequential moves are "
"exactly co-linear movement will not stop."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G61.1 Exact Stop Mode"
msgstr ""

#. type: Plain text
msgid ""
"'G61.1' - Exact stop mode, movement will stop at the end of each programmed "
"segment."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G64 Path Blending"
msgstr ""

#. type: Plain text
msgid "(((G64 Path Blending)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G64 <P- <Q->>\n"
msgstr ""

#. type: Plain text
msgid "'P' - motion blending tolerance"
msgstr ""

#. type: Plain text
msgid "'Q' - naive cam tolerance"
msgstr ""

#. type: Plain text
msgid "'G64' - best possible speed."
msgstr ""

#. type: Plain text
msgid "'G64 P- <Q- >' blending with tolerance."
msgstr ""

#. type: Plain text
msgid ""
"'G64' - without P means to keep the best speed possible, no matter how far "
"away from the programmed point you end up."
msgstr ""

#. type: Plain text
msgid ""
"'G64 P- Q-' - is a way to fine tune your system for best compromise between "
"speed and accuracy. The P- tolerance means that the actual path will be no "
"more than P- away from the programmed endpoint. The velocity will be reduced "
"if needed to maintain the path. In addition, when you activate G64 P- Q- it "
"turns on the 'naive cam detector'; when there are a series of linear XYZ "
"feed moves at the same <<sec:set-feed-rate,feed rate>> that are less than Q- "
"away from being collinear, they are collapsed into a single linear move. On "
"G2/G3 moves in the G17 (XY) plane when the maximum deviation of an arc from "
"a straight line is less than the G64 P- tolerance the arc is broken into two "
"lines (from start of arc to midpoint, and from midpoint to end). those lines "
"are then subject to the naive cam algorithm for lines. Thus, line-arc, arc-"
"arc, and arc-line cases as well as line-line benefit from the 'naive cam "
"detector'. This improves contouring performance by simplifying the path. It "
"is OK to program for the mode that is already active. See also the <<sec:"
"trajectory-control,Trajectory Control>> Section for more information on "
"these modes.  If Q is not specified then it will have the same behavior as "
"before and use the value of P-."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G64 P- Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G64 P0.015 (set path following to be within 0.015 of the actual path)\n"
msgstr ""

#. type: Plain text
msgid ""
"It is a good idea to include a path control specification in the preamble of "
"each G code file."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G70 Lathe finishing cycle"
msgstr ""

#. type: Plain text
msgid "(((G70 Lathe finishing cycle)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G70 Q- <X-> <Z-> <D-> <E-> <P->\n"
msgstr ""

#. type: Plain text
msgid "'Q' - The subroutine number."
msgstr ""

#. type: Plain text
msgid "'X' - The starting X position, defaults to the initial position."
msgstr ""

#. type: Plain text
msgid "'Z' - The starting Z position, defaults to the initial position."
msgstr ""

#. type: Plain text
msgid "'D' - The starting distance of the profile, defaults to 0."
msgstr ""

#. type: Plain text
msgid "'E' - The ending distance of the profile, defaults to 0."
msgstr ""

#. type: Plain text
msgid "'P' - The number of passes to use, defaults to 1."
msgstr ""

#. type: Plain text
msgid ""
"The 'G70' cycle is intended to be used after the shape of the profile given "
"in the subroutine with number Q has been cut with G71 or G72."
msgstr ""

#. type: Plain text
msgid "Preliminary motion."
msgstr ""

#. type: Plain text
msgid "If Z or X are used a <<gcode:g0,rapid move>> to that position"
msgstr ""

#. type: Plain text
msgid "is done. This position is also used between each finishing pass."
msgstr ""

#. type: Plain text
msgid "Then a <<gcode:g0,rapid move>> to the start of the profile is executed."
msgstr ""

#. type: Plain text
msgid ""
"The path given in Q- is followed using the <<gcode:g1,G1>> and <<gcode:g2-"
"g3>> commands."
msgstr ""

#. type: Plain text
msgid ""
"If a next pass is required there is another rapid to the intermediate "
"location, before a rapid is done to the start of the profile."
msgstr ""

#. type: Plain text
msgid ""
"After the final pass, the tool is left at the end of the profile including "
"E-."
msgstr ""

#. type: Plain text
msgid ""
"Multiple passes.  The distance between the pass and the final profile is "
"(pass-1)*(D-E)/P+E.  Where pass the pass number and D,E and P are the D/E/P "
"numbers."
msgstr ""

#. type: Plain text
msgid ""
"The distance is computed using the starting position of the cycle, with a "
"positive distance towards this point."
msgstr ""

#. type: Plain text
msgid ""
"Fillet and chamfers in the profile.  It is possible to add fillets or "
"chamfers in the profile, see <<gcode:g71-g72>> for more details."
msgstr ""

#. type: Plain text
msgid "There is no subroutine defined with the number given in Q."
msgstr ""

#. type: Plain text
msgid "The path given in the profile is not monotonic in Z or X."
msgstr ""

#. type: Plain text
msgid "<<gcode:g17-g19.1>> has not been used to select the ZX plane."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G71 G72 Lathe roughing cycle"
msgstr ""

#. type: Plain text
msgid "(((G71 G72 Lathe roughing cycle)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G71   Q- <X-> <Z-> <D-> <I-> <R->\n"
"G71.1 Q- <X-> <Z-> <D-> <I-> <R->\n"
"G71.2 Q- <X-> <Z-> <D-> <I-> <R->\n"
"G72   Q- <X-> <Z-> <D-> <I-> <R->\n"
"G72.1 Q- <X-> <Z-> <D-> <I-> <R->\n"
"G72.2 Q- <X-> <Z-> <D-> <I-> <R->\n"
msgstr ""

#. type: Plain text
msgid "'D' - The remaining distance to the profile, defaults to 0."
msgstr ""

#. type: Plain text
msgid "'I' - The cutting increment, defaults to 1."
msgstr ""

#. type: Plain text
msgid "'R' - The retracting distance, defaults to 0.5."
msgstr ""

#. type: Plain text
msgid ""
"The G71/G72 cycle is intended to rough cut a profile on a lathe. The G71 "
"cycles remove layers of the material while traversing in the Z direction.  "
"The G72 cycles remove material while traversing the X axis, the so called "
"facing cycle. The direction of travel is the same as in the path given in "
"the subroutine. For the G71 cycle the Z coordinate must be monotonically "
"changing, for the G72 this is required for the X axis."
msgstr ""

#. type: Plain text
msgid ""
"The profile is given in a subroutine with number Q-. This subroutine may "
"contain G0, G1, G2 and G3 motion commands. All other commands are ignored, "
"including feed and speed settings. The <<gcode:g0>> commands are interpreted "
"as <<gcode:g1,G1>> commands. Each motion command may also include an "
"optional A- or C- number.  If the number A- is added a fillet with the "
"radius given by A will be inserted at the endpoint of that motion, if this "
"radius is too large the algorithm will fail with a non-monotonic path error. "
"It is also possible to use the C- number, which allows a chamfer to be "
"inserted. This chamfer has the same endpoints as a fillet of the same "
"dimension would have but a straight line is inserted instead of an arc."
msgstr ""

#. type: Plain text
msgid ""
"When in absolute mode the U (for X) and W (for Z) can be used as incremental "
"displacements."
msgstr ""

#. type: Plain text
msgid ""
"The G7x.1 cycles do not cut pockets. The G7x.2 cycles only cut after the "
"first pocket and continue where G7x.1 stopped. It is advisible to leave some "
"additional material to cut before the G7x.2 cycle, so if G7x.1 used a D1.0 "
"the G7x.2 can use D0.5 and 0.5mm will be removed while moving from one "
"pocket to the next."
msgstr ""

#. type: Plain text
msgid "The normal G7x cycles cut the entire profile in one cycle."
msgstr ""

#. type: Plain text
msgid "is done."
msgstr ""

#. type: Plain text
msgid "After the profile has been cut, the tool stops at the end of the"
msgstr ""

#. type: Plain text
msgid "profile, including the distance specified in D."
msgstr ""

#. type: Plain text
msgid ""
"The D number is used to keep a distance from the final profile, to allow "
"material to remain for finishing."
msgstr ""

#. type: Plain text
msgid "<<gcode:g41-g42>> is active."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G73 Drilling Cycle with Chip Breaking"
msgstr ""

#. type: Plain text
msgid "(((G73 Drilling Cycle Chip Break)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G73 X- Y- Z- R- Q- <L-> \n"
msgstr ""

#. type: Plain text
msgid "'R' - retract position along the Z axis."
msgstr ""

#. type: Plain text
msgid "'Q' - delta increment along the Z axis."
msgstr ""

#. type: Plain text
msgid "'L' - repeat"
msgstr ""

#. type: Plain text
msgid ""
"The 'G73' cycle is drilling or milling with chip breaking.  This cycle takes "
"a Q number which represents a 'delta' increment along the Z axis."
msgstr ""

#. type: Plain text
msgid "If the current Z position is below the R position, The Z axis does a"
msgstr ""

#. type: Plain text
msgid "<<gcode:g0,rapid move>> to the R position."
msgstr ""

#. type: Plain text
msgid "Move to the X Y coordinates"
msgstr ""

#. type: Plain text
msgid ""
"Move the Z-axis only at the current <<sec:set-feed-rate,feed rate>> downward "
"by delta or to the Z position, whichever is less deep."
msgstr ""

#. type: Plain text
msgid "Rapid up a bit."
msgstr ""

#. type: Plain text
msgid "Repeat steps 2 and 3 until the Z position is reached at step 2."
msgstr ""

#. type: Plain text
msgid "The Z axis does a rapid move to the R position."
msgstr ""

#. type: Plain text
msgid "the Q number is negative or zero."
msgstr ""

#. type: Plain text
msgid "the R number is not specified"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G74 Left-hand Tapping Cycle, Dwell"
msgstr ""

#. type: Plain text
msgid "(((G74 Left-hand Tapping Cycle Dwell)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G74 (X- Y- Z-) or (U- V- W-) R- L- P- $- F-\n"
msgstr ""

#. type: Plain text
msgid "'R-' - Retract position along the Z axis."
msgstr ""

#. type: Plain text
msgid ""
"'L-' - Used in incremental mode; number of times to repeat the cycle. See "
"<<gcode:g81,G81>> for examples."
msgstr ""

#. type: Plain text
msgid "'P-' - Dwell time (seconds)."
msgstr ""

#. type: Plain text
msgid "'$-' - Selected spindle."
msgstr ""

#. type: Plain text
msgid ""
"'F-' - Feed rate (spindle speed multiplied by distance traveled per "
"revolution (thread pitch))."
msgstr ""

#. type: Plain text
msgid "G74 does not use synchronized motion."
msgstr ""

#. type: Plain text
msgid ""
"The 'G74' cycle is intended for tapping with floating chuck and dwell at the "
"bottom of the hole."
msgstr ""

#. type: Plain text
msgid ""
"Preliminary motion, as described in the <<gcode:preliminary-motion,"
"Preliminary and In-Between Motion>> section."
msgstr ""

#. type: Plain text
msgid "Disable Feed and Speed Overrides."
msgstr ""

#. type: Plain text
msgid "Move the Z-axis at the current feed rate to the Z position."
msgstr ""

#. type: Plain text
msgid "Stop the selected spindle (chosen by the $ parameter)"
msgstr ""

#. type: Plain text
msgid "Start spindle rotation clockwise."
msgstr ""

#. type: Plain text
msgid "Dwell for the P number of seconds."
msgstr ""

#. type: Plain text
msgid "Move the Z-axis at the current feed rate to clear Z"
msgstr ""

#. type: Plain text
msgid "Restore Feed and Speed override enables to previous state"
msgstr ""

#. type: Plain text
msgid ""
"The length of the dwell is specified by a 'P-' word in the G74 block. The "
"feed rate 'F-' is spindle speed multiplied by distance per revolution "
"(thread pitch).  In example S100 with 1.25MM per revolution thread pitch "
"gives a feed of F125."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G76 Threading Cycle"
msgstr ""

#. type: Plain text
msgid "(((G76 Threading Cycle)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G76 P- Z- I- J- R- K- Q- H- E- L- $-\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "G76 Threading"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g76-threads_en.svg"
msgstr ""

#. type: Plain text
msgid "'Drive Line' - A line through the initial X position parallel to the Z."
msgstr ""

#. type: Plain text
msgid "'P-' - The 'thread pitch' in distance per revolution."
msgstr ""

#. type: Plain text
msgid ""
"'Z-' - The final position of threads. At the end of the cycle the tool will "
"be at this Z position."
msgstr ""

#. type: Plain text
msgid ""
"When G7 'Lathe Diameter Mode' is in force the values for 'I', 'J' and 'K' "
"are diameter measurements. When G8 'Lathe Radius Mode' is in force the "
"values for 'I', 'J' and 'K' are radius measurements."
msgstr ""

#. type: Plain text
msgid ""
"'I-' - The 'thread peak' offset from the 'drive line'. Negative 'I' values "
"are external threads, and positive 'I' values are internal threads.  "
"Generally the material has been turned to this size before the 'G76' cycle."
msgstr ""

#. type: Plain text
msgid ""
"'J-' - A positive value specifying the 'initial cut depth'. The first "
"threading cut will be 'J' beyond the 'thread peak' position."
msgstr ""

#. type: Plain text
msgid ""
"'K-' - A positive value specifying the 'full thread depth'. The final "
"threading cut will be 'K' beyond the 'thread peak' position."
msgstr ""

#. type: Plain text
msgid "Optional settings"
msgstr ""

#. type: Plain text
msgid ""
"'$-' - The spindle number to which the motion will be synchronised (default "
"0). For example is $1 is programmed then the motion will begin on the reset "
"od spindle.1.index-enable and proceed in synchrony with the value of "
"spindle.1.revs"
msgstr ""

#. type: Plain text
msgid ""
"'R-' - The 'depth degression'. 'R1.0' selects constant depth on successive "
"threading passes. 'R2.0' selects constant area. Values between 1.0 and 2.0 "
"select decreasing depth but increasing area. Values above 2.0 select "
"decreasing area.  Beware that unnecessarily high degression values will "
"cause a large number of passes to be used. (degression = a descent by stages "
"or steps.)"
msgstr ""

#. type: Plain text
msgid ""
"'Q-' - The 'compound slide angle' is the angle (in degrees) describing to "
"what extent successive passes should be offset along the drive line.  This "
"is used to cause one side of the tool to remove more material than the "
"other. A positive 'Q' value causes the leading edge of the tool to cut more "
"heavily.  Typical values are 29, 29.5 or 30."
msgstr ""

#. type: Plain text
msgid ""
"'H-' - The number of 'spring passes'. Spring passes are additional passes at "
"full thread depth. If no additional passes are desired, program 'H0'."
msgstr ""

#. type: Plain text
msgid ""
"'E-' - Specifies the distance along the drive line used for the taper. The "
"angle of the taper will be so the last pass tapers to the thread crest over "
"the distance specified with E.' E0.2' will give a taper for the first/last "
"0.2 length units along the thread. For a 45 degree taper program E the same "
"as K"
msgstr ""

#. type: Plain text
msgid ""
"'L-' - Specifies which ends of the thread get the taper. Program 'L0' for no "
"taper (the default), 'L1' for entry taper, 'L2' for exit taper, or 'L3' for "
"both entry and exit tapers. Entry tapers will pause at the drive line to "
"synchronize with the index pulse then move at the <<sec:set-feed-rate,feed "
"rate>> in to the beginning of the taper. No entry taper and the tool will "
"rapid to the cut depth then synchronize and begin the cut."
msgstr ""

#. type: Plain text
msgid ""
"The tool is moved to the initial X and Z positions prior to issuing the G76. "
"The X position is the 'drive line' and the Z position is the start of the "
"threads."
msgstr ""

#. type: Plain text
msgid ""
"The tool will pause briefly for synchronization before each threading pass, "
"so a relief groove will be required at the entry unless the beginning of the "
"thread is past the end of the material or an entry taper is used."
msgstr ""

#. type: Plain text
msgid ""
"Unless using an exit taper, the exit move is not synchronized to the spindle "
"speed and will be a <<gcode:g0,rapid move>>. With a slow spindle, the exit "
"move might take only a small fraction of a revolution. If the spindle speed "
"is increased after several passes are complete, subsequent exit moves will "
"require a larger portion of a revolution, resulting in a very heavy cut "
"during the exit move. This can be avoided by providing a relief groove at "
"the exit, or by not changing the spindle speed while threading."
msgstr ""

#. type: Plain text
msgid ""
"The final position of the tool will be at the end of the 'drive line'.  A "
"safe Z move will be needed with an internal thread to remove the tool from "
"the hole."
msgstr ""

#. type: Plain text
msgid "The active plane is not the ZX plane"
msgstr ""

#. type: Plain text
msgid "Other axis words, such as X- or Y-, are specified"
msgstr ""

#. type: Plain text
msgid "The 'R-' degression value is less than 1.0."
msgstr ""

#. type: Plain text
msgid "All the required words are not specified"
msgstr ""

#. type: Plain text
msgid "'P-', 'J-', 'K-' or 'H-' is negative"
msgstr ""

#. type: Plain text
msgid "'E-' is greater than half the drive line length"
msgstr ""

#. type: Plain text
msgid ""
"The pins 'spindle.N.at-speed' and the 'encoder.n.phase-Z' for the spindle "
"must be connected in your HAL file before G76 will work.  See the <<sec:"
"motion-pins, spindle>> pins in the Motion section for more information."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Technical Info"
msgstr ""

#. type: Plain text
msgid ""
"The G76 canned cycle is based on the G33 Spindle Synchronized Motion. For "
"more information see the G33 <<gcode:g33-tech-info,Technical Info>>."
msgstr ""

#. type: Plain text
msgid ""
"The sample program 'g76.ngc' shows the use of the G76 canned cycle, and can "
"be previewed and executed on any machine using the 'sim/lathe.ini' "
"configuration."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "G76 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 Z-0.5 X0.2\n"
"G76 P0.05 Z-1 I-.075 J0.008 K0.045 Q29.5 L2 E0.045\n"
msgstr ""

#. type: Plain text
msgid ""
"In the figure the tool is in the final position after the G76 cycle is "
"completed. You can see the entry path on the right from the Q29.5 and the "
"exit path on the left from the L2 E0.045. The white lines are the cutting "
"moves."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g76-01.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Canned Cycles"
msgstr ""

#. type: Plain text
msgid "(((G80-G89 Canned Cycles)))"
msgstr ""

#. type: Plain text
msgid ""
"The canned cycles 'G81' through 'G89' and the canned cycle stop 'G80' are "
"described in this section."
msgstr ""

#. type: Plain text
msgid ""
"All canned cycles are performed with respect to the currently-selected "
"plane. Any of the nine planes may be selected. Throughout this section, most "
"of the descriptions assume the XY-plane has been selected. The behavior is "
"analogous if another plane is selected, and the correct words must be used. "
"For instance, in the 'G17.1' plane, the action of the canned cycle is along "
"W, and the locations or increments are given with U and V. In this case "
"substitute U,V,W for X,Y,Z in the instructions below."
msgstr ""

#. type: Plain text
msgid ""
"Rotary axis words are not allowed in canned cycles. When the active plane is "
"one of the XYZ family, the UVW axis words are not allowed. Likewise, when "
"the active plane is one of the UVW family, the XYZ axis words are not "
"allowed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Common Words"
msgstr ""

#. type: Plain text
msgid ""
"All canned cycles use X, Y, Z, or U, V, W groups depending on the plane "
"selected and R words. The R (usually meaning retract) position is along the "
"axis perpendicular to the currently selected plane (Z-axis for XY-plane, "
"etc.) Some canned cycles use additional arguments."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Sticky Words"
msgstr ""

#. type: Plain text
msgid ""
"For canned cycles, we will call a number 'sticky' if, when the same cycle is "
"used on several lines of code in a row, the number must be used the first "
"time, but is optional on the rest of the lines. Sticky numbers keep their "
"value on the rest of the lines if they are not explicitly programmed to be "
"different. The R number is always sticky."
msgstr ""

#. type: Plain text
msgid ""
"In incremental distance mode X, Y, and R numbers are treated as increments "
"from the current position and Z as an increment from the Z-axis position "
"before the move involving Z takes place. In absolute distance mode, the X, "
"Y, R, and Z numbers are absolute positions in the current coordinate system."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Repeat Cycle"
msgstr ""

#. type: Plain text
msgid ""
"The L number is optional and represents the number of repeats.  L=0 is not "
"allowed. If the repeat feature is used, it is normally used in incremental "
"distance mode, so that the same sequence of motions is repeated in several "
"equally spaced places along a straight line. When L- is greater than 1 in "
"incremental mode with the XY-plane selected, the X and Y positions are "
"determined by adding the given X and Y numbers either to the current X and Y "
"positions (on the first go-around) or to the X and Y positions at the end of "
"the previous go-around (on the repetitions). Thus, if you program 'L10' , "
"you will get 10 cycles. The first cycle will be distance X,Y from the "
"original location. The R and Z positions do not change during the repeats. "
"The L number is not sticky. In absolute distance mode, L>1 means 'do the "
"same cycle in the same place several times', Omitting the L word is "
"equivalent to specifying L=1."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Retract Mode"
msgstr ""

#. type: Plain text
msgid ""
"The height of the retract move at the end of each repeat (called 'clear Z' "
"in the descriptions below) is determined by the setting of the retract mode, "
"either to the original Z position (if that is above the R position and the "
"retract mode is 'G98', OLD_Z), or otherwise to the R position. See the "
"<<gcode:g98-g99,G98 G99>> Section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Canned Cycle Errors"
msgstr ""

#. type: Plain text
msgid "axis words are all missing during a canned cycle,"
msgstr ""

#. type: Plain text
msgid "axis words from different groups (XYZ) (UVW) are used together,"
msgstr ""

#. type: Plain text
msgid "a P number is required and a negative P number is used,"
msgstr ""

#. type: Plain text
msgid "an L number is used that does not evaluate to a positive integer,"
msgstr ""

#. type: Plain text
msgid "rotary axis motion is used during a canned cycle,"
msgstr ""

#. type: Plain text
msgid "inverse time feed rate is active during a canned cycle,"
msgstr ""

#. type: Plain text
msgid "or cutter compensation is active during a canned cycle."
msgstr ""

#. type: Plain text
msgid ""
"If the XY plane is active, the Z number is sticky, and it is an error if:"
msgstr ""

#. type: Plain text
msgid "the Z number is missing and the same canned cycle was not already"
msgstr ""

#. type: Plain text
msgid "active,"
msgstr ""

#. type: Plain text
msgid "or the R number is less than the Z number."
msgstr ""

#. type: Plain text
msgid ""
"If other planes are active, the error conditions are analogous to the XY "
"conditions above."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preliminary and In-Between Motion"
msgstr ""

#. type: Plain text
msgid ""
"Preliminary motion is a set of motions that is common to all of the milling "
"canned cycles. If the current Z position is below the R position, the Z axis "
"does a <<gcode:g0,rapid move>> to the R position. This happens only once, "
"regardless of the value of L."
msgstr ""

#. type: Plain text
msgid ""
"In addition, at the beginning of the first cycle and each repeat, the "
"following one or two moves are made"
msgstr ""

#. type: Plain text
msgid ""
"A <<gcode:g0,rapid move>> parallel to the XY-plane to the given XY-position,"
msgstr ""

#. type: Plain text
msgid ""
"The Z-axis make a rapid move to the R position, if it is not already at the "
"R position."
msgstr ""

#. type: Plain text
msgid ""
"If another plane is active, the preliminary and in-between motions are "
"analogous."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Why use a canned cycle?"
msgstr ""

#. type: Plain text
msgid ""
"There are at least two reasons for using canned cycles. The first is the "
"economy of code. A single bore would take several lines of code to execute."
msgstr ""

#. type: Plain text
msgid ""
"The G81 <<gcode:g81-example,Example 1>> demonstrates how a canned cycle "
"could be used to produce 8 holes with ten lines of G code within the canned "
"cycle mode.  The program below will produce the same set of 8 holes using "
"five lines for the canned cycle. It does not follow exactly the same path "
"nor does it drill in the same order as the earlier example. But the program "
"writing economy of a good canned cycle should be obvious."
msgstr ""

#. type: Plain text
msgid "Line numbers are not needed but help clarify these examples"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Eight Holes"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"N100 G90 G0 X0 Y0 Z0 (move coordinate home)\n"
"N110 G1 F10 X0 G4 P0.1\n"
"N120 G91 G81 X1 Y0 Z-1 R1 L4(canned drill cycle)\n"
"N130 G90 G0 X0 Y1\n"
"N140 Z0\n"
"N150 G91 G81 X1 Y0 Z-0.5 R1 L4(canned drill cycle)\n"
"N160 G80 (turn off canned cycle)\n"
"N170 M2 (program end)\n"
msgstr ""

#. type: Plain text
msgid ""
"The G98 to the second line above means that the return move will be to the "
"value of Z in the first line since it is higher that the R value specified."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/eight-holes_en.svg"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Twelve Holes in a Square"
msgstr ""

#. type: Plain text
msgid ""
"This example demonstrates the use of the L word to repeat a set of "
"incremental drill cycles for successive blocks of code within the same G81 "
"motion mode. Here we produce 12 holes using five lines of code in the canned "
"motion mode."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"N1000 G90 G0 X0 Y0 Z0 (move coordinate home)\n"
"N1010 G1 F50 X0 G4 P0.1\n"
"N1020 G91 G81 X1 Y0 Z-0.5 R1 L4 (canned drill cycle)\n"
"N1030 X0 Y1 R0 L3 (repeat)\n"
"N1040 X-1 Y0 L3 (repeat)\n"
"N1050 X0 Y-1 L2 (repeat)\n"
"N1060 G80 (turn off canned cycle)\n"
"N1070 G90 G0 X0 (rapid move home)\n"
"N1080 Y0\n"
"N1090 Z0\n"
"N1100 M2 (program end)\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/twelve-holes_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"The second reason to use a canned cycle is that they all produce preliminary "
"moves and returns that you can anticipate and control regardless of the "
"start point of the canned cycle."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G80 Cancel Canned Cycle"
msgstr ""

#. type: Plain text
msgid "(((G80 Cancel Modal Motion)))"
msgstr ""

#. type: Plain text
msgid ""
"'G80' - cancel canned cycle modal motion. 'G80' is part of modal group 1,"
msgstr ""

#. type: Plain text
msgid ""
"so programming any other G code from modal group 1 will also cancel the "
"canned cycle."
msgstr ""

#. type: Plain text
msgid "Axis words are programmed when G80 is active."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G80 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 G81 X1 Y1 Z1.5 R2.8 (absolute distance canned cycle)\n"
"G80 (turn off canned cycle motion)\n"
"G0 X0 Y0 Z0 (rapid move to coordinate home)\n"
msgstr ""

#. type: Plain text
msgid ""
"The following code produces the same final position and machine state as the "
"previous code."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 G81 X1 Y1 Z1.5 R2.8 (absolute distance canned cycle)\n"
"G0 X0 Y0 Z0 (rapid move to coordinate home)\n"
msgstr ""

#. type: Plain text
msgid ""
"The advantage of the first set is that, the G80 line clearly turns off the "
"G81 canned cycle. With the first set of blocks, the programmer must turn "
"motion back on with G0, as is done in the next line, or any other motion "
"mode G word."
msgstr ""

#. type: Plain text
msgid ""
"If a canned cycle is not turned off with G80 or another motion word, the "
"canned cycle will attempt to repeat itself using the next block of code that "
"contains an X, Y, or Z word. The following file drills (G81) a set of eight "
"holes as shown in the following caption."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G80 Example 1"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"N100 G90 G0 X0 Y0 Z0 (coordinate home)\n"
"N110 G1 X0 G4 P0.1\n"
"N120 G81 X1 Y0 Z0 R1 (canned drill cycle)\n"
"N130 X2\n"
"N140 X3\n"
"N150 X4\n"
"N160 Y1 Z0.5\n"
"N170 X3\n"
"N180 X2\n"
"N190 X1\n"
"N200 G80 (turn off canned cycle)\n"
"N210 G0 X0 (rapid move home)\n"
"N220 Y0\n"
"N230 Z0\n"
"N240 M2 (program end)\n"
msgstr ""

#. type: Plain text
msgid ""
"Notice the z position change after the first four holes.  Also, this is one "
"of the few places where line numbers have some value, being able to point a "
"reader to a specific line of code."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "G80 Cycle"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g81mult_en.svg"
msgstr ""

#. type: Plain text
msgid ""
"The use of G80 in line N200 is optional because the G0 on the next line will "
"turn off the G81 cycle. But using the G80 as shown in Example 1, will "
"provide for easier to read canned cycle. Without it, it is not so obvious "
"that all of the blocks between N120 and N200 belong to the canned cycle."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G81 Drilling Cycle"
msgstr ""

#. type: Plain text
msgid "(((G81 Drilling Cycle)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G81 (X- Y- Z-) or (U- V- W-) R- L-\n"
msgstr ""

#. type: Plain text
msgid "The 'G81' cycle is intended for drilling."
msgstr ""

#. type: Plain text
msgid "The cycle functions as follows:"
msgstr ""

#. type: Plain text
msgid ""
"Move the Z-axis at the current <<sec:set-feed-rate,feed rate>> to the Z "
"position."
msgstr ""

#. type: Plain text
msgid "The Z-axis does a <<gcode:g0,rapid move>> to clear Z."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example 1 - Absolute Position G81[[gcode:g81-example]]"
msgstr ""

#. type: Plain text
msgid ""
"Suppose the current position is (X1, Y2, Z3) and the following line of NC "
"code is interpreted."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G90 G98 G81 X4 Y5 Z1.5 R2.8\n"
msgstr ""

#. type: Plain text
msgid ""
"This calls for absolute distance mode (G90) and OLD_Z retract mode (G98) and "
"calls for the G81 drilling cycle to be performed once."
msgstr ""

#. type: Plain text
msgid "The X value and X position are 4."
msgstr ""

#. type: Plain text
msgid "The Y value and Y position are 5."
msgstr ""

#. type: Plain text
msgid "The Z value and Z position are 1.5."
msgstr ""

#. type: Plain text
msgid "The R value and clear Z are 2.8. OLD_Z is 3."
msgstr ""

#. type: Plain text
msgid "The following moves take place:"
msgstr ""

#. type: Plain text
msgid "a <<gcode:g0,rapid move>> parallel to the XY plane to (X4, Y5)"
msgstr ""

#. type: Plain text
msgid "a rapid move move parallel to the Z-axis to (Z2.8)."
msgstr ""

#. type: Plain text
msgid ""
"move parallel to the Z-axis at the <<sec:set-feed-rate,feed rate>> to (Z1.5)"
msgstr ""

#. type: Plain text
msgid "a rapid move parallel to the Z-axis to (Z3)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g81ex1_en.svg"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example 2 - Relative Position G81"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G91 G98 G81 X4 Y5 Z-0.6 R1.8 L3\n"
msgstr ""

#. type: Plain text
msgid ""
"This calls for incremental distance mode (G91) and OLD_Z retract mode (G98). "
"It also calls for the G81 drilling cycle to be repeated three times. The X "
"value is 4, the Y value is 5, the Z value is -0.6 and the R value is 1.8. "
"The initial X position is 5 (=1+4), the initial Y position is 7 (=2+5), the "
"clear Z position is 4.8 (=1.8+3), and the Z position is 4.2 (=4.8-0.6). "
"OLD_Z is 3."
msgstr ""

#. type: Plain text
msgid ""
"The first preliminary move is a maximum rapid move along the Z axis to (X1,"
"Y2,Z4.8), since OLD_Z < clear Z."
msgstr ""

#. type: Plain text
msgid "The first repeat consists of 3 moves."
msgstr ""

#. type: Plain text
msgid "a <<gcode:g0,rapid move>> parallel to the XY-plane to (X5, Y7)"
msgstr ""

#. type: Plain text
msgid ""
"move parallel to the Z-axis at the <<sec:set-feed-rate,feed rate>> to (Z4.2)"
msgstr ""

#. type: Plain text
msgid "a rapid move parallel to the Z-axis to (X5, Y7, Z4.8)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The second repeat consists of 3 moves. The X position is reset to\n"
" 9 (=5+4) and the Y position to 12 (=7+5).\n"
msgstr ""

#. type: Plain text
msgid "a <<gcode:g0,rapid move>> parallel to the XY-plane to (X9, Y12, Z4.8)"
msgstr ""

#. type: Plain text
msgid "move parallel to the Z-axis at the feed rate to (X9, Y12, Z4.2)"
msgstr ""

#. type: Plain text
msgid "a rapid move parallel to the Z-axis to (X9, Y12, Z4.8)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The third repeat consists of 3 moves. The X position is reset to\n"
" 13 (=9+4) and the Y position to 17 (=12+5).\n"
msgstr ""

#. type: Plain text
msgid "a <<gcode:g0,rapid move>> parallel to the XY-plane to (X13, Y17, Z4.8)"
msgstr ""

#. type: Plain text
msgid "move parallel to the Z-axis at the feed rate to (X13, Y17, Z4.2)"
msgstr ""

#. type: Plain text
msgid "a rapid move parallel to the Z-axis to (X13, Y17, Z4.8)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g81ex2_en.svg"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example 3 - Relative Position G81"
msgstr ""

#. type: Plain text
msgid ""
"Now suppose that you execute the first G81 block of code but from (X0, Y0, "
"Z0) rather than from (X1, Y2, Z3)."
msgstr ""

#. type: Plain text
msgid ""
"Since OLD_Z is below the R value, it adds nothing for the motion but since "
"the initial value of Z is less than the value specified in R, there will be "
"an initial Z move during the preliminary moves."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g81_en.svg"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example 4 - Absolute G81 R > Z"
msgstr ""

#. type: Plain text
msgid "This is a plot of the path of motion for the second g81 block of code."
msgstr ""

#. type: Plain text
msgid ""
"Since this plot starts with (X0, Y0, Z0), the interpreter adds the initial "
"Z0 and R1.8 and rapid moves to that location. After that initial Z move, the "
"repeat feature works the same as it did in example 3 with the final Z depth "
"being 0.6 below the R value."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/g81a_en.svg"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example 5 - Relative position R > Z"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G90 G98 G81 X4 Y5 Z-0.6 R1.8\n"
msgstr ""

#. type: Plain text
msgid ""
"Since this plot starts with (X0, Y0, Z0), the interpreter adds the initial "
"Z0 and R1.8 and rapid moves to that location as in 'Example 4'. After that "
"initial Z move, the <<gcode:g0,rapid move>> to X4 Y5 is done. Then the final "
"Z depth being 0.6 below the R value. The repeat function would make the Z "
"move in the same location again."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G82 Drilling Cycle, Dwell"
msgstr ""

#. type: Plain text
msgid "(((G82 Drilling Cycle Dwell)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G82 (X- Y- Z-) or (U- V- W-) R- L- P-\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'G82' cycle is intended for drilling with a dwell at the bottom of the "
"hole."
msgstr ""

#. type: Plain text
msgid ""
"The motion of a G82 canned cycle looks just like G81 with the addition of a "
"dwell at the bottom of the Z move. The length of the dwell is specified by a "
"'P-' word in the G82 block."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G83 Peck Drilling Cycle"
msgstr ""

#. type: Plain text
msgid "(((G83 Peck Drilling)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G83 (X- Y- Z-) or (U- V- W-) R- L- Q-\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'G83' cycle (often called peck drilling) is intended for deep drilling "
"or milling with chip breaking. The retracts in this cycle clear the hole of "
"chips and cut off any long stringers (which are common when drilling in "
"aluminum). This cycle takes a Q number which represents a 'delta' increment "
"along the Z-axis. The retract before final depth will always be to the "
"'retract' plane even if G98 is in effect. The final retract will honor the "
"G98/99 in effect. G83 functions the same as G81 with the addition of "
"retracts during the drilling operation."
msgstr ""

#. type: Plain text
msgid ""
"Move the Z-axis at the current <<sec:set-feed-rate,feed rate>> downward by "
"delta or to the Z position, whichever is less deep."
msgstr ""

#. type: Plain text
msgid "Rapid move back out to the retract plane specified by the R word."
msgstr ""

#. type: Plain text
msgid "Rapid move back down to the current hole bottom, backed off a bit."
msgstr ""

#. type: Plain text
msgid "Repeat steps 2, 3, and 4 until the Z position is reached at step 2."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G84 Right-hand Tapping Cycle, Dwell"
msgstr ""

#. type: Plain text
msgid "(((G84 Right-hand Tapping Cycle Dwell)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G84 (X- Y- Z-) or (U- V- W-) R- L- P- $- F-\n"
msgstr ""

#. type: Plain text
msgid "G84 does not use synchronized motion."
msgstr ""

#. type: Plain text
msgid ""
"The 'G84' cycle is intended for tapping with floating chuck and dwell at the "
"bottom of the hole."
msgstr ""

#. type: Plain text
msgid "Start spindle rotation counterclockwise."
msgstr ""

#. type: Plain text
msgid ""
"The length of the dwell is specified by a 'P-' word in the G84 block. The "
"feed rate 'F-' is spindle speed multiplied by distance per revolution "
"(thread pitch).  In example S100 with 1.25MM per revolution thread pitch "
"gives a feed of F125."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G85 Boring Cycle, Feed Out"
msgstr ""

#. type: Plain text
msgid "(((G85 Boring, Feed Out)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G85 (X- Y- Z-) or (U- V- W-) R- L-\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'G85' cycle is intended for boring or reaming, but could be used for "
"drilling or milling."
msgstr ""

#. type: Plain text
msgid ""
"Move the Z-axis only at the current <<sec:set-feed-rate,feed rate>> to the Z "
"position."
msgstr ""

#. type: Plain text
msgid ""
"Retract the Z-axis at the current feed rate to the R plane if it is lower"
msgstr ""

#. type: Plain text
msgid "than the initial Z."
msgstr ""

#. type: Plain text
msgid "Retract at the traverse rate to clear Z."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G86 Boring Cycle, Spindle Stop, Rapid Move Out"
msgstr ""

#. type: Plain text
msgid "(((G86 Boring, Spindle Stop, Rapid Move Out)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G86 (X- Y- Z-) or (U- V- W-) R- L- P- $-\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'G86' cycle is intended for boring. This cycle uses a P number for the "
"number of seconds to dwell."
msgstr ""

#. type: Plain text
msgid "Stop the selected spindle turning. (Chosen by the $ parameter)"
msgstr ""

#. type: Plain text
msgid "Restart the spindle in the direction it was going."
msgstr ""

#. type: Plain text
msgid "the spindle is not turning before this cycle is executed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G87 Back Boring Cycle"
msgstr ""

#. type: Plain text
msgid ""
"This code is currently unimplemented in LinuxCNC. It is accepted, but the "
"behavior is undefined."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G88 Boring Cycle, Spindle Stop, Manual Out"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G89 Boring Cycle, Dwell, Feed Out"
msgstr ""

#. type: Plain text
msgid "(((G89 Boring, Dwell, Feed Out)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G89 (X- Y- Z-) or (U- V- W-) R- L- P-\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'G89' cycle is intended for boring. This cycle uses a P number, where P "
"specifies the number of seconds to dwell."
msgstr ""

#. type: Plain text
msgid "Retract the Z-axis at the current feed rate to clear Z."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G90, G91 Distance Mode"
msgstr ""

#. type: Plain text
msgid "(((G90, G91 Distance Mode)))"
msgstr ""

#. type: Plain text
msgid ""
"'G90' - absolute distance mode In absolute distance mode, axis numbers (X, "
"Y, Z, A, B, C, U, V, W)  usually represent positions in terms of the "
"currently active coordinate system. Any exceptions to that rule are "
"described explicitly in the <<gcode:g80-g89,G80 G89>> Section."
msgstr ""

#. type: Plain text
msgid ""
"'G91' - incremental distance mode In incremental distance mode, axis numbers "
"usually represent increments from the current coordinate."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G90 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G90 (set absolute distance mode)\n"
"G0 X2.5 (rapid move to coordinate X2.5 including any offsets in effect)\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "G91 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G91 (set incremental distance mode)\n"
"G0 X2.5 (rapid move 2.5 from current position along the X axis)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G90.1, G91.1 Arc Distance Mode"
msgstr ""

#. type: Plain text
msgid "(((Arc Distance Mode)))"
msgstr ""

#. type: Plain text
msgid ""
"'G90.1' - absolute distance mode for I, J & K offsets.  When G90.1 is in "
"effect I and J both must be specified with G2/3 for the XY plane or J and K "
"for the XZ plane or it is an error."
msgstr ""

#. type: Plain text
msgid ""
"'G91.1' - incremental distance mode for I, J & K offsets. G91.1 Returns I, J "
"& K to their default behavior."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G92 Coordinate System Offset"
msgstr ""

#. type: Plain text
msgid "(((G92 Coordinate System Offset)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G92 axes\n"
msgstr ""

#. type: Plain text
msgid ""
"Only use 'G92' after your machine has been positioned to the desired point."
msgstr ""

#. type: Plain text
msgid ""
"'G92' makes the current point have the coordinates you want (without "
"motion), where the axis words contain the axis numbers you want.  All axis "
"words are optional, except that at least one must be used.  If an axis word "
"is not used for a given axis, the offset for that axis will be zero."
msgstr ""

#. type: Plain text
msgid ""
"When 'G92' is executed, the <<sec.machine-coordinate-system,origins>> of all "
"coordinate systems move. They move such that the value of the current "
"controlled point, in the currently active coordinate system, becomes the "
"specified value. All of the coordinate system's origins (G53-G59.3) are "
"offset this same distance."
msgstr ""

#. type: Plain text
msgid ""
"'G92' uses the values stored in <<sub:numbered-parameters,parameters>> "
"5211-5219 as the X Y Z A B C U V W offset values for each axis.  The "
"parameter values are 'absolute' machine coordinates in the native machine "
"'units' as specified in the ini file.  All axes defined in the ini file will "
"be offset when G92 is active.  If an axis was not entered following the G92, "
"that axis' offset will be zero."
msgstr ""

#. type: Plain text
msgid ""
"For example, suppose the current point is at X=4 and there is currently no "
"'G92' offset active. Then 'G92 X7' is programmed. This moves all origins -3 "
"in X, which causes the current point to become X=7. This -3 is saved in "
"parameter 5211."
msgstr ""

#. type: Plain text
msgid ""
"Being in incremental distance mode (G91 instead of G90) has no effect on the "
"action of 'G92'."
msgstr ""

#. type: Plain text
msgid ""
"'G92' offsets may be already be in effect when the 'G92' is called.  If this "
"is the case, the offset is replaced with a new offset that makes the current "
"point become the specified value."
msgstr ""

#. type: Plain text
msgid "all axis words are omitted."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC stores the G92 offsets and reuses them on the next run of a "
"program. To prevent this, one can program a G92.1 (to erase them), or "
"program a G92.2 (to remove them - they are still stored)."
msgstr ""

#. type: Plain text
msgid ""
"The 'G52' command can also be used to change this offset; see the <<sec:g52-"
"and-g92-offsets,Offsets>> Section for more details about 'G92' and 'G52' and "
"how they interact."
msgstr ""

#. type: Plain text
msgid "See the <<gcode:parameters,Parameters>> Section for more information."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G92.1, G92.2 Reset G92 Offsets"
msgstr ""

#. type: Plain text
msgid ""
"'G92.1' - turn off G92 offsets and reset <<sub:numbered-parameters,"
"parameters>> 5211 - 5219 to zero."
msgstr ""

#. type: Plain text
msgid ""
"'G92.2' - turn off G92 offsets but keep <<sub:numbered-parameters,"
"parameters>> 5211 - 5219 available."
msgstr ""

#. type: Plain text
msgid ""
"G92.1 only clears G92 offsets, to change G53-G59.3 coordinate system offsets "
"in G code use either <<gcode:g10-l2,G10 L2>> or <<gcode:g10-l20,G10 L20>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G92.3 Restore G92 Offsets"
msgstr ""

#. type: Plain text
msgid "(((G92.3 Restore G92 Offsets)))"
msgstr ""

#. type: Plain text
msgid ""
"'G92.3' - set the G92 offset to the values saved in parameters 5211 to 5219"
msgstr ""

#. type: Plain text
msgid ""
"You can set axis offsets in one program and use the same offsets in another "
"program. Program 'G92' in the first program. This will set parameters 5211 "
"to 5219. Do not use 'G92.1' in the remainder of the first program. The "
"parameter values will be saved when the first program exits and restored "
"when the second one starts up.  Use 'G92.3' near the beginning of the second "
"program. That will restore the offsets saved in the first program."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G93, G94, G95 Feed Rate Mode"
msgstr ""

#. type: Plain text
msgid "(((G93, G94, G95 Feed Rate Mode)))"
msgstr ""

#. type: Plain text
msgid ""
"'G93' - is Inverse Time Mode. In inverse time feed rate mode, an F word "
"means the move should be completed in [one divided by the F number] minutes. "
"For example, if the F number is 2.0, the move should be completed in half a "
"minute."
msgstr ""

#. type: Plain text
msgid ""
"When the inverse time feed rate mode is active, an F word must appear on "
"every line which has a G1, G2, or G3 motion, and an F word on a line that "
"does not have G1, G2, or G3 is ignored. Being in inverse time feed rate mode "
"does not affect G0 (<<gcode:g0,rapid move>>) motions."
msgstr ""

#. type: Plain text
msgid ""
"'G94' - is Units per Minute Mode.  In units per minute feed mode, an F word "
"is interpreted to mean the controlled point should move at a certain number "
"of inches per minute, millimeters per minute, or degrees per minute, "
"depending upon what length units are being used and which axis or axes are "
"moving."
msgstr ""

#. type: Plain text
msgid ""
"'G95' - is Units per Revolution Mode In units per revolution mode, an F word "
"is interpreted to mean the controlled point should move a certain number of "
"inches per revolution of the spindle, depending on what length units are "
"being used and which axis or axes are moving. G95 is not suitable for "
"threading, for threading use G33 or G76.  G95 requires that spindle.N.speed-"
"in to be connected. The actual spindle to which the feed is synchronised is "
"chosen by the $ parameter"
msgstr ""

#. type: Plain text
msgid "Inverse time feed mode is active and a line with G1, G2, or G3"
msgstr ""

#. type: Plain text
msgid "(explicitly or implicitly) does not have an F word."
msgstr ""

#. type: Plain text
msgid "A new feed rate is not specified after switching to G94 or G95"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G96, G97 Spindle Control Mode"
msgstr ""

#. type: Plain text
msgid "(((G96, G97 Spindle Control Mode)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G96 <D-> S- <$-> (Constant Surface Speed Mode)\n"
"G97 S- <$-> (RPM Mode)\n"
msgstr ""

#. type: Plain text
msgid "'D' - maximum spindle RPM"
msgstr ""

#. type: Plain text
msgid "'S' - surface speed"
msgstr ""

#. type: Plain text
msgid "'$\" - the spindle of which the speed will be varied."
msgstr ""

#. type: Plain text
msgid "'G96 D- S-' - selects constant surface speed of 'S' feet per minute"
msgstr ""

#. type: Plain text
msgid ""
"(if G20 is in effect) or meters per minute (if G21 is in effect). D- is "
"optional."
msgstr ""

#. type: Plain text
msgid ""
"  When using G96, ensure that X0 in the current coordinate system (including "
"offsets and tool lengths) is the center of rotation or LinuxCNC will not "
"give the desired ssurface speed.  G96 is not affected by radius or diameter "
"mode."
msgstr ""

#. type: Plain text
msgid ""
"To achieve CSS mode on selected spindles programme successive G96 commands "
"for each spindle prior to issuing M3."
msgstr ""

#. type: Plain text
msgid "'G97' selects RPM mode."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G96 Example Line"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "G96 D2500 S250 (set CSS with a max rpm of 2500 and a surface speed of 250)\n"
msgstr ""

#. type: Plain text
msgid "S is not specified with G96"
msgstr ""

#. type: Plain text
msgid "A feed move is specified in G96 mode while the spindle is not turning"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "G98, G99 Canned Cycle Return Level"
msgstr ""

#. type: Plain text
msgid "(((G98, G99 Canned Cycle Return)))"
msgstr ""

#. type: Plain text
msgid ""
"'G98' - retract to the position that axis was in just before this series of "
"one or more contiguous canned cycles was started."
msgstr ""

#. type: Plain text
msgid ""
"'G99' - retract to the position specified by the R word of the canned cycle."
msgstr ""

#. type: Plain text
msgid ""
"Program a 'G98' and the canned cycle will use the Z position prior to the "
"canned cycle as the Z return position if it is higher than the R value "
"specified in the cycle. If it is lower, the R value will be used. The R word "
"has different meanings in absolute distance mode and incremental distance "
"mode."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G98 Retract to Origin"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G0 X1 Y2 Z3\n"
"G90 G98 G81 X4 Y5 Z-0.6 R1.8 F10\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'initial' (G98) plane is reset any time cycle motion mode is abandoned, "
"whether explicitly (G80) or implicitly (any motion code that is not a "
"cycle). Switching among cycle modes (say G81 to G83) does NOT reset the "
"'initial' plane. It is possible to switch between G98 and G99 during a "
"series of cycles."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "M Codes"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M Code Quick Reference Table"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m0-m1,M0 M1>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Program Pause"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m2-m30,M2 M30>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Program End"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m60, M60>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pallet Change Pause"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m3-m4-m5,M3 M4 M5>>"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Spindle Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m6,M6>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m7-m8-m9,M7 M8 M9>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Coolant Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m19,M19>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Orient Spindle"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m48-m49,M48 M49>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed & Spindle Overrides Enable/Disable"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m50,M50>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed Override Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m51,M51>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle Override Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m52,M52>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Adaptive Feed Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m53,M53>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed Stop Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m61,M61>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Set Current Tool Number"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m62-m65,m62-m65>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Output Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m66,M66>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Input Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m67,M67>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog Output Control"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m68,M68>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m70,M70>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Save Modal State"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m71,M71>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Invalidate Stored Modal State"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m72,M72>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Restore Modal State"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m73,M73>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Save Autorestore Modal State"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m98-m99,M98 M99>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Call and Return From Subprogram"
msgstr ""

#. type: Table
#, no-wrap
msgid "<<mcode:m100-m199,M100-M199>>"
msgstr ""

#. type: Table
#, no-wrap
msgid "User Defined M-Codes"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M0, M1 Program Pause"
msgstr ""

#. type: Plain text
msgid "(((M0, M1 Program Pause)))"
msgstr ""

#. type: Plain text
msgid ""
"'M0' - pause a running program temporarily. LinuxCNC remains in the Auto Mode"
msgstr ""

#. type: Plain text
msgid ""
"so MDI and other manual actions are not enabled. Pressing the resume button "
"will restart the program at the following line."
msgstr ""

#. type: Plain text
msgid ""
"'M1' - pause a running program temporarily if the optional stop switch is on."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC remains in the Auto Mode so MDI and other manual actions are not "
"enabled. Pressing the resume button will restart the program at the "
"following line."
msgstr ""

#. type: Plain text
msgid ""
"It is OK to program 'M0' and 'M1' in MDI mode, but the effect will probably "
"not be noticeable, because normal behavior in MDI mode is to stop after each "
"line of input anyway."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M2, M30 Program End"
msgstr ""

#. type: Plain text
msgid "(((M2, M30 Program End)))"
msgstr ""

#. type: Plain text
msgid "'M2' - end the program. Pressing `Cycle Start` (\"R\" in the Axis GUI)"
msgstr ""

#. type: Plain text
msgid "will restart the program at the beginning of the file."
msgstr ""

#. type: Plain text
msgid "'M30' - exchange pallet shuttles and end the program."
msgstr ""

#. type: Plain text
msgid ""
"Pressing `Cycle Start` will start the program at the beginning of the file."
msgstr ""

#. type: Plain text
msgid "Both of these commands have the following effects:"
msgstr ""

#. type: Plain text
msgid "Change from Auto mode to MDI mode."
msgstr ""

#. type: Plain text
msgid "Origin offsets are set to the default (like 'G54')."
msgstr ""

#. type: Plain text
msgid "Selected plane is set to XY plane (like 'G17')."
msgstr ""

#. type: Plain text
msgid "Distance mode is set to absolute mode (like 'G90')."
msgstr ""

#. type: Plain text
msgid "Feed rate mode is set to units per minute (like 'G94')."
msgstr ""

#. type: Plain text
msgid "Feed and speed overrides are set to ON (like 'M48')."
msgstr ""

#. type: Plain text
msgid "Cutter compensation is turned off (like 'G40')."
msgstr ""

#. type: Plain text
msgid "The spindle is stopped (like 'M5')."
msgstr ""

#. type: Plain text
msgid "The current motion mode is set to feed (like 'G1')."
msgstr ""

#. type: Plain text
msgid "Coolant is turned off (like 'M9')."
msgstr ""

#. type: Plain text
msgid ""
"Lines of code after M2/M30 will not be executed. Pressing `Cycle Start` will "
"start the program at the beginning of the file."
msgstr ""

#. type: Plain text
msgid ""
"Using % to wrap the G code does not do the same thing as a 'Program End'. "
"See <<gcode:file-requirements,File Requirements>> for more information on "
"what using % does not do."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M60 Pallet Change Pause"
msgstr ""

#. type: Plain text
msgid "(((M60 Pallet Change Pause)))"
msgstr ""

#. type: Plain text
msgid "'M60' - exchange pallet shuttles and then pause a running program"
msgstr ""

#. type: Plain text
msgid ""
"temporarily (regardless of the setting of the optional stop switch). "
"Pressing the cycle start button will restart the program at the following "
"line."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M3, M4, M5 Spindle Control"
msgstr ""

#. type: Plain text
msgid "(((M3, M4, M5 Spindle Control)))"
msgstr ""

#. type: Plain text
msgid "'M3 [$n]' - start the selected spindle clockwise at the 'S' speed."
msgstr ""

#. type: Plain text
msgid ""
"'M4 [$n]' - start the selected spindle counterclockwise at the 'S' speed."
msgstr ""

#. type: Plain text
msgid "'M5 [$n]' - stop the selected spindle."
msgstr ""

#. type: Plain text
msgid ""
"Use $ to operate on specific spindles. If $ is omitted then the commands "
"default to operating on spindle.0 Use $-1 to operate on all active spindles."
msgstr ""

#. type: Plain text
msgid ""
"This example will start spindles 0, 1, and 2 simultaneously at different "
"speeds:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"S100 $0\n"
"S200 $1\n"
"S300 $2 \n"
"M3 $-1\n"
msgstr ""

#. type: Plain text
msgid ""
"This example will then reverse spindle 1 but leave the other spindles "
"rotating forwards:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M4 $1\n"
msgstr ""

#. type: Plain text
msgid "And this will stop spindle 2 and leave the other spindles rotating:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M5 $2\n"
msgstr ""

#. type: Plain text
msgid ""
"If the $ is omitted then behaviour is exactly as normal for a single spindle "
"machine"
msgstr ""

#. type: Plain text
msgid ""
"It is OK to use 'M3' or 'M4' if the <<sec:set-spindle-speed,S>> spindle "
"speed is set to zero. If this is done (or if the speed override switch is "
"enabled and set to zero), the spindle will not start turning.  If, later, "
"the spindle speed is set above zero (or the override switch is turned up), "
"the spindle will start turning.  It is OK to use 'M3' or 'M4' when the "
"spindle is already turning or to use 'M5' when the spindle is already "
"stopped."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M6 Tool Change"
msgstr ""

#. type: Plain text
msgid "(((M6-Tool-Change)))"
msgstr ""

#. type: Plain text
msgid ""
"If the HAL component hal_manualtoolchange is loaded, M6 will stop the "
"spindle and prompt the user to change the tool based on the last 'T-' number "
"programmed.  For more information on hal_manualtoolchange see the <<sec:"
"manual-tool-change,Manual Tool Change>> section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Changer"
msgstr ""

#. type: Plain text
msgid ""
"To change a tool in the spindle from the tool currently in the spindle to "
"the tool most recently selected (using a T word - see Section <<sec:select-"
"tool,Select Tool>>), program 'M6'.  When the tool change is complete:"
msgstr ""

#. type: Plain text
msgid "The spindle will be stopped."
msgstr ""

#. type: Plain text
msgid "The tool that was selected (by a T word on the same line or on any"
msgstr ""

#. type: Plain text
msgid "line after the previous tool change) will be in the spindle."
msgstr ""

#. type: Plain text
msgid "If the selected tool was not in the spindle before the tool change,"
msgstr ""

#. type: Plain text
msgid ""
"the tool that was in the spindle (if there was one) will be placed back into "
"the tool changer magazine."
msgstr ""

#. type: Plain text
msgid "If configured in the .ini file some axis positions may move when a M6"
msgstr ""

#. type: Plain text
msgid ""
"is issued. See the <<sec:emcio-section,EMCIO section>> for more information "
"on tool change options."
msgstr ""

#. type: Plain text
msgid "No other changes will be made. For example, coolant will continue to"
msgstr ""

#. type: Plain text
msgid "flow during the tool change unless it has been turned off by an 'M9'."
msgstr ""

#. type: Plain text
msgid ""
"The tool length offset is not changed by 'M6', use '<<gcode:g43,G43>>' after "
"the 'M6' to change the tool length offset."
msgstr ""

#. type: Plain text
msgid ""
"The tool change may include axis motion.  It is OK (but not useful) to "
"program a change to the tool already in the spindle.  It is OK if there is "
"no tool in the selected slot; in that case, the spindle will be empty after "
"the tool change.  If slot zero was last selected, there will definitely be "
"no tool in the spindle after a tool change. The tool changer will have to be "
"setup to perform the tool change in hal and possibly classicladder."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M7, M8, M9 Coolant Control"
msgstr ""

#. type: Plain text
msgid "(((M7, M8, M9 Coolant Control)))"
msgstr ""

#. type: Plain text
msgid "'M7' - turn mist coolant on. M7 controls iocontrol.0.coolant-mist pin."
msgstr ""

#. type: Plain text
msgid ""
"'M8' - turn flood coolant on. M8 controls iocontrol.0.coolant-flood pin."
msgstr ""

#. type: Plain text
msgid "'M9' - turn both M7 and M8 off."
msgstr ""

#. type: Plain text
msgid ""
"Connect one or both of the coolant control pins in HAL before M7 or M8 will "
"control an output. M7 and M8 can be used to turn on any output via G code."
msgstr ""

#. type: Plain text
msgid ""
"It is OK to use any of these commands, regardless of the current coolant "
"state."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M19 Orient Spindle"
msgstr ""

#. type: Plain text
msgid "(((M19 Orient Spindle)))"
msgstr ""

#. type: Plain text
msgid "'M19 R- Q- [P-] [$-]'"
msgstr ""

#. type: Plain text
msgid "'R' Position to rotate to from 0, valid range is 0-360 degrees"
msgstr ""

#. type: Plain text
msgid "'Q' Number of seconds to wait until orient completes. If"
msgstr ""

#. type: Plain text
msgid ""
"spindle.N.is-oriented does not become true within Q timeout an error occurs."
msgstr ""

#. type: Plain text
msgid "'P' Direction to rotate to position."
msgstr ""

#. type: Plain text
msgid "'0' rotate for smallest angular movement (default)"
msgstr ""

#. type: Plain text
msgid "'1' always rotate clockwise (same as M3 direction)"
msgstr ""

#. type: Plain text
msgid "'2' always rotate counterclockwise (same as M4 direction)"
msgstr ""

#. type: Plain text
msgid ""
"'$' The spindle to orient (actually only determines which HAL pins carry the "
"spindle position commands)"
msgstr ""

#. type: Plain text
msgid "M19 is cleared by any of M3,M4,M5."
msgstr ""

#. type: Plain text
msgid ""
"Spindle orientation requires a quadrature encoder with an index to sense the "
"spindle shaft position and direction of rotation."
msgstr ""

#. type: Plain text
msgid "INI Settings in the [RS274NGC] section."
msgstr ""

#. type: Plain text
msgid "ORIENT_OFFSET = 0-360 (fixed offset in degrees added to M19 R word)"
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.orient-angle' (out float)  Desired spindle orientation for M19. "
"Value of the M19 R word parameter plus the value of the "
"[RS274NGC]ORIENT_OFFSET ini parameter."
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.orient-mode' (out s32)  Desired spindle rotation mode. Reflects "
"M19 P parameter word, Default = 0"
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.orient' (out bit)  Indicates start of spindle orient cycle. Set "
"by M19. Cleared by any of M3,M4,M5.  If spindle-orient-fault is not zero "
"during spindle-orient true, the M19 command fails with an error message."
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.is-oriented' (in bit)  Acknowledge pin for spindle-orient. "
"Completes orient cycle. If spindle-orient was true when spindle-is-oriented "
"was asserted, the spindle-orient pin is cleared and the spindle-locked pin "
"is asserted. Also, the spindle-brake pin is asserted."
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.orient-fault' (in s32)  Fault code input for orient cycle. Any "
"value other than zero will cause the orient cycle to abort."
msgstr ""

#. type: Plain text
msgid ""
"'spindle.N.locked' (out bit)  Spindle orient complete pin. Cleared by any of "
"M3,M4,M5."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M48, M49 Speed and Feed Override Control"
msgstr ""

#. type: Plain text
msgid "(((M48, M49 Speed and Feed Override Control)))"
msgstr ""

#. type: Plain text
msgid "'M48' - enable the spindle speed and feed rate override controls."
msgstr ""

#. type: Plain text
msgid "'M49' - disable both controls."
msgstr ""

#. type: Plain text
msgid ""
"These commands also take an optional $ parameter to determine which spindle "
"they operate on."
msgstr ""

#. type: Plain text
msgid ""
"It is OK to enable or disable the controls when they are already enabled or "
"disabled.  See the <<sub:feed-rate,Feed Rate>> Section for more details."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M50 Feed Override Control"
msgstr ""

#. type: Plain text
msgid "(((M50 Feed Override Control)))"
msgstr ""

#. type: Plain text
msgid "'M50 <P1>' - enable the feed rate override control. The P1"
msgstr ""

#. type: Plain text
msgid "is optional."
msgstr ""

#. type: Plain text
msgid "'M50 P0' - disable the feed rate control."
msgstr ""

#. type: Plain text
msgid ""
"While disabled the feed override will have no influence, and the motion will "
"be executed at programmed feed rate.  (unless there is an adaptive feed rate "
"override active)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M51 Spindle Speed Override Control"
msgstr ""

#. type: Plain text
msgid "(((M51 Spindle Speed Override)))"
msgstr ""

#. type: Plain text
msgid "'M51 <P1> <$->'- enable the spindle speed override control for the"
msgstr ""

#. type: Plain text
msgid "selected spindle. The P1 is optional."
msgstr ""

#. type: Plain text
msgid "'M51 P0 <$->' - disable the spindle speed override control program."
msgstr ""

#. type: Plain text
msgid ""
"While disabled the spindle speed override will have no influence, and the "
"spindle speed will have the exact program specified value of the S-word "
"(described in <<sec:set-spindle-speed,Spindle Speed>> Section)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M52 Adaptive Feed Control"
msgstr ""

#. type: Plain text
msgid "(((M52 Adaptive Feed Control)))"
msgstr ""

#. type: Plain text
msgid "'M52 <P1>' - use an adaptive feed. The P1 is optional."
msgstr ""

#. type: Plain text
msgid "'M52 P0' - stop using adaptive feed."
msgstr ""

#. type: Plain text
msgid ""
"When adaptive feed is enabled, some external input value is used together "
"with the user interface feed override value and the commanded feed rate to "
"set the actual feed rate. In LinuxCNC, the HAL pin 'motion.adaptive-feed' is "
"used for this purpose. Values on 'motion.adaptive-feed' should range from -1 "
"(programmed speed in reverse) to 1 (full speed). 0 is equivalent to feed-"
"hold."
msgstr ""

#. type: Plain text
msgid ""
"The use of negative adaptive-feed for reverse run is a new feature and is "
"not very well tested as yet. The intended use is for plasma cutters and wire "
"spark eroders but it is not limited to such applications."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M53 Feed Stop Control"
msgstr ""

#. type: Plain text
msgid "(((M53 Feed Stop Control)))"
msgstr ""

#. type: Plain text
msgid "'M53 <P1>' - enable the feed stop switch. The P1 is optional."
msgstr ""

#. type: Plain text
msgid ""
"Enabling the feed stop switch will allow motion to be interrupted by means "
"of the feed stop control. In LinuxCNC, the HAL pin 'motion.feed-hold' is "
"used for this purpose. A 'true' value will cause the motion to stop when "
"'M53' is active."
msgstr ""

#. type: Plain text
msgid ""
"'M53 P0' - disable the feed stop switch. The state of 'motion.feed-hold'"
msgstr ""

#. type: Plain text
msgid "will have no effect on feed when M53 is not active."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M61 Set Current Tool"
msgstr ""

#. type: Plain text
msgid "(((M61 Set Current Tool)))"
msgstr ""

#. type: Plain text
msgid ""
"'M61 Q-' - change the current tool number while in MDI or Manual mode without"
msgstr ""

#. type: Plain text
msgid ""
"a tool change. One use is when you power up LinuxCNC with a tool currently "
"in the spindle you can set that tool number without doing a tool change."
msgstr ""

#. type: Plain text
msgid ""
"The tool length offset is not changed by 'M61', use '<<gcode:g43,G43>>' "
"after the 'M61' to change the tool length offset."
msgstr ""

#. type: Plain text
msgid "Q- is not 0 or greater"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M62 - M65 Digital Output Control"
msgstr ""

#. type: Plain text
msgid "(((M62 - M65 Digital Output Control)))"
msgstr ""

#. type: Plain text
msgid "'M62 P-' - turn on digital output synchronized with motion."
msgstr ""

#. type: Plain text
msgid "The P- word specifies the digital output number."
msgstr ""

#. type: Plain text
msgid "'M63 P-' - turn off digital output synchronized with motion."
msgstr ""

#. type: Plain text
msgid "'M64 P-' - turn on digital output immediately."
msgstr ""

#. type: Plain text
msgid "'M65 P-' - turn off digital output immediately."
msgstr ""

#. type: Plain text
msgid ""
"The P-word ranges from 0 to a default value of 3. If needed the the number "
"of I/O can be increased by using the num_dio parameter when loading the "
"motion controller. See the <<sec:motion,Motion Section>> for more "
"information."
msgstr ""

#. type: Plain text
msgid ""
"The M62 & M63 commands will be queued. Subsequent commands referring to the "
"same output number will overwrite the older settings. More than one output "
"change can be specified by issuing more than one M62/M63 command."
msgstr ""

#. type: Plain text
msgid ""
"The actual change of the specified outputs will happen at the beginning of "
"the next motion command. If there is no subsequent motion command, the "
"queued output changes won't happen. It's best to always program a motion G "
"code (G0, G1, etc) right after the M62/63."
msgstr ""

#. type: Plain text
msgid ""
"M64 & M65 happen immediately as they are received by the motion controller. "
"They are not synchronized with movement, and they will break blending."
msgstr ""

#. type: Plain text
msgid ""
"M62-65 will not function unless the appropriate motion.digital-out-nn pins "
"are connected in your hal file to outputs."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M66 Wait on Input"
msgstr ""

#. type: Plain text
msgid "(((M66 Wait on Input)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M66 P- | E- <L->\n"
msgstr ""

#. type: Plain text
msgid "'P-' - specifies the digital input number from 0 to 3."
msgstr ""

#. type: Plain text
msgid "'E-' - specifies the analog input number from 0 to 3."
msgstr ""

#. type: Plain text
msgid "'L-' - specifies the wait mode type."
msgstr ""

#. type: Plain text
msgid "'Mode 0: IMMEDIATE' - no waiting, returns immediately."
msgstr ""

#. type: Plain text
msgid "The current value of the input is stored in parameter #5399"
msgstr ""

#. type: Plain text
msgid "'Mode 1: RISE' - waits for the selected input to perform a rise event."
msgstr ""

#. type: Plain text
msgid "'Mode 2: FALL' - waits for the selected input to perform a fall event."
msgstr ""

#. type: Plain text
msgid "'Mode 3: HIGH' - waits for the selected input to go to the HIGH state."
msgstr ""

#. type: Plain text
msgid "'Mode 4: LOW' - waits for the selected input to go to the LOW state."
msgstr ""

#. type: Plain text
msgid "'Q-' - specifies the timeout in seconds for waiting. If the timeout is"
msgstr ""

#. type: Plain text
msgid ""
"exceeded, the wait is interrupt, and the variable #5399 will be holding the "
"value -1. The Q value is ignored if the L-word is zero (IMMEDIATE).  A Q "
"value of zero is an error if the L-word is non-zero."
msgstr ""

#. type: Plain text
msgid "Mode 0 is the only one permitted for an analog input."
msgstr ""

#. type: Block title
#, no-wrap
msgid "M66 Example Lines"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M66 P0 L3 Q5 (wait up to 5 seconds for digital input 0 to turn on)\n"
msgstr ""

#. type: Plain text
msgid ""
"M66 wait on an input stops further execution of the program, until the "
"selected event (or the programmed timeout) occurs."
msgstr ""

#. type: Plain text
msgid ""
"It is an error to program M66 with both a P-word and an E-word (thus "
"selecting both an analog and a digital input).  In LinuxCNC these inputs are "
"not monitored in real time and thus should not be used for timing-critical "
"applications."
msgstr ""

#. type: Plain text
msgid ""
"The number of I/O can be increased by using the num_dio or num_aio parameter "
"when loading the motion controller. See the <<sec:motion,Motion Section>> "
"for more information."
msgstr ""

#. type: Plain text
msgid ""
"M66 will not function unless the appropriate motion.digital-in-nn pins or "
"motion.analog-in-nn pins are connected in your hal file to an input."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example HAL Connection"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net signal-name motion.digital-in-00 <= parport.0.pin10-in\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M67 Analog Output,Synchronized"
msgstr ""

#. type: Plain text
msgid "(((M67 Analog Output, Synchronized)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M67 E- Q-\n"
msgstr ""

#. type: Plain text
msgid "'M67' - set an analog output synchronized with motion."
msgstr ""

#. type: Plain text
msgid "'E-' - output number ranging from 0 to 3."
msgstr ""

#. type: Plain text
msgid "'Q-' - is the value to set (set to 0 to turn off)."
msgstr ""

#. type: Plain text
msgid ""
"The actual change of the specified outputs will happen at the beginning of "
"the next motion command. If there is no subsequent motion command, the "
"queued output changes won't happen. It's best to always program a motion G "
"code (G0, G1, etc) right after the M67. M67 functions the same as M62-63."
msgstr ""

#. type: Plain text
msgid ""
"M67 will not function unless the appropriate motion.analog-out-nn pins are "
"connected in your hal file to outputs."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M68 Analog Output, Immediate"
msgstr ""

#. type: Plain text
msgid "(((M68 Analog Output)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M68 E- Q-\n"
msgstr ""

#. type: Plain text
msgid "'M68' - set an analog output immediately."
msgstr ""

#. type: Plain text
msgid ""
"M68 output happen immediately as they are received by the motion controller. "
"They are not synchronized with movement, and they will break blending. M68 "
"functions the same as M64-65."
msgstr ""

#. type: Plain text
msgid ""
"M68 will not function unless the appropriate motion.analog-out-nn pins are "
"connected in your hal file to outputs."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M70 Save Modal State"
msgstr ""

#. type: Plain text
msgid "(((M70 Save Modal State)))"
msgstr ""

#. type: Plain text
msgid ""
"To explicitly save the modal state at the current call level, program 'M70'. "
"Once modal state has been saved with 'M70', it can be restored to exactly "
"that state by executing an 'M72'."
msgstr ""

#. type: Plain text
msgid ""
"A pair of 'M70' and 'M72' instructions will typically be used to protect a "
"program against inadvertent modal changes within subroutines."
msgstr ""

#. type: Plain text
msgid "The state saved consists of:"
msgstr ""

#. type: Plain text
msgid "current G20/G21 settings (imperial/metric)"
msgstr ""

#. type: Plain text
msgid "selected plane (G17/G18/G19 G17.1,G18.1,G19.1)"
msgstr ""

#. type: Plain text
msgid "status of cutter compensation (G40,G41,G42,G41.1,G42,1)"
msgstr ""

#. type: Plain text
msgid "distance mode - relative/absolute (G90/G91)"
msgstr ""

#. type: Plain text
msgid "feed mode (G93/G94,G95)"
msgstr ""

#. type: Plain text
msgid "current coordinate system (G54-G59.3)"
msgstr ""

#. type: Plain text
msgid "tool length compensation status (G43,G43.1,G49)"
msgstr ""

#. type: Plain text
msgid "retract mode (G98,G99)"
msgstr ""

#. type: Plain text
msgid "spindle mode (G96-css or G97-RPM)"
msgstr ""

#. type: Plain text
msgid "arc distance mode (G90.1, G91.1)"
msgstr ""

#. type: Plain text
msgid "lathe radius/diameter mode (G7,G8)"
msgstr ""

#. type: Plain text
msgid "path control mode (G61, G61.1, G64)"
msgstr ""

#. type: Plain text
msgid "current feed and speed ('F' and 'S' values)"
msgstr ""

#. type: Plain text
msgid "spindle status (M3,M4,M5) - on/off and direction"
msgstr ""

#. type: Plain text
msgid "mist (M7) and flood (M8) status"
msgstr ""

#. type: Plain text
msgid "speed override (M51) and feed override (M50) settings"
msgstr ""

#. type: Plain text
msgid "adaptive feed setting (M52)"
msgstr ""

#. type: Plain text
msgid "feed hold setting (M53)"
msgstr ""

#. type: Plain text
msgid "Note that in particular, the motion mode (G1 etc) is NOT restored."
msgstr ""

#. type: Plain text
msgid "'current call level' means either:"
msgstr ""

#. type: Plain text
msgid "executing in the main program. There is a single storage location"
msgstr ""

#. type: Plain text
msgid ""
"for state at the main program level; if several 'M70' instructions are "
"executed in turn, only the most recently saved state is restored when an "
"'M72' is executed."
msgstr ""

#. type: Plain text
msgid "executing within a G-code subroutine. The state saved with 'M70'"
msgstr ""

#. type: Plain text
msgid ""
"within a subroutine behaves exactly like a local named parameter - it can be "
"referred to only within this subroutine invocation with an 'M72' and when "
"the subroutine exits, the parameter goes away."
msgstr ""

#. type: Plain text
msgid "A recursive invocation of a subroutine introduces a new call level."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M71 Invalidate Stored Modal State"
msgstr ""

#. type: Plain text
msgid "(((M71 Invalidate Stored Modal State)))"
msgstr ""

#. type: Plain text
msgid ""
"Modal state saved with an 'M70' or by an 'M73' at the current call level is "
"invalidated (cannot be restored from anymore)."
msgstr ""

#. type: Plain text
msgid "A subsequent 'M72' at the same call level will fail."
msgstr ""

#. type: Plain text
msgid ""
"If executed in a subroutine which protects modal state by an 'M73', a "
"subsequent return or endsub will *not* restore modal state."
msgstr ""

#. type: Plain text
msgid ""
"The usefulness of this feature is dubious. It should not be relied upon as "
"it might go away."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M72 Restore Modal State"
msgstr ""

#. type: Plain text
msgid "(((M72 Restore Modal State)))"
msgstr ""

#. type: Plain text
msgid ""
"<<mcode:m70-saved-state,Modal state saved with an 'M70'>> code can be "
"restored by executing an 'M72'."
msgstr ""

#. type: Plain text
msgid ""
"The handling of G20/G21 is specially treated as feeds are interpreted "
"differently depending on G20/G21: if length units (mm/in) are about to be "
"changed by the restore operation, 'M72 'will restore the distance mode "
"first, and then all other state including feed to make sure the feed value "
"is interpreted in the correct unit setting."
msgstr ""

#. type: Plain text
msgid ""
"It is an error to execute an 'M72' with no previous 'M70' save operation at "
"that level."
msgstr ""

#. type: Plain text
msgid ""
"The following example demonstrates saving and explicitly restoring modal "
"state around a subroutine call using 'M70' and 'M72'. Note that the "
"'imperialsub' subroutine is not \"aware\" of the M7x features and can be "
"used unmodified:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<showstate> sub\n"
"(DEBUG, imperial=#<_imperial> absolute=#<_absolute> feed=#<_feed> rpm=#<_rpm>)\n"
"O<showstate> endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<imperialsub> sub\n"
"g20 (imperial)\n"
"g91 (relative mode)\n"
"F5 (low feed)\n"
"S300 (low rpm)\n"
"(debug, in subroutine, state now:)\n"
"o<showstate> call\n"
"O<imperialsub> endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; main program\n"
"g21 (metric)\n"
"g90 (absolute)\n"
"f200 (fast speed)\n"
"S2500 (high rpm)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(debug, in main, state now:)\n"
"o<showstate> call\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"M70 (save caller state in at global level)\n"
"O<imperialsub> call\n"
"M72 (explicitly restore state)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(debug, back in main, state now:)\n"
"o<showstate> call\n"
"m2\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M73 Save and Autorestore Modal State"
msgstr ""

#. type: Plain text
msgid "(((M73 Save and Autorestore Modal State)))"
msgstr ""

#. type: Plain text
msgid ""
"To save modal state within a subroutine, and restore state on subroutine "
"'endsub' or any 'return' path, program 'M73'."
msgstr ""

#. type: Plain text
msgid ""
"Aborting a running program in a subroutine which has an 'M73' operation will "
"*not* restore state ."
msgstr ""

#. type: Plain text
msgid ""
"Also, the normal end ('M2') of a main program which contains an 'M73' will "
"*not* restore state."
msgstr ""

#. type: Plain text
msgid ""
"The suggested use is at the beginning of a O-word subroutine as in the "
"following example. Using 'M73' this way enables designing subroutines which "
"need to modify modal state but will protect the calling program against "
"inadvertent modal changes. Note the use of <<gcode:predefined-named-"
"parameters, predefined named parameters>> in the 'showstate' subroutine."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<imperialsub> sub\n"
"M73 (save caller state in current call context, restore on return or endsub)\n"
"g20 (imperial)\n"
"g91 (relative mode)\n"
"F5 (low feed)\n"
"S300 (low rpm)\n"
"(debug, in subroutine, state now:)\n"
"o<showstate> call\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; note - no M72 is needed here - the following endsub or an\n"
"; explicit 'return' will restore caller state\n"
"O<imperialsub> endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; main program\n"
"g21 (metric)\n"
"g90 (absolute)\n"
"f200 (fast speed)\n"
"S2500 (high rpm)\n"
"(debug, in main, state now:)\n"
"o<showstate> call\n"
"o<imperialsub> call\n"
"(debug, back in main, state now:)\n"
"o<showstate> call\n"
"m2\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M98 and M99"
msgstr ""

#. type: Plain text
msgid ""
"The interpreter supports Fanuc-style main- and sub-programs with the 'M98' "
"and 'M99' M-codes.  See <<ocode:fanuc-style-programs,Fanuc-Style Programs>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Selectively Restoring Modal State"
msgstr ""

#. type: Plain text
msgid ""
"Executing an 'M72' or returning from a subroutine which contains an 'M73' "
"will restore <<mcode:m70-saved-state,*all* modal state saved>>."
msgstr ""

#. type: Plain text
msgid ""
"If only some aspects of modal state should be preserved, an alternative is "
"the usage of <<gcode:predefined-named-parameters, predefined named "
"parameters>>, local parameters and conditional statements. The idea is to "
"remember the modes to be restored at the beginning of the subroutine, and "
"restore these before exiting. Here is an example, based on snippet of "
"'nc_files/tool-length-probe.ngc':"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<measure> sub   (measure reference tool)\n"
";\n"
"#<absolute> = #<_absolute>  (remember in local variable if G90 was set)\n"
";\n"
"g30 (above switch)\n"
"g38.2 z0 f15 (measure)\n"
"g91 g0z.2 (off the switch)\n"
"#1000=#5063 (save reference tool length)\n"
"(print,reference length is #1000)\n"
";\n"
"O<restore_abs> if [#<absolute>]\n"
"    g90 (restore G90 only if it was set on entry:)\n"
"O<restore_abs> endif\n"
";\n"
"O<measure> endsub\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "M100 - M199 User Defined Commands"
msgstr ""

#. type: Plain text
msgid "(((M100 - M199 User Defined Commands)))"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M1-- <P- Q->\n"
msgstr ""

#. type: Plain text
msgid "'M1--' - an integer in the range of 100 - 199."
msgstr ""

#. type: Plain text
msgid "'P-' - a number passed to the file as the first parameter."
msgstr ""

#. type: Plain text
msgid "'Q-' - a number passed to the file as the second parameter."
msgstr ""

#. type: Plain text
msgid ""
"After creating a new 'M1nn' file you must restart the GUI so it is aware of "
"the new file, otherwise you will get an 'Unknown m code' error."
msgstr ""

#. type: Plain text
msgid ""
"The external program named 'M100' through 'M199' (no extension and a capitol "
"M)  is executed with the optional P and Q values as its two arguments.  "
"Execution of the G code file pauses until the external program exits.  Any "
"valid executable file can be used. The file must be located in the search "
"path specified in the ini file configuration. See the <<sec:display-section,"
"Display Section>> for more information on search paths."
msgstr ""

#. type: Plain text
msgid ""
"Do not use a word processor to create or edit the files. A word processor "
"will leave unseen codes that will cause problems and may prevent a bash or "
"python file from working. Use a text editor like Gedit in Ubuntu or Notepad+"
"+ in other operating systems to create or edit the files."
msgstr ""

#. type: Plain text
msgid "The error 'Unknown M code used' denotes one of the following"
msgstr ""

#. type: Plain text
msgid "The specified User Defined Command does not exist"
msgstr ""

#. type: Plain text
msgid "The file is not an executable file"
msgstr ""

#. type: Plain text
msgid "The file name has an extension"
msgstr ""

#. type: Plain text
msgid "The file name does not follow this format M1nn where nn = 00 through 99"
msgstr ""

#. type: Plain text
msgid "The file name used a lower case M"
msgstr ""

#. type: Plain text
msgid ""
"For example to open and close a collet closer that is controlled by a "
"parallel port pin using a bash script file using M101 and M102. Create two "
"files named M101 and M102. Set them as executable files (typically right "
"click/properties/permissions) before running LinuxCNC. Make sure the "
"parallel port pin is not connected to anything in a HAL file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "M101 Example File"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# file to turn on parport pin 14 to open the collet closer\n"
"halcmd setp parport.0.pin-14-out True\n"
"exit 0\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "M102 Example File"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# file to turn off parport pin 14 to open the collet closer\n"
"halcmd setp parport.0.pin-14-out False\n"
"exit 0\n"
msgstr ""

#. type: Plain text
msgid "To pass a variable to a M1nn file you use the P and Q option like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "M100 P123.456 Q321.654\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "M100 Example file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"voltage=$1\n"
"feedrate=$2\n"
"halcmd setp thc.voltage $voltage\n"
"halcmd setp thc.feedrate $feedrate\n"
"exit 0\n"
msgstr ""

#. type: Plain text
msgid ""
"To display a graphic message and stop until the message window is closed use "
"a graphic display program like Eye of Gnome to display the graphic file. "
"When you close it the program will resume."
msgstr ""

#. type: Block title
#, no-wrap
msgid "M110 Example file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"eog /home/john/linuxcnc/nc_files/message.png\n"
"exit 0\n"
msgstr ""

#. type: Plain text
msgid ""
"To display a graphic message and continue processing the G code file suffix "
"an ampersand to the command."
msgstr ""

#. type: Block title
#, no-wrap
msgid "M110 Example display and keep going"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"eog /home/john/linuxcnc/nc_files/message.png &\n"
"exit 0\n"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "O Codes"
msgstr ""

#. type: Plain text
msgid ""
"O-codes provide for flow control in NC programs. Each block has an "
"associated number, which is the number used after O. Care must be taken to "
"properly match the O-numbers. O codes use the letter 'O' not the number zero "
"as the first character in the number like O100 or o100."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Numbering"
msgstr ""

#. type: Plain text
msgid "Numbered O codes must have a unique number for each subroutine,"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Numbering Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(the start of o100)\n"
"o100 sub\n"
"(notice that the if-endif block uses a different number)\n"
"  (the start of o110)\n"
"  o110 if [#2 GT 5]\n"
"    (some code here)\n"
"  (the end of o110)\n"
"  o110 endif\n"
"  (some more code here)\n"
"(the end of o100)\n"
"o100 endsub\n"
msgstr ""

#. type: Plain text
msgid "(((Comments)))"
msgstr ""

#. type: Plain text
msgid ""
"Comments on the same line as the O word should not be used as the behavior "
"can change in the future."
msgstr ""

#. type: Plain text
msgid "The behavior is undefined if:"
msgstr ""

#. type: Plain text
msgid "The same number is used for more than one block"
msgstr ""

#. type: Plain text
msgid "Other words are used on a line with an O- word"
msgstr ""

#. type: Plain text
msgid "Comments are used on a line with an O-word"
msgstr ""

#. type: Plain text
msgid ""
"Using the lower case o makes it easier to distinguish from a 0 that might "
"have been mistyped. For example o100 is easier to see than O100 that it is "
"not a 0."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Subroutines"
msgstr ""

#. type: Plain text
msgid "(((Subroutines)))"
msgstr ""

#. type: Plain text
msgid ""
"Subroutines starts at 'Onnn sub' and ends at 'Onnn endsub'. The lines "
"between 'Onnn sub' and 'Onnn endsub' are not executed until the subroutine "
"is called with 'Onnn call'. Each subroutine must use a unique number."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Subroutine Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 sub\n"
"  G53 G0 X0 Y0 Z0 (rapid move to machine home)\n"
"o100 endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(the subroutine is called)\n"
"o100 call\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<gcode:g53,G53>> & <<gcode:g0,G0>> & <<mcode:m2-m30,M2>> sections for "
"more information."
msgstr ""

#. type: Block title
#, no-wrap
msgid "O- Return"
msgstr ""

#. type: Plain text
msgid ""
"Inside a subroutine, 'O- return' can be executed. This immediately returns "
"to the calling code, just as though 'O- endsub' was encountered."
msgstr ""

#. type: Block title
#, no-wrap
msgid "O- Return Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 sub\n"
"  (test if parameter #2 is greater than 5)\n"
"  o110 if [#2 GT 5]\n"
"    (return to top of subroutine if test is true)\n"
"    o100 return\n"
"  o110 endif\n"
"    (this only gets executed if parameter #2 is not greater than 5)\n"
"    (DEBUG, parameter 1 is [#1])\n"
"o100 endsub\n"
msgstr ""

#. type: Plain text
msgid ""
"See the <<gcode:binary-operators,Binary Operators>> & <<gcode:parameters,"
"Parameters>> sections for more information."
msgstr ""

#. type: Block title
#, no-wrap
msgid "O- Call"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'O- Call' takes up to 30 optional arguments, which are passed to the\n"
"subroutine\n"
" as '#1', '#2' , ..., #N. Parameters from #N+1 to #30 have the same\n"
"value as in the\n"
"calling context. On return from the subroutine, the values of\n"
"parameters #1 through #30 (regardless of the number of arguments) will\n"
"be restored to the values they had before the call. Parameters #1 - #30\n"
"are local to the subroutine.\n"
msgstr ""

#. type: Plain text
msgid ""
"Because '1 2 3' is parsed as the number 123, the parameters must be enclosed "
"in square brackets. The following calls a subroutine with 3 arguments:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "O- Call Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 sub\n"
"  (test if parameter #2 is greater than 5)\n"
"  o110 if [#2 GT 5]\n"
"    (return to top of subroutine if test is true)\n"
"    o100 return\n"
"  o110 endif\n"
"    (this only gets executed if parameter #2 is not greater than 5)\n"
"    (DEBUG, parameter 1 is [#1])\n"
"    (DEBUG, parameter 3 is [#3])\n"
"o100 endsub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o100 call [100] [2] [325]\n"
msgstr ""

#. type: Plain text
msgid ""
"Subroutine bodies may not be nested. They may only be called after they are "
"defined. They may be called from other functions, and may call themselves "
"recursively if it makes sense to do so. The maximum subroutine nesting level "
"is 10."
msgstr ""

#. type: Plain text
msgid ""
"Subroutines can change the value of parameters above #30 and those changes "
"will be visible to the calling code. Subroutines may also change the value "
"of global named parameters."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Fanuc-Style Numbered Programs"
msgstr ""

#. type: Plain text
msgid "(((Subroutines, M98, M99)))"
msgstr ""

#. type: Plain text
msgid ""
"Numbered programs (both main and subprograms), the 'M98' call and 'M99' "
"return M-codes, and their respective semantic differences are an alternative "
"to the rs274ngc subroutines described above, provided for compatibility with "
"Fanuc and other machine controllers."
msgstr ""

#. type: Plain text
msgid ""
"Numbered programs are enabled by default, and may be disabled by placing "
"`DISABLE_FANUC_STYLE_SUB = 1` in the `[RS274NGC]` section of the `.ini` file."
msgstr ""

#. type: Plain text
msgid ""
"Numbered main and subprogram definitions and calls differ from traditional "
"rs274ngc both in syntax and execution.  To reduce the possibility of "
"confusion, the interpreter will raise an error if definitions of one style "
"are mixed with calls of another."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Numbered Subprogram Simple Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o1 (Example 1)    ; Main program 1, \"Example 1\"\n"
"M98 P100          ; Call subprogram 100\n"
"M30               ; End main program\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100              ; Beginning of subprogram 100\n"
"  G53 G0 X0 Y0 Z0 ; Rapid move to machine home\n"
"M99               ; Return from subprogram 100\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "`o1 (Title)`"
msgstr ""

#. type: Plain text
msgid ""
"The optional main program beginning block gives the main program the number "
"`1`.  Some controllers treat an optional following parenthesized comment as "
"a program title, `Example 1` in this example, but this has no special "
"meaning in the rs274ngc interpreter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "`M98 P- <L\\->`"
msgstr ""

#. type: Plain text
msgid ""
"Call a numbered subprogram.  The block `M98 P100` is analogous to the "
"traditional `o100 call` syntax, but may only be used to call a following "
"numbered subprogram defined with `o100`...`M99`.  An optional 'L'-word "
"specifies a loop count."
msgstr ""

#. type: Block title
#, no-wrap
msgid "`M30`"
msgstr ""

#. type: Plain text
msgid ""
"The main program must be terminated with `M02` or `M30` (or `M99`; see "
"below)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "`O-` subprogram definition start"
msgstr ""

#. type: Plain text
msgid ""
"Marks the start of a numbered subprogram definition.  The block `O100` is "
"similar to `o100 sub`, except that it must be placed later in the file than "
"the `M98 P100` calling block."
msgstr ""

#. type: Block title
#, no-wrap
msgid "`M99` return from numbered subroutine"
msgstr ""

#. type: Plain text
msgid ""
"The block `M99` is analogous to the traditional `o100 endsub` syntax, but "
"may only terminate a numbered program (`o100` in this example), and may not "
"terminate a subroutine beginning with the `o100 sub` syntax."
msgstr ""

#. type: Plain text
msgid ""
"The `M98` subprogram call differs from rs274ngc `O call` in the following "
"ways:"
msgstr ""

#. type: Plain text
msgid ""
"The numbered subprogram must follow the `M98` call in the program file.  The "
"interpreter will throw an error if the subprogram precedes the call block."
msgstr ""

#. type: Plain text
msgid ""
"Parameters `#1`, `#2`, ..., `#30` are global and accessible in numbered "
"subprograms, similar to higher-numbered parameters in traditional style "
"calls.  Modifications to these parameters within a subprogram are global "
"modifications, and will be persist after subprogram return."
msgstr ""

#. type: Plain text
msgid "`M98` subprogram calls have no return value."
msgstr ""

#. type: Plain text
msgid ""
"`M98` subprogram call blocks may contain an optional L-word specifying a "
"loop repeat count.  Without the L-word, the subprogram will execute once "
"only (equivalent to `M98 L1`).  An `M98 L0` block will not execute the "
"subprogram."
msgstr ""

#. type: Plain text
msgid ""
"In rare cases, the `M99` M-code may be used to terminate the main program, "
"where it indicates an 'endless program'.  When the interpreter reaches an "
"`M99` in the main program, it will skip back to the beginning of the file "
"and resume execution at the first line.  An example use of an endless "
"program is in a machine warm-up cycle; a block delete program end `/M30` "
"block might be used to stop the cycle at a tidy point when the operator is "
"ready."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Numbered Subprogram Full Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O1                             ; Main program 1\n"
"  #1 = 0\n"
"  (PRINT,X MAIN BEGIN:  1=#1)\n"
"  M98 P100 L5                  ; Call subprogram 100\n"
"  (PRINT,X MAIN END:  1=#1)\n"
"M30                            ; End main program\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O100                           ; Subprogram 100\n"
"  #1 = [#1 + 1]\n"
"  M98 P200 L5                  ; Call subprogram 200\n"
"  (PRINT,>> O100:  #1)\n"
"M99                            ; Return from Subprogram 100\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O200                           ; Subprogram 200\n"
"  #1 = [#1 + 0.01]\n"
"  (PRINT,>>>> O200:  #1)\n"
"M99                            ; Return from Subprogram 200\n"
msgstr ""

#. type: Plain text
msgid ""
"In this example, parameter `#1` is initialized to `0`.  Subprogram `O100` is "
"called five times in a loop.  Nested within each call to `O100`, subprogram "
"`O200` is called five times in a loop, for 25 times total."
msgstr ""

#. type: Plain text
msgid ""
"Note that parameter `#1` is global.  At the end of the main program, after "
"updates within `O100` and `O200`, its value will equal `5.25`."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Looping"
msgstr ""

#. type: Plain text
msgid "(((Subroutines, Looping)))"
msgstr ""

#. type: Plain text
msgid ""
"The 'while loop' has two structures: 'while/endwhile', and 'do/while'. In "
"each case, the loop is exited when the 'while' condition evaluates to false. "
"The difference is when the test condition is done. The 'do/while' loop runs "
"the code in the loop then checks the test condition. The 'while/endwhile' "
"loop does the test first."
msgstr ""

#. type: Block title
#, no-wrap
msgid "While Endwhile Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(draw a sawtooth shape)\n"
"G0 X1 Y0 (move to start position)\n"
"#1 = 0 (assign parameter #1 the value of 0)\n"
"F25 (set a feed rate)\n"
"o101 while [#1 LT 10]\n"
"  G1 X0\n"
"  G1 Y[#1/10] X1\n"
"  #1 = [#1+1] (increment the test counter)\n"
"o101 endwhile\n"
"M2 (end program)\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Do While Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#1 = 0 (assign parameter #1 the value of 0)\n"
"o100 do\n"
"  (debug, parameter 1 = #1)\n"
"  o110 if [#1 EQ 2]\n"
"    #1 = 3 (assign the value of 3 to parameter #1)\n"
"    (msg, #1 has been assigned the value of 3)\n"
"    o100 continue (skip to start of loop)\n"
"  o110 endif\n"
"  (some code here)\n"
"  #1 = [#1 + 1] (increment the test counter)\n"
"o100 while [#1 LT 3]\n"
"(msg, Loop Done!)\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"Inside a while loop, 'O- break' immediately exits the loop, and 'O- "
"continue' immediately skips to the next evaluation of the 'while' condition. "
"If it is still true, the loop begins again at the top. If it is false, it "
"exits the loop."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Conditional"
msgstr ""

#. type: Plain text
msgid "(((Subroutines, Conditional Loops)))"
msgstr ""

#. type: Plain text
msgid ""
"The 'if' conditional consists of a group of statements with the same 'o' "
"number that start with 'if' and end with 'endif'. Optional 'elseif' and "
"'else' conditions may be between the starting 'if' and the ending 'endif'."
msgstr ""

#. type: Plain text
msgid ""
"If the 'if' conditional evaluates to true then the group of statements "
"following the 'if' up to the next conditional line are executed."
msgstr ""

#. type: Plain text
msgid ""
"If the 'if' conditional evaluates to false then the 'elseif' conditions are "
"evaluated in order until one evaluates to true. If the 'elseif' condition is "
"true then the statements following the 'elseif' up to the next conditional "
"line are executed. If none of the 'if' or 'elseif' conditions evaluate to "
"true then the statements following the 'else' are executed. When a condition "
"is evaluated to true no more conditions are evaluated in the group."
msgstr ""

#. type: Block title
#, no-wrap
msgid "If Endif Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(if parameter #31 is equal to 3 set S2000)\n"
"o101 if [#31 EQ 3]\n"
"  S2000\n"
"o101 endif\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "If ElseIf Else EndIf Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(if parameter #2 is greater than 5 set F100)\n"
"o102 if [#2 GT 5]\n"
"  F100\n"
"o102 elseif [#2 LT 2]\n"
"(else if parameter #2 is less than 2 set F200)\n"
"  F200\n"
"(else if parameter #2 is 2 through 5 set F150)\n"
"o102 else\n"
"  F150\n"
"o102 endif\n"
msgstr ""

#. type: Plain text
msgid ""
"Several conditions may be tested for by 'elseif' statements until the 'else' "
"path is finally executed if all preceding conditions are false:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "If Elseif Else Endif Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(if parameter #2 is greater than 5 set F100)\n"
"O102 if [#2 GT 5]\n"
"  F100\n"
"(else if parameter #2 less than 2 set F200)\n"
"O102 elseif [#2 LT 2]\n"
"  F20\n"
"(parameter #2 is between 2 and 5)\n"
"O102 else\n"
"  F200\n"
"O102 endif\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Repeat"
msgstr ""

#. type: Plain text
msgid "(((Subroutines, Repeat Loop)))"
msgstr ""

#. type: Plain text
msgid ""
"The 'repeat' will execute the statements inside of the repeat/endrepeat the "
"specified number of times. The example shows how you might mill a diagonal "
"series of shapes starting at the present position."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Repeat Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(Mill 5 diagonal shapes)\n"
"G91 (Incremental mode)\n"
"o103 repeat [5]\n"
"... (insert milling code here)\n"
"G0 X1 Y1 (diagonal move to next position)\n"
"o103 endrepeat\n"
"G90 (Absolute mode)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Indirection"
msgstr ""

#. type: Plain text
msgid "(((Indirection)))"
msgstr ""

#. type: Plain text
msgid "The O-number may be given by a parameter and/or calculation."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Indirection Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o[#101+2] call\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Computing values in O-words"
msgstr ""

#. type: Plain text
msgid "For more information on computing values see the following sections"
msgstr ""

#. type: Plain text
msgid "<<gcode:parameters,Parameters>>"
msgstr ""

#. type: Plain text
msgid "<<gcode:expressions,Expressions>>"
msgstr ""

#. type: Plain text
msgid "<<gcode:binary-operators,Binary Operators>>"
msgstr ""

#. type: Plain text
msgid "<<gcode:functions,Functions>>"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Calling Files"
msgstr ""

#. type: Plain text
msgid "(((Calling Files)))"
msgstr ""

#. type: Plain text
msgid ""
"To call a separate file with a subroutine name the file the same as your "
"call and include a sub and endsub in the file. The file must be in the "
"directory pointed to by 'PROGRAM_PREFIX' or 'SUBROUTINE_PATH' in the ini "
"file.  The file name can include *lowercase* letters, numbers, dash, and "
"underscore only. A named subroutine file can contain only a single "
"subroutine definition."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Named File Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o<myfile> call\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Numbered File Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o123 call\n"
msgstr ""

#. type: Plain text
msgid ""
"In the called file you must include the oxxx sub and endsub and the file "
"must be a valid file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Called File Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(filename myfile.ngc)\n"
"o<myfile> sub\n"
"  (code here)\n"
"o<myfile> endsub\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"The file names are lowercase letters only so 'o<MyFile>' is converted to "
"'o<myfile>' by the interpreter. More information about the search path and "
"options for the search path are in the INI Configuration Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Subroutine return values(((Return Values)))"
msgstr ""

#. type: Plain text
msgid ""
"Subroutines may optionally return a value by an optional expression at an "
"'endsub' or 'return' statement."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Return value example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o123 return [#2 *5]\n"
"...\n"
"o123 endsub [3 * 4]\n"
msgstr ""

#. type: Plain text
msgid ""
"A subroutine return value is stored in the '#<_value>' <<gcode:predefined-"
"named-parameters, predefined named parameter>> , and the "
"'#<_value_returned>' predefined parameter is set to 1, to indicate a value "
"was returned. Both parameters are global, and are cleared just before the "
"next subroutine call."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Errors"
msgstr ""

#. type: Plain text
msgid "(((O-Code Errors)))"
msgstr ""

#. type: Plain text
msgid ""
"The following statements cause an error message and abort the interpreter:"
msgstr ""

#. type: Plain text
msgid "a `return` or `endsub` not within a sub definition"
msgstr ""

#. type: Plain text
msgid "a label on `repeat` which is defined elsewhere"
msgstr ""

#. type: Plain text
msgid ""
"a label on `while` which is defiÅed elsewhere and not referring to a `do`"
msgstr ""

#. type: Plain text
msgid "a label on `if` defined elsewhere"
msgstr ""

#. type: Plain text
msgid "a undefined label on `else` or `elseif`"
msgstr ""

#. type: Plain text
msgid "a label on `else`, `elseif` or `endif` not pointing to a matching `if`"
msgstr ""

#. type: Plain text
msgid ""
"a label on `break` or `continue` which does not point to a matching `while` "
"or `do`"
msgstr ""

#. type: Plain text
msgid ""
"a label on `endrepeat` or `endwhile` no referring to a corresponding `while` "
"or `repeat`"
msgstr ""

#. type: Plain text
msgid ""
"To make these errors non-fatal warnings on stderr, set bit 0x20 in the "
"`[RS274NGC]FEATURE=` mask ini option."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Other Codes"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "F: Set Feed Rate"
msgstr ""

#. type: Plain text
msgid "(((F: Set Feed Rate)))"
msgstr ""

#. type: Plain text
msgid ""
"'Fx' - set the feed rate to 'x'.  'x' is usually in machine units (inches or "
"millimeters) per minute."
msgstr ""

#. type: Plain text
msgid ""
"The application of the feed rate is as described in the <<sub:feed-rate,Feed "
"Rate>> Section, unless 'inverse time feed rate mode' or 'feed per revolution "
"mode' are in effect, in which case the feed rate is as described in the "
"<<gcode:g93-g94-g95,G93 G94 G95>> Section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "S: Set Spindle Speed"
msgstr ""

#. type: Plain text
msgid "(((S: Set Spindle Speed)))"
msgstr ""

#. type: Plain text
msgid ""
"'Sx [$n]' - set the speed of the spindle to 'x' revolutions per minute "
"(RPM)  with the optional $ set the spindle speed for a specific spindle. "
"Without the $ the command will default to spindle.0"
msgstr ""

#. type: Plain text
msgid ""
"The spindle(s) or selected spindle will turn at that speed when a 'M3' or "
"'M4' is in effect. It is OK to program an S word whether the spindle is "
"turning or not. If the speed override switch is enabled and not set at 100%, "
"the speed will be different from what is programmed."
msgstr ""

#. type: Plain text
msgid "It is OK to program S0, the spindle will not turn if that is done."
msgstr ""

#. type: Plain text
msgid "the S number is negative."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "T: Select Tool"
msgstr ""

#. type: Plain text
msgid "(((T: Select Tool)))"
msgstr ""

#. type: Plain text
msgid "'Tx' - prepare to change to tool 'x'."
msgstr ""

#. type: Plain text
msgid ""
"The tool is not changed until an 'M6' is programmed (see Section <<mcode:m6,"
"M6>>). The T word may appear on the same line as the 'M6' or on a previous "
"line. It is OK if T words appear on two or more lines with no tool change. "
"Only the the most recent T word will take effect at the next tool change."
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC is configured for a nonrandom toolchanger (see the entry for "
"RANDOM_TOOLCHANGER in the <<sec:emcio-section,EMCIO Section>>), 'T0' gets "
"special handling: no tool will be selected. This is useful if you want the "
"spindle to be empty after a tool change."
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC is configured for a random toolchanger (see the entry for "
"RANDOM_TOOLCHANGER in the <<sec:emcio-section,EMCIO Section>>), 'T0' does "
"not get any special treatment: T0 is a valid tool like any other.  It is "
"customary to use T0 on a random toolchanger machine to track an empty "
"pocket, so that it behaves like a nonrandom toolchanger machine and unloads "
"the spindle."
msgstr ""

#. type: Plain text
msgid "a negative T number is used,"
msgstr ""

#. type: Plain text
msgid "T number is used that does not appear in the tool table file (with"
msgstr ""

#. type: Plain text
msgid ""
"the exception that T0 on nonrandom toolchangers *is* accepted, as noted "
"above)."
msgstr ""

#. type: Plain text
msgid ""
"On some machines, the carousel will move when a T word is programmed, at the "
"same time machining is occurring. On such machines, programming the T word "
"several lines before a tool change will save time. A common programming "
"practice for such machines is to put the T word for the next tool to be used "
"on the line after a tool change. This maximizes the time available for the "
"carousel to move."
msgstr ""

#. type: Plain text
msgid ""
"Rapid moves after a 'T<n>' will not show on the AXIS preview until after a "
"feed move. This is for machines that travel long distances to change the "
"tool like a lathe. This can be very confusing at first. To turn this feature "
"off for the current tool program a G1 without any move after the 'T<n>'."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "G Code Examples"
msgstr ""

#. type: Plain text
msgid ""
"After you install LinuxCNC several sample files are placed in the /nc_files "
"folder. Make sure the sample file is appropriate for your machine before "
"running."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Mill Examples"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Helical Hole Milling"
msgstr ""

#. type: Plain text
msgid "File Name: useful-subroutines.ngc"
msgstr ""

#. type: Plain text
msgid "Description: Subroutine for milling a hole using parameters."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Slotting"
msgstr ""

#. type: Plain text
msgid "Description: Subroutine for milling a slot using parameters."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Grid Probe"
msgstr ""

#. type: Plain text
msgid "File Name: gridprobe.ngc"
msgstr ""

#. type: Plain text
msgid "Description: Rectangular Probing"
msgstr ""

#. type: Plain text
msgid ""
"This program repeatedly probes in a regular XY grid and writes the probed "
"location to the file 'probe-results.txt' in the same directory as the .ini "
"file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Smart Probe"
msgstr ""

#. type: Plain text
msgid "File Name: smartprobe.ngc"
msgstr ""

#. type: Plain text
msgid ""
"This program repeatedly probes in a regular XY grid and writes the probed "
"location to the file 'probe-results.txt' in the same directory as the .ini "
"file. This is improved from the grid probe file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Length Probe"
msgstr ""

#. type: Plain text
msgid "File Name: tool-length-probe.ngc"
msgstr ""

#. type: Plain text
msgid "Description: Tool Length Probing"
msgstr ""

#. type: Plain text
msgid ""
"This program shows an example of how to measure tool lengths automatically "
"using a switch hooked to the probe input. This is useful for machines "
"without tool holders, where the length of a tool is different every time it "
"is inserted."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hole Probe"
msgstr ""

#. type: Plain text
msgid "File Name: probe-hole.ngc"
msgstr ""

#. type: Plain text
msgid "Description: Finding the Center and Diameter of a hole."
msgstr ""

#. type: Plain text
msgid ""
"The program demonstrates how to find the center of a hole, measure the hole "
"diameter and record the results."
msgstr ""

#. type: Plain text
msgid "To be added"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Lathe Examples"
msgstr ""

#. type: Plain text
msgid "File Name lathe-g76.ngc"
msgstr ""

#. type: Plain text
msgid "Description: Facing, threading and parting off."
msgstr ""

#. type: Plain text
msgid "This file shows an example of threading on a lathe using parameters."
msgstr ""

#. type: Title =
#, no-wrap
msgid "RS274/NGC Differences"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Changes from RS274/NGC"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Differences that change the meaning of RS274/NGC programs"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Location after a tool change"
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC, the machine does not return to its original position after a "
"tool change. This change was made because the new tool might be longer than "
"the old tool, and the move to the original machine position could therefore "
"leave the tool tip too low."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Offset parameters are ini file units"
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC, the values stored in parameters for the G28 and G30 home "
"locations, the P1...P9 coordinate systems, and the G92 offset are in \"ini "
"file units\". This change was made because otherwise the meaning of a "
"location changed depending on whether G20 or G21 was active when G28, G30, "
"G10 L2, or G92.3 is programmed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Tool table lengths/diameters are in ini file units"
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC, the tool lengths (offsets) and diameters in the tool table are "
"specified in ini file units only. This change was made because otherwise the "
"length of a tool and its diameter would change based on whether G20 or G21 "
"was active when initiating G43, G41, G42 modes. This made it impossible to "
"run G code in the machine's non-native units, even when the G code was "
"simple and well-formed (starting with G20 or G21, and didn't change units "
"throughout the program), without changing the tool table."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G84, G87 not implemented"
msgstr ""

#. type: Plain text
msgid ""
"G84 and G87 are not currently implemented, but may be added to a future "
"release of LinuxCNC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G28, G30 with axis words"
msgstr ""

#. type: Plain text
msgid ""
"When G28 or G30 is programmed with only some axis words present, LinuxCNC "
"only moves the named axes. This is common on other machine controls. To move "
"some axes to an intermediate point and then move all axes to the predefined "
"point, write two lines of G code:"
msgstr ""

#. type: Plain text
msgid ""
"G0 X- Y- (axes to move to intermediate point) G28 (move all axes to "
"predefined point)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Additions to RS274/NGC"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Differences that do not change the meaning of RS274/NGC programs"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G33, G76 threading codes"
msgstr ""

#. type: Plain text
msgid "These codes are not defined in RS274/NGC."
msgstr ""

#. type: Plain text
msgid ""
"The probe tip is not retracted after a G38.2 movement. This retraction move "
"may be added in a future release of LinuxCNC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G38.3...G38.5"
msgstr ""

#. type: Plain text
msgid "These codes are not defined in RS274/NGC"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "O-codes"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "M50...M53 overrides"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "M61..M66"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G43, G43.1"
msgstr ""

#. type: Plain text
msgid "'Negative Tool Lengths'"
msgstr ""

#. type: Plain text
msgid ""
"The RS274/NGC spec says \"it is expected that\" all tool lengths will be "
"positive. However, G43 works for negative tool lengths."
msgstr ""

#. type: Plain text
msgid "'Lathe tools'"
msgstr ""

#. type: Plain text
msgid ""
"G43 tool length compensation can offset the tool in both the X and Z "
"dimensions. This feature is primarily useful on lathes."
msgstr ""

#. type: Plain text
msgid "'Dynamic tool lengths'"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC allows specification of a computed tool length through G43.1 I K."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G41.1, G42.1"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC allows specification of a tool diameter and, if in lathe mode, "
"orientation in the G code. The format is G41.1/G42.1 D L, where D is "
"diameter and L (if specified) is the lathe tool orientation."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G43 without H word"
msgstr ""

#. type: Plain text
msgid ""
"In ngc, this is not allowed. In LinuxCNC, it sets length offsets for the "
"currently loaded tool. If no tool is currently loaded, it is an error. This "
"change was made so the user doesn't have to specify the tool number in two "
"places for each tool change, and because it's consistent with the way G41/"
"G42 work when the D word is not specified."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "U, V, and W axes"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC allows machines with up to 9 axes by defining an additional set of "
"3 linear axes known as U, V and W"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Image to G Code"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/image-to-gcode.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "What is a depth map?"
msgstr ""

#. type: Plain text
msgid ""
"A depth map is a greyscale image where the brightness of each pixel "
"corresponds to the depth (or height) of the object at each point."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Integrating image-to-gcode with the AXIS user interface"
msgstr ""

#. type: Plain text
msgid ""
"Add the following lines to the '[FILTER]' section of your .ini file to make "
"AXIS automatically invoke image-to-gcode when you open a .png, .gif, or .jpg "
"image"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"PROGRAM_EXTENSION = .png,.gif,.jpg Grayscale Depth Image\n"
"png = image-to-gcode\n"
"gif = image-to-gcode\n"
"jpg = image-to-gcode\n"
msgstr ""

#. type: Plain text
msgid ""
"The standard 'sim/axis.ini' configuration file is already configured this "
"way."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using image-to-gcode"
msgstr ""

#. type: Plain text
msgid ""
"Start image-to-gcode either by opening an image file in AXIS, or by invoking "
"image-to-gcode from the terminal, as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image-to-gcode torus.png > torus.ngc\n"
msgstr ""

#. type: Plain text
msgid ""
"Verify all the settings in the right-hand column, then press OK to create "
"the gcode. Depending on the image size and options chosen, this may take "
"from a few seconds to a few minutes. If you are loading the image in AXIS, "
"the gcode will automatically be loaded and previewed once image-to-gcode "
"completes. In AXIS, hitting reload will show the image-to-gcode option "
"screen again, allowing you to tweak them."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Option Reference"
msgstr ""

#. type: Plain text
msgid ""
"Specifies whether to use G20 (inches) or G21 (mm) in the generated g-code "
"and as the units for each option labeled '(units)'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Invert Image"
msgstr ""

#. type: Plain text
msgid ""
"If ânoâ, the black pixel is the lowest point and the white pixel is the "
"highest point. If âyesâ, the black pixel is the highest point and the white "
"pixel is the lowest point."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Normalize Image"
msgstr ""

#. type: Plain text
msgid ""
"If 'yes', the darkest pixel is remapped to black, the lightest pixel is "
"remapped to white."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Expand Image Border"
msgstr ""

#. type: Plain text
msgid ""
"If 'None', the input image is used as-is, and details which are at the very "
"edges of the image may be cut off. If 'White' or 'Black', then a border of "
"pixels equal to the tool diameter is added on all sides, and details which "
"are at the very edges of the images will not be cut off."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tolerance (units)"
msgstr ""

#. type: Plain text
msgid ""
"When a series of points are within 'tolerance' of being a straight line, "
"they are output as a straight line.  Increasing tolerance can lead to better "
"contouring performance in LinuxCNC, but can also remove or blur small "
"details in the image."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pixel Size (units)"
msgstr ""

#. type: Plain text
msgid ""
"One pixel in the input image will be this many units--usually this number is "
"much smaller than 1.0. For instance, to mill a 2.5x2.5-inch object from a "
"400x400 image file, use a pixel size of .00625, because 2.5 / 400 = .00625."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Plunge Feed Rate (units per minute)"
msgstr ""

#. type: Plain text
msgid "The feed rate for the initial plunge movement."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Feed Rate (units per minute)"
msgstr ""

#. type: Plain text
msgid "The feed rate for other parts of the path."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Speed (RPM)"
msgstr ""

#. type: Plain text
msgid "The spindle speed S code that should be put into the gcode file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Scan Pattern"
msgstr ""

#. type: Plain text
msgid "Possible scan patterns are:"
msgstr ""

#. type: Plain text
msgid "Rows"
msgstr ""

#. type: Plain text
msgid "Columns"
msgstr ""

#. type: Plain text
msgid "Rows, then Columns"
msgstr ""

#. type: Plain text
msgid "Columns, then Rows"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Scan Direction"
msgstr ""

#. type: Plain text
msgid "Possible scan directions are:"
msgstr ""

#. type: Plain text
msgid ""
"Positive: Start milling at a low X or Y axis value, and move towards a high "
"X or Y axis value"
msgstr ""

#. type: Plain text
msgid ""
"Negative: Start milling at a high X or Y axis value, and move towards a low "
"X or Y axis value"
msgstr ""

#. type: Plain text
msgid ""
"Alternating: Start on the same end of the X or Y axis travel that the last "
"move ended on. This reduces the amount of traverse movements"
msgstr ""

#. type: Plain text
msgid "Up Milling: Start milling at low points, moving towards high points"
msgstr ""

#. type: Plain text
msgid "Down Milling: Start milling at high points, moving towards low points"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Depth (units)"
msgstr ""

#. type: Plain text
msgid ""
"The top of material is always at 'Z=0'. The deepest cut into the material is "
"'Z=-depth.'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Step Over (pixels)"
msgstr ""

#. type: Plain text
msgid ""
"The distance between adjacent rows or columns. To find the number of pixels "
"for a given units distance, compute 'distance/pixel size' and round to the "
"nearest whole number. For example, if 'pixel size=.006' and the desired step "
"over 'distance=.015', then use a Step Over of 2 or 3 pixels, because "
"'.015/.006=2.5''.'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Diameter"
msgstr ""

#. type: Plain text
msgid "The diameter of the cutting part of the tool."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Safety Height"
msgstr ""

#. type: Plain text
msgid ""
"The height to move to for traverse movements. image-to-gcode always assumes "
"the top of material is at 'Z=0'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Type"
msgstr ""

#. type: Plain text
msgid "The shape of the cutting part of the tool. Possible tool shapes are:"
msgstr ""

#. type: Plain text
msgid "Ball End"
msgstr ""

#. type: Plain text
msgid "Flat End"
msgstr ""

#. type: Plain text
msgid "45 degree âveeâ"
msgstr ""

#. type: Plain text
msgid "60 degree âveeâ"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Lace bounding"
msgstr ""

#. type: Plain text
msgid ""
"This controls whether areas that are relatively flat along a row or column "
"are skipped. This option only makes sense when both rows and columns are "
"being milled. Possible bounding options are:"
msgstr ""

#. type: Plain text
msgid "None: Rows and columns are both fully milled."
msgstr ""

#. type: Plain text
msgid ""
"Secondary: When milling in the second direction, areas that do not strongly "
"slope in that direction are skipped."
msgstr ""

#. type: Plain text
msgid ""
"Full: When milling in the first direction, areas that strongly slope in the "
"second direction are skipped. When milling in the second direction, areas "
"that do not strongly slope in that direction are skipped."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Contact angle"
msgstr ""

#. type: Plain text
msgid ""
"When 'Lace bounding' is not 'None', slopes greater than 'Contact angle' are "
"considered to be 'strong' slopes, and slopes less than that angle are "
"considered to be weak slopes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Roughing offset and depth per pass"
msgstr ""

#. type: Plain text
msgid ""
"Image-to-gcode can optionally perform rouging passes. The depth of "
"successive roughing passes is given by 'Roughing depth per pass'. For "
"instance, entering 0.2 will perform the first roughing pass with a depth of "
"0.2, the second roughing pass with a depth of 0.4, and so on until the full "
"Depth of the image is reached. No part of any roughing pass will cut closer "
"than Roughing Offset to the final part. The following figure shows a tall "
"vertical feature being milled.  In this image, Roughing depth per pass is "
"0.2 inches and roughing offset is 0.1 inches."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Roughing passes and final pass"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/i2g-roughing.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tool Length Offsets"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Touch Off(((Touch Off)))"
msgstr ""

#. type: Plain text
msgid ""
"Using the Touch Off Screen in the AXIS interface you can update the tool "
"table automatically."
msgstr ""

#. type: Plain text
msgid "Typical steps for updating the tool table:"
msgstr ""

#. type: Plain text
msgid "After homing load a tool with 'Tn M6' where 'n' is the tool number."
msgstr ""

#. type: Plain text
msgid "Move tool to an established point using a gauge or take a test cut and"
msgstr ""

#. type: Plain text
msgid "measure."
msgstr ""

#. type: Plain text
msgid "Click the \"Touch Off\" button in the Manual Control tab (or hit the"
msgstr ""

#. type: Plain text
msgid "End button on your keyboard)."
msgstr ""

#. type: Plain text
msgid "Select 'Tool Table' in the Coordinate System drop down box."
msgstr ""

#. type: Plain text
msgid "Enter the gauge or measured dimension and select OK."
msgstr ""

#. type: Plain text
msgid ""
"The Tool Table will be changed with the correct Z length to make the DRO "
"display the correct Z position and a G43 command will be issued so the new "
"tool Z length will be in effect. Tool table touch off is only available when "
"a tool is loaded with 'Tn M6'."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Touch Off Tool Table"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ToolTable-TouchOff.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Using G10 L1/L10/L11"
msgstr ""

#. type: Plain text
msgid "The G10 L1/L10/L11 commands can be used to set tool table offsets:"
msgstr ""

#. type: Plain text
msgid "'G10 L1 Pn' - Set offset(s) to a value. Current position irrelevant."
msgstr ""

#. type: Plain text
msgid "(see <<gcode:g10-l1,G10 L1>> for details)"
msgstr ""

#. type: Plain text
msgid ""
"'G10 L10 Pn' - Set offset(s) so current position w/ fixture 1-8 becomes a "
"value."
msgstr ""

#. type: Plain text
msgid "(see <<gcode:g10-l10,G10 L10>> for details)"
msgstr ""

#. type: Plain text
msgid ""
"'G10 L11 Pn' - Set offset(s) so current position w/ fixture 9 becomes a "
"value."
msgstr ""

#. type: Plain text
msgid "(see <<gcode:g10-l11,G10 L11>> for details)"
msgstr ""

#. type: Plain text
msgid ""
"The 'Tool Table' is a text file that contains information about each tool. "
"The file is located in the same directory as your configuration and is "
"called 'tool.tbl' by default.  A file name may be specified with the ini "
"file [EMCIO]TOOL_TABLE setting.  The tools might be in a tool changer or "
"just changed manually.  The file can be edited with a text editor or be "
"updated using G10 L1. See the <<sec:lathe-tool-table,Lathe Tool Table>> "
"Section for an example of the lathe tool table format.  The maximum pocket "
"number is 1000."
msgstr ""

#. type: Plain text
msgid ""
"The <<cha:tooledit-gui,Tool Editor>> or a text editor can be used to edit "
"the tool table. If you use a text editor make sure you reload the tool table "
"in the GUI."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Table Format"
msgstr ""

#. type: Plain text
msgid "(((Tool-Table-Format)))"
msgstr ""

#. type: Table
#, no-wrap
msgid "T#"
msgstr ""

#. type: Table
#, no-wrap
msgid "P#"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dia"
msgstr ""

#. type: Table
#, no-wrap
msgid "FA"
msgstr ""

#. type: Table
#, no-wrap
msgid "BA"
msgstr ""

#. type: Table
#, no-wrap
msgid "Ori"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rem"
msgstr ""

#. type: Table
#, no-wrap
msgid "T1"
msgstr ""

#. type: Table
#, no-wrap
msgid "P17"
msgstr ""

#. type: Table
#, no-wrap
msgid "X0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z0"
msgstr ""

#. type: Table
#, no-wrap
msgid "A0"
msgstr ""

#. type: Table
#, no-wrap
msgid "B0"
msgstr ""

#. type: Table
#, no-wrap
msgid "C0"
msgstr ""

#. type: Table
#, no-wrap
msgid "U0"
msgstr ""

#. type: Table
#, no-wrap
msgid "V0"
msgstr ""

#. type: Table
#, no-wrap
msgid "W0"
msgstr ""

#. type: Table
#, no-wrap
msgid "D0"
msgstr ""

#. type: Table
#, no-wrap
msgid "I0"
msgstr ""

#. type: Table
#, no-wrap
msgid "J0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Q0"
msgstr ""

#. type: Table
#, no-wrap
msgid ";rem"
msgstr ""

#. type: Table
#, no-wrap
msgid "T2"
msgstr ""

#. type: Table
#, no-wrap
msgid "P5"
msgstr ""

#. type: Table
#, no-wrap
msgid "T3"
msgstr ""

#. type: Table
#, no-wrap
msgid "P12"
msgstr ""

#. type: Plain text
msgid "In general, the new tool table line format is:"
msgstr ""

#. type: Plain text
msgid "T - tool number (tool numbers must be unique)"
msgstr ""

#. type: Plain text
msgid ""
"P - pocket number, 1-1000 (pocket numbers must be unique, Pocket 0 "
"represents the spindle)"
msgstr ""

#. type: Plain text
msgid "X..W - tool offset on specified axis - floating-point"
msgstr ""

#. type: Plain text
msgid "D - tool diameter - floating-point, absolute value"
msgstr ""

#. type: Plain text
msgid "I - front angle (lathe only) - floating-point"
msgstr ""

#. type: Plain text
msgid "J - back angle (lathe only) - floating-point"
msgstr ""

#. type: Plain text
msgid "Q - tool orientation (lathe only) - integer, 0-9"
msgstr ""

#. type: Plain text
msgid "; - beginning of comment or remark - text"
msgstr ""

#. type: Plain text
msgid ""
"Earlier versions of LinuxCNC had two different tool table formats for mills "
"and lathes, but since the 2.4.x release, one tool table format is used for "
"all machines. Just ignore the parts of the tool table that don't pertain to "
"your machine, or which you don't need to use."
msgstr ""

#. type: Plain text
msgid ""
"Each line of the tool table file after the opening semicolon contains the "
"data for one tool. One line may contain as many as 16 entries, but will "
"likely contain much fewer."
msgstr ""

#. type: Plain text
msgid "The units used for the length, diameter, etc., are in machine units."
msgstr ""

#. type: Plain text
msgid ""
"You will probably want to keep the tool entries in ascending order, "
"especially if you are going to be using a randomizing tool changer.  "
"Although the tool table does allow for tool numbers in any order."
msgstr ""

#. type: Plain text
msgid ""
"Each line may have up to 16 entries. The first two entries are required.  "
"The last entry (a remark or comment, preceded by a semicolon) is optional. "
"It makes reading easier if the entries are arranged in columns, as shown in "
"the table, but the only format requirement is that there be at least one "
"space or tab after each of the entries on a line and a newline character at "
"the end of each entry."
msgstr ""

#. type: Plain text
msgid ""
"The meanings of the entries and the type of data to be put in each are as "
"follows."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tool Number (required)"
msgstr ""

#. type: Plain text
msgid ""
"The 'T' column contains the number (unsigned integer) which represents a "
"code number for the tool. The user may use any code for any tool, as long as "
"the codes are unsigned integers."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pocket Number (required)"
msgstr ""

#. type: Plain text
msgid ""
"The 'P' column contains the number (unsigned integer) which represents the "
"pocket number (slot number) of the tool changer slot where the tool can be "
"found. The entries in this column must all be different."
msgstr ""

#. type: Plain text
msgid ""
"The pocket numbers will typically start at 1 and go up to the highest "
"available pocket on your tool changer. But not all tool changers follow this "
"pattern. Your pocket numbers will be determined by the numbers that your "
"tool changer uses to refer to the pockets. So all this is to say that the "
"pocket numbers you use will be determined by the numbering scheme used in "
"your tool changer, and the pocket numbers you use must make sense on your "
"machine."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Data Offset Numbers (optional)"
msgstr ""

#. type: Plain text
msgid ""
"The 'Data Offset' columns (XYZABCUVW) contain real numbers which represent "
"tool offsets in each axis. This number will be used if tool length offsets "
"are being used and this tool is selected.  These numbers can be positive, "
"zero, or negative, and are in fact completely optional. Although you will "
"probably want to make at least one entry here, otherwise there would be "
"little point in making an entry in the tool table to begin with."
msgstr ""

#. type: Plain text
msgid ""
"In a typical mill, you probably want an entry for Z (tool length offset). In "
"a typical lathe, you probably want an entry for X (X tool offset) and Z (Z "
"tool offset). In a typical mill using cutter diameter compensation (cutter "
"comp), you probably also want to add an entry for D (cutter diameter). In a "
"typical lathe using tool nose diameter compensation (tool comp), you "
"probably also want to add an entry for D (tool nose diameter)."
msgstr ""

#. type: Plain text
msgid ""
"A lathe also requires some additional information to describe the shape and "
"orientation of the tool. So you probably want to have entries for I (tool "
"front angle) and J (tool back angle). You probably also want an entry for Q "
"(tool orientation)."
msgstr ""

#. type: Plain text
msgid ""
"See the <<cha:lathe-user-information,Lathe User Information>> chapter for "
"more detail."
msgstr ""

#. type: Plain text
msgid ""
"The 'Diameter' column contains a real number. This number is used only if "
"cutter compensation is turned on using this tool. If the programmed path "
"during compensation is the edge of the material being cut, this should be a "
"positive real number representing the measured diameter of the tool. If the "
"programmed path during compensation is the path of a tool whose diameter is "
"nominal, this should be a small number (positive or negative, but near zero) "
"representing only the difference between the measured diameter of the tool "
"and the nominal diameter.  If cutter compensation is not used with a tool, "
"it does not matter what number is in this column."
msgstr ""

#. type: Plain text
msgid ""
"The 'Comment' column may optionally be used to describe the tool. Any type "
"of description is OK. This column is for the benefit of human readers only. "
"The comment must be preceded by a semicolon."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool IO"
msgstr ""

#. type: Plain text
msgid ""
"The userspace program specified by *[EMCIO]EMCIO = io* is conventionally "
"used for tool changer management (and other io functions for enabling "
"LinuxCNC and the conrol of coolant/lube hardware).  The hal pins used for "
"tool management are prefixed with *iocontrol.0.*"
msgstr ""

#. type: Plain text
msgid ""
"A gcode *TN* command asserts the hal output pin *iocontrol.0.tool-prepare*.  "
"The hal input pin, *iocontrol.0.tool-prepared*, must be set by external hal "
"logic to complete tool preparation leading to a subsequent reset of the tool-"
"prepare pin."
msgstr ""

#. type: Plain text
msgid ""
"A gcode *M6* command asserts the hal output pin *iocontrol.0.tool-change*.  "
"The related hal input pin, *iocontrol.0.tool-prepared*, must be set by "
"external hal logic to indicate completion of the tool change leading to a "
"subsequent reset of the tool-change pin."
msgstr ""

#. type: Plain text
msgid ""
"Tooldata is accessed by an ordered index (idx) that depends on the type of "
"toolchanger specified by *[EMCIO]RANDOM_TOOLCHANGER=type*."
msgstr ""

#. type: Plain text
msgid ""
"For *RANDOM_TOOLCHANGER = 0*, (0 is default and specifies a non-random "
"toolchanger) idx is a number indicating the sequence in which tooldata was "
"loaded."
msgstr ""

#. type: Plain text
msgid ""
"For *RANDOM_TOOLCHANGER = 1*, idx is the *current* pocket number for the "
"toolnumber specifed by the gcode select tool command *Tn*."
msgstr ""

#. type: Plain text
msgid ""
"The io program provides hal output pins to facilitate toolchanger management:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-number*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-index*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-pocket*\n"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "IO for non-random toolchanger"
msgstr ""

#. type: Plain text
msgid "Tool number N==0 indicates no tool"
msgstr ""

#. type: Plain text
msgid "The pocket number for a tool is fixed when tooldata is loaded"
msgstr ""

#. type: Plain text
msgid "At gcode *TN* (N != 0) command:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-index*  = idx (index based on tooldata load sequence)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-number* = N\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-pocket* = the fixed pocketno for N\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "At gcode *T0* (N == 0 remove) command:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-index*  = 0\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-number* = 0\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-pocket* = 0\n"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "IO for random toolchanger"
msgstr ""

#. type: Plain text
msgid "Tool number N==0 is *not special*"
msgstr ""

#. type: Plain text
msgid "Pocket number 0 is *special* as it indicates the *spindle*"
msgstr ""

#. type: Plain text
msgid ""
"The *current* pocket number for tool N is the tooldata index (idx) for tool N"
msgstr ""

#. type: Plain text
msgid "At gcode command *TN*:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-index*  = pocket number for tool N\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*iocontrol.0.tool-prep-pocket* = pocket number for tool N\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool Changers"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC supports three types of tool changers: 'manual', 'random location' "
"and 'non-random or fixed location'. Information about configuring a LinuxCNC "
"tool changer is in the <<sec:emcio-section,EMCIO Section>> of the INI "
"chapter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Manual Tool Changer"
msgstr ""

#. type: Plain text
msgid ""
"Manual tool changer (you change the tool by hand) is treated like a fixed "
"location tool changer.  Manual toolchanges can be aided by a hal "
"configuration that employs the userspace program *hal_manualtoolchange* and "
"is typically specified in an ini file with ini statements:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"...\n"
"HALFILE = axis_manualtoolchange.hal\n"
"...\n"
"---- \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Fixed Location Tool Changers\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Fixed location tool changers always return the tools to a\n"
"fixed position in the tool changer. This would also include\n"
"designs like lathe turrets. When LinuxCNC is configured for a fixed\n"
"location tool changer the 'P' number is not used internally (but read, preserved\n"
"and rewritten) by LinuxCNC, so you can use P for any bookkeeping number you\n"
"want.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Random Location Tool Changers\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Random location tool changers swap the tool in the spindle with the\n"
"one in the changer. With this type of tool changer the tool will\n"
"always be in a different pocket after a tool change. When a tool is\n"
"changed LinuxCNC rewrites the pocket number to keep track of where the tools\n"
"are. T can be any number but P must be a number that makes sense for\n"
"the machine.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[[sec:cutter-compensation]]\n"
msgstr ""

#. type: delimited block -
msgid ""
"Cutter Compensation allows the programmer to program the tool path without "
"knowing the exact tool diameter. The only caveat is the programmer must "
"program the lead in move to be at least as long as the largest tool radius "
"that might be used."
msgstr ""

#. type: delimited block -
msgid ""
"There are two possible paths the cutter can take while cutter compensation "
"is on to the left or right side of a line when facing the direction of "
"cutter motion from behind the cutter. To visualize this imagine you were "
"standing on the part walking behind the tool as it progresses across the "
"part. G41 is your left side of the line and G42 is the right side of the "
"line."
msgstr ""

#. type: delimited block -
msgid ""
"The end point of each move depends on the next move. If the next move "
"creates an outside corner the move will be to the end point of the "
"compensated cut line. If the next move creates in an inside corner the move "
"will stop short so to not gouge the part. The following figure shows how the "
"compensated move will stop at different points depending on the next move."
msgstr ""

#. type: delimited block -
msgid ".Compensation End Point"
msgstr ""

#. type: delimited block -
msgid ""
"image::images/comp-path_en.svg[align=\"center\", alt=\"Compensation End Point"
"\"]"
msgstr ""

#. type: delimited block -
msgid ".Tool Table"
msgstr ""

#. type: delimited block -
msgid ""
"Cutter compensation uses the data from the tool table to determine the "
"offset needed. The data can be set at run time with G10 L1."
msgstr ""

#. type: delimited block -
msgid ".Programming Entry Moves"
msgstr ""

#. type: delimited block -
msgid ""
"Any move that is long enough to perform the compensation will work as the "
"entry move. The minimum length is the cutter radius. This can be a rapid "
"move above the work piece. If several rapid moves are issued after a G41/42 "
"only the last one will move the tool to the compensated position."
msgstr ""

#. type: delimited block -
msgid ""
"In the following figure you can see that the entry move is compensated to "
"the right of the line. This puts the center of the tool to the right of X0 "
"in this case. If you were to program a profile and the end is at X0 the "
"resulting profile would leave a bump due to the offset of the entry move."
msgstr ""

#. type: delimited block -
msgid ".Entry Move"
msgstr ""

#. type: delimited block -
msgid "image::images/comp02_en.svg[alt=\"Entry Move\"]"
msgstr ""

#. type: delimited block -
msgid ".Z Motion"
msgstr ""

#. type: delimited block -
msgid ""
"Z axis motion may take place while the contour is being followed in the XY "
"plane. Portions of the contour may be skipped by retracting the Z axis above "
"the part and by extending the Z-axis at the next start point."
msgstr ""

#. type: delimited block -
msgid ".Rapid Moves"
msgstr ""

#. type: delimited block -
msgid "Rapid moves may be programmed while compensation is turned on."
msgstr ""

#. type: delimited block -
msgid ".Good Practices"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid " - Start a program with G40 to make sure compensation is off.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Examples"
msgstr ""

#. type: delimited block -
msgid ".Outside Profile"
msgstr ""

#. type: delimited block -
msgid "image::images/outside-comp.png[alt=\"Outside Profile\"]"
msgstr ""

#. type: delimited block -
msgid ".Inside Profile"
msgstr ""

#. type: delimited block -
msgid "image::images/inside-comp.png[alt=\"Inside Profile\"]"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Tool Edit GUI"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Tool Edit GUI - Overview"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tooledit.png"
msgstr ""

#. type: Plain text
msgid ""
"The 'tooledit' program can update the tool table file with edited changes by "
"using the SaveFile button.  The SaveFile button updates the system file but "
"a separate action is required to update the tool table data used by a "
"running LinuxCNC instance.  With the axis GUI, both the file and the current "
"tool table data used by LinuxCNC can be updated with the ReloadTable "
"button.  This button is enabled only when the machine is ON and IDLE."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Column Sorting"
msgstr ""

#. type: Plain text
msgid ""
"The tool table display can be sorted on any column in ascending order by "
"clicking on the column header.  A second click sorts in descending order.  "
"Column sorting requires that the machine is configured with the default tcl "
"version >= 8.5."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Tool Edit GUI - Column Sorting"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tooledit-sort.png"
msgstr ""

#. type: Plain text
msgid ""
"Depending upon other applications installed on the system, it may be "
"necessary to enable tcl/tk8.5 with the commands:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"sudo update-alternatives --config tclsh  ;# select the option for tclsh8.5\n"
"sudo update-alternatives --config wish   ;# select the option for wish8.5\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Column Selection"
msgstr ""

#. type: Plain text
msgid ""
"By default, the 'tooledit' program will display all possible tool table "
"parameter columns.  Since few machines use all parameters, the columns "
"displayed can be limited with the following ini file setting:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Tool Edit GUI - Column Selection"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/tooledit-columns.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "INI File Syntax"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"TOOL_EDITOR = tooledit column_name column_name ...\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example for Z and DIAM columns"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"TOOL_EDITOR = tooledit Z DIAM\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stand Alone Use"
msgstr ""

#. type: Plain text
msgid ""
"The 'tooledit' program can also be invoked as a standalone program. For "
"example, if the program is in the user PATH, typing 'tooledit' will show the "
"usage syntax:"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stand Alone"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"tooledit\n"
"Usage:\n"
"tooledit filename\n"
"tooledit [column_1 ... column_n] filename\n"
msgstr ""

#. type: Plain text
msgid ""
"To synchronize a standalone 'tooledit' with a running LinuxCNC application, "
"the filename must resolve to the same [EMCIO]TOOL_TABLE filename specified "
"in the LinuxCNC ini file."
msgstr ""

#. type: Plain text
msgid ""
"When using the program 'tooledit' while LinuxCNC is running, gcode command "
"execution or other programs may alter tool table data and the tool table "
"file.  File changes are detected by 'tooledit' and a message is displayed:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Warning: File changed by another process\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'tooledit' tool table display can be updated to read the modified file "
"with the ReRead button."
msgstr ""

#. type: Plain text
msgid "he tool table is specified in the ini file with an entry:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  [EMCIO]TOOL_TABLE = tool_table_filename\n"
msgstr ""

#. type: Plain text
msgid ""
"The tool table file can be edited with any simple text editor (not a word "
"processor)."
msgstr ""

#. type: Plain text
msgid ""
"The axis GUI can optionally use an ini file setting to specify the tool "
"editor program:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  [DISPLAY]TOOL_EDITOR = path_to_editor_program\n"
msgstr ""

#. type: Plain text
msgid ""
"By default, the program named 'tooledit' is used. This editor supports all "
"tool table parameters, allows addition and deletion of tool entries, and "
"performs a number of validity checks on parameter values."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Integrator Concepts"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "File Locations"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC looks for the configuration and G code files in a specific place. "
"The location depends on how you run LinuxCNC."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installed"
msgstr ""

#. type: Plain text
msgid ""
"If your running LinuxCNC from the LiveCD or you installed via a deb and use "
"the configuration picker 'LinuxCNC' from the menu LinuxCNC looks in the "
"following directories:"
msgstr ""

#. type: Plain text
msgid "The LinuxCNC directory is located at '/home/user-name/linuxcnc'."
msgstr ""

#. type: Plain text
msgid ""
"The Configuration directories are located at '/home/user-name/linuxcnc/"
"configs'."
msgstr ""

#. type: Plain text
msgid ""
"Configuration files are located at '/home/user-name/linuxcnc/configs/name-of-"
"config'."
msgstr ""

#. type: Plain text
msgid "G code files are located at /home/user-name/linuxcnc/nc_files'."
msgstr ""

#. type: Plain text
msgid ""
"For example for a configuration called Mill and a user name Fred the "
"directory and file structure would look like this."
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/nc_files'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/configs/mill'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/configs/mill/mill.ini'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/configs/mill/mill.hal'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/configs/mill/mill.var'"
msgstr ""

#. type: Plain text
msgid "'/home/fred/linuxcnc/configs/mill/tool.tbl'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Command Line"
msgstr ""

#. type: Plain text
msgid ""
"If you run LinuxCNC from the command line and specify the name and location "
"of the INI file the file locations can be in a different place. To view the "
"options for running LinuxCNC from the command line run 'linuxcnc -h'."
msgstr ""

#. type: Plain text
msgid ""
"Optional locations for some files can be configured in the INI file. See the "
"<<sec:display-section,DISPLAY>> section and the <<sec:rs274ngc-section,"
"RS274NGC>> section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Files"
msgstr ""

#. type: Plain text
msgid "Each configuration directory requires at least the following files:"
msgstr ""

#. type: Plain text
msgid "An INI file .ini"
msgstr ""

#. type: Plain text
msgid ""
"A HAL file .hal or HALTCL file .tcl specified in the <<sec:hal-section,HAL>> "
"section of the INI file."
msgstr ""

#. type: Plain text
msgid "[NOTE]Other files may be required for some GUI's."
msgstr ""

#. type: Plain text
msgid "Optionally you can also have:"
msgstr ""

#. type: Plain text
msgid "A Variables file .var"
msgstr ""

#. type: Plain text
msgid ""
"If you omit a .var file in a directory but include [<<sec:rs274ngc-section,"
"RS274NGC>>] PARAMETER_FILE=somefilename.var, the file will be created for "
"you when LinuxCNC starts."
msgstr ""

#. type: Plain text
msgid ""
"If you omit a .var file and omit the item [RS274NGC] PARAMETER_FILE, a var "
"file named rs274ngc.var will be created when LinuxCNC starts. There may be "
"some confusing messages if [RS274NGC]PARAMETER_FILE is omitted."
msgstr ""

#. type: Plain text
msgid ""
"A Tool Table file .tbl if [<<sec:emcmot-section,EMCMOT>>]TOOL_TABLE has been "
"specified in the INI file. Some configurations do not need a tool table."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stepper Systems"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Base Period"
msgstr ""

#. type: Plain text
msgid ""
"BASE_PERIOD is the 'heartbeat' of your LinuxCNC computer.footnote:[This "
"section refers to using *stepgen*, LinuxCNC's built-in step generator. Some "
"hardware devices have their own step generator and do not use LinuxCNC's "
"built-in one. In that case, refer to your hardware manual.] Every period, "
"the software step generator decides if it is time for another step pulse.  A "
"shorter period will allow you to generate more pulses per second, within "
"limits. But if you go too short, your computer will spend so much time "
"generating step pulses that everything else will slow to a crawl, or maybe "
"even lock up. Latency and stepper drive requirements affect the shortest "
"period you can use."
msgstr ""

#. type: Plain text
msgid ""
"Worst case latencies might only happen a few times a minute, and the odds of "
"bad latency happening just as the motor is changing direction are low. So "
"you can get very rare errors that ruin a part every once in a while and are "
"impossible to troubleshoot."
msgstr ""

#. type: Plain text
msgid ""
"The simplest way to avoid this problem is to choose a BASE_PERIOD that is "
"the sum of the longest timing requirement of your drive, and the worst case "
"latency of your computer. This is not always the best choice.  For example, "
"if you are running a drive with a 20 us direction signal hold time "
"requirement, and your latency test said you have a maximum latency of 11 "
"us , then if you set the BASE_PERIOD to 20+11 = 31 us you get a not-so-nice "
"32,258 steps per second in one mode and 16,129 steps per second in another "
"mode."
msgstr ""

#. type: Plain text
msgid ""
"The problem is with the 20 us hold time requirement. That plus the 11 us "
"latency is what forces us to use a slow 31 us period. But the LinuxCNC "
"software step generator has some parameters that let you increase the "
"various times from one period to several. For example, if 'steplen' footnote:"
"[steplen refers to a parameter that adjusts the performance of LinuxCNC's "
"built-in step generator, 'stepgen', which is a HAL component. This parameter "
"adjusts the length of the step pulse itself. Keep reading, all will be "
"explained eventually.] is changed from 1 to 2, then there will be two "
"periods between the beginning and end of the step pulse. Likewise, if "
"'dirhold' footnote:[dirhold refers to a parameter that adjusts the length of "
"the direction hold time.] is changed from 1 to 3, there will be at least "
"three periods between the step pulse and a change of the direction pin."
msgstr ""

#. type: Plain text
msgid ""
"If we can use 'dirhold' to meet the 20 us hold time requirement, then the "
"next longest time is the 4.5 us high time. Add the 11 us latency to the 4.5 "
"us high time, and you get a minimum period of 15.5 us . When you try 15.5 "
"us , you find that the computer is sluggish, so you settle on 16 us .  If we "
"leave 'dirhold' at 1 (the default), then the minimum time between step and "
"direction is the 16 us period minus the 11 us latency = 5 us , which is not "
"enough. We need another 15 us . Since the period is 16 us , we need one more "
"period. So we change 'dirhold' from 1 to 2. Now the minimum time from the "
"end of the step pulse to the changing direction pin is 5+16=21 us , and we "
"don't have to worry about the drive stepping the wrong direction because of "
"latency."
msgstr ""

#. type: Plain text
msgid ""
"For more information on stepgen see the <<sec:stepgen,stepgen section>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Step Timing"
msgstr ""

#. type: Plain text
msgid ""
"Step Timing and Step Space on some drives are different. In this case the "
"Step point becomes important. If the drive steps on the falling edge then "
"the output pin should be inverted."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Servo Systems"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Basic Operation"
msgstr ""

#. type: Plain text
msgid ""
"Servo systems are capable of greater speed and accuracy than equivalent "
"stepper systems, but are more costly and complex.  Unlike stepper systems, "
"servo systems require some type of position feedback device, and must be "
"adjusted or 'tuned', as they don't quite work right out of the box as a "
"stepper system might. These differences exist because servos are a 'closed "
"loop' system, unlike stepper motors which are generally run 'open loop'. "
"What does 'closed loop' mean? Let's look at a simplified diagram of how a "
"servomotor system is connected."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "simplified diagram of how a servomotor system is connected"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/servo-feedback.png"
msgstr ""

#. type: Plain text
msgid ""
"This diagram shows that the input signal (and the feedback signal) drive the "
"summing amplifier, the summing amplifier drives the power amplifier, the "
"power amplifier drives the motor, the motor drives the load (and the "
"feedback device), and the feedback device (and the input signal)  drive the "
"motor.  This looks very much like a circle (a closed loop) where A controls "
"B, B controls C, C controls D, and D controls A."
msgstr ""

#. type: Plain text
msgid ""
"If you have not worked with servo systems before, this will no doubt seem a "
"very strange idea at first, especially as compared to more normal electronic "
"circuits, where the inputs proceed smoothly to the outputs, and never go "
"back.footnote:[If it helps, the closest equivalent to this in the digital "
"world are 'state machines', 'sequential machines' and so forth, where what "
"the outputs are doing 'now' depends on what the inputs (and the outputs)  "
"were doing 'before'. If it doesn't help, then nevermind.] If 'everything' "
"controls 'everything else', how can that ever work, who's in charge? The "
"answer is that LinuxCNC 'can' control this system, but it has to do it by "
"choosing one of several control methods.  The control method that LinuxCNC "
"uses, one of the simplest and best, is called PID."
msgstr ""

#. type: Plain text
msgid ""
"PID stands for Proportional, Integral, and Derivative. The Proportional "
"value determines the reaction to the current error, the Integral value "
"determines the reaction based on the sum of recent errors, and the "
"Derivative value determines the reaction based on the rate at which the "
"error has been changing. They are three common mathematical techniques that "
"are applied to the task of getting a working process to follow a set point. "
"In the case of LinuxCNC the process we want to control is actual axis "
"position and the set point is the commanded axis position."
msgstr ""

#. type: Block title
#, no-wrap
msgid "PID Loop"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "PID Loop, PID stands for Proportional, Integral, and Derivative"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pid-feedback.png"
msgstr ""

#. type: Plain text
msgid ""
"By 'tuning' the three constants in the PID controller algorithm, the "
"controller can provide control action designed for specific process "
"requirements. The response of the controller can be described in terms of "
"the responsiveness of the controller to an error, the degree to which the "
"controller overshoots the set point and the degree of system oscillation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Proportional term"
msgstr ""

#. type: Plain text
msgid ""
"The proportional term (sometimes called gain) makes a change to the output "
"that is proportional to the current error value. A high proportional gain "
"results in a large change in the output for a given change in the error. If "
"the proportional gain is too high, the system can become unstable. In "
"contrast, a small gain results in a small output response to a large input "
"error. If the proportional gain is too low, the control action may be too "
"small when responding to system disturbances."
msgstr ""

#. type: Plain text
msgid ""
"In the absence of disturbances, pure proportional control will not settle at "
"its target value, but will retain a steady state error that is a function of "
"the proportional gain and the process gain. Despite the steady-state offset, "
"both tuning theory and industrial practice indicate that it is the "
"proportional term that should contribute the bulk of the output change."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Integral term"
msgstr ""

#. type: Plain text
msgid ""
"The contribution from the integral term (sometimes called reset) is "
"proportional to both the magnitude of the error and the duration of the "
"error. Summing the instantaneous error over time (integrating the error) "
"gives the accumulated offset that should have been corrected previously. The "
"accumulated error is then multiplied by the integral gain and added to the "
"controller output."
msgstr ""

#. type: Plain text
msgid ""
"The integral term (when added to the proportional term) accelerates the "
"movement of the process towards set point and eliminates the residual steady-"
"state error that occurs with a proportional only controller. However, since "
"the integral term is responding to accumulated errors from the past, it can "
"cause the present value to overshoot the set point value (cross over the set "
"point and then create a deviation in the other direction)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Derivative term"
msgstr ""

#. type: Plain text
msgid ""
"The rate of change of the process error is calculated by determining the "
"slope of the error over time (i.e. its first derivative with respect to "
"time) and multiplying this rate of change by the derivative gain."
msgstr ""

#. type: Plain text
msgid ""
"The derivative term slows the rate of change of the controller output and "
"this effect is most noticeable close to the controller set point.  Hence, "
"derivative control is used to reduce the magnitude of the overshoot produced "
"by the integral component and improve the combined controller-process "
"stability."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Loop tuning"
msgstr ""

#. type: Plain text
msgid ""
"If the PID controller parameters (the gains of the proportional, integral "
"and derivative terms) are chosen incorrectly, the controlled process input "
"can be unstable, i.e. its output diverges, with or without oscillation, and "
"is limited only by saturation or mechanical breakage. Tuning a control loop "
"is the adjustment of its control parameters (gain/proportional band, "
"integral gain/reset, derivative gain/rate) to the optimum values for the "
"desired control response."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Manual tuning"
msgstr ""

#. type: Plain text
msgid ""
"A simple tuning method is to first set the I and D values to zero.  Increase "
"the P until the output of the loop oscillates, then the P should be set to "
"be approximately half of that value for a 'quarter amplitude decay' type "
"response. Then increase I until any offset is correct in sufficient time for "
"the process. However, too much I will cause instability. Finally, increase "
"D, if required, until the loop is acceptably quick to reach its reference "
"after a load disturbance.  However, too much D will cause excessive response "
"and overshoot. A fast PID loop tuning usually overshoots slightly to reach "
"the set point more quickly; however, some systems cannot accept overshoot, "
"in which case an 'over-damped' closed-loop system is required, which will "
"require a P setting significantly less than half that of the P setting "
"causing oscillation."
msgstr ""

#. type: Plain text
msgid ""
"The Real Time Application Interface (RTAI) is used to provide the best Real "
"Time (RT) performance. The RTAI patched kernel lets you write applications "
"with strict timing constraints. RTAI gives you the ability to have things "
"like software step generation which require precise timing."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ACPI"
msgstr ""

#. type: Plain text
msgid ""
"The Advanced Configuration and Power Interface (ACPI) has a lot of different "
"functions, most of which interfere with RT performance (for example: power "
"management, CPU power down, CPU frequency scaling, etc).  The LinuxCNC "
"kernel (and probably all RTAI-patched kernels) has ACPI disabled. ACPI also "
"takes care of powering down the system after a shutdown has been started, "
"and that's why you might need to push the power button to completely turn "
"off your computer. The RTAI group has been improving this in recent "
"releases, so your LinuxCNC system may shut off by itself after all."
msgstr ""

#. type: Plain text
msgid ""
"This test is the first test that should be performed on a PC to see if it is "
"able to drive a CNC machine."
msgstr ""

#. type: Plain text
msgid ""
"Latency is how long it takes the PC to stop what it is doing and respond to "
"an external request. For LinuxCNC the request is BASE_THREAD that makes the "
"periodic 'heartbeat' that serves as a timing reference for the step pulses. "
"The lower the latency, the faster you can run the heartbeat, and the faster "
"and smoother the step pulses will be."
msgstr ""

#. type: Plain text
msgid ""
"Latency is far more important than CPU speed.  A lowly Pentium II that "
"responds to interrupts within 10 microseconds each and every time can give "
"better results than the latest and fastest P4 Hyperthreading beast."
msgstr ""

#. type: Plain text
msgid ""
"The CPU isn't the only factor in determining latency.  Motherboards, video "
"cards, USB ports, and a number of other things can hurt the latency.  The "
"best way to find out what you are dealing with is to run the RTAI latency "
"test."
msgstr ""

#. type: Plain text
msgid ""
"Generating step pulses in software has one very big advantage - it's free.  "
"Just about every PC has a parallel port that is capable of outputting step "
"pulses that are generated by the software.  However, software step pulses "
"also have some disadvantages:"
msgstr ""

#. type: Plain text
msgid "limited maximum step rate"
msgstr ""

#. type: Plain text
msgid "jitter in the generated pulses"
msgstr ""

#. type: Plain text
msgid "loads the CPU"
msgstr ""

#. type: Plain text
msgid ""
"The best way to find out how well your PC will lrun LinuxCNC is to run the "
"HAL latency test.  To run the test, open a terminal window (In Ubuntu, from "
"Applications â Accessories â Terminal)  and run the following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "latency-test\n"
msgstr ""

#. type: Plain text
msgid "You should see something like this:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "HAL Latency Test"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../config/images/latency-test_en.png"
msgstr ""

#. type: Plain text
msgid ""
"While the test is running, you should 'abuse' the computer.  Move windows "
"around on the screen. Surf the web. Copy some large files around on the "
"disk. Play some music.  Run an OpenGL program such as glxgears.  The idea is "
"to put the PC through its paces while the latency test checks to see what "
"the worst case numbers are."
msgstr ""

#. type: Plain text
msgid "Do not run LinuxCNC or Stepconf while the latency test is running."
msgstr ""

#. type: Plain text
msgid ""
"The important number for software stepping is the 'max jitter' of the base "
"thread.  In the example above, that is 6693 nanoseconds, or 6.693 "
"microseconds.  Record this number, and enter it in Stepconf when it is "
"requested."
msgstr ""

#. type: Plain text
msgid ""
"In the example above, latency-test only ran for a few seconds.  You should "
"run the test for at least several minutes; sometimes the worst case latency "
"doesn't happen very often, or only happens when you do some particular "
"action. For instance, one Intel motherboard worked pretty well most of the "
"time, but every 64 seconds it had a very bad 300 us latency. Fortunately "
"that was fixable, see http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"FixingSMIIssues"
msgstr ""

#. type: Plain text
msgid ""
"So, what do the results mean? If your Max Jitter number is less than about "
"15-20 microseconds (15000-20000 nanoseconds), the computer should give very "
"nice results with software stepping. If the max latency is more like 30-50 "
"microseconds, you can still get good results, but your maximum step rate "
"might be a little disappointing, especially if you use microstepping or have "
"very fine pitch leadscrews. If the numbers are 100 us or more (100,000 "
"nanoseconds), then the PC is not a good candidate for software stepping. "
"Numbers over 1 millisecond (1,000,000 nanoseconds) mean the PC is not a good "
"candidate for LinuxCNC, regardless of whether you use software stepping or "
"not."
msgstr ""

#. type: Plain text
msgid ""
"Note that if you get high numbers, there may be ways to improve them. "
"Another PC had very bad latency (several milliseconds) when using the "
"onboard video. But a $5 used video card solved the problem."
msgstr ""

#. type: Plain text
msgid "LinuxCNC does not require bleeding edge hardware."
msgstr ""

#. type: Plain text
msgid ""
"For more information on stepper tuning see the <<cha:Stepper-Tuning,Stepper "
"Tuning>> Chapter."
msgstr ""

#. type: Plain text
msgid ""
"Additional command line tools are available for examining latency when "
"LinuxCNC is not running."
msgstr ""

#. type: Plain text
msgid ""
"latency-plot makes a strip chart recording for a base and a servo thread.  "
"It may be useful to see spikes in latency when other applications are "
"started or used.  Usage:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "latency-plot --help\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Usage:\n"
"      latency-plot --help | -?      (this)\n"
"      latency-plot --hal [Options]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Options:\n"
"      --base nS  (base  thread interval, default:   25000)\n"
"      --servo nS (servo thread interval, default: 1000000)\n"
"      --time mS  (report interval, default: 1000)\n"
"      --relative (relative clock time (default))\n"
"      --actual   (actual clock time)\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "latency-plot makes a strip chart recording for a base and a servo thread"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../config/images/latency-plot.png"
msgstr ""

#. type: Plain text
msgid ""
"latency-histogram displays a histogram of latency (jitter) for a base and "
"servo thread."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Usage:\n"
"   latency-histogram --help | -?\n"
"or\n"
"   latency-histogram [Options]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Options:\n"
"  --base      nS   (base  thread interval, default:   25000, min:  5000)\n"
"  --servo     nS   (servo thread interval, default: 1000000, min: 25000)\n"
"  --bbinsize  nS   (base  bin size,  default: 100\n"
"  --sbinsize  nS   (servo bin size, default: 100\n"
"  --bbins     n    (base  bins, default: 200\n"
"  --sbins     n    (servo bins, default: 200\n"
"  --logscale  0|1  (y axis log scale, default: 1)\n"
"  --text      note (additional note, default: \"\" )\n"
"  --show           (show count of undisplayed bins)\n"
"  --nobase         (servo thread only)\n"
"  --verbose        (progress and debug)\n"
"  --nox            (no gui, display elapsed,min,max,sdev for each thread)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Notes:\n"
"  Linuxcnc and Hal should not be running, stop with halrun -U.\n"
"  Large number of bins and/or small binsizes will slow updates.\n"
"  For single thread, specify --nobase (and options for servo thread).\n"
"  Measured latencies outside of the +/- bin range are reported\n"
"  with special end bars.  Use --show to show count for\n"
"  the off-chart [pos|neg] bin\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "latency-histogram displays a histogram of latency (jitter) for a base and servo thread"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "../config/images/latency-histogram.png"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Stepper Tuning"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Getting the most out of Software Stepping"
msgstr ""

#. type: Plain text
msgid ""
"Generating step pulses in software has one very big advantage - it's free. "
"Just about every PC has a parallel port that is capable of outputting step "
"pulses that are generated by the software. However, software step pulses "
"also have some disadvantages:"
msgstr ""

#. type: Plain text
msgid ""
"This chapter has some steps that can help you get the best results from "
"software generated steps."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Run a Latency Test"
msgstr ""

#. type: Plain text
msgid ""
"Run the latency test as described in the <<cha:latency-test,Latency Test>> "
"chapter."
msgstr ""

#. type: Plain text
msgid ""
"While the test is running, you should 'abuse' the computer. Move windows "
"around on the screen. Surf the web. Copy some large files around on the "
"disk. Play some music. Run an OpenGL program such as glxgears. The idea is "
"to put the PC through its paces while the latency test checks to see what "
"the worst case numbers are."
msgstr ""

#. type: Plain text
msgid ""
"The last number in the column labeled 'Max Jitter' is the most important.  "
"Write it down - you will need it later. It contains the worst latency "
"measurement during the entire run of the test. In the example above, that is "
"6693 nano-seconds, or 6,69 micro-seconds, which is excellent.  However the "
"example only ran for a few seconds (it prints one line every second). You "
"should run the test for at least several minutes; sometimes the worst case "
"latency doesn't happen very often, or only happens when you do some "
"particular action. I had one Intel motherboard that worked pretty well most "
"of the time, but every 64 seconds it had a very bad 300 us latency. "
"Fortunately that is fixable, see http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"FixingSMIIssues[Fixing SMI issues on the LinuxCNC Wiki]"
msgstr ""

#. type: Plain text
msgid ""
"So, what do the results mean? If your 'Max Jitter' number is less than about "
"15-20 microseconds (15000-20000 nanoseconds), the computer should give very "
"nice results with software stepping. If the max latency is more like 30-50 "
"microseconds, you can still get good results, but your maximum step rate "
"might be a little disappointing, especially if you use microstepping or have "
"very fine pitch leadscrews. If the numbers are 100 us or more (100,000 "
"nanoseconds), then the PC is not a good candidate for software stepping. "
"Numbers over 1 millisecond (1,000,000 nanoseconds) mean the PC is not a good "
"candidate for LinuxCNC, regardless of whether you use software stepping or "
"not."
msgstr ""

#. type: Plain text
msgid ""
"Note that if you get high numbers, there may be ways to improve them.  For "
"example, one PC had very bad latency (several milliseconds) when using the "
"onboard video. But a $5 used video card solved the problem - LinuxCNC does "
"not require bleeding edge hardware."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Figure out what your drives expect"
msgstr ""

#. type: Plain text
msgid ""
"Different brands of stepper drives have different timing requirements on "
"their step and direction inputs. So you need to dig out (or Google for) the "
"data sheet that has your drive's specs."
msgstr ""

#. type: Plain text
msgid "From the Gecko G202 manual:"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Step Frequency: 0 to 200 kHz \n"
"Step Pulse â0â Time: 0.5 us min (Step on falling edge) \n"
"Step Pulse â1â Time: 4.5 us min \n"
"Direction Setup: 1 us min (20 us min hold time after Step edge)\n"
msgstr ""

#. type: Plain text
msgid "From the Gecko G203V manual:"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Step Frequency: 0 to 333 kHz \n"
"Step Pulse â0â Time: 2.0 us min (Step on rising edge) \n"
"Step Pulse â1â Time: 1.0 us min \n"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Direction Setup: \n"
"    200 ns (0.2 us) before step pulse rising edge \n"
"    200 ns (0.2 us) hold after step pulse rising edge\n"
msgstr ""

#. type: Plain text
msgid "From the Xylotex datasheet:"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Minimum DIR setup time before rising edge of STEP Pulse 200 ns Minimum \n"
"DIR hold time after rising edge of STEP pulse 200 ns \n"
"Minimum STEP pulse high time 2.0 us \n"
"Minimum STEP pulse low time 1.0 us \n"
"Step happens on rising edge\n"
msgstr ""

#. type: Plain text
msgid ""
"Once you find the numbers, write them down too - you need them in the next "
"step."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Choose your BASE_PERIOD"
msgstr ""

#. type: Plain text
msgid ""
"BASE_PERIOD is the 'heartbeat' of your LinuxCNC computer. Every period, the "
"software step generator decides if it is time for another step pulse. A "
"shorter period will allow you to generate more pulses per second, within "
"limits. But if you go too short, your computer will spend so much time "
"generating step pulses that everything else will slow to a crawl, or maybe "
"even lock up. Latency and stepper drive requirements affect the shortest "
"period you can use, as we will see in a minute."
msgstr ""

#. type: Plain text
msgid ""
"Let's look at the Gecko example first. The G202 can handle step pulses that "
"go low for 0.5 us and high for 4.5 us, it needs the direction pin to be "
"stable 1 us before the falling edge, and remain stable for 20 us after the "
"falling edge. The longest timing requirement is the 20 us hold time.  A "
"simple approach would be to set the period at 20 us. That means that all "
"changes on the STEP and DIR lines are separated by 20 us. All is good, right?"
msgstr ""

#. type: Plain text
msgid ""
"Wrong! If there was ZERO latency, then all edges would be separated by 20 "
"us, and everything would be fine. But all computers have some latency. "
"Latency means lateness. If the computer has 11 us of latency, that means "
"sometimes the software runs as much as 11 us later than it was supposed to. "
"If one run of the software is 11 us late, and the next one is on time, the "
"delay from the first to the second is only 9 us. If the first one generated "
"a step pulse, and the second one changed the direction bit, you just "
"violated the 20 us G202 hold time requirement.  That means your drive might "
"have taken a step in the wrong direction, and your part will be the wrong "
"size."
msgstr ""

#. type: Plain text
msgid ""
"The really nasty part about this problem is that it can be very very rare. "
"Worst case latencies might only happen a few times a minute, and the odds of "
"bad latency happening just as the motor is changing direction are low. So "
"you get very rare errors that ruin a part every once in a while and are "
"impossible to troubleshoot."
msgstr ""

#. type: Plain text
msgid ""
"The simplest way to avoid this problem is to choose a BASE_PERIOD that is "
"the sum of the longest timing requirement of your drive, and the worst case "
"latency of your computer. If you are running a Gecko with a 20 us hold time "
"requirement, and your latency test said you have a maximum latency of 11 us, "
"then if you set the BASE_PERIOD to 20+11 = 31 us (31000 nano-seconds in the "
"ini file), you are guaranteed to meet the drive's timing requirements."
msgstr ""

#. type: Plain text
msgid ""
"But there is a tradeoff. Making a step pulse requires at least two periods. "
"One to start the pulse, and one to end it. Since the period is 31 us, it "
"takes 2x31 = 62 us to create a step pulse. That means the maximum step rate "
"is only 16,129 steps per second. Not so good. (But don't give up yet, we "
"still have some tweaking to do in the next section.)"
msgstr ""

#. type: Plain text
msgid ""
"For the Xylotex, the setup and hold times are very short, 200 ns each (0.2 "
"us). The longest time is the 2 us high time. If you have 11 us latency, then "
"you can set the BASE_PERIOD as low as 11+2=13 us. Getting rid of the long 20 "
"us hold time really helps! With a period of 13 us, a complete step takes "
"2x13 = 26 us, and the maximum step rate is 38,461 steps per second!"
msgstr ""

#. type: Plain text
msgid ""
"But you can't start celebrating yet. Note that 13 us is a very short period. "
"If you try to run the step generator every 13 us, there might not be enough "
"time left to run anything else, and your computer will lock up. If you are "
"aiming for periods of less than 25 us, you should start at 25 us or more, "
"run LinuxCNC, and see how things respond. If all is well, you can gradually "
"decrease the period. If the mouse pointer starts getting sluggish, and "
"everything else on the PC slows down, your period is a little too short. Go "
"back to the previous value that let the computer run smoothly."
msgstr ""

#. type: Plain text
msgid ""
"In this case, sppose you started at 25 us, trying to get to 13 us, but you "
"find that around 16 us is the limit - any less and the computer doesn't "
"respond very well. So you use 16 us. With a 16 us period and 11 us latency, "
"the shortest output time will be 16-11 = 5 us. The drive only needs 2 us, so "
"you have some margin. Margin is good - you don't want to lose steps because "
"you cut the timing too close."
msgstr ""

#. type: Plain text
msgid ""
"What is the maximum step rate? Remember, two periods to make a step.  You "
"settled on 16 us for the period, so a step takes 32 us. That works out to a "
"not bad 31,250 steps per second."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Use steplen, stepspace, dirsetup, and/or dirhold"
msgstr ""

#. type: Plain text
msgid ""
"In the last section, we got the Xylotex drive to a 16 us period and a 31,250 "
"step per second maximum speed. But the Gecko was stuck at 31 us and a not-so-"
"nice 16,129 steps per second. The Xylotex example is as good as we can make "
"it. But the Gecko can be improved."
msgstr ""

#. type: Plain text
msgid ""
"The problem with the G202 is the 20 us hold time requirement. That plus the "
"11 us latency is what forces us to use a slow 31 us period. But the LinuxCNC "
"software step generator has some parameters that let you increase the "
"various time from one period to several. For example, if steplen is changed "
"from 1 to 2, then it there will be two periods between the beginning and end "
"of the step pulse. Likewise, if dirhold is changed from 1 to 3, there will "
"be at least three periods between the step pulse and a change of the "
"direction pin."
msgstr ""

#. type: Plain text
msgid ""
"If we can use dirhold to meet the 20 us hold time requirement, then the next "
"longest time is the 4.5 us high time. Add the 11 us latency to the 4.5 us "
"high time, and you get a minimum period of 15.5 us. When you try 15.5 us, "
"you find that the computer is sluggish, so you settle on 16 us.  If we leave "
"dirhold at 1 (the default), then the minimum time between step and direction "
"is the 16 us period minus the 11 us latency = 5 us, which is not enough. We "
"need another 15 us. Since the period is 16 us, we need one more period. So "
"we change dirhold from 1 to 2. Now the minimum time from the end of the step "
"pulse to the changing direction pin is 5+16=21 us, and we don't have to "
"worry about the Gecko stepping the wrong direction because of latency."
msgstr ""

#. type: Plain text
msgid ""
"If the computer has a latency of 11 us, then a combination of a 16 us base "
"period, and a dirhold value of 2 ensures that we will always meet the timing "
"requirements of the Gecko. For normal stepping (no direction change), the "
"increased dirhold value has no effect. It takes two periods totalling 32 us "
"to make each step, and we have the same 31,250 step per second rate that we "
"got with the Xylotex."
msgstr ""

#. type: Plain text
msgid ""
"The 11 us latency number used in this example is very good. If you work "
"through these examples with larger latency, like 20 or 25 us, the top step "
"rate for both the Xylotex and the Gecko will be lower. But the same formulas "
"apply for calculating the optimum BASE_PERIOD, and for tweaking dirhold or "
"other step generator parameters."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "No Guessing!"
msgstr ""

#. type: Plain text
msgid ""
"For a fast AND reliable software based stepper system, you cannot just guess "
"at periods and other configuration parameters. You need to make measurements "
"on your computer, and do the math to ensure that your drives get the signals "
"they need."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"To make the math easier, I've created an Open Office spreadsheet  \n"
"http://wiki.linuxcnc.org/uploads/StepTimingCalculator.ods \n"
" You enter your latency test result and your stepper drive timing\n"
"requirements and the spreadsheet calculates the optimum BASE_PERIOD.\n"
"Next, you test the period to make sure it won't slow down or lock up\n"
"your PC. Finally, you enter the actual period, and the spreadsheet will\n"
"tell you the stepgen parameter settings that are needed to meet your\n"
"drive's timing requirements. It also calculates the maximum step rate\n"
"that you will be able to generate.\n"
msgstr ""

#. type: Plain text
msgid ""
"I've added a few things to the spreadsheet to calculate max speed and "
"stepper electrical calculations."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Stepper Diagnostics"
msgstr ""

#. type: Plain text
msgid ""
"If what you get is not what you expect many times you just got some "
"experience. Learning from the experience increases your understanding of the "
"whole. Diagnosing problems is best done by divide and conquer.  By this I "
"mean if you can remove 1/2 of the variables from the equation each time you "
"will find the problem the fastest. In the real world this is not always the "
"case, but it's usually a good place to start."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Common Problems"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Stepper Moves One Step"
msgstr ""

#. type: Plain text
msgid ""
"The most common reason in a new installation for a stepper motor not to move "
"is that the step and direction signals are exchanged. If you press the jog "
"forward and jog backward keys, alternately , and the stepper moves one step "
"each time, and in the same direction, there is your clue."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "No Steppers Move"
msgstr ""

#. type: Plain text
msgid ""
"Many drives have an enable pin or need a charge pump to enable the output."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Distance Not Correct"
msgstr ""

#. type: Plain text
msgid ""
"If you command the axis to move a specific distance and it does not move "
"that distance, then your scale setting is wrong."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Following Error"
msgstr ""

#. type: Plain text
msgid ""
"The concept of a following error is strange when talking about stepper "
"motors. Since they are an open loop system, there is no position feedback to "
"let you know if you actually are out of range. LinuxCNC calculates if it can "
"keep up with the motion called for, and if not, then it gives a following "
"error. Following errors usually are the result of one of the following on "
"stepper systems."
msgstr ""

#. type: Plain text
msgid "FERROR too small"
msgstr ""

#. type: Plain text
msgid "MIN_FERROR too small"
msgstr ""

#. type: Plain text
msgid "MAX_VELOCITY too fast"
msgstr ""

#. type: Plain text
msgid "MAX_ACCELERATION too fast"
msgstr ""

#. type: Plain text
msgid "BASE_PERIOD set too long"
msgstr ""

#. type: Plain text
msgid "Backlash added to an axis"
msgstr ""

#. type: Plain text
msgid ""
"Any of the above can cause the real-time pulsing to not be able to keep up "
"the requested step rate. This can happen if you didn't run the latency test "
"long enough to get a good number to plug into the Stepconf Wizard, or if you "
"set the Maximum Velocity or Maximum Acceleration too high."
msgstr ""

#. type: Plain text
msgid ""
"If you added backlash you need to increase the STEPGEN_MAXACCEL up to double "
"the MAX_ACCELERATION in the AXIS section of the INI file for each axis you "
"added backlash to. LinuxCNC uses \"extra acceleration\" at a reversal to "
"take up the backlash. Without backlash correction, step generator "
"acceleration can be just a few percent above the motion planner acceleration."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RTAPI Error"
msgstr ""

#. type: Plain text
msgid "When you get this error:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    RTAPI: ERROR: Unexpected realtime delay on task n\n"
msgstr ""

#. type: Plain text
msgid ""
"This error is generated by rtapi based on an indication from RTAI that a "
"deadline was missed. It is usually an indication that the BASE_PERIOD in the "
"[EMCMOT] section of the ini file is set too low. You should run the Latency "
"Test for an extended period of time to see if you have any delays that would "
"cause this problem. If you used the Stepconf Wizard, run it again, and test "
"the Base Period Jitter again, and adjust the Base Period Maximum Jitter on "
"the Basic Machine Information page. You might have to leave the test running "
"for an extended period of time to find out if some hardware causes "
"intermittent problems."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC tracks the number of CPU cycles between invocations of the real-"
"time thread. If some element of your hardware is causing delays or your "
"realtime threads are set too fast you will get this error."
msgstr ""

#. type: Plain text
msgid ""
"This error is only displayed once per session. If you had your BASE_PERIOD "
"too low you could get hundreds of thousands of error messages per second if "
"more than one was displayed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
msgid ""
"If you are seeing an axis ending up in the wrong location over multiple "
"moves, it is likely that you do not have the correct direction hold times or "
"step timing for your stepper drivers. Each direction change may be losing a "
"step or more. If the motors are stalling, it is also possible you have "
"either the MAX_ACCELERATION or MAX_VELOCITY set too high for that axis."
msgstr ""

#. type: Plain text
msgid ""
"The following program will test the Z axis configuration for proper setup. "
"Copy the program to your ~/emc2/nc_files directory and name it TestZ.ngc or "
"similar. Zero your machine with Z = 0.000 at the table top. Load and run the "
"program. It will make 200 moves back and forth from 0.5 to 1\". If you have "
"a configuration issue, you will find that the final position will not end up "
"0.500\" that the axis window is showing. To test another axis just replace "
"the Z with your axis in the G0 lines."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    ( test program to see if Z axis loses position ) \n"
"    ( msg, test 1 of Z axis configuration ) \n"
"    G20 #1000=100 ( loop 100 times ) \n"
"    ( this loop has delays after moves ) \n"
"    ( tests acc and velocity settings ) \n"
"    o100 while [#1000] \n"
"    G0 Z1.000 \n"
"    G4 P0.250 \n"
"    G0 Z0.500 \n"
"    G4 P0.250 \n"
"    #1000 = [#1000 - 1] \n"
"    o100 endwhile \n"
"    ( msg, test 2 of Z axis configuration S to continue) \n"
"    M1 (stop here) \n"
"    #1000=100 ( loop 100 times ) \n"
"    ( the next loop has no delays after moves ) \n"
"    ( tests direction hold times on driver config and also max accel setting ) \n"
"    o101 while [#1000]  \n"
"    G0 Z1.000 \n"
"    G0 Z0.500 \n"
"    #1000 = [#1000 - 1] \n"
"    o101 endwhile \n"
"    ( msg, Done...Z should be exactly .5\" above table ) \n"
"    M2\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Stepper Quickstart"
msgstr ""

#. type: Plain text
msgid ""
"This section assumes you have done a standard install from the Live CD. "
"After installation it is recommended that you connect the computer to the "
"Internet and wait for the update manager to pop up and get the latest "
"updates for LinuxCNC and Ubuntu before continuing."
msgstr ""

#. type: Plain text
msgid ""
"The Latency Test determines how late your computer processor is in "
"responding to a request. Some hardware can interrupt the processing which "
"could cause missed steps when running a CNC machine. This is the first thing "
"you need to do. Follow the instructions <<latency-test,here>> to run the "
"latency test."
msgstr ""

#. type: Plain text
msgid "[[sec:sherline]](((Sherline)))"
msgstr ""

#. type: Table
#, no-wrap
msgid "Sherline"
msgstr ""

#. type: Plain text
msgid ""
"If you have a Sherline several predefined configurations are provided.  This "
"is on the main menu CNC/EMC then pick the Sherline configuration that "
"matches yours and save a copy."
msgstr ""

#. type: Plain text
msgid "[[sec:xylotex]](((Xylotex)))"
msgstr ""

#. type: Table
#, no-wrap
msgid "Xylotex"
msgstr ""

#. type: Plain text
msgid ""
"If you have a Xylotex you can skip the following sections and go straight to "
"the <<cha:stepconf-wizard,Stepper Config Wizard>>.  LinuxCNC has provided "
"quick setup for the Xylotex machines."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Machine Information"
msgstr ""

#. type: Plain text
msgid "Gather the information about each axis of your machine."
msgstr ""

#. type: Plain text
msgid ""
"Drive timing is in nano seconds. If you're unsure about the timing many "
"popular drives are included in the stepper configuration wizard.  Note some "
"newer Gecko drives have different timing than the original one. A http://"
"wiki.linuxcnc.org/[list] is also on the user maintained LinuxCNC wiki site "
"of more drives."
msgstr ""

#. type: Table
#, no-wrap
msgid "Drive Type"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step Time ns"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step Space ns"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dir. Hold ns"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dir. Setup ns"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pinout Information"
msgstr ""

#. type: Plain text
msgid ""
"Gather the information about the connections from your machine to the PC "
"parallel port."
msgstr ""

#. type: Table
#, no-wrap
msgid "Output Pin"
msgstr ""

#. type: Table
#, no-wrap
msgid "Typ. Function"
msgstr ""

#. type: Table
#, no-wrap
msgid "If Different"
msgstr ""

#. type: Table
#, no-wrap
msgid "Input Pin"
msgstr ""

#. type: Table
#, no-wrap
msgid "E-Stop Out"
msgstr ""

#. type: Table
#, no-wrap
msgid "X Limit/Home"
msgstr ""

#. type: Table
#, no-wrap
msgid "X Step"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y Limit/Home"
msgstr ""

#. type: Table
#, no-wrap
msgid "X Direction"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z Limit/Home"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y Step"
msgstr ""

#. type: Table
#, no-wrap
msgid "A Limit/Home"
msgstr ""

#. type: Table
#, no-wrap
msgid "Y Direction"
msgstr ""

#. type: Table
#, no-wrap
msgid "Probe In"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z Step"
msgstr ""

#. type: Table
#, no-wrap
msgid "Z Direction"
msgstr ""

#. type: Table
#, no-wrap
msgid "A Step"
msgstr ""

#. type: Table
#, no-wrap
msgid "A Direction"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle CW"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spindle PWM"
msgstr ""

#. type: Table
#, no-wrap
msgid "Amplifier Enable"
msgstr ""

#. type: Plain text
msgid ""
"Note any pins not used should be set to Unused in the drop down box.  These "
"can always be changed later by running Stepconf again."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Mechanical Information"
msgstr ""

#. type: Plain text
msgid ""
"Gather information on steps and gearing. The result of this is steps per "
"user unit which is used for SCALE in the .ini file."
msgstr ""

#. type: Table
#, no-wrap
msgid "Steps/Rev."
msgstr ""

#. type: Table
#, no-wrap
msgid "Micro Steps"
msgstr ""

#. type: Table
#, no-wrap
msgid "Motor Teeth"
msgstr ""

#. type: Table
#, no-wrap
msgid "Leadscrew Teeth"
msgstr ""

#. type: Table
#, no-wrap
msgid "Leadscrew Pitch"
msgstr ""

#. type: Plain text
msgid ""
"'Steps per revolution' - is how many stepper-motor-steps it takes to turn "
"the stepper motor one revolution.  Typical is 200."
msgstr ""

#. type: Plain text
msgid ""
"'Micro Steps' - is how many steps the drive needs to move the stepper motor "
"one full step.  If microstepping is not used, this number will be 1.  If "
"microstepping is used the value will depend on the stepper drive hardware."
msgstr ""

#. type: Plain text
msgid ""
"'Motor Teeth and Leadscrew Teeth' - is if you have some reduction (gears, "
"chain, timing belt, etc.) between the motor and the leadscrew.  If not, then "
"set these both to 1."
msgstr ""

#. type: Plain text
msgid ""
"'Leadscrew Pitch' - is how much movement occurs (in user units) in one "
"leadscrew turn.  If you're setting up in inches then it is inches per turn.  "
"If you're setting up in millimeters then it is millimeters per turn."
msgstr ""

#. type: Plain text
msgid ""
"The net result you're looking for is how many CNC-output-steps it takes to "
"move one user unit (inches or mm)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Units inches"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"Stepper         = 200 steps per revolution\n"
"Drive           =  10 micro steps per step\n"
"Motor Teeth     =  20\n"
"Leadscrew Teeth =  40\n"
"Leadscrew Pitch =   0.2000 inches per turn\n"
msgstr ""

#. type: delimited block =
msgid "From the above information, the leadscrew moves 0.200 inches per turn."
msgstr ""

#. type: delimited block =
msgid "The motor turns 2.000 times per 1 leadscrew turn."
msgstr ""

#. type: delimited block =
msgid "The drive takes 10 microstep inputs to make the stepper step once."
msgstr ""

#. type: delimited block =
msgid ""
"The drive needs 2000 steps to turn the stepper one revolution.  So the scale "
"needed is:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/step-calc-inch-math.png"
msgstr ""

#. latexmath:[ 
#. \frac{200 motor steps}{1 motor rev} \times 
#. \frac{10 microsteps}{1 motor step} \times
#. \frac{2 motor revs}{1 leadscrew rev} \times 
#. \frac{1 leadscrew revs}{0.2000 inch} 
#. = \frac{20,000 microsteps}{inch} ]
#. type: Block title
#, no-wrap
msgid "Units mm"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"    Stepper         = 200 steps per revolution\n"
"    Drive           =   8 micro steps per step\n"
"    Motor Teeth     =  30 \n"
"    Leadscrew Teeth =  90\n"
"    Leadscrew Pitch =   5.00 mm per turn\n"
msgstr ""

#. type: delimited block =
msgid "From the above information:"
msgstr ""

#. type: delimited block =
msgid "The leadscrew moves 5.00 mm per turn."
msgstr ""

#. type: delimited block =
msgid "The motor turns 3.000 times per 1 leadscrew turn."
msgstr ""

#. type: delimited block =
msgid "The drive takes 8 microstep inputs to make the stepper step once."
msgstr ""

#. type: delimited block =
msgid ""
"The drive needs 1600 steps to turn the stepper one revolution.  So the scale "
"needed is:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/step-calc-mm-math.png"
msgstr ""

#. latexmath:[ 
#. \frac{200 motor steps}{1 motor rev} \times 
#. \frac{8 microsteps}{1 motor step} \times
#. \frac{3 motor revs}{1 leadscrew rev} \times 
#. \frac{1 leadscrew revs}{5.000 mm} 
#. = \frac{960 microsteps}{mm} ]
#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "INI Configuration"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The INI File Components"
msgstr ""

#. type: Plain text
msgid "A typical INI file follows a rather simple layout that includes;"
msgstr ""

#. type: Plain text
msgid "comments"
msgstr ""

#. type: Plain text
msgid "sections"
msgstr ""

#. type: Plain text
msgid "variables"
msgstr ""

#. type: Plain text
msgid ""
"Each of these elements is separated on single lines. Each end of line or "
"newline character creates a new element."
msgstr ""

#. type: Plain text
msgid "(((INI File, Comments)))"
msgstr ""

#. type: Plain text
msgid ""
"A comment line is started with a ; or a # mark. When the ini reader sees "
"either of these marks at the start a line, the rest of the line is ignored "
"by the software. Comments can be used to describe what an INI element will "
"do."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"; This is my mill configuration file.\n"
"# I set it up on January 12, 2012\n"
msgstr ""

#. type: Plain text
msgid ""
"Comments can also be used to 'turn off' a variable. This makes it easier to "
"pick between different variables."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"DISPLAY = axis\n"
"# DISPLAY = touchy\n"
msgstr ""

#. type: Plain text
msgid ""
"In this list, the DISPLAY variable will be set to axis because the other one "
"is commented out. If someone carelessly edits a list like this and leaves "
"two of the lines uncommented, the first one encountered will be used."
msgstr ""

#. type: Plain text
msgid ""
"Note that inside a variable, the \"#\" and \";\" characters do not denote "
"comments:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "INCORRECT = value     # and a comment\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Correct Comment\n"
"CORRECT = value\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Sections"
msgstr ""

#. type: Plain text
msgid ""
"Related parts of an ini file are separated into sections.  A section name is "
"enclosed in brackets like this '[THIS_SECTION]' The order of sections is "
"unimportant. Sections begin at the section name and end at the next section "
"name."
msgstr ""

#. type: Plain text
msgid "The following sections are used by LinuxCNC:"
msgstr ""

#. type: Plain text
msgid "'[<<sec:emc-section,EMC>>]' general information"
msgstr ""

#. type: Plain text
msgid ""
"'[<<sec:display-section,DISPLAY>>]' settings related to the graphical user "
"interface"
msgstr ""

#. type: Plain text
msgid "'[<<sec:filter-section,FILTER>>]' settings input filter programs"
msgstr ""

#. type: Plain text
msgid ""
"'[<<sec:rs274ngc-section,RS274NGC>>]' settings used by the g-code interpreter"
msgstr ""

#. type: Plain text
msgid ""
"'[<<sec:emcmot-section,EMCMOT>>]' settings used by the real time motion "
"controller"
msgstr ""

#. type: Plain text
msgid "'[<<sec:task-section,TASK>>]' settings used by the task controller"
msgstr ""

#. type: Plain text
msgid "'[<<sec:hal-section,HAL>>]' specifies .hal files"
msgstr ""

#. type: Plain text
msgid "'[<<sec:halui-section,HALUI>>]' MDI commands used by HALUI"
msgstr ""

#. type: Plain text
msgid ""
"'[<<sec:applications-section,APPLICATIONS>>]' Other applications to be "
"started by LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"'[<<sec:traj-section,TRAJ>>]' additional settings used by the real time "
"motion controller"
msgstr ""

#. type: Plain text
msgid "'[<<sec:joint-section,JOINT_n>>]' individual joint variables"
msgstr ""

#. type: Plain text
msgid "'[<<sec:axis-section,AXIS_n>>]' individual axis variables"
msgstr ""

#. type: Plain text
msgid "'[<<sec:kins-section,KINS>>]' kinematics variables"
msgstr ""

#. type: Plain text
msgid "'[<<sec:emcio-section,EMCIO>>]' settings used by the I/O Controller"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Variables"
msgstr ""

#. type: Plain text
msgid ""
"A variable line is made up of a variable name, an equals sign (=), and a "
"value. Everything from the first non-white space character after the"
msgstr ""

#. type: Title =
#, no-wrap
msgid "up to the end of the line is passed as the value, so you can embed"
msgstr ""

#. type: Plain text
msgid ""
"spaces in string symbols if you want to or need to. A variable name is often "
"called a keyword."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Variable Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MACHINE = My Machine\n"
msgstr ""

#. type: Plain text
msgid ""
"A variable line may be extended to multiple lines with a terminal backslash "
"(\\)  character.  A maximum of MAX_EXTEND_LINES (==20) are allowed.  There "
"must be no whitespace following the trailing backslash character."
msgstr ""

#. type: Plain text
msgid "Section identifiers may not be extended to multiple lines."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Variable with Line extends Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"APP = sim_pin \\\n"
"ini.0.max_acceleration \\\n"
"ini.1.max_acceleration \\\n"
"ini.2.max_acceleration \\\n"
"ini.0.max_velocity \\\n"
"ini.1.max_velocity \\\n"
"ini.2.max_velocity\n"
msgstr ""

#. type: Plain text
msgid ""
"The following sections detail each section of the configuration file, using "
"sample values for the configuration lines."
msgstr ""

#. type: Plain text
msgid ""
"Variables that are used by LinuxCNC must always use the section names and "
"variable names as shown. In the following example the variable 'MACHINE' is "
"assigned the value 'My Machine'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Custom Sections and Variables"
msgstr ""

#. type: Plain text
msgid ""
"Most sample configurations use custom sections and variables to put all of "
"the settings into one location for convenience."
msgstr ""

#. type: Plain text
msgid ""
"To add a custom variable to an existing LinuxCNC section, simply include the "
"variable in that section."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Custom Variable Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"TYPE = LINEAR\n"
"...\n"
"SCALE = 16000\n"
msgstr ""

#. type: Plain text
msgid ""
"To introduce a custom section with its own variables, add the section and "
"variables to the INI file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Custom Section Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[PROBE]\n"
"Z_FEEDRATE = 50\n"
"Z_OFFSET = 12\n"
"Z_SAFE_DISTANCE = -10\n"
msgstr ""

#. type: Plain text
msgid ""
"To use the custom variables in your HAL file, put the section and variable "
"name in place of the value."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp offset.1.offset [PROBE]Z_OFFSET\n"
"setp stepgen.0.position-scale [JOINT_0]SCALE\n"
msgstr ""

#. type: Plain text
msgid ""
"The value stored in the variable must match the type specified by the "
"component pin."
msgstr ""

#. type: Plain text
msgid ""
"To use the custom variables in G-code, use the global variable syntax "
"`#<_ini[section]variable>`. The following example shows a simple Z-axis "
"touch-off routine for a router or mill using a probe plate."
msgstr ""

#. type: Block title
#, no-wrap
msgid "G-code Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G91\n"
"G38.2 Z#<_ini[probe]z_safe_distance> F#<_ini[probe]z_feedrate>\n"
"G90\n"
"G1 Z#5063\n"
"G10 L20 P0 Z#<_ini[probe]z_offset>\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Include Files"
msgstr ""

#. type: Plain text
msgid ""
"An INI file may include the contents of another file by using a #INCLUDE "
"directive."
msgstr ""

#. type: Block title
#, no-wrap
msgid "#INCLUDE Format"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#INCLUDE filename\n"
msgstr ""

#. type: Plain text
msgid "The filename can be specified as:"
msgstr ""

#. type: Plain text
msgid "a file in the same directory as the INI file"
msgstr ""

#. type: Plain text
msgid "a file located relative to the working directory"
msgstr ""

#. type: Plain text
msgid "an absolute file name (starts with a /)"
msgstr ""

#. type: Plain text
msgid "a user-home-relative file name (starts with a ~)"
msgstr ""

#. type: Plain text
msgid "Multiple #INCLUDE directives are supported."
msgstr ""

#. type: Block title
#, no-wrap
msgid "#INCLUDE Examples"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#INCLUDE joint_0.inc\n"
"#INCLUDE ../parallel/joint_1.inc\n"
"#INCLUDE below/joint_2.inc\n"
"#INCLUDE /home/myusername/myincludes/display.inc\n"
"#INCLUDE ~/linuxcnc/myincludes/rs274ngc.inc\n"
msgstr ""

#. type: Plain text
msgid ""
"The #INCLUDE directives are supported for one level of expansion only -- an "
"included file may not include additional files.  The recommended file "
"extension is .inc.  Do not use a file extension of .ini for included files."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "INI File Sections"
msgstr ""

#. type: Plain text
msgid "[[sec:emc-section]](((INI File, EMC Section)))"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "[EMC] Section"
msgstr ""

#. type: Plain text
msgid ""
"'VERSION = 1.1' - The version number for the configuration. Any value other"
msgstr ""

#. type: Plain text
msgid ""
"than 1.1 will cause the configuration checker to run and try to update the "
"configuration to the new style joint axes type of configuration."
msgstr ""

#. type: Plain text
msgid ""
"'MACHINE = My Controller' - This is the name of the controller, which is"
msgstr ""

#. type: Plain text
msgid ""
"printed out at the top of most graphical interfaces. You can put whatever "
"you want here as long as you make it a single line long."
msgstr ""

#. type: Plain text
msgid ""
"'DEBUG = 0' - Debug level 0 means no messages will be printed when LinuxCNC "
"is run from a <<faq:terminal,terminal>>. Debug flags are usually only useful "
"to developers. See src/emc/nml_intf/debugflags.h for other settings."
msgstr ""

#. type: Plain text
msgid "[[sec:display-section]](((INI File, DISPLAY Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[DISPLAY] Section"
msgstr ""

#. type: Plain text
msgid ""
"Different user interface programs use different options, and not every "
"option is supported by every user interface. There are several interfaces, "
"like Axis, Gmoccapy, Touchy, qtvcp's QtDragon and Gscreen.  Axis is an "
"interface for use with normal computer and monitor, Touchy is for use with "
"touch screens. Gmoccapy can be used both ways and offers also many "
"connections for hardware controls.  Descriptions of the interfaces are in "
"the Interfaces section of the User Manual."
msgstr ""

#. type: Plain text
msgid "'DISPLAY = axis' - The name of the user interface to use. Valid options"
msgstr ""

#. type: Plain text
msgid ""
"may include: 'axis', 'touchy', 'gmoccapy', 'gscreen', 'tklinuxcnc', 'qtvcp'"
msgstr ""

#. type: Plain text
msgid ""
"'POSITION_OFFSET = RELATIVE' - The coordinate system (RELATIVE or MACHINE)  "
"to show on the DRO when the user interface starts. The RELATIVE coordinate "
"system reflects the G92 and G5x coordinate offsets currently in effect."
msgstr ""

#. type: Plain text
msgid ""
"'POSITION_FEEDBACK = COMMANDED' - The coordinate value (COMMANDED or "
"ACTUAL)  to show on the DRO when the user interface starts. In Axis this can "
"be changed from the View menu. The COMMANDED position is the position "
"requested by LinuxCNC. The ACTUAL position is the feedback position of the "
"motors if they have feedback like most servo systems. Typically the "
"COMMANDED value is used."
msgstr ""

#. type: Plain text
msgid ""
"'DRO_FORMAT_MM = %+08.6f' - Over-ride the default DRO formatting in metric "
"mode. (normally 3 decimal places, padded with spaces to 6 digits to the "
"left)  the example above will pad with zeros, display 6 decimal digits and "
"force display of a + sign for positive numbers. Formatting follows Python "
"practice.  https://docs.python.org/2/library/string.html#format-"
"specification-mini-language an error will be raised if the format can not "
"accept a floating-point value."
msgstr ""

#. type: Plain text
msgid ""
"'DRO_FORMAT_IN = % 4.1f' - Over-ride the default DRO formatting in imperial "
"mode. (normally 4 decimal places, padded with spaces to 6 digits to the "
"left)  the example above will display only one decimal digit. Formatting "
"follows Python practice.  https://docs.python.org/2/library/string."
"html#format-specification-mini-language An error will be raised if the "
"format can not accept a floating-point value."
msgstr ""

#. type: Plain text
msgid ""
"'CONE_BASESIZE = .25' - Over-ride the default cone/tool base size of .5 in "
"the graphics display"
msgstr ""

#. type: Plain text
msgid ""
"'MAX_FEED_OVERRIDE = 1.2' - The maximum feed override the user may select.  "
"1.2 means 120% of the programmed feed rate."
msgstr ""

#. type: Plain text
msgid ""
"'MIN_SPINDLE_OVERRIDE = 0.5' - The minimum spindle override the user may "
"select. 0.5 means 50% of the programmed spindle speed. (This is used to set "
"the minimum spindle speed)."
msgstr ""

#. type: Plain text
msgid ""
"'MIN_SPINDLE_0_OVERRIDE = 0.5'- The minimum spindle override the user may "
"select. 0.5 means 50% of the programmed spindle speed. (This is used to set "
"the minimum spindle speed). On multi spindle machine there will be entries "
"for each spindle number. Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'MAX_SPINDLE_OVERRIDE = 1.0' - The maximum spindle override the user may "
"select. 1.0 means 100% of the programmed spindle speed."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_SPINDLE_0_OVERRIDE = 1.0' - The maximum feed override the user may "
"select.  1.2 means 120% of the programmed feed rate.  On multi spindle "
"machine there will be entries for each spindle number. Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_SPINDLE_SPEED = 100' - The default spindle RPM when the spindle is "
"started in manual mode. if this setting is not present, this defaults to 1 "
"RPM for AXIS and 300 RPM for gmoccapy."
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_SPINDLE_0_SPEED = 100' - The default spindle RPM when the spindle "
"is started in manual mode. On multi spindle machine there will be entries "
"for each spindle number. Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'SPINDLE_INCREMENT = 200' - The increment used when clicking increase/"
"decrease buttons Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'MIN_SPINDLE_0_SPEED = 1000' - The minimum RPM that can be manually "
"selected.  On multi spindle machine there will be entries for each spindle "
"number. Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'MAX_SPINDLE_0_SPEED = 20000' - The maximum RPM that can be manually "
"selected.  On multi spindle machine there will be entries for each spindle "
"number. Qtvcp only"
msgstr ""

#. type: Plain text
msgid ""
"'PROGRAM_PREFIX = ~/linuxcnc/nc_files' - The default location for g-code "
"files and the location for user-defined M-codes. This location is searched "
"for the file name before the subroutine path and user M path if specified in "
"the [RS274NGC] section."
msgstr ""

#. type: Plain text
msgid "'INTRO_GRAPHIC = emc2.gif' - The image shown on the splash screen."
msgstr ""

#. type: Plain text
msgid ""
"'INTRO_TIME = 5' - The maximum time to show the splash screen, in seconds."
msgstr ""

#. type: Plain text
msgid ""
"'CYCLE_TIME = 100' - Cycle time of the Display GUI. Depending on the screen, "
"this can be in seconds or ms (ms preferred). This is often the update rate "
"rather then sleep time between updates. If the update time is not set right "
"the screen can become unresponsive or very jerky. A value of 100ms (0.1 "
"seconds) is a common setting though a range of 50 - 200ms (.05 - .2 seconds) "
"may be useable. An under powered CPU may see improvement with a longer "
"setting. Usually the default is fine."
msgstr ""

#. type: Plain text
msgid ""
"The following [DISPLAY] items are used by GladeVCP, see the <<gladevcp:"
"embeding-tab,embedding a tab>> section of the GladeVCP Chapter."
msgstr ""

#. type: Plain text
msgid "'EMBED_TAB_NAME=GladeVCP demo'"
msgstr ""

#. type: Plain text
msgid ""
"'EMBED_TAB_COMMAND=halcmd loadusr -Wn gladevcp gladevcp -c gladevcp -x {XID} "
"-u ./gladevcp/hitcounter.py ./gladevcp/manual-example.ui'"
msgstr ""

#. type: Plain text
msgid ""
"Different user interface programs use different options, and not every "
"option is supported by every user interface.  See <<cha:axis-gui,AXIS GUI>> "
"document for AXIS details.  See <<cha:gmoccapy,gmoccapy>> document for "
"Gmoccapy details."
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_LINEAR_VELOCITY = .25' - The default velocity for linear jogs, in ,"
msgstr ""

#. type: Plain text
msgid "<<sec:traj-section,machine units>> per second."
msgstr ""

#. type: Plain text
msgid "'MIN_VELOCITY = .01' - The approximate lowest value the jog slider."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_LINEAR_VELOCITY = 1.0' - The maximum velocity for linear jogs, in "
"machine units per second."
msgstr ""

#. type: Plain text
msgid ""
"'MIN_LINEAR_VELOCITY = .01' - The approximate lowest value the jog slider."
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_ANGULAR_VELOCITY = .25' - The default velocity for angular jogs, in "
"machine units per second."
msgstr ""

#. type: Plain text
msgid ""
"'MIN_ANGULAR_VELOCITY = .01' - The approximate lowest value the angular jog "
"slider."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_ANGULAR_VELOCITY = 1.0' - The maximum velocity for angular jogs, in "
"machine units per second."
msgstr ""

#. type: Plain text
msgid ""
"'INCREMENTS = 1 mm, .5 in, ...' - Defines the increments available for "
"incremental jogs."
msgstr ""

#. type: Plain text
msgid ""
"The INCREMENTS can be used to override the default.  The values can be "
"decimal numbers (e.g., 0.1000) or fractional numbers (e.g., 1/16), "
"optionally followed by a unit (cm, mm, um, inch, in or mil).  If a unit is "
"not specified the machine unit is assumed.  Metric and imperial distances "
"may be mixed: INCREMENTS = 1 inch, 1 mil, 1 cm, 1 mm, 1 um is a valid entry."
msgstr ""

#. type: Plain text
msgid "'GRIDS = 10 mm, 1 in, ...' - Defines the preset values for grid lines."
msgstr ""

#. type: Plain text
msgid "The value is interpreted the same way as 'INCREMENTS'."
msgstr ""

#. type: Plain text
msgid ""
"'OPEN_FILE = /full/path/to/file.ngc' - The file to show in the preview plot "
"when AXIS starts. Use"
msgstr ""

#. type: Plain text
msgid ""
"a blank string \"\" and no file will be loaded at start up. gmoccapy will "
"not use this setting, as it offers a corresponding entry on its settings "
"page."
msgstr ""

#. type: Plain text
msgid ""
"'EDITOR = gedit' - The editor to use when selecting File > Edit to edit the "
"G code"
msgstr ""

#. type: Plain text
msgid ""
"from the AXIS menu. This must be configured for this menu item to work. "
"Another valid entry is gnome-terminal -e vim. This entry does not apply to "
"gmoccapy, as gmoccapy has an integrated editor."
msgstr ""

#. type: Plain text
msgid ""
"'TOOL_EDITOR = tooledit' - The editor to use when editing the tool table "
"(for example by"
msgstr ""

#. type: Plain text
msgid ""
"selecting \"File > Edit tool table...\" in Axis). Other valid entries are "
"\"gedit\", \"gnome-terminal -e vim\", and \"gvim\". This entry does not "
"apply to gmoccapy, as gmoccapy has an integrated editor."
msgstr ""

#. type: Plain text
msgid "'PYVCP = /filename.xml' - The PyVCP panel description file. See the"
msgstr ""

#. type: Plain text
msgid "<<cha:pyvcp,PyVCP Chapter>> for more information."
msgstr ""

#. type: Plain text
msgid ""
"'PYVCP_POSITION = BOTTOM' - The placement of the PyVCP panel in the AXIS "
"user interface."
msgstr ""

#. type: Plain text
msgid ""
"If this variable is omitted the panel will default to the right side. The "
"only valid alternative is BOTTOM. See the <<cha:pyvcp,PyVCP Chapter>> for "
"more information."
msgstr ""

#. type: Plain text
msgid ""
"'LATHE = 1' - Any non-empty value (including \"0\") causes axis to use "
"\"lathe mode\" with a top view and with Radius and Diameter on the DRO."
msgstr ""

#. type: Plain text
msgid ""
"'BACK_TOOL_LATHE = 1' - Any non-empty value (including \"0\") causes axis to "
"use \"back tool lathe mode\" with inverted X axis."
msgstr ""

#. type: Plain text
msgid ""
"'FOAM = 1' - Any non-empty value (including \"0\") causes axis to change the "
"display for foam-cutter mode."
msgstr ""

#. type: Plain text
msgid ""
"'GEOMETRY = XYZABCUVW' - Controls the *preview* and *backplot* of motion."
msgstr ""

#. type: Plain text
msgid ""
"This item consists of a sequence of axis letters and control characters:"
msgstr ""

#. type: Plain text
msgid "The letters X,Y,Z specify translation along the named coordinate."
msgstr ""

#. type: Plain text
msgid "The letters A,B,C specify rotation about the corresponding axes X,Y,Z."
msgstr ""

#. type: Plain text
msgid "The letters U,V,W specify translation along the related axes X,Y,Z."
msgstr ""

#. type: Plain text
msgid ""
"Each letter specified must occur in [TRAJ]COORDINATES to have an effect."
msgstr ""

#. type: Plain text
msgid ""
"A \"*-*\" character preceding any letter inverts the direction of the "
"operation."
msgstr ""

#. type: Plain text
msgid ""
"The translation and rotation operations are evaluated *right-to-left*.  So "
"using GEOMETRY=XYZBC specifies a C rotation followed by a B rotation "
"followed by Z,Y,X translations.  (The ordering of consecutive translation "
"letters is immaterial.)"
msgstr ""

#. type: Plain text
msgid ""
"If the \"*!*\" special character appears anywhere in the sequence, rotations "
"for the A,B,C axis letters respect the offsets (G5x, G92) applied to X,Y,Z."
msgstr ""

#. type: Plain text
msgid ""
"The proper GEOMETRY string depends on the machine configuration and the "
"kinematics used to control it. The order of the letters is important.  For "
"example, rotating around C then B is different than rotating around B then C."
msgstr ""

#. type: Plain text
msgid ""
"Rotations are by default applied with respect to the machine origin.  "
"Example: GEOMETRY=CXYZ first translates the control point to X,Y,Z and then "
"performs a C rotation about the Z axis centered at the machine origin."
msgstr ""

#. type: Plain text
msgid ""
"Rotations applied after translations may use the \"*!*\" provision to to act "
"with respect to the current machine offset.  Example: GEOMETRY=!CXYZ "
"translates the control point to the X,Y,Z position and then performs a C "
"rotation about the machine origin displaced by the current G5x,G92 X,Y,Z "
"offsets.  (Changing offsets may require a program reload)."
msgstr ""

#. type: Plain text
msgid ""
"UVW translation example: GEOMETRY=XYZUVW causes UVW to move in the "
"coordinate system of the tool and XYZ to move in the coordinate system of "
"the material"
msgstr ""

#. type: Plain text
msgid ""
"Foam-cutting machines (FOAM = 1) should specify \"XY;UV\" or leave the value "
"blank even though this value is presently ignored in foam-cutter mode.  A "
"future version may define what \";\" means, but if it does \"XY;UV\" will "
"mean the same as the current foam default."
msgstr ""

#. type: Plain text
msgid ""
"If no [DISPLAY]GEOMETRY is included in the inifile, a default is provided by "
"the [DISPLAY]DISPLAY gui program (typically \"XYZABCUVW\")"
msgstr ""

#. type: Plain text
msgid ""
"'ARCDIVISION = 64' - Set the quality of preview of arcs. Arcs are previewed "
"by dividing"
msgstr ""

#. type: Plain text
msgid ""
"them into a number of straight lines; a semicircle is divided into "
"*ARCDIVISION* parts. Larger values give a more accurate preview, but take "
"longer to load and result in a more sluggish display. Smaller values give a "
"less accurate preview, but take less time to load and may result in a faster "
"display. The default value of 64 means a circle of up to 3 inches will be "
"displayed to within 1 mil (.03%)."
msgstr ""

#. type: Plain text
msgid ""
"'MDI_HISTORY_FILE =' - The name of a local MDI history file. If this is not "
"specified Axis"
msgstr ""

#. type: Plain text
msgid ""
"will save the MDI history in *.axis_mdi_history* in the user's home "
"directory. This is useful if you have multiple configurations on one "
"computer."
msgstr ""

#. type: Plain text
msgid ""
"'JOG_AXES =' - The order in which jog keys are assigned to axis letters.  "
"The left and right arrows are assigned to the first axis letter, up and down "
"to the second, page up/page down to the third, and left and right bracket to "
"the fourth.  If unspecified, the default is determined from the "
"[TRAJ]COORDINATES, [DISPLAY]LATHE and [DISPLAY]FOAM values."
msgstr ""

#. type: Plain text
msgid ""
"'JOG_INVERT =' - For each axis letter, the jog direction is inverted.  The "
"default is \"X\" for lathes and blank otherwise."
msgstr ""

#. type: Plain text
msgid ""
"The settings for 'JOG_AXES' and 'JOG_INVERT' apply to world mode jogging by "
"axis coordinate letter and are in effect while in world mode after "
"successful homing.  When operating in joint mode prior to homing, keyboard "
"jog keys are assigned in a fixed sequence: left/right: joint0, up/down: "
"joint1, page up/page down: joint2, left/right bracket: joint3"
msgstr ""

#. type: Plain text
msgid ""
"'USER_COMMAND_FILE = mycommands.py' -- The name of an optional, "
"configuration-specific python file sourced by the axis gui instead of the "
"user-specific file `~/.axisrc`."
msgstr ""

#. type: Plain text
msgid "The following [DISPLAY] item is used by the TKLinuxCNC interface only."
msgstr ""

#. type: Plain text
msgid "'HELP_FILE = tklinucnc.txt' - Path to help file."
msgstr ""

#. type: Plain text
msgid "[[sec:filter-section]](((INI File, FILTER Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[FILTER] Section"
msgstr ""

#. type: Plain text
msgid ""
"AXIS and gmoccapy have the ability to send loaded files through a filter "
"program.  This filter can do any desired task: Something as simple as making "
"sure the file ends with M2, or something as complicated as detecting whether "
"the input is a depth image, and generating g-code to mill the shape it "
"defines. The [FILTER] section of the ini file controls how filters work. "
"First, for each type of file, write a PROGRAM_EXTENSION line.  Then, specify "
"the program to execute for each type of file. This program is given the name "
"of the input file as its first argument, and must write RS274NGC code to "
"standard output. This output is what will be displayed in the text area, "
"previewed in the display area, and executed by LinuxCNC when Run."
msgstr ""

#. type: Plain text
msgid "'PROGRAM_EXTENSION = .extension Description'"
msgstr ""

#. type: Plain text
msgid ""
"If your post processor outputs files in all caps you might want to add the "
"following line:"
msgstr ""

#. type: Plain text
msgid "'PROGRAM_EXTENSION = .NGC XYZ Post Processor'"
msgstr ""

#. type: Plain text
msgid ""
"The following lines add support for the image-to-G code converter included "
"with LinuxCNC."
msgstr ""

#. type: Plain text
msgid "'PROGRAM_EXTENSION = .png,.gif,.jpg Greyscale Depth Image'"
msgstr ""

#. type: Plain text
msgid "'png = image-to-gcode'"
msgstr ""

#. type: Plain text
msgid "'gif = image-to-gcode'"
msgstr ""

#. type: Plain text
msgid "'jpg = image-to-gcode'"
msgstr ""

#. type: Plain text
msgid ""
"An example of a custom G code converter located in the linuxcnc directory."
msgstr ""

#. type: Plain text
msgid "'PROGRAM_EXTENSION = .gcode 3D Printer'"
msgstr ""

#. type: Plain text
msgid "'gcode = /home/mill/linuxcnc/convert.py'"
msgstr ""

#. type: Plain text
msgid ""
"The program file associated with an extension must have either the full path "
"to the program or be located in a directory that is on the system path."
msgstr ""

#. type: Plain text
msgid "'PROGRAM_EXTENSION = .py Python Script'"
msgstr ""

#. type: Plain text
msgid "'py = python'"
msgstr ""

#. type: Plain text
msgid ""
"In this way, any Python script can be opened, and its output is treated as g-"
"code. One such example script is available at nc_files/holecircle.py. This "
"script creates g-code for drilling a series of holes along the circumference "
"of a circle. Many more g-code generators are on the LinuxCNC Wiki site "
"http://wiki.linuxcnc.org/[http://wiki.linuxcnc.org/]."
msgstr ""

#. type: Plain text
msgid "'FILTER_PROGRESS=%d'"
msgstr ""

#. type: Plain text
msgid ""
"sets the AXIS progress bar to the given percentage. This feature should be "
"used by any filter that runs for a long time."
msgstr ""

#. type: Plain text
msgid ""
"Python filters should use the print function to output the result to Axis."
msgstr ""

#. type: Plain text
msgid ""
"This example program filters a file and adds a W axis to match the Z axis.  "
"It depends on there being a space between each axis word to work."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#!/usr/bin/env python3\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "import sys\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "def main(argv):\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  openfile = open(argv[0], 'r')\n"
"  file_in = openfile.readlines()\n"
"  openfile.close()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  file_out = []\n"
"  for line in file_in:\n"
"    # print line\n"
"    if line.find('Z') != -1:\n"
"      words = line.rstrip('\\n')\n"
"      words = words.split(' ')\n"
"      newword = ''\n"
"      for i in words:\n"
"        if i[0] == 'Z':\n"
"          newword = 'W'+ i[1:]\n"
"      if len(newword) > 0:\n"
"        words.append(newword)\n"
"        newline = ' '.join(words)\n"
"        file_out.append(newline)\n"
"    else:\n"
"      file_out.append(line)\n"
"  for item in file_out:\n"
"    print \"%s\" % item\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"if __name__ == \"__main__\":\n"
"   main(sys.argv[1:])\n"
msgstr ""

#. type: Plain text
msgid "[[sec:rs274ngc-section]](((INI File, RS274NGC Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[RS274NGC] Section"
msgstr ""

#. type: Plain text
msgid "'PARAMETER_FILE = myfile.var' -"
msgstr ""

#. type: Plain text
msgid ""
"(((PARAMETER FILE))) The file located in the same directory as the ini file "
"which contains the parameters used by the interpreter (saved between runs)."
msgstr ""

#. type: Plain text
msgid "'ORIENT_OFFSET = 0' -"
msgstr ""

#. type: Plain text
msgid ""
"(((ORIENT OFFSET))) A float value added to the R word parameter of an "
"<<mcode:m19,M19 Orient Spindle>> operation. Used to define an arbitrary zero "
"position regardless of encoder mount orientation."
msgstr ""

#. type: Plain text
msgid ""
"'RS274NGC_STARTUP_CODE = G17 G20 G40 G49 G64 P0.001 G80 G90 G92 G94 G97 G98' "
"-"
msgstr ""

#. type: Plain text
msgid ""
"(((RS274NGC STARTUP CODE))) A string of NC codes that the interpreter is "
"initialized with. This is not a substitute for specifying modal g-codes at "
"the top of each ngc file, because the modal codes of machines differ, and "
"may be changed by g-code interpreted earlier in the session."
msgstr ""

#. type: Plain text
msgid "'SUBROUTINE_PATH = ncsubroutines:/tmp/testsubs:lathesubs:millsubs' -"
msgstr ""

#. type: Plain text
msgid ""
"(((SUBROUTINE PATH))) Specifies a colon (:) separated list of up to 10 "
"directories to be searched when single-file subroutines are specified in "
"gcode. These directories are searched after searching "
"[DISPLAY]PROGRAM_PREFIX (if it is specified) and before searching "
"[WIZARD]WIZARD_ROOT (if specified). The paths are searched in the order that "
"they are listed. The first matching subroutine file found in the search is "
"used. Directories are specified relative to the current directory for the "
"ini file or as absolute paths. The list must contain no intervening "
"whitespace."
msgstr ""

#. type: Plain text
msgid "'CENTER_ARC_RADIUS_TOLERANCE_INCH = n' Default 0.00005"
msgstr ""

#. type: Plain text
msgid "'CENTER_ARC_RADIUS_TOLERANCE_MM = n' Default 0.00127"
msgstr ""

#. type: Plain text
msgid ""
"'USER_M_PATH = myfuncs:/tmp/mcodes:experimentalmcodes' - (((USER M PATH)))"
msgstr ""

#. type: Plain text
msgid ""
"Specifies a list of colon (:) separated directories for user defined "
"functions. Directories are specified relative to the current directory for "
"the ini file or as absolute paths. The list must contain no intervening "
"whitespace."
msgstr ""

#. type: Plain text
msgid ""
"A search is made for each possible user defined function, typically (M100-"
"M199). The search order is:"
msgstr ""

#. type: Plain text
msgid "[DISPLAY]PROGRAM_PREFIX (if specified)"
msgstr ""

#. type: Plain text
msgid ""
"If [DISPLAY]PROGRAM_PREFIX is not specified, search the default location: "
"nc_files"
msgstr ""

#. type: Plain text
msgid "Then search each directory in the list [RS274NGC]USER_M_PATH"
msgstr ""

#. type: Plain text
msgid "The first executable M1xx found in the search is used for each M1xx."
msgstr ""

#. type: Plain text
msgid ""
"The maximum number of USER_M_PATH directories is defined at compile time "
"(typ: 'USER_DEFINED_FUNCTION_MAX_DIRS == 5')."
msgstr ""

#. type: Plain text
msgid ""
"'INI_VARS = 1' Default 1 Allows G-code programs to read values from the INI "
"file using the format #<_ini[section]name>. See <<gcode:parameters,G-code "
"Parameters>>."
msgstr ""

#. type: Plain text
msgid ""
"'HAL_PIN_VARS = 1' Default 1 Allows G-code programs to read the values of "
"HAL pins using the format #<_hal[Hal item]>.  Variable access is read-only.  "
"See <<gcode:parameters,G-code Parameters>> for more details and an important "
"caveat."
msgstr ""

#. type: Plain text
msgid ""
"'RETAIN_G43 = 0' Default 0 When set, you can turn on G43 after loading the "
"first tool, and then not worry about it through the program.  When you "
"finally unload the last tool, G43 mode is canceled."
msgstr ""

#. type: Plain text
msgid ""
"'OWORD_NARGS = 0' Default 0 If this feature is enabled then a called "
"subroutine can determine the number of actual positional parameters passed "
"by inspecting the +#<n_args>+ parameter."
msgstr ""

#. type: Plain text
msgid ""
"'NO_DOWNCASE_OWORD = 0' Default 0 Preserve case in O-word names within "
"comments if set, enables reading of mixed-case HAL items in structured "
"comments like '(debug, #<_hal[MixedCaseItem])'."
msgstr ""

#. type: Plain text
msgid ""
"'OWORD_WARNONLY = 0' Default 0 Warn rather than error in case of errors in O-"
"word subroutines."
msgstr ""

#. type: Plain text
msgid ""
"[NOTE] The above six options were controlled by the 'FEATURES' bitmask in "
"versions of LinuxCNC prior to 2.8. This INI tag will no longer work."
msgstr ""

#. type: Plain text
msgid ""
"[WIZARD]WIZARD_ROOT is a valid search path but the Wizard has not been fully "
"implemented and the results of using it are unpredictable."
msgstr ""

#. type: Plain text
msgid ""
"'REMAP=M400 modalgroup=10 argspec=Pq ngc=myprocedure' See <<cha:remap,Remap "
"Extending G-Code>> chapter for details."
msgstr ""

#. type: Plain text
msgid ""
"'ON_ABORT_COMMAND=O <on_abort> call' See <<cha:remap,Remap Extending G-"
"Code>> chapter for details."
msgstr ""

#. type: Plain text
msgid "[[sec:emcmot-section]](((INI File, EMCMOT Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[EMCMOT] Section"
msgstr ""

#. type: Plain text
msgid ""
"This section is a custom section and is not used by LinuxCNC directly. Most "
"configurations use values from this section to load the motion controller. "
"For more information on the motion controller see the <<sec:motion,Motion>> "
"Section."
msgstr ""

#. type: Plain text
msgid "'EMCMOT = motmod' - the motion controller name is typically used here."
msgstr ""

#. type: Plain text
msgid "'BASE_PERIOD = 50000' - the 'Base' task period in nanoseconds."
msgstr ""

#. type: Plain text
msgid ""
"'SERVO_PERIOD = 1000000' - This is the \"Servo\" task period in nanoseconds."
msgstr ""

#. type: Plain text
msgid ""
"'TRAJ_PERIOD = 100000' - This is the 'Trajectory Planner' task period in "
"nanoseconds."
msgstr ""

#. type: Plain text
msgid ""
"'COMM_TIMEOUT = 1.0' - Number of seconds to wait for Motion (the realtime "
"part of the motion controller) to acknowledge receipt of messages from Task "
"(the non-realtime part of the motion controller)."
msgstr ""

#. type: Plain text
msgid "[[sec:task-section]](((INI File, TASK Section)))"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "[TASK] Section"
msgstr ""

#. type: Plain text
msgid "'TASK = milltask' -"
msgstr ""

#. type: Plain text
msgid ""
"Specifies the name of the 'task' executable. The 'task' executable does "
"various things, such as communicate with the UIs over NML, communicate with "
"the realtime motion planner over non-HAL shared memory, and interpret "
"gcode.  Currently there is only one task executable that makes sense for "
"99.9% of users, milltask."
msgstr ""

#. type: Plain text
msgid "'CYCLE_TIME = 0.010' -"
msgstr ""

#. type: Plain text
msgid ""
"The period, in seconds, at which TASK will run. This parameter affects the "
"polling interval when waiting for motion to complete, when executing a pause "
"instruction, and when accepting a command from a user interface. There is "
"usually no need to change this number."
msgstr ""

#. type: Plain text
msgid "[[sec:hal-section]](((INI File, HAL Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[HAL] section"
msgstr ""

#. type: Plain text
msgid "'HALFILE = example.hal' - Execute the file 'example.hal' at start up."
msgstr ""

#. type: Plain text
msgid ""
"If 'HALFILE' is specified multiple times, the files are executed in the "
"order they appear in the ini file. Almost all configurations will have at "
"least one 'HALFILE', and stepper systems typically have two such files, one "
"which specifies the generic stepper configuration ('core_stepper.hal') and "
"one which specifies the machine pin out ('xxx_pinout.hal')."
msgstr ""

#. type: Plain text
msgid ""
"HALFILES are found using a search.  If the named file is found in the "
"directory containing the ini file, it is used.  If the named file is not "
"found in this ini file directory, a search is made using a system library of "
"halfiles."
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC is started with the linuxcnc script using the \"-H dirname\" "
"option, the specified dirname is prepended to the search described above so "
"that \"dirname\" is searched first.  The \"-H dirname\" option may be "
"specifed more than once, directories are prepended in order."
msgstr ""

#. type: Plain text
msgid ""
"A HALFILE may also be specified as an absolute path (when the name starts "
"with a '/' character).  Absolute paths are not recommended as their use may "
"limit relocation of configurations."
msgstr ""

#. type: Plain text
msgid ""
"'HALFILE = texample.tcl [arg1 [arg2] ...]]' - Execute the tcl file 'texample."
"tcl'"
msgstr ""

#. type: Plain text
msgid ""
"at start up with arg1, arg2, etc as ::argv list.  Files with a .tcl suffix "
"are processed as above but use haltcl for processing See the <<cha:haltcl,"
"HALTCL Chapter>> for more information."
msgstr ""

#. type: Plain text
msgid ""
"'HALFILE = LIB:sys_example.hal' - Execute the system library file "
"'sys_example.hal'"
msgstr ""

#. type: Plain text
msgid ""
"at start up.  Explicit use of the LIB: prefix causes use of the system "
"library HALFILE without searching the ini file directory."
msgstr ""

#. type: Plain text
msgid ""
"'HALFILE = LIB:sys_texample.tcl [arg1 [arg2 ...]]' - Execute the system "
"library"
msgstr ""

#. type: Plain text
msgid ""
"file 'sys_texample.tcl' at start up.  Explicit use of the LIB: prefix causes "
"use of the system library HALFILE without searching the ini file directory."
msgstr ""

#. type: Plain text
msgid ""
"HALFILE items specify files that loadrt Hal components and make signal "
"connections between component pins.  Common mistakes are 1) omission of the "
"addf statement needed to add a component's function(s) to a thread, 2)  "
"incomplete signal (net) specifiers.  Omission of required addf statements is "
"almost always an error.  Signals usually include one or more input "
"connections and a single output (but both are not strictly required).  A "
"system library file is provided to make checks for these conditions and "
"report to stdout and in a popup gui:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    HALFILE = LIB:halcheck.tcl [ nopopup ]\n"
msgstr ""

#. type: Plain text
msgid ""
"The LIB:halcheck.tcl line should be the last [HAL]HALFILE.  Specify the "
"'nopopup' option to suppress the popup message and allow immediate "
"starting.  Connections made using a POSTGUI_HALFILE are not checked."
msgstr ""

#. type: Plain text
msgid ""
"'TWOPASS = ON' - Use twopass processing for loading HAL components. With "
"TWOPASS processing,"
msgstr ""

#. type: Plain text
msgid ""
"[HAL]HALFILE= lines are processed in two passes.  In the first pass (pass0), "
"all HALFILES are read and multiple appearances of loadrt and loadusr "
"commands are accumulated.  These accumulated load commands are executed at "
"the end of pass0.  This accumulation allows load lines to be specified more "
"than once for a given component (provided the names= names used are unique "
"on each use).  In the second pass (pass1), the HALFILES are reread and all "
"commands except the previously executed load commands are executed."
msgstr ""

#. type: Plain text
msgid ""
"'TWOPASS = nodelete verbose' - The TWOPASS feature can be activated with any "
"non-null string including the keywords verbose and nodelete. The verbose "
"keyword causes printing of details to stdout. The nodelete keyword preserves "
"temporary files in /tmp."
msgstr ""

#. type: Plain text
msgid "For more information see the <<cha:hal-twopass,Hal TWOPASS>> chapter."
msgstr ""

#. type: Plain text
msgid "'HALCMD = command' - Execute 'command' as a single HAL command."
msgstr ""

#. type: Plain text
msgid ""
"If 'HALCMD' is specified multiple times, the commands are executed in the "
"order they appear in the ini file. 'HALCMD' lines are executed after all "
"'HALFILE' lines."
msgstr ""

#. type: Plain text
msgid ""
"'SHUTDOWN = shutdown.hal' - Execute the file 'shutdown.hal' when LinuxCNC is "
"exiting."
msgstr ""

#. type: Plain text
msgid ""
"Depending on the hardware drivers used, this may make it possible to set "
"outputs to defined values when LinuxCNC is exited normally. However, because "
"there is no guarantee this file will be executed (for instance, in the case "
"of a computer crash) it is not a replacement for a proper physical e-stop "
"chain or other protections against software failure."
msgstr ""

#. type: Plain text
msgid ""
"'POSTGUI_HALFILE = example2.hal' - Execute 'example2.hal' after the GUI has "
"created its HAL pins.  Some GUIs create hal pins and support the use of a "
"postgui halfile to use them. GUIs that support postgui halfiles include "
"Touchy, Axis, Gscreen, and gmoccapy."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "See section <<sec:pyvcp-with-axis,pyVCP with Axis>> Section for more information.\n"
msgstr ""

#. type: Plain text
msgid ""
"'HALUI = halui' - adds the HAL user interface pins. For more information see"
msgstr ""

#. type: Plain text
msgid "the <<cha:hal-user-interface,HAL User Interface>> chapter."
msgstr ""

#. type: Plain text
msgid "[[sec:halui-section]](((INI File, HALUI Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[HALUI] section"
msgstr ""

#. type: Plain text
msgid "'MDI_COMMAND = G53 G0 X0 Y0 Z0' -"
msgstr ""

#. type: Plain text
msgid ""
"An MDI command can be executed by using halui.mdi-command-00. Increment the "
"number for each command listed in the [HALUI] section."
msgstr ""

#. type: Plain text
msgid "[[sec:applications-section]](((INI File, APPLICATIONS Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[APPLICATIONS] Section"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC can start other applications before the specified gui is started.  "
"The applications can be started after a specified delay to allow for gui-"
"dependent actions (like creating gui-specific hal pins)."
msgstr ""

#. type: Plain text
msgid "'DELAY = value' - seconds to wait beore starting other"
msgstr ""

#. type: Plain text
msgid ""
"applications.  A delay may be needed if an application has dependencies on "
"[HAL]POSTGUI_HALFILE actions or gui-created hal pins (default DELAY=0)."
msgstr ""

#. type: Plain text
msgid "'APP = appname [arg1 [arg2 ...]]' - Application to be started."
msgstr ""

#. type: Plain text
msgid ""
"This specification can be included multiple times.  The appname can be "
"explicitly named as an absolute or tilde specified filename (first character "
"is / or ~), a relative filename (first characters of filename are ./), or as "
"a file in the inifile directory.  If no executable file is found using these "
"names, then the user search PATH is used to find the application."
msgstr ""

#. type: Plain text
msgid ""
"Simulate inputs to hal pins for testing (using sim_pin -- a simple gui to "
"set inputs to parameters, unconnected pins, or signals with no writers):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "APP = sim_pin motion.probe-input halui.abort motion.analog-in-00\n"
msgstr ""

#. type: Plain text
msgid ""
"Invoke halshow with a previuosly saved watchlist. Since linuxcnc sets the "
"working directory to the directory for the inifile, you can refer to files "
"in that directory (example: my.halshow):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "APP = halshow my.halshow\n"
msgstr ""

#. type: Plain text
msgid ""
"Alternatively, a watchlist file identified with a full pathname could be "
"specified:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "APP = halshow ~/saved_shows/spindle.halshow\n"
msgstr ""

#. type: Plain text
msgid "Open halscope using a previously saved configuration:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "APP = halscope -i my.halscope\n"
msgstr ""

#. type: Plain text
msgid "[[sec:traj-section]](((INI File, TRAJ Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[TRAJ] Section"
msgstr ""

#. type: Plain text
msgid ""
"The new Trajectory Planner (TP) is on by default. + If you have no TP "
"settings in your [TRAJ] section - LinuxCNC defaults to: + ARC_BLEND_ENABLE = "
"1 + ARC_BLEND_FALLBACK_ENABLE = 0 + ARC_BLEND_OPTIMIZATION_DEPTH = 50 + "
"ARC_BLEND_GAP_CYCLES = 4 + ARC_BLEND_RAMP_FREQ = 100"
msgstr ""

#. type: Plain text
msgid ""
"The [TRAJ] section contains general parameters for the trajectory planning "
"module in 'motion'."
msgstr ""

#. type: Plain text
msgid "'ARC_BLEND_ENABLE = 1' - Turn on new TP. If set to 0 TP uses parabolic"
msgstr ""

#. type: Plain text
msgid "blending (1 segment look ahead.) Default value 1."
msgstr ""

#. type: Plain text
msgid ""
"'ARC_BLEND_FALLBACK_ENABLE = 0' - Optionally fall back to parabolic blends"
msgstr ""

#. type: Plain text
msgid ""
"if the estimated speed is faster. However, this estimate is rough, and it "
"seems that just disabling it gives better performance. Default value 0."
msgstr ""

#. type: Plain text
msgid ""
"'ARC_BLEND_OPTIMIZATION_DEPTH = 50' - Look ahead depth in number of segments."
msgstr ""

#. type: Plain text
msgid ""
"To expand on this a bit, you can choose this value somewhat arbitrarily.  "
"Here's a formula to estimate how much 'depth' you need for a particular "
"config:"
msgstr ""

#. type: Plain text
msgid ""
"# n = v_max / (2.0 * a_max * t_c)  # where: # n = optimization depth # v_max "
"= max axis velocity (UU / sec)  # a_max = max axis acceleration (UU / sec)  "
"# t_c = servo period (seconds)"
msgstr ""

#. type: Plain text
msgid ""
"So, a machine with a maximum axis velocity of 10 IPS, a max acceleration of "
"100 IPS^2, and a servo period of 0.001 sec would need:"
msgstr ""

#. type: Plain text
msgid ""
"10 / (2.0 * 100 * 0.001) = 50 segments to always reach maximum velocity "
"along the fastest axis."
msgstr ""

#. type: Plain text
msgid ""
"In practice, this number isn't that important to tune, since the look ahead "
"rarely needs the full depth unless you have lots of very short segments. If "
"during testing, you notice strange slowdowns and can't figure out where they "
"come from, first try increasing this depth using the formula above."
msgstr ""

#. type: Plain text
msgid ""
"If you still see strange slowdowns, it may be because you have short "
"segments in the program. If this is the case, try adding a small tolerance "
"for Naive CAM detection. A good rule of thumb is this:"
msgstr ""

#. type: Plain text
msgid ""
"# min_length ~= v_req * t_c # where: # v_req = desired velocity in UU / sec "
"# t_c = servo period (seconds)"
msgstr ""

#. type: Plain text
msgid ""
"If you want to travel along a path at 1 IPS = 60 IPM, and your servo period "
"is 0.001 sec, then any segments shorter than min_length will slow the path "
"down. If you set Naive CAM tolerance to around this min length, overly short "
"segments will be combined together to eliminate this bottleneck. Of course, "
"setting the tolerance too high means big path deviations, so you have to "
"play with it a bit to find a good value. I'd start at 1/2 of the min_length, "
"then work up as needed."
msgstr ""

#. type: Plain text
msgid ""
"'ARC_BLEND_GAP_CYCLES = 4' How short the previous segment must be before"
msgstr ""

#. type: Plain text
msgid "the trajectory planner 'consumes' it."
msgstr ""

#. type: Plain text
msgid ""
"Often, a circular arc blend will leave short line segments in between the "
"blends. Since the geometry has to be circular, we can't blend over all of a "
"line if the next one is a little shorter. Since the trajectory planner has "
"to touch each segment at least once, it means that very tiny segments will "
"slow things down significantly. My fix to this way to \"consume\" the short "
"segment by making it a part of the blend arc. Since the line+blend is one "
"segment, we don't have to slow down to hit the very short segment. Likely, "
"you won't need to touch this setting."
msgstr ""

#. type: Plain text
msgid ""
"'ARC_BLEND_RAMP_FREQ = 20' - This is a 'cutoff' frequency for using ramped"
msgstr ""

#. type: Plain text
msgid "velocity."
msgstr ""

#. type: Plain text
msgid ""
"'Ramped velocity' in this case just means constant acceleration over the "
"whole segment. This is less optimal than a trapezoidal velocity profile, "
"since the acceleration is not maximized. However, if the segment is short "
"enough, there isn't enough time to accelerate much before we hit the next "
"segment. Recall the short line segments from the previous example. Since "
"they're lines, there's no cornering acceleration, so we're free to "
"accelerate up to the requested speed. However, if this line is between two "
"arcs, then it will have to quickly decelerate again to be within the maximum "
"speed of the next segment. This means that we have a spike of acceleration, "
"then a spike of deceleration, causing a large jerk, for very little "
"performance gain. This setting is a way to eliminate this jerk for short "
"segments."
msgstr ""

#. type: Plain text
msgid ""
"Basically, if a segment will complete in less time than 1 / "
"ARC_BLEND_RAMP_FREQ, we don't bother with a trapezoidal velocity profile on "
"that segment, and use constant acceleration. (Setting ARC_BLEND_RAMP_FREQ = "
"1000 is equivalent to always using trapezoidal acceleration, if the servo "
"loop is 1kHz)."
msgstr ""

#. type: Plain text
msgid ""
"You can characterize the worst-case loss of performance by comparing the "
"velocity that a trapezoidal profile reaches vs. the ramp:"
msgstr ""

#. type: Plain text
msgid ""
"# v_ripple = a_max / (4.0 * f)  # where: # v_ripple = average velocity \"loss"
"\" due to ramping # a_max = max axis acceleration # f = cutoff frequency "
"from INI"
msgstr ""

#. type: Plain text
msgid ""
"For the aforementioned machine, the ripple for a 20Hz cutoff frequency is "
"100 / (4 * 20) = 1.25 IPS. This seems high, but keep in mind that it is only "
"a worst-case estimate. In reality , the trapezoidal motion profile is "
"limited by other factors, such as normal acceleration or requested velocity, "
"and so the actual performance loss should be much smaller. Increasing the "
"cutoff frequency can squeeze out more performance, but make the motion "
"rougher due to acceleration discontinuities. A value in the range 20Hz to "
"200Hz should be reasonable to start."
msgstr ""

#. type: Plain text
msgid ""
"Finally, no amount of tweaking will speed up a toolpath with lots of small, "
"tight corners, since you're limited by cornering acceleration."
msgstr ""

#. type: Plain text
msgid ""
"'SPINDLES = 3' - The number of spindles to support. It is imperative that "
"this"
msgstr ""

#. type: Plain text
msgid ""
"number matches the \"num_spindles\" parameter passed to the motion module."
msgstr ""

#. type: Plain text
msgid "'COORDINATES = X Y Z' - The names of the axes being controlled."
msgstr ""

#. type: Plain text
msgid ""
"Only X, Y, Z, A, B, C, U, V, W are valid. Only axes named in 'COORDINATES' "
"are accepted in g-code.  It is permitted to write an axis name more than "
"once (e.g., X Y Y Z for a gantry machine).  For the common 'trivkins "
"kinematics', joint numbers are assigned in sequence according to the "
"trivkins parameter 'coordinates='.  So, for trivkins 'coordinates=xz', "
"joint0 corresponds to X and joint1 corresponds to Z.  See the kinematics man "
"page ('$ man kins') for information on trivkins and other kinematics modules."
msgstr ""

#. type: Plain text
msgid ""
"'LINEAR_UNITS = <units>' - (((LINEAR UNITS))) Specifies the 'machine units' "
"for linear axes."
msgstr ""

#. type: Plain text
msgid ""
"Possible choices are mm or inch.  This does not affect the linear units in "
"NC code (the G20 and G21 words do this)."
msgstr ""

#. type: Plain text
msgid ""
"'ANGULAR_UNITS = <units>' - (((ANGULAR UNITS))) Specifies the 'machine "
"units' for rotational axes."
msgstr ""

#. type: Plain text
msgid ""
"Possible choices are 'deg', 'degree' (360 per circle), 'rad', 'radian' (2pi "
"per circle), 'grad', or 'gon' (400 per circle).  This does not affect the "
"angular units of NC code. In RS274NGC, A-, B- and C- words are always "
"expressed in degrees."
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_LINEAR_VELOCITY = 0.0167' - The initial rate for jogs of linear "
"axes, in machine units per second. The value shown in 'Axis' equals machine "
"units per minute."
msgstr ""

#. type: Plain text
msgid ""
"'DEFAULT_LINEAR_ACCELERATION = 2.0' - In machines with nontrivial "
"kinematics, the acceleration used"
msgstr ""

#. type: Plain text
msgid ""
"for \"teleop\" (Cartesian space) jogs, in 'machine units' per second per "
"second."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_LINEAR_VELOCITY = 5.0' - (((MAX VELOCITY))) The maximum velocity for "
"any axis or coordinated"
msgstr ""

#. type: Plain text
msgid ""
"move, in 'machine units' per second. The value shown equals 300 units per "
"minute."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_LINEAR_ACCELERATION = 20.0' - (((MAX ACCELERATION))) The maximum "
"acceleration for any axis or"
msgstr ""

#. type: Plain text
msgid "coordinated axis move, in 'machine units' per second per second."
msgstr ""

#. type: Plain text
msgid ""
"'POSITION_FILE = position.txt' - If set to a non-empty value, the joint "
"positions are stored between"
msgstr ""

#. type: Plain text
msgid ""
"runs in this file. This allows the machine to start with the same "
"coordinates it had on shutdown. This assumes there was no movement of the "
"machine while powered off. If unset, joint positions are not stored and will "
"begin at 0 each time LinuxCNC is started. This can help on smaller machines "
"without home switches. If using the Mesa resolver interface this file can be "
"used to emulate absolute encoders and eliminate the need for homing (with no "
"loss of accuracy). See the hostmot2 manpage for more details."
msgstr ""

#. type: Plain text
msgid ""
"'NO_FORCE_HOMING = 1' - The default behavior is for LinuxCNC to force the"
msgstr ""

#. type: Plain text
msgid ""
"user to home the machine before any MDI command or a program is run.  "
"Normally, only jogging is allowed before homing.  For configurations using "
"identity kinematics, setting NO_FORCE_HOMING = 1 allows the user to make MDI "
"moves and run programs without homing the machine first. Interfaces using "
"identity kinematics without homing ability will need to have this option set "
"to 1."
msgstr ""

#. type: Plain text
msgid ""
"'HOME = 0 0 0 0 0 0 0 0 0' - World home position needed for kinematics "
"modules"
msgstr ""

#. type: Plain text
msgid ""
"that compute world coordinates using kinematicsForward() when switching from "
"joint to teleop mode.  Up to nine coordinate values (X Y Z A B C U V W)  may "
"be specified, unused trailing items may be omitted. This value is only used "
"for machines with nontrivial kinematics. On machines with trivial kinematics "
"(mill, lathe, gantry types) this value is ignored.  Note: the sim hexapod "
"config requires a non-zero value for the Z coordinate."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC will not know your joint travel limits when using 'NO_FORCE_HOMING "
"= 1'."
msgstr ""

#. type: Plain text
msgid "[[sec:kins-section]](((INI File, KINS Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[KINS] Section"
msgstr ""

#. type: Plain text
msgid "'JOINTS = 3' - Specifies the number of joints (motors) in the system."
msgstr ""

#. type: Plain text
msgid ""
"For example, a trivkins XYZ machine with a single motor for each axis has 3 "
"joints.  A gantry machine with one motor on each of two of the axes, and two "
"motors on the third axis, has 4 joints.  (This config variable may be used "
"by a gui to set the number of joints (num_joints) specified to the motion "
"module (motmod)).  The Axis gui, pncconf, and stepconf use this item."
msgstr ""

#. type: Plain text
msgid ""
"'KINEMATICS = trivkins' - Specify a kinematics module for the motion module."
msgstr ""

#. type: Plain text
msgid ""
"Guis may use this variable to specify the loadrt line in hal files for the "
"motmod module.  For more information on kinematics modules see the manpage: "
"'$ man kins'"
msgstr ""

#. type: Plain text
msgid "[[sec:axis-section]](((INI File, AXIS Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[AXIS_<letter>] Section"
msgstr ""

#. type: Plain text
msgid "The <letter> specifies one of: X Y Z A B C U V W"
msgstr ""

#. type: Plain text
msgid "'MAX_VELOCITY = 1.2' -"
msgstr ""

#. type: Plain text
msgid ""
"Maximum velocity for this axis in <<sec:traj-section,machine units>> per "
"second."
msgstr ""

#. type: Plain text
msgid "'MAX_ACCELERATION = 20.0' -"
msgstr ""

#. type: Plain text
msgid "Maximum acceleration for this axis in machine units per second squared."
msgstr ""

#. type: Plain text
msgid "'MIN_LIMIT = -1000' -"
msgstr ""

#. type: Plain text
msgid ""
"(((MIN LIMIT))) The minimum limit (soft limit) for axis motion, in machine "
"units.  When this limit is exceeded, the controller aborts axis motion.  The "
"axis must be homed before MIN_LIMIT is in force.  For a rotary axis (A,B,C "
"typ)  with unlimited rotation having no MIN_LIMIT for that axis in the "
"[AXIS_<letter>] section a value of -1e99 is used."
msgstr ""

#. type: Plain text
msgid "'MAX_LIMIT = 1000' -"
msgstr ""

#. type: Plain text
msgid ""
"(((MAX LIMIT))) The maximum limit (soft limit) for axis motion, in machine "
"units.  When this limit is exceeded, the controller aborts axis motion.  The "
"axis must be homed before MAX_LIMIT is in force.  For a rotary axis (A,B,C "
"typ) with unlimited rotation having no MAX_LIMIT for that axis in the "
"[AXIS_<letter>] section a value of 1e99 is used."
msgstr ""

#. type: Plain text
msgid "'WRAPPED_ROTARY = 1' -"
msgstr ""

#. type: Plain text
msgid ""
"When this is set to 1 for an ANGULAR axis the axis will move 0-359.999 "
"degrees. Positive Numbers will move the axis in a positive direction and "
"negative numbers will move the axis in the negative direction."
msgstr ""

#. type: Plain text
msgid "'LOCKING_INDEXER_JOINT = 4' - This value selects a joint to use for"
msgstr ""

#. type: Plain text
msgid ""
"a locking indexer for the specified axis <letter>.  In this example, the "
"joint is 4 which would correspond to the B axis for a XYZAB system with "
"trivkins (identity) kinematics.  When set, a G0 move for this axis will "
"initiate an unlock with the joint.4.unlock pin then wait for the joint.4.is-"
"unlocked pin then move the joint at the rapid rate for that joint.  After "
"the move the joint.4.unlock will be false and motion will wait for joint.4."
"is-unlocked to go false. Moving with other joints is not allowed when moving "
"a locked rotary joint.  To create the unlock pins, use the motmod parameter:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "unlock_joints_mask=jointmask\n"
msgstr ""

#. type: Plain text
msgid "The jointmask bits are: (LSB)0:joint0, 1:joint1, 2:joint2, ..."
msgstr ""

#. type: Plain text
msgid ""
"Example: loadrt motmod ... unlock_joints_mask=0x38 creates unlock pins for "
"joints 3,4,5"
msgstr ""

#. type: Plain text
msgid "'OFFSET_AV_RATIO = 0.1' - If nonzero, this item enables the use of"
msgstr ""

#. type: Plain text
msgid "hal input pins for external axis offsets:"
msgstr ""

#. type: Plain text
msgid ""
"'axis.<letter>.eoffset-enable' 'axis.<letter>.eoffset-counts' 'axis.<letter>."
"eoffset-scale'"
msgstr ""

#. type: Plain text
msgid ""
"See the chapter: <<cha:external-offsets, 'External Axis Offsets'>> for usage "
"information."
msgstr ""

#. type: Plain text
msgid "[[sec:joint-section]](((INI File, JOINT Section)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "[JOINT_<num>] Section"
msgstr ""

#. type: Plain text
msgid ""
"The <num> specifies the joint number 0 ... (num_joints-1)  The value of "
"'num_joints' is set by [KINS]JOINTS="
msgstr ""

#. type: Plain text
msgid ""
"The [JOINT_0], [JOINT_1], etc. sections contains general parameters for the "
"individual components in the joint control module. The joint section names "
"begin numbering at 0, and run through the number of joints specified in the "
"[KINS]JOINTS entry minus 1."
msgstr ""

#. type: Plain text
msgid ""
"Typically (for systems using 'trivkins kinematics', there is a 1:1 "
"correspondence between a joint and an axis coordinate letter):"
msgstr ""

#. type: Plain text
msgid "JOINT_0 = X"
msgstr ""

#. type: Plain text
msgid "JOINT_1 = Y"
msgstr ""

#. type: Plain text
msgid "JOINT_2 = Z"
msgstr ""

#. type: Plain text
msgid "JOINT_3 = A"
msgstr ""

#. type: Plain text
msgid "JOINT_4 = B"
msgstr ""

#. type: Plain text
msgid "JOINT_5 = C"
msgstr ""

#. type: Plain text
msgid "JOINT_6 = U"
msgstr ""

#. type: Plain text
msgid "JOINT_7 = V"
msgstr ""

#. type: Plain text
msgid "JOINT_8 = W"
msgstr ""

#. type: Plain text
msgid ""
"Other kinematics modules with identity kinematics are available to support "
"configurations with partial sets of axes.  For example, using trivkins with "
"coordinates=XZ, the joint-axes relationships are:"
msgstr ""

#. type: Plain text
msgid "JOINT_1 = Z"
msgstr ""

#. type: Plain text
msgid ""
"For more information on kinematics modules see the manpage: '$ man kins'"
msgstr ""

#. type: Plain text
msgid "'TYPE = LINEAR' -"
msgstr ""

#. type: Plain text
msgid "The type of joint, either LINEAR or ANGULAR."
msgstr ""

#. type: Plain text
msgid "'UNITS = INCH' -"
msgstr ""

#. type: Plain text
msgid ""
"(((UNITS))) If specified, this setting overrides the related [TRAJ] UNITS "
"setting.  (e.g., [TRAJ]LINEAR_UNITS if the TYPE of this joint is LINEAR, "
"[TRAJ]ANGULAR_UNITS if the TYPE of this joint is ANGULAR)"
msgstr ""

#. type: Plain text
msgid ""
"Maximum velocity for this joint in <<sec:traj-section,machine units>> per "
"second."
msgstr ""

#. type: Plain text
msgid ""
"Maximum acceleration for this joint in machine units per second squared."
msgstr ""

#. type: Plain text
msgid "'BACKLASH = 0.0000' -"
msgstr ""

#. type: Plain text
msgid ""
"(((Backlash))) Backlash in machine units. Backlash compensation value can be "
"used to make up for small deficiencies in the hardware used to drive an "
"joint. If backlash is added to an joint and you are using steppers the "
"STEPGEN_MAXACCEL must be increased to 1.5 to 2 times the MAX_ACCELERATION "
"for the joint. Excessive backlash compensation can cause an joint to jerk as "
"it changes direction. If a COMP_FILE is specified for a joint BACKLASH is "
"not used."
msgstr ""

#.  add a link to machine units
#. type: Plain text
msgid "'COMP_FILE = file.extension' -"
msgstr ""

#. type: Plain text
msgid ""
"(((Compensation))) The compensation file consists of map of position "
"information for the joint. Compensation file values are in machine units.  "
"Each set of values are are on one line separated by a space. The first value "
"is the nominal value (the commanded position). The second and third values "
"depend on the setting of COMP_FILE_TYPE. Points in between nominal values "
"are interpolated between the two nominals. Compensation files must start "
"with the smallest nominal and be in ascending order to the largest value of "
"nominals. File names are case sensitive and can contain letters and/or "
"numbers. Currently the limit inside LinuxCNC is for 256 triplets per joint.  "
"+ + If COMP_FILE is specified for an joint, BACKLASH is not used. A "
"'COMP_FILE_TYPE' must be specified for each 'COMP_FILE'."
msgstr ""

#. type: Plain text
msgid ""
"'COMP_FILE_TYPE = 0 or 1' - Specifies the type of compensation file. The"
msgstr ""

#. type: Plain text
msgid "first value is the nominal (commanded) position for both types."
msgstr ""

#. type: Plain text
msgid ""
"'Type 0:' The second value specifies the actual position as the joint is "
"moving"
msgstr ""

#. type: Plain text
msgid ""
"in the positive direction (increasing value) and the third value specifies "
"the actual position as the joint is moving in the negative direction "
"(decreasing value).  + + Type 0 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"-1.000 -1.005 -0.995\n"
"0.000 0.002 -0.003\n"
"1.000 1.003 0.998\n"
msgstr ""

#. type: Plain text
msgid "'Type 1:' The second value specifies positive offset from nominal while"
msgstr ""

#. type: Plain text
msgid ""
"traveling in the positive direction. The third value specifies the negative "
"offset from nominal while traveling in a negative direction.  + + Type 1 "
"Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"-1.000 0.005 -0.005\n"
"0.000 0.002 -0.003\n"
"1.000 0.003 -0.004\n"
msgstr ""

#. type: Plain text
msgid ""
"'MIN_LIMIT = -1000' - (((MIN LIMIT))) The minimum limit for joint motion, in"
msgstr ""

#. type: Plain text
msgid ""
"machine units.  When this limit is reached, the controller aborts joint "
"motion.  For a rotary joint with unlimited rotation having no MIN_LIMIT for "
"that joint in the [JOINT_N] section a the value -1e99 is used."
msgstr ""

#. type: Plain text
msgid ""
"'MAX_LIMIT = 1000' - (((MAX LIMIT))) The maximum limit for joint motion, in"
msgstr ""

#. type: Plain text
msgid ""
"machine units.  When this limit is reached, the controller aborts joint "
"motion.  For a rotary joint with unlimited rotation having no MAX_LIMIT for "
"that joint in the [JOINT_N] section a the value 1e99 is used."
msgstr ""

#. type: Plain text
msgid ""
"For *identity* kinematics, the [JOINT_N]MIN_LIMIT,MAX_LIMIT settings must "
"equal or exceed the corresponding (one-to-one identity) [AXIS_L] limits.  "
"These settings are verified at startup when the trivkins kinematics modules "
"is specified."
msgstr ""

#. type: Plain text
msgid ""
"The [JOINT_N]MIN_LIMIT, MAX_LIMIT settings are enforced while jogging in "
"joint mode prior to homing.  After homing, [AXIS_L]MIN_LIMIT,MAX_LIMIT "
"coordinate limits are used as constraints for axis (coordinate letter) "
"jogging and by the trajectory planning used for gcode moves (programs and "
"mdi commands).  The trajectory planner works in Cartesian space (XYZABCUVW) "
"and has no information about the motion of joints implemented by *any* "
"kinematics module.  It is possible for joint limit violations to occur for "
"gcode that obeys trajectory planning position limits when non identity "
"kinematics are used.  The motion module always detects joint position limit "
"violations and faults if they occur during the execution of gcode commands.  "
"See also related github issue #97."
msgstr ""

#. type: Plain text
msgid ""
"'MIN_FERROR = 0.010' - (((MIN FERROR))) This is the value in machine units by"
msgstr ""

#. type: Plain text
msgid ""
"which the joint is permitted to deviate from commanded position at very low "
"speeds. If MIN_FERROR is smaller than FERROR, the two produce a ramp of "
"error trip points. You could think of this as a graph where one dimension is "
"speed and the other is permitted following error. As speed increases the "
"amount of following error also increases toward the FERROR value."
msgstr ""

#. type: Plain text
msgid ""
"'FERROR = 1.0' - (((FERROR))) FERROR is the maximum allowable following "
"error,"
msgstr ""

#. type: Plain text
msgid ""
"in machine units. If the difference between commanded and sensed position "
"exceeds this amount, the controller disables servo calculations, sets all "
"the outputs to 0.0, and disables the amplifiers. If MIN_FERROR is present in "
"the .ini file, velocity-proportional following errors are used. Here, the "
"maximum allowable following error is proportional to the speed, with FERROR "
"applying to the rapid rate set by [TRAJ]MAX_VELOCITY, and proportionally "
"smaller following errors for slower speeds. The maximum allowable following "
"error will always be greater than MIN_FERROR. This prevents small following "
"errors for stationary axes from inadvertently aborting motion. Small "
"following errors will always be present due to vibration, etc."
msgstr ""

#. type: Plain text
msgid "'LOCKING_INDEXER = 1' -"
msgstr ""

#. type: Plain text
msgid "Indicates the joint is used as a locking indexer."
msgstr ""

#. type: Plain text
msgid ""
"These parameters are Homing related, for a better explanation read the <<cha:"
"homing-configuration,Homing Configuration>> Chapter."
msgstr ""

#. type: Plain text
msgid "'HOME = 0.0' -"
msgstr ""

#. type: Plain text
msgid ""
"The position that the joint will go to upon completion of the homing "
"sequence."
msgstr ""

#. type: Plain text
msgid "'HOME_OFFSET = 0.0' -"
msgstr ""

#. type: Plain text
msgid ""
"The joint position of the home switch or index pulse, in <<sec:traj-section,"
"machine units>>. When the home point is found during the homing process, "
"this is the position that is assigned to that point.  When sharing home and "
"limit switches and using a home sequence that will leave the home/limit "
"switch in the toggled state the home offset can be used define the home "
"switch position to be other than 0 if your HOME position is desired to be 0."
msgstr ""

#. type: Plain text
msgid "'HOME_SEARCH_VEL = 0.0' -"
msgstr ""

#. type: Plain text
msgid ""
"(((HOME SEARCH VEL))) Initial homing velocity in machine units per second.  "
"Sign denotes direction of travel. A value of zero means assume that the "
"current location is the home position for the machine. If your machine has "
"no home switches you will want to leave this value at zero."
msgstr ""

#. type: Plain text
msgid "'HOME_LATCH_VEL = 0.0' -"
msgstr ""

#. type: Plain text
msgid ""
"Homing velocity in machine units per second to the home switch latch "
"position. Sign denotes direction of travel."
msgstr ""

#. type: Plain text
msgid "'HOME_FINAL_VEL = 0.0' -"
msgstr ""

#. type: Plain text
msgid ""
"Velocity in machine units per second from home latch position to home "
"position. If left at 0 or not included in the joint rapid velocity is used. "
"Must be a positive number."
msgstr ""

#. type: Plain text
msgid "'HOME_USE_INDEX = NO' -"
msgstr ""

#. type: Plain text
msgid ""
"If the encoder used for this joint has an index pulse, and the motion card "
"has provision for this signal you may set it to yes. When it is yes, it will "
"affect the kind of home pattern used. Currently, you can't home to index "
"with steppers unless you're using stepgen in velocity mode and PID."
msgstr ""

#. type: Plain text
msgid "'HOME_INDEX_NO_ENCODER_RESET = NO' -"
msgstr ""

#. type: Plain text
msgid ""
"Use YES if the encoder used for this joint does not reset its counter when "
"an index pulse is detected after assertion of the joint index_enable hal "
"pin. Applicable only for HOME_USE_INDEX = YES."
msgstr ""

#. type: Plain text
msgid "'HOME_IGNORE_LIMITS = NO' -"
msgstr ""

#. type: Plain text
msgid ""
"When you use the limit switch as a home switch and the limit switch this "
"should be set to YES. When set to YES the limit switch for this joint is "
"ignored when homing. You must configure your homing so that at the end of "
"your home move the home/limit switch is not in the toggled state you will "
"get a limit switch error after the home move."
msgstr ""

#. type: Plain text
msgid "'HOME_IS_SHARED = <n>' -"
msgstr ""

#. type: Plain text
msgid ""
"If the home input is shared by more than one joint set <n> to 1 to prevent "
"homing from starting if the one of the shared switches is already closed. "
"Set <n> to 0 to permit homing if a switch is closed."
msgstr ""

#. type: Plain text
msgid "'HOME_ABSOLUTE_ENCODER = 0 | 1 | 2' -"
msgstr ""

#. type: Plain text
msgid ""
"Used to indicate the joint uses an absolute encoder.  At a request for "
"homing, the current joint value is set to the 'HOME_OFFSET' value.  If the "
"'HOME_ABSOLUTE_ENCODER' setting is 1, the machine makes the usual final move "
"to the 'HOME' value.  If the 'HOME_ABSOLUTE_ENCODER' setting is 2, no final "
"move is made."
msgstr ""

#. type: Plain text
msgid "'HOME_SEQUENCE = <n>' -"
msgstr ""

#. type: Plain text
msgid ""
"Used to define the \"Home All\" sequence. <n> must start at 0 or 1 or -1.  "
"Additional sequences may be specified with numbers increasing by 1 (in "
"absolute value).  Skipping of sequence numbers is not allowed.  If a "
"HOME_SEQUENCE is omitted, the joint will not be homed by the \"Home All\" "
"function.  More than one joint can be homed at the same time by specifying "
"the same sequence number for more than one joint.  A negative sequence "
"number is used to defer the final move for all joints having that (negative "
"or positive) sequence number.  For additional info, see: <<sec:homing-"
"section,HOME SEQUENCE>>"
msgstr ""

#. type: Plain text
msgid "'VOLATILE_HOME = 0' -"
msgstr ""

#. type: Plain text
msgid ""
"When enabled (set to 1) this joint will be unhomed if the Machine Power is "
"off or if E-Stop is on. This is useful if your machine has home switches and "
"does not have position feedback such as a step and direction driven machine."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Servo"
msgstr ""

#. type: Plain text
msgid "These parameters are relevant to joints controlled by servos."
msgstr ""

#. type: Plain text
msgid ""
"The following are custom INI file entries that you may find in a sample INI "
"file or a wizard generated file. These are not used by the LinuxCNC "
"software. They are only there to put all the settings in one place. For more "
"information on custom INI file entries see the <<sub:custom-variables,Custom "
"Sections and Variables>> subsection."
msgstr ""

#. type: Plain text
msgid ""
"The following items might be used by a PID component and the assumption is "
"that the output is volts."
msgstr ""

#. type: Plain text
msgid ""
"'DEADBAND = 0.000015' - How close is close enough to consider the motor in "
"position, in <<sec:traj-section,machine units>>. This is often set to a "
"distance equivalent to 1, 1.5, 2, or 3 encoder counts, but there are no "
"strict rules.  Looser (larger) settings allow less servo 'hunting' at the "
"expense of lower accuracy.  Tighter (smaller) settings attempt higher "
"accuracy at the expense of more servo 'hunting'.  Is it really more accurate "
"if it's also more uncertain? As a general rule, it's good to avoid, or at "
"least limit, servo 'hunting' if you can."
msgstr ""

#. type: Plain text
msgid ""
"Be careful about going below 1 encoder count, since you may create a "
"condition where there is no place that your servo is happy. This can go "
"beyond 'hunting' (slow) to 'nervous' (rapid), and even to 'squealing' which "
"is easy to confuse with oscillation caused by improper tuning. Better to be "
"a count or two loose here at first, until you've been through 'gross tuning' "
"at least."
msgstr ""

#. type: Plain text
msgid ""
"Example of calculating machine units per encoder pulse to use in deciding "
"DEADBAND value:"
msgstr ""

#. latexmath:[ \frac{X\, inches}{1\, encoder\, count} =
#. \frac{1\, revolution}{1000\, encoder\, lines} \times
#. \frac{1\, encoder\, line}{4\, quadrature\, counts} \times
#. \frac{0.200\, inches}{1\, revolution} =
#. \frac{0.200\, inches}{4000\, encoder\, counts} =
#. \frac{0.000050\, inches}{1\, encoder\, count} ]
#. type: Target for macro image
#, no-wrap
msgid "images/encoder-counts-math.png"
msgstr ""

#. type: Plain text
msgid "'BIAS = 0.000' - This is used by hm2-servo and some others."
msgstr ""

#. type: Plain text
msgid ""
"Bias is a constant amount that is added to the output. In most cases it "
"should be left at zero.  However, it can sometimes be useful to compensate "
"for offsets in servo amplifiers, or to balance the weight of an object that "
"moves vertically. bias is turned off when the PID loop is disabled, just "
"like all other components of the output."
msgstr ""

#. type: Plain text
msgid "'P = 50' - The proportional gain for the joint servo. This value"
msgstr ""

#. type: Plain text
msgid ""
"multiplies the error between commanded and actual position in machine units, "
"resulting in a contribution to the computed voltage for the motor amplifier. "
"The units on the P gain are volts per machine unit, e.g., image:images/p-"
"term.png[height=25]"
msgstr ""

#. latexmath:[$\frac{volt}{mu}$]. 
#. type: Plain text
msgid "'I = 0' - The integral gain for the joint servo. The value"
msgstr ""

#. type: Plain text
msgid ""
"multiplies the cumulative error between commanded and actual position in "
"machine units, resulting in a contribution to the computed voltage for the "
"motor amplifier. The units on the I gain are volts per machine unit second, "
"e.g., image:images/i-term.png[height=25]"
msgstr ""

#. latexmath:[$\frac{volt}{mu\, s}$].
#. type: Plain text
msgid "'D = 0' - The derivative gain for the joint servo. The value"
msgstr ""

#. type: Plain text
msgid ""
"multiplies the difference between the current and previous errors, resulting "
"in a contribution to the computed voltage for the motor amplifier. The units "
"on the D gain are volts per machine unit per second, e.g., image:images/i-"
"term.png[height=25]"
msgstr ""

#.  latexmath:[$\frac{volt}{mu/s}$].
#. type: Plain text
msgid "'FF0 = 0' - The 0th order feed forward gain. This number is"
msgstr ""

#. type: Plain text
msgid ""
"multiplied by the commanded position, resulting in a contribution to the "
"computed voltage for the motor amplifier. The units on the FF0 gain are "
"volts per machine unit, e.g., image:images/p-term.png[height=25]"
msgstr ""

#.  latexmath:[$\frac{volt}{mu}$].
#. type: Plain text
msgid "'FF1 = 0' - The 1st order feed forward gain. This number is"
msgstr ""

#. type: Plain text
msgid ""
"multiplied by the change in commanded position per second, resulting in a "
"contribution to the computed voltage for the motor amplifier. The units on "
"the FF1 gain are volts per machine unit per second, e.g., image:images/i-"
"term.png[height=25]"
msgstr ""

#.  latexmath:[$\frac{volt}{mu\, s}$].
#. type: Plain text
msgid "'FF2 = 0' - The 2nd order feed forward gain. This number is"
msgstr ""

#. type: Plain text
msgid ""
"multiplied by the change in commanded position per second per second, "
"resulting in a contribution to the computed voltage for the motor amplifier. "
"The units on the FF2 gain are volts per machine unit per second per second, "
"e.g., image:images/ff2.png[height=25]"
msgstr ""

#.  latexmath:[$\frac{volt}{mu\, s^{2}}$].
#. type: Plain text
msgid "'OUTPUT_SCALE = 1.000' -"
msgstr ""

#. type: Plain text
msgid ""
"'OUTPUT_OFFSET = 0.000' - These two values are the scale and offset factors "
"for"
msgstr ""

#. type: Plain text
msgid ""
"the joint output to the motor amplifiers.  The second value (offset) is "
"subtracted from the computed output (in volts), and divided by the first "
"value (scale factor), before being written to the D/A converters. The units "
"on the scale value are in true volts per DAC output volts. The units on the "
"offset value are in volts. These can be used to linearize a DAC.  "
"Specifically, when writing outputs, the LinuxCNC first converts the desired "
"output in quasi-SI units to raw actuator values, e.g., volts for an "
"amplifier DAC. This scaling looks like: image:images/output-offset.png[]"
msgstr ""

#.  latexmath:[raw=\frac{output-offset}{scale}]
#. type: Plain text
msgid ""
"The value for scale can be obtained analytically by doing a unit analysis, i."
"e., units are [output SI units]/[actuator units]. For example, on a machine "
"with a velocity mode amplifier such that 1 volt results in 250 mm/sec "
"velocity."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/scale-math.png"
msgstr ""

#.  latexmath:[$ amplifier [volts] = (output [\frac{mm}{sec}]
#.  - offset [\frac{mm}{sec}]) / 250 \frac{mm}{sec\, volt} ] $]
#. type: Plain text
msgid ""
"Note that the units of the offset are in machine units, e.g., mm/sec, and "
"they are pre-subtracted from the sensor readings. The value for this offset "
"is obtained by finding the value of your output which yields 0.0 for the "
"actuator output. If the DAC is linearized, this offset is normally 0.0."
msgstr ""

#. type: Plain text
msgid ""
"The scale and offset can be used to linearize the DAC as well, resulting in "
"values that reflect the combined effects of amplifier gain, DAC non-"
"linearity, DAC units, etc."
msgstr ""

#. type: Plain text
msgid "To do this, follow this procedure."
msgstr ""

#. type: Plain text
msgid "desired voltage and measuring the result."
msgstr ""

#. type: Plain text
msgid "Do a least-squares linear fit to get coefficients a, b such"
msgstr ""

#. type: Plain text
msgid "that image:images/calibration-1.png[]"
msgstr ""

#. type: Plain text
msgid "image:images/calibration-2.png[]"
msgstr ""

#. type: Plain text
msgid "image:images/calibration-3.png[]"
msgstr ""

#. type: Plain text
msgid "As a result, the a and b coefficients from the linear fit can be"
msgstr ""

#. type: Plain text
msgid "used as the scale and offset for the controller directly."
msgstr ""

#. type: Plain text
msgid "See the following table for an example of voltage measurements."
msgstr ""

#. type: Table
#, no-wrap
msgid "Raw"
msgstr ""

#. type: Table
#, no-wrap
msgid "Measured"
msgstr ""

#. type: Table
#, no-wrap
msgid "-9.93"
msgstr ""

#. type: Table
#, no-wrap
msgid "-8.83"
msgstr ""

#. type: Table
#, no-wrap
msgid "-0.03"
msgstr ""

#. type: Table
#, no-wrap
msgid "0.96"
msgstr ""

#. type: Table
#, no-wrap
msgid "9.87"
msgstr ""

#. type: Table
#, no-wrap
msgid "10.87"
msgstr ""

#. type: Plain text
msgid ""
"'MAX_OUTPUT = 10' - The maximum value for the output of the PID compensation"
msgstr ""

#. type: Plain text
msgid ""
"that is written to the motor amplifier, in volts. The computed output value "
"is clamped to this limit. The limit is applied before scaling to raw output "
"units. The value is applied symmetrically to both the plus and the minus "
"side."
msgstr ""

#. type: Plain text
msgid "'INPUT_SCALE = 20000' - in Sample configs"
msgstr ""

#. type: Plain text
msgid ""
"'ENCODER_SCALE = 20000' - in PNCconf built configs Specifies the number of "
"pulses that corresponds to a move of one machine unit as set in the [TRAJ] "
"section.  For a linear joint one machine unit will be equal to the setting "
"of LINEAR_UNITS.  For an angular joint one unit is equal to the setting in "
"ANGULAR_UNITS.  A second number, if specified, is ignored.  For example, on "
"a 2000 counts per rev encoder, and 10 revs/inch gearing, and desired units "
"of inch, we have:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/encoder-scale.png"
msgstr ""

#. latexmath:[ INPUT\_SCALE =
#. \frac{2000\, counts}{rev} \times \frac{10\, rev}{inch} =
#. \frac{20000\, counts}{inch} ]
#. type: Block title
#, no-wrap
msgid "Stepper"
msgstr ""

#. type: Plain text
msgid "These parameters are relevant to joints controlled by steppers."
msgstr ""

#. type: Plain text
msgid "The following items might be used by a stepgen component."
msgstr ""

#. type: Plain text
msgid "'SCALE = 4000' - in Sample configs"
msgstr ""

#. type: Plain text
msgid ""
"'STEP_SCALE = 4000' - in PNCconf built configs Specifies the number of "
"pulses that corresponds to a move of one machine unit as set in the [TRAJ] "
"section.  For stepper systems, this is the number of step pulses issued per "
"machine unit. For a linear joint one machine unit will be equal to the "
"setting of LINEAR_UNITS. For an angular joint one unit is equal to the "
"setting in ANGULAR_UNITS. For servo systems, this is the number of feedback "
"pulses per machine unit.  A second number, if specified, is ignored."
msgstr ""

#. type: Plain text
msgid ""
"For example, on a 1.8 degree stepper motor with half-stepping, and 10 revs/"
"inch gearing, and desired <<sec:traj-section,machine units>> of inch, we "
"have:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepper-scale.png"
msgstr ""

#. latexmath:[ scale = 
#. \frac{2\, steps}{1.8\, degree} \times \frac{360\, degree}{rev} \times \frac{10\, rev}{inch} =
#. \frac{4000\, steps}{inch} ]
#. type: Plain text
msgid ""
"'ENCODER_SCALE = 20000' (Optionally used in PNCconf built configs) - "
"Specifies the number of pulses that corresponds to a move of one machine "
"unit as set in the [TRAJ] section.  For a linear joint one machine unit will "
"be equal to the setting of LINEAR_UNITS.  For an angular joint one unit is "
"equal to the setting in ANGULAR_UNITS.  A second number, if specified, is "
"ignored.  For example, on a 2000 counts per rev encoder, and 10 revs/inch "
"gearing, and desired units of inch, we have:"
msgstr ""

#. latexmath:[ ENCODER\_SCALE =
#. \frac{2000\, counts}{rev} \times \frac{10\, rev}{inch} =
#. \frac{20000\, counts}{inch} ]
#. type: Plain text
msgid "'STEPGEN_MAXACCEL = 21.0' - Acceleration limit for the step generator."
msgstr ""

#. type: Plain text
msgid ""
"This should be 1% to 10% larger than the joint MAX_ACCELERATION. This value "
"improves the tuning of stepgen's \"position loop\". If you have added "
"backlash compensation to an joint then this should be 1.5 to 2 times greater "
"than MAX_ACCELERATION."
msgstr ""

#. type: Plain text
msgid ""
"'STEPGEN_MAXVEL = 1.4' - Older configuration files have a velocity limit for"
msgstr ""

#. type: Plain text
msgid ""
"the step generator as well. If specified, it should also be 1% to 10% larger "
"than the joint MAX_VELOCITY. Subsequent testing has shown that use of "
"STEPGEN_MAXVEL does not improve the tuning of stepgen's position loop."
msgstr ""

#. type: Plain text
msgid "[[sec:emcio-section]](((INI File, EMCIO Section)))"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "[EMCIO] Section"
msgstr ""

#. type: Plain text
msgid "'EMCIO = io' - Name of IO controller program"
msgstr ""

#. type: Plain text
msgid "'CYCLE_TIME = 0.100' -"
msgstr ""

#. type: Plain text
msgid ""
"The period, in seconds, at which EMCIO will run. Making it 0.0 or a negative "
"number will tell EMCIO not to sleep at all. There is usually no need to "
"change this number."
msgstr ""

#. type: Plain text
msgid "'TOOL_TABLE = tool.tbl' -"
msgstr ""

#. type: Plain text
msgid "The file which contains tool information, described in the User Manual."
msgstr ""

#. type: Plain text
msgid "'DB_PROGRAM = db_program' -"
msgstr ""

#. type: Plain text
msgid ""
"Path to an executable program that manages tool data.  (When a DB_PROGRAM is "
"specified, a TOOL_TABLE entry is ignored)"
msgstr ""

#. type: Plain text
msgid "'TOOL_CHANGE_POSITION = 0 0 2' -"
msgstr ""

#. type: Plain text
msgid ""
"Specifies the XYZ location to move to when performing a tool change if three "
"digits are used.  Specifies the XYZABC location when 6 digits are used.  "
"Specifies the XYZABCUVW location when 9 digits are used.  Tool Changes can "
"be combined. For example if you combine the quill up with change position "
"you can move the Z first then the X and Y."
msgstr ""

#. type: Plain text
msgid "'TOOL_CHANGE_WITH_SPINDLE_ON = 1' -"
msgstr ""

#. type: Plain text
msgid ""
"The spindle will be left on during the tool change when the value is 1.  "
"Useful for lathes or machines where the material is in the spindle, not the "
"tool."
msgstr ""

#. type: Plain text
msgid "'TOOL_CHANGE_QUILL_UP = 1' -"
msgstr ""

#. type: Plain text
msgid ""
"The Z axis will be moved to machine zero prior to the tool change when the "
"value is 1. This is the same as issuing a G0 G53 Z0."
msgstr ""

#. type: Plain text
msgid "'TOOL_CHANGE_AT_G30 = 1' -"
msgstr ""

#. type: Plain text
msgid ""
"The machine is moved to reference point defined by parameters 5181-5186 for "
"G30 if the value is 1. For more information see <<gcode:parameters,G-Code "
"Parameters>> and <<gcode:g30-g30.1,G-Code G30-G30.1>>."
msgstr ""

#. type: Plain text
msgid "'RANDOM_TOOLCHANGER = 1' -"
msgstr ""

#. type: Plain text
msgid ""
"This is for machines that cannot place the tool back into the pocket it came "
"from. For example, machines that exchange the tool in the active pocket with "
"the tool in the spindle."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Homing Configuration"
msgstr ""

#. type: Plain text
msgid ""
"Homing sets the zero origin of the G53 machine coordinates. + Soft limits "
"are defined relative to the machine origin. + The soft limits automatically "
"decelerate and stop the axes before they hits the limits switches + A "
"properly setup and functioning machine will not move beyond soft(ware) "
"limits and + will have the machine origin set as repeatable as the home "
"switch/index mechanism is. + Linuxcnc can be homed by eye (alignment marks), "
"with switches, with switches and encoder index, or use absolute encoders. + "
"Homing seems simple enough - just move each joint to a known location, and "
"set LinuxCNC's internal variables accordingly. + However, different machines "
"have different requirements, and homing is actually quite complicated."
msgstr ""

#. type: Plain text
msgid ""
"While it is possible to use linuxcnc without homing switches/home procedures "
"or limit switches, It defeats the extra security of the soft limits."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Prerequisite"
msgstr ""

#. type: Plain text
msgid "Homing relies on some fundamental machine assumptions. +"
msgstr ""

#. type: Plain text
msgid ""
"The negative and positive directions are based on <<sec:Machine-"
"Configurations,Tool Movement>> which can be different + then the actual "
"machine movement. ie on a mill typically the table moves rather then the "
"tool."
msgstr ""

#. type: Plain text
msgid ""
"Everything is referenced from the G53 machine zero origin, the origin can be "
"anywhere (even outside where you can move) +"
msgstr ""

#. type: Plain text
msgid ""
"The G53 machine zero origin is typically inside the soft limits area but not "
"necessarily. +"
msgstr ""

#. type: Plain text
msgid ""
"The homing switch offset sets where the origin is, but even it is referenced "
"from the origin. +"
msgstr ""

#. type: Plain text
msgid ""
"When using encoder index homing, the home switch offset is calculated from "
"the encoder reference position, after the home switch has been tripped. +"
msgstr ""

#. type: Plain text
msgid ""
"The negative soft(ware) limits are the most you can move in the negative "
"direction after homing. + (but they might not be negative in the absolute "
"sense) +"
msgstr ""

#. type: Plain text
msgid ""
"The positive soft(ware) limits are the most you can move in the positive "
"direction after homing. + (but they might not be positive in the absolute "
"sense, though it is usual to set it as a positive number) +"
msgstr ""

#. type: Plain text
msgid "Soft(ware) limits are inside the limit switch area. +"
msgstr ""

#. type: Plain text
msgid "(Final) Homed Position is inside the soft limit area +"
msgstr ""

#. type: Plain text
msgid ""
"(If using switch based homing) the homing switch(es) either utilize the "
"limit switches (shared home / limit switch), + or when using a separate home "
"switch, are inside the limit switch area."
msgstr ""

#. type: Plain text
msgid ""
"If using a separate homing switch, it's possible to start homing on the "
"wrong side of the home switch, + which combined with HOME_IGNORE_LIMITS "
"option will lead to a hard crash. + You can avoid this by making the home "
"switch toggle it's state when the trip dog is on a particular side until it "
"returns passed the trip point again. + Said another way, the home switch "
"state must represent the position of the dog relative to the switch (ie "
"_before_ or _after_ the switch), + and must stay that way even if the dog "
"coasts past the switch in the same direction."
msgstr ""

#. type: Plain text
msgid ""
"While it is possible to use linuxcnc with the G53 machine origin outside the "
"soft machine limits, if you use G28 or G30 without setting + the parameters "
"it goes to the origin by default. This would trip the limit switches before "
"getting to position."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Separate Home Switch Example Layout"
msgstr ""

#. type: Plain text
msgid ""
"This example shows minimum and maximum limit switches with a separate home "
"switch. +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Demonstrative Separate Switch Layout"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Example Homing Switch layout"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/HomeAxisTravel_V2.png"
msgstr ""

#. type: Plain text
msgid "A is the negative soft limit"
msgstr ""

#. type: Plain text
msgid "B is the G53 machine coordinate Origin"
msgstr ""

#. type: Plain text
msgid "C is the home switch trip point"
msgstr ""

#. type: Plain text
msgid "D is the positive soft limit"
msgstr ""

#. type: Plain text
msgid "H is the final home position (HOME) = 0 units"
msgstr ""

#. type: Plain text
msgid "The -L and +L are the limit switches trip points"
msgstr ""

#. type: Plain text
msgid "A<->B is the negative soft limits (MIN_LIMITS) = -3 units"
msgstr ""

#. type: Plain text
msgid "B<->C is the home_offset (HOME_OFFSET) = -2.3 units"
msgstr ""

#. type: Plain text
msgid "B<->D is the positive soft limits (MAX_LIMITS) = 7 units"
msgstr ""

#. type: Plain text
msgid "A<->D is the total travel = 10 units"
msgstr ""

#. type: Plain text
msgid ""
"The distance between the limit switches and soft limits (-L<->A and D<-+L) "
"is magnified in this example"
msgstr ""

#. type: Plain text
msgid ""
"Note that there is distance between the limit switches and actual physical "
"hard contact for coasting after the amplifier is disabled."
msgstr ""

#. type: Plain text
msgid ""
"Homing sets the G53 coordinate system, while the machine origin (zero point) "
"can be anywhere, + setting the zero point at the negative soft limit makes "
"all G53 coordinates positive, + which is probably easiest to remember. Do "
"this by setting MIN_LIMIT = 0 and make sure MAX_LIMIT is positive."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Shared Limit/Home Switch Example Layout"
msgstr ""

#. type: Plain text
msgid ""
"This example shows a maximum limit switch and a combined minimum limit/home "
"switch. +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Demonstrative Shared Switch Layout"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Example shared Home Limit Switch layout"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/HomeAxisTravel_V3.png"
msgstr ""

#. type: Plain text
msgid "C is the home switch trip point shared with (-L) minimum limit trip"
msgstr ""

#. type: Plain text
msgid "H is the final home position (HOME) = 3 units"
msgstr ""

#. type: Plain text
msgid "The -L and +L are the limit switch trip points"
msgstr ""

#. type: Plain text
msgid "A<->B is the negative soft limits (MIN_LIMITS) = 0 units"
msgstr ""

#. type: Plain text
msgid "B<->C is the home_offset (HOME_OFFSET) = -0.7 units"
msgstr ""

#. type: Plain text
msgid "B<->D is the positive soft limits (MAX_LIMITS) 10 units"
msgstr ""

#. type: Plain text
msgid ""
"The distance between the limits switches and soft limits (-L<->A and D<->+L) "
"is magnified in this example"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Homing Sequence"
msgstr ""

#. type: Plain text
msgid ""
"There are four possible homing sequences defined by the sign of "
"HOME_SEARCH_VEL and HOME_LATCH_VEL, along with the associated configuration "
"parameters as shown in the following table. Two basic conditions exist, "
"HOME_SEARCH_VEL and HOME_LATCH_VEL are the same sign or they are opposite "
"signs. For a more detailed description of what each configuration parameter "
"does, see the following section."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Homing Sequences"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/emc2-motion-homing-diag.png"
msgstr ""

#. type: Plain text
msgid ""
"The following determines exactly how the home sequence behaves.  They are "
"defined in an [JOINT_n] section of the inifile."
msgstr ""

#. type: Table
#, no-wrap
msgid "Homing Type"
msgstr ""

#. type: Table
#, no-wrap
msgid "HOME_SEARCH_VEL"
msgstr ""

#. type: Table
#, no-wrap
msgid "HOME_LATCH_VEL"
msgstr ""

#. type: Table
#, no-wrap
msgid "HOME_USE_INDEX"
msgstr ""

#. type: Table
#, no-wrap
msgid "Immediate"
msgstr ""

#. type: Table
#, no-wrap
msgid "NO"
msgstr ""

#. type: Table
#, no-wrap
msgid "Index-only"
msgstr ""

#. type: Table
#, no-wrap
msgid "nonzero"
msgstr ""

#. type: Table
#, no-wrap
msgid "YES"
msgstr ""

#. type: Table
#, no-wrap
msgid "Switch-only"
msgstr ""

#. type: Table
#, no-wrap
msgid "Switch and Index"
msgstr ""

#. type: Plain text
msgid "Any other combinations may result in an error."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_SEARCH_VEL (((HOME SEARCH VEL)))"
msgstr ""

#. type: Plain text
msgid "This variable has units of machine-units per second."
msgstr ""

#. type: Plain text
msgid ""
"The default value is zero. A value of zero causes LinuxCNC to assume that "
"there is no home switch; the search stage of homing is skipped."
msgstr ""

#. type: Plain text
msgid ""
"If HOME_SEARCH_VEL is non-zero, then LinuxCNC assumes that there is a home "
"switch. It begins by checking whether the home switch is already tripped. If "
"tripped it backs off the switch at HOME_SEARCH_VEL. The direction of the "
"back-off is opposite the sign of HOME_SEARCH_VEL. Then it searches for the "
"home switch by moving in the direction specified by the sign of "
"HOME_SEARCH_VEL, at a speed determined by its absolute value. When the home "
"switch is detected, the joint will stop as fast as possible, but there will "
"always be some overshoot. The amount of overshoot depends on the speed. If "
"it is too high, the joint might overshoot enough to hit a limit switch or "
"crash into the end of travel.  On the other hand, if HOME_SEARCH_VEL is too "
"low, homing can take a long time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_LATCH_VEL (((HOME LATCH VEL)))"
msgstr ""

#. type: Plain text
msgid ""
"Specifies the speed and direction that LinuxCNC uses when it makes its final "
"accurate determination of the home switch (if present) and index pulse "
"location (if present). It will usually be slower than the search velocity to "
"maximize accuracy. If HOME_SEARCH_VEL and HOME_LATCH_VEL have the same sign, "
"then the latch phase is done while moving in the same direction as the "
"search phase. (In that case, LinuxCNC first backs off the switch, before "
"moving towards it again at the latch velocity.) If HOME_SEARCH_VEL and "
"HOME_LATCH_VEL have opposite signs, the latch phase is done while moving in "
"the opposite direction from the search phase.  That means LinuxCNC will "
"latch the first pulse after it moves off the switch. If HOME_SEARCH_VEL is "
"zero (meaning there is no home switch), and this parameter is nonzero, "
"LinuxCNC goes ahead to the index pulse search. If HOME_SEARCH_VEL is non-"
"zero and this parameter is zero, it is an error and the homing operation "
"will fail. The default value is zero."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_FINAL_VEL"
msgstr ""

#. type: Plain text
msgid ""
"It specifies the speed that LinuxCNC uses when it makes its move from "
"HOME_OFFSET to the HOME position. If the HOME_FINAL_VEL is missing from the "
"ini file, then the maximum joint speed is used to make this move.  The value "
"must be a positive number."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_IGNORE_LIMITS (((HOME IGNORE LIMITS)))"
msgstr ""

#. type: Plain text
msgid ""
"Can hold the values YES / NO. The default value for this parameter is NO.  "
"This flag determines whether LinuxCNC will ignore the limit switch input for "
"this joint while homing. This setting will not ignore limit inputs for other "
"joints. If you do not have a separate home switch set this to YES and "
"connect the limit switch signal to the joint home switch input in HAL. "
"LinuxCNC will ignore the limit switch input for this joint while homing. To "
"use only one input for all homing and limits you will have to block the "
"limit signals of the joints not homing in HAL and home one joint at a time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_USE_INDEX (((HOME USE INDEX)))"
msgstr ""

#. type: Plain text
msgid ""
"Specifies whether or not there is an index pulse. If the flag is true "
"(HOME_USE_INDEX = YES), LinuxCNC will latch on the rising edge of the index "
"pulse. If false, LinuxCNC will latch on either the rising or falling edge of "
"the home switch (depending on the signs of HOME_SEARCH_VEL and "
"HOME_LATCH_VEL). The default value is NO."
msgstr ""

#. type: Plain text
msgid ""
"HOME_USE_INDEX requires connections in your hal file to joint.n.index-enable "
"from the encoder.n.index-enable."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_INDEX_NO_ENCODER_RESET (((HOME INDEX NO ENCODER RESET)))"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Default is NO.   Use YES if the encoder used for this joint does not\n"
"reset its counter when an index pulse is detected after assertion\n"
"of the joint index_enable hal pin.\n"
"Applicable only for HOME_USE_INDEX = YES.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_OFFSET (((HOME OFFSET)))"
msgstr ""

#. type: Plain text
msgid ""
"This defines the location of the origin zero point of the G53 machine "
"coordinate system. + It is the distance (offset), in joint units, from the "
"machine origin to the home switch trip point or index pulse. + After "
"detecting the switch trip point/index pulse, LinuxCNC sets the joint "
"coordinate position to HOME_OFFSET, thus defining the origin, which the soft "
"limits references from. + The default value is zero."
msgstr ""

#. type: Plain text
msgid ""
"The home switch location, as indicated by the HOME_OFFSET variable, can be "
"inside or outside the soft limits. They will be shared with or inside the "
"hard limit switches."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME (((HOME)))"
msgstr ""

#. type: Plain text
msgid ""
"The position that the joint will go to upon completion of the homing "
"sequence. After detecting the home switch or home switch then index pulse "
"(depending on configuration), and setting the coordinate of that point to "
"HOME_OFFSET, LinuxCNC makes a move to HOME as the final step of the homing "
"process. The default value is zero. Note that even if this parameter is the "
"same as HOME_OFFSET, the joint will slightly overshoot the latched position "
"as it stops. Therefore there will always be a small move at this time "
"(unless HOME_SEARCH_VEL is zero, and the entire search/latch stage was "
"skipped). This final move will be made at the joint's maximum velocity "
"unless HOME_FINAL_VEL has been set."
msgstr ""

#. type: Plain text
msgid ""
"The distinction between 'HOME_OFFSET' and 'HOME' is that 'HOME_OFFSET' first "
"establishes the origin location and scale on the machine by applying the "
"'HOME_OFFSET' value to the location where home was found, and then 'HOME' "
"says where the joint should move to on that scale."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_IS_SHARED (((HOME IS SHARED)))"
msgstr ""

#. type: Plain text
msgid ""
"If there is not a separate home switch input for this joint, but a number of "
"momentary switches wired to the same pin, set this value to 1 to prevent "
"homing from starting if one of the shared switches is already closed. Set "
"this value to 0 to permit homing even if the switch is already closed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_ABSOLUTE_ENCODER (((HOME ABSOLUTE ENCODER)))"
msgstr ""

#. type: Plain text
msgid ""
"Use for absolute encoders.  When a request is made to home the joint, the "
"current joint position is set to the '[JOINT_n]HOME_OFFSET' value."
msgstr ""

#. type: Plain text
msgid ""
"The final move to the '[JOINT_n]HOME' position is optional according to the "
"'HOME_ABSOLUTE_ENCODER' setting:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"HOME_ABSOLUTE_ENCODER = 0 (Default) joint does not use an absolute encoder\n"
"HOME_ABSOLUTE_ENCODER = 1 Absolute encoder, final move to [JOINT_n]HOME\n"
"HOME_ABSOLUTE_ENCODER = 2 Absolute encoder, NO final move to [JOINT_n]HOME\n"
msgstr ""

#. type: Plain text
msgid "A HOME_IS_SHARED setting is silently ignored."
msgstr ""

#. type: Plain text
msgid "A request to rehome the joint is silently ignored."
msgstr ""

#. type: Plain text
msgid "[[sec:homing-section]](((HOME SEQUENCE)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME_SEQUENCE (((HOME SEQUENCE)))"
msgstr ""

#. type: Plain text
msgid ""
"Used to define a multi-joint homing sequence *HOME ALL* and enforce homing "
"order (e.g., Z may not be homed if X is not yet homed). A joint may be homed "
"after all joints with a lower (absolute value)  HOME_SEQUENCE have already "
"been homed and are at the HOME_OFFSET. If two joints have the same "
"HOME_SEQUENCE, they may be homed at the same time."
msgstr ""

#. type: Plain text
msgid ""
"If HOME_SEQUENCE is not specified then the joint will not be homed by the "
"*HOME ALL* sequence (but may be homed by individual joint-specific homing "
"commands)."
msgstr ""

#. type: Plain text
msgid ""
"The initial HOME_SEQUENCE number may be 0, 1 (or -1).  The absolute value of "
"sequence numbers must increment by one -- skipping sequence numbers is not "
"supported.  If a sequence number is omitted, *HOME ALL* homing will stop "
"upon completion of the last valid sequence number."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Negative* HOME_SEQUENCE values indicate that joints in the sequence\n"
"should *synchronize the final move* to [JOINT_n]HOME by waiting until all \n"
"joints in the sequence are ready.  If any joint has a *negative*\n"
"HOME_SEQUENCE value, then all joints with the same absolute value\n"
"(positive or negative) of the HOME_SEQUENCE item value will synchronize\n"
"the final move.\n"
msgstr ""

#. type: Plain text
msgid ""
"A *negative* HOME_SEQUENCE also applies to commands to home a single joint.  "
"If the HOME_SEQUENCE value is *negative*, all joints having the same "
"absolute value of that HOME_SEQUENCE will be *homed together with a "
"synchronized final move*.  If the HOME_SEQUENCE value is zero or positive, a "
"command to home the joint will home only the specified joint."
msgstr ""

#. type: Plain text
msgid ""
"Joint mode jogging of joints having a negative HOME_SEQUENCE is disallowed.  "
"In common gantry applications, such jogging can lead to misalignment "
"(racking).  Note that conventional jogging in world coordinates is always "
"available once a machine is homed."
msgstr ""

#. type: Plain text
msgid "Examples for a 3 joint system"
msgstr ""

#. type: Plain text
msgid "Two sequences (0,1), no synchronization"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]HOME_SEQUENCE =  0\n"
"[JOINT_1]HOME_SEQUENCE =  1\n"
"[JOINT_2]HOME_SEQUENCE =  1\n"
msgstr ""

#. type: Plain text
msgid "Two sequences, joints 1 and 2 synchronized"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]HOME_SEQUENCE =  0\n"
"[JOINT_1]HOME_SEQUENCE = -1\n"
"[JOINT_2]HOME_SEQUENCE = -1\n"
msgstr ""

#. type: Plain text
msgid "With mixed positive and negative values, joints 1 and 2 synchronized"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]HOME_SEQUENCE =  0\n"
"[JOINT_1]HOME_SEQUENCE = -1\n"
"[JOINT_2]HOME_SEQUENCE =  1\n"
msgstr ""

#. type: Plain text
msgid "One sequence, no synchronization"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]HOME_SEQUENCE =  0\n"
"[JOINT_1]HOME_SEQUENCE =  0\n"
"[JOINT_2]HOME_SEQUENCE =  0\n"
msgstr ""

#. type: Plain text
msgid "One sequence, all joints synchronized"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]HOME_SEQUENCE = -1\n"
"[JOINT_1]HOME_SEQUENCE = -1\n"
"[JOINT_2]HOME_SEQUENCE = -1\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "VOLATILE_HOME (((VOLATILE HOME)))"
msgstr ""

#. type: Plain text
msgid ""
"If this setting is true, this joint becomes unhomed whenever the machine "
"transitions into the OFF state. This is appropriate for any joint that does "
"not maintain position when the joint drive is off.  Some stepper drives, "
"especially microstep drives, may need this."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LOCKING_INDEXER (((LOCKING INDEXER)))"
msgstr ""

#. type: Plain text
msgid ""
"If this joint is a locking rotary indexer, it will unlock before homing, and "
"lock afterward."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Immediate Homing (((Immediate Homing)))"
msgstr ""

#. type: Plain text
msgid ""
"If a joint does not have home switches or does not have a logical home "
"position like a rotary joint and you want that joint to home at the current "
"position when the \"Home All\" button is pressed in the Axis gui, then the "
"following ini entries for that joint are needed."
msgstr ""

#. type: Plain text
msgid "HOME_SEARCH_VEL = 0"
msgstr ""

#. type: Plain text
msgid "HOME_LATCH_VEL = 0"
msgstr ""

#. type: Plain text
msgid "HOME_USE_INDEX = NO"
msgstr ""

#. type: Plain text
msgid "HOME equals to HOME_OFFSET"
msgstr ""

#. type: Plain text
msgid "HOME_SEQUENCE = 0 (or other valid sequence number)"
msgstr ""

#. type: Plain text
msgid ""
"The default values for unspecified HOME_SEARCH_VEL, HOME_LATCH_VEL, "
"HOME_USE_INDEX, HOME, and HOME_OFFSET are *zero*, so they may be omitted "
"when requesting immediate homing.  A valid HOME_SEQUENCE number should "
"usually be included since omitting a HOME_SEQUENCE eliminates the joint from "
"*HOME ALL* behavior as noted above."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Inhibiting Homing (((Inhibiting Homing)))"
msgstr ""

#. type: Plain text
msgid ""
"A hal pin (motion.homing-inhibit) is provided to disallow homing initiation "
"for both \"Home All\" and individual joint homing."
msgstr ""

#. type: Plain text
msgid ""
"Some systems take advantage of the provisions for synchronizing final joint "
"homing moves as controlled by negative [JOINT_N]HOME_SEQUENCE= ini file "
"items.  By default, the synchronization provisions disallow *joint* jogging "
"prior to homing in order to prevent *joint* jogs that could misalign the "
"machine (gantry racking for example)."
msgstr ""

#. type: Plain text
msgid ""
"System integrator can allow *joint* jogging prior to homing with hal logic "
"that switches the [JOINT_N]HOME_SEQUENCE items.  This logic should also "
"assert the *motion.homing-inhibit* pin to ensure that homing is not "
"inadvertently initiated when *joint* jogging is enabled."
msgstr ""

#. type: Plain text
msgid ""
"Example: Synced joints 0,1 using negative sequence (-1) for synchronized "
"homing with a switch (allow_jjog) that selects a positive sequence (1) for "
"individual *joint* jogging prior to homing (partial hal code):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt mux2           names=home_sequence_mux\n"
"loadrt conv_float_s32 names=home_sequence_s32\n"
"setp home_sequence_mux.in0 -1\n"
"setp home_sequence_mux.in1  1\n"
"addf home_sequence_mux servo-thread\n"
"addf home_sequence_s32 servo-thread\n"
"...\n"
"net home_seq_float <= home_sequence_mux.out\n"
"net home_seq_float => home_sequence_s32.in\n"
"net home_seq_s32   <= home_sequence_s32.out\n"
"net home_seq_s32   => ini.0.home_sequence\n"
"net home_seq_s32   => ini.1.home_sequence\n"
"...\n"
"# allow_jjog: pin created by a virtual panel or hardware switch\n"
"net hsequence_select <= allow_jjog\n"
"net hsequence_select => home_sequence_mux.sel\n"
"net hsequence_select => motion.homing-inhibit\n"
msgstr ""

#. type: Plain text
msgid ""
"Inihal pins (like ini.N.home_sequence) are not available until milltask "
"starts so execution of the above hal commands should be deferred using a "
"postgui halfile or a delayed [APPLICATION]APP= script."
msgstr ""

#. type: Plain text
msgid ""
"Realtime synchronization of joint jogging for multiple joints requires "
"additional hal connections for the Manual-Pulse-Generator (MPG) type jog "
"pins (joint.N.enable, joint.N.scale, joint.N.counts)."
msgstr ""

#. type: Plain text
msgid ""
"An example simulation config (gantry_jjog.ini) that demonstrates joint "
"jogging when using negative home sequences is located in the: configs/sim/"
"axis/gantry/ directory."
msgstr ""

#. type: Title =
#, no-wrap
msgid "I/O Control V2"
msgstr ""

#. type: Plain text
msgid ""
"I/O control handles I/O tasks like coolant, toolchange, e-stop and lube. The "
"signals are turned on and off in userspace with G code or in the case of e-"
"stop in hal."
msgstr ""

#. type: Plain text
msgid ""
"I/O Control V2 adds more toolchanger support for communication with the "
"toolchanger."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC originated abort and toolchanger fault: iocontrol reliably abort a "
"change operation in progress (tool-change asserted). A toolchanger may at "
"any time signal a fault which will abort the next M6. For instance, a "
"toolchanger finding an empty pocket during a prepare operation should be "
"able to signal a fault to iocontrol, and iocontrol act appropriately when "
"the M6 change operation is executed."
msgstr ""

#. type: Plain text
msgid ""
"Communicate abort/fault cause : let iocontrol know why toolchanger caused an "
"fault, and why iocontrol aborted. This is for UI purposes. It would be a "
"candidate for a #5xxx parameter, and selective display in the UI."
msgstr ""

#. type: Plain text
msgid ""
"No race conditions between iocontrol and toolchanger: the protocol between "
"iocontrol and toolchanger must be unambigous with respect to which operation "
"is signalled, and if a change operation is aborted or complete."
msgstr ""

#. type: Plain text
msgid ""
"Consistent view of state: Both parties must have a consistent view of the "
"state at any point in time with respect to aborted versus completed, and "
"tool number and pocket"
msgstr ""

#. type: Plain text
msgid ""
"Handshaked signaling an abort/fault: an abort signaled by LinuxCNC to the "
"toolchanger, and a fault indicated from the toolchanger is handshaked to "
"assure reliable signaling, and optionally force lock-step behaviour.  "
"Handshaking is optional and can be jumpered in HAL if not needed."
msgstr ""

#. type: Plain text
msgid ""
"Backwards compatibility: A toolchanger ignoring the iocontrol emc-abort line "
"and sticking to old handling will \"continue to work\" (subject to race "
"condition)"
msgstr ""

#. type: Plain text
msgid ""
"If you have strict timing requirements or simply need more I/O, consider "
"using the realtime I/O provided by link:../man/man9/motion.9.html[motion] "
"instead."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Plain text
msgid "INI file options:"
msgstr ""

#. type: Plain text
msgid ""
"PROTOCOL_VERSION = 2 Defaults to 2. Setting to 1 will emulate old iocontrol "
"behaviour."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"EMCIO = iov2 -support-start-change\n"
"You need to explicitly enable the start-change protocol by adding the \n"
"-support-start-change option; otherwise the start-change pin remains\n"
"low and   start-change-ack is ignored. The reason for this is better\n"
"backwards compatibility. \n"
msgstr ""

#. type: Plain text
msgid ""
"IO_ERROR : printf-style template for operator error display (negative "
"toolchanger fault codes) . No quoting needed. Example: IO_ERROR = "
"Toolchanger fault %d . Default: toolchanger error %d."
msgstr ""

#. type: Plain text
msgid ""
"DEBUG : To get a (quite detailed) trace, set either the RCS debugging flag "
"(0x00000200) to turn on RCS debugging messages all over LinuxCNC or use the "
"new iocontrol debugging bit (0x00001000) only for iov2 messages."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pins"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.coolant-flood (Bit, Out) TRUE when flood coolant is requested"
msgstr ""

#. type: Plain text
msgid "iocontrol.0.coolant-mist (Bit, Out) TRUE when mist coolant is requested"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.emc-enable-in (Bit, In) Should be driven FALSE when an external "
"estop condition exists."
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.lube (Bit, Out) TRUE when lube is requested. This pin gets "
"driven True when the controller comes out of E-stop, and when the \"Lube On"
"\" command gets sent to the controller. It gets driven False when the "
"controller goes into E-stop, and when the \"Lube Off\" command gets sent to "
"the controller."
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.lube_level (Bit, In) Should be driven FALSE when lubrication "
"tank is empty."
msgstr ""

#. type: Plain text
msgid "iocontrol.0.tool-change (Bit, Out) TRUE when a tool change is requested"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-changed (Bit, In) Should be driven TRUE when a tool change "
"is completed."
msgstr ""

#. type: Plain text
msgid "iocontrol.0.tool-number (s32, Out) Current tool number"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-prep-number (s32, Out) The number of the next tool, from "
"the RS274NGC T-word"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-prep-pocket (s32, Out) This is the pocket number (location "
"in the tool storage mechanism) of the tool requested by the most recent T-"
"word."
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-prepare (Bit, Out) TRUE when a Tn tool prepare is requested"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-prepared (Bit, In) Should be driven TRUE when a tool "
"prepare is completed."
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.user-enable-out (Bit, Out) FALSE when an internal estop "
"condition exists"
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.user-request-enable (Bit, Out) TRUE when the user has requested "
"that estop be cleared"
msgstr ""

#. type: Plain text
msgid "Additional pins added by I/O Control V2"
msgstr ""

#. type: Plain text
msgid "emc-abort: (Bit, Out) signals emc-originated abort to toolchanger."
msgstr ""

#. type: Plain text
msgid ""
"emc-abort-ack: (Bit, In) Acknowledge line from toolchanger for previous "
"signal, or jumpered to abort-tool-change if not used in toolchanger. NB: "
"after signaling an emc-abort, iov2 will block until emc-abort-ack is raised."
msgstr ""

#. type: Plain text
msgid ""
"emc-reason: (S32, Out) convey cause for EMC-originated abort to "
"toolchanger.  Usage: UI informational. Valid during emc-abort True."
msgstr ""

#. type: Plain text
msgid ""
"start-change: (Bit, Out) asserted at the very beginning of an M6 operation, "
"before any spindle-off, quill-up, or move-to-toolchange-position oeprations "
"are executed."
msgstr ""

#. type: Plain text
msgid "start-change-ack: (Bit, In) acknowledgment line for start-change."
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-fault: (Bit, In) toolchanger signals fault. This line is "
"contionuously monitored. A fault toogles a flag in iocontrol which is "
"reflected in the toolchanger-faulted pin."
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-fault-ack: (Bit, Out) handshake line for above signal. will be "
"set by iov2 after above fault line True is recognized and deasserted when "
"toolchanger-fault drops. Toolchanger is free to interpret the ack; reading "
"the -ack lines assures fault has been received and acted upon."
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-reason: (S32, In) convey reason code for toolchanger-originated "
"fault to iov2. Usage: signal wether to continue or abort the program, plus "
"UI informational if negative. Read during toolchanger-fault True. Non-zero "
"values will cause an Axis operator operator message or error message, see "
"below."
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-faulted: (Bit, Out) signals toolchanger-notify line has toggled "
"and toolchanger-reason-code was in the fault range. Next M6 will abort."
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-clear-fault: (Bit, In) resets TC fault condition. Deasserts "
"toolchanger-faulted if toolchanger-notify is line False. Usage: UI - e.g.  "
"clear fault condition button."
msgstr ""

#. type: Plain text
msgid ""
"iocontrol.0.tool-prep-index (s32, RO) IOâs internal array index of the "
"prepped tool requested by the most recent T-word. 0 if no tool is prepped. "
"On random toolchanger machines this is toolâs pocket number (ie, the same as "
"the tool-prep-pocket pin), on non-random toolchanger machines this is a "
"small integer corresponding to the toolâs location in the internal "
"representation of the tool table. This parameter returns to 0 after a "
"successful tool change M6."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Communications"
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC signals an abort for whatever reason, this is reflected in the "
"emc-abort and emc-reason pins. The toolchanger is expected to acknowledge "
"the emc-abort pin by raising the emc-abort-ack pin - iov2 will block until "
"this is done. If you do not need the abort handshake feature, jumper them as "
"follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid " net emc-abort-ack iocontrol.0.emc-abort iocontrol.0.emc-abort-ack \n"
msgstr ""

#. type: Plain text
msgid "The emc-reason pin is considered valid during emc-abort being true."
msgstr ""

#. type: Plain text
msgid ""
"The reason codes are as follows for LinuxCNC internally generated aborts "
"(see emc.hh ca line 321):"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_EXEC_ERROR = 1,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_AUX_ESTOP = 2,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_MOTION_OR_IO_RCS_ERROR = 3,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_STATE_OFF = 4,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_STATE_ESTOP_RESET = 5,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_STATE_ESTOP = 6,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_STATE_NOT_ON = 7,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_TASK_ABORT = 8,"
msgstr ""

#. type: Plain text
msgid "EMC_ABORT_USER = 100"
msgstr ""

#. type: Plain text
msgid ""
"iov2 adds one more code, namely EMC_ABORT_BY_TOOLCHANGER_FAULT = 101 which "
"is signaled when an M6 aborts due to the toolchanger-faulted pin being true."
msgstr ""

#. type: Plain text
msgid ""
"To signal toolchanger faults to LinuxCNC, wire the toolchanger-fault pin, "
"and optionally the toolchanger-reason and toolchanger-ack pins."
msgstr ""

#. type: Plain text
msgid ""
"The toolchanger-fault triggers the fault condition, which is reflected in "
"the toolchanger-faulted pin. This condition can be cleared by asserting the "
"toolchanger-clear-fault pin, provided the toolchanger-fault pin is false."
msgstr ""

#. type: Plain text
msgid "The value of the toolchanger-reason pin is used as follows:"
msgstr ""

#. type: Plain text
msgid ""
"toolchanger-reason > 0 : The toolchange process is not completed and the "
"program continues, however parameter #5060 is set to 1.0 to indicate the "
"fault.  Parameter #5601 contains the value of the toolchanger-reason pin."
msgstr ""

#. type: Plain text
msgid "toolchanger-reason = 0 : the program is aborted"
msgstr ""

#. type: Plain text
msgid "toolchanger-reason < 0 : the program is aborted and an operator error"
msgstr ""

#. type: Plain text
msgid "message is displayed by using the IO_ERROR template."
msgstr ""

#. type: Plain text
msgid ""
"The usage of the toolchanger-fault-ack pin is optional. It will become true "
"when toolchanger-fault is raised and the toolchanger-reason pin has been "
"read by iov2."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Default Plane"
msgstr ""

#. type: Plain text
msgid ""
"When LinuxCNC's interpreter was first written, it was designed for mills.  "
"That is why the default plane is XY (G17). A normal lathe only uses the XZ "
"plane (G18). To change the default plane place the following line in the ."
"ini file in the RS274NGC section."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "RS274NGC_STARTUP_CODE = G18\n"
msgstr ""

#. type: Plain text
msgid ""
"The above can be overwritten in a g code program so always set important "
"things in the preamble of the g code file."
msgstr ""

#. type: Plain text
msgid ""
"The following .ini settings are needed for lathe mode in Axis in addition to "
"or replacing normal settings in the .ini file.  These historical settings "
"use identity kinematics (trivkins) and 'three' joints (0,1,2) corresponding "
"to coordinates x,y,z.  The joint 1 for the unused y axis is required but not "
"used in these historical configurations.  Simulated lathe configs may use "
"these historical settings.  Gmoccapy also uses the mentioned settings, but "
"does offer additional settings, check the <<cha:gmoccapy,gmoccapy>> Section "
"for details."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"DISPLAY = axis\n"
"LATHE = 1\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = trivkins\n"
"JOINTS = 3\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRAJ]\n"
"COORDINATES = X Z\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"...\n"
"[JOINT_2]\n"
"...\n"
"[AXIS_X]\n"
"...\n"
"[AXIS_Z]\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"With joints_axes incorporation, a simpler configuration can be made with "
"just the two required joints by specifying trivkins with the 'coordinates=' "
"parameter:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"...\n"
"[JOINT_1]\n"
"...\n"
"[AXIS_X]\n"
"...\n"
"[AXIS_Z]\n"
"...\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "HALTCL Files"
msgstr ""

#. type: Plain text
msgid ""
"The halcmd language excels in specifying components and connections but "
"offers no computational capabilities.  As a result, ini files are limited in "
"the clarity and brevity that is possible with higher level languages."
msgstr ""

#. type: Plain text
msgid ""
"The haltcl facility provides a means to use tcl scripting and its features "
"for computation, looping, branching, procedures, etc. in ini files.  To use "
"this functionality, you use the tcl language and the extension .tcl for "
"halfiles."
msgstr ""

#. type: Plain text
msgid ""
"The .tcl extension is understood by the main script (linuxcnc) that "
"processes ini files.  Haltcl files are identified in the the HAL section of "
"ini files (just like .hal files)."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALFILE = conventional_file.hal\n"
"HALFILE = tcl_based_file.tcl\n"
msgstr ""

#. type: Plain text
msgid "With appropriate care, .hal and .tcl files can be intermixed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Compatibility"
msgstr ""

#. type: Plain text
msgid ""
"The halcmd language used in .hal files has a simple syntax that is actually "
"a subset of the more powerful general-purpose tcl scripting language."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Commands"
msgstr ""

#. type: Plain text
msgid ""
"Haltcl files use the tcl scripting language augmented with the specific "
"commands of the LinuxCNC hardware abstraction layer (HAL).  The hal-specific "
"commands are."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"addf, alias,\n"
"delf, delsig,\n"
"getp, gets\n"
"ptype,\n"
"stype,\n"
"help,\n"
"linkpp, linkps, linksp, list, loadrt, loadusr, lock,\n"
"net, newsig,\n"
"save, setp, sets, show, source, start, status, stop,\n"
"unalias, unlinkp, unload, unloadrt, unloadusr, unlock,\n"
"waitusr\n"
msgstr ""

#. type: Plain text
msgid ""
"Two special cases occur for the 'gets' and 'list' commands due to conflicts "
"with tcl builtin commands.  For haltcl, these commands must be preceded with "
"the keyword 'hal'."
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"halcmd   haltcl\n"
"------   ------\n"
"gets     hal gets\n"
"list     hal list\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Inifile variables"
msgstr ""

#. type: Plain text
msgid ""
"Inifile variables are accessible by both halcmd and haltcl but with "
"differing syntax."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC ini files use SECTION and ITEM specifiers to identify configuration "
"items."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[SECTION_A]\n"
"ITEM1 = value_1\n"
"ITEM2 = value_2\n"
"...\n"
"[SECTION_B]\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"The ini file values are accessible by text substitution in .hal files using "
"the form."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[SECTION]ITEM\n"
msgstr ""

#. type: Plain text
msgid ""
"The same ini file values are accessible in .tcl files using the form of a "
"tcl global array variable."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$::SECTION(ITEM)\n"
msgstr ""

#. type: Plain text
msgid "For example, an ini file item like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"MAX_VELOCITY = 4\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"is expressed as   [JOINT_0]MAX_VELOCITY  in .hal files for halcmd +\n"
"and as          $::JOINT_0(MAX_VELOCITY) in .tcl files for haltcl +\n"
msgstr ""

#. type: Plain text
msgid ""
"Because inifiles can repat the same ITEM in the same SECTION multiple times, "
"$::SECTION(ITEM) is actually a Tcl list of each individual value."
msgstr ""

#. type: Plain text
msgid ""
"When there is just one value and it is a simple value (all values that are "
"just letters and numbers without whitespace are in this group), then it is "
"possible to treat $::SECTION(ITEM) as though it is not a list."
msgstr ""

#. type: Plain text
msgid ""
"When the value could contain special characters--quote characters, curly-"
"brace characters, embedded whitespace, and other characters that have "
"special meaning in Tcl--it is necessary to distinguish between the list of "
"values and the initial (and possibly only) value in the list."
msgstr ""

#. type: Plain text
msgid "In Tcl, this is written `[lindex $::SECTION(ITEM) 0]`."
msgstr ""

#. type: Plain text
msgid "For example: given the following ini values"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HOSTMOT2]\n"
"DRIVER=hm2_eth\n"
"IPADDR=\"10.10.10.10\"\n"
"BOARD=7i92\n"
"CONFIG=\"num_encoders=0 num_pwmgens=0 num_stepgens=6\"\n"
msgstr ""

#. type: Plain text
msgid "And this loadrt command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt $::HOSTMOT2(DRIVER) board_ip=$::HOSTMOT2(IPADDR) config=$::HOSTMOT2(CONFIG)\n"
msgstr ""

#. type: Plain text
msgid "Here is the actual command that is run:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hm2_eth board_ip={\"10.10.10.10\"} config={\"num_encoders=0 num_pwmgens=0 num_stepgens=6\"}\n"
msgstr ""

#. type: Plain text
msgid "This fails because loadrt does not recognize the braces."
msgstr ""

#. type: Plain text
msgid ""
"So to get the values just as entered in the ini file, re-write the loadrt "
"line like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt $::HOSTMOT2(DRIVER) board_ip=[lindex $::HOSTMOT2(IPADDR) 0] config=[lindex $::HOSTMOT2(CONFIG) 0]\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Converting .hal files to .tcl files"
msgstr ""

#. type: Plain text
msgid ""
"Existing .hal files can be converted to .tcl files by hand editing to adapt "
"to the differences mentioned above.  The process can be automated with "
"scripts that convert using these substitutions."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[SECTION]ITEM ---> $::SECTION(ITEM)\n"
"gets          ---> hal gets\n"
"list          ---> hal list\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Notes"
msgstr ""

#. type: Plain text
msgid ""
"In haltcl, the value argument for the 'sets' and 'setp' commands is "
"implicitly treated as an expression in the tcl language."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set gain to convert deg/sec to units/min for JOINT_0 radius\n"
"setp scale.0.gain 6.28/360.0*$::JOINT_0(radius)*60.0\n"
msgstr ""

#. type: Plain text
msgid "Whitespace in the bare expression is not allowed, use quotes for that:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp scale.0.gain \"6.28 / 360.0 * $::JOINT_0(radius) * 60.0\"\n"
msgstr ""

#. type: Plain text
msgid ""
"In other contexts, such as 'loadrt', you must explicitly use the tcl expr "
"command ([expr {}]) for computational expressions."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt motion base_period=[expr {500000000/$::TRAJ(MAX_PULSE_RATE)}]\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Examples"
msgstr ""

#. type: Plain text
msgid ""
"Consider the topic of 'stepgen headroom'.  Software stepgen runs best with "
"an acceleration constraint that is \"a bit higher\" than the one used by the "
"motion planner.  So, when using halcmd files, we force inifiles to have a "
"manually calculated value."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[JOINT_0]\n"
"MAXACCEL = 10.0\n"
"STEPGEN_MAXACCEL = 10.5\n"
msgstr ""

#. type: Plain text
msgid ""
"With haltcl, you can use tcl commands to do the computation and eliminate "
"the STEPGEN_MAXACCEL inifile item altogether."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp stepgen.0.maxaccel $::JOINT_0(MAXACCEL)*1.05\n"
msgstr ""

#. type: Plain text
msgid ""
"Another haltcl feature is looping and testing.  For example, many simulator "
"configurations use \"core_sim.hal\" or \"core_sim9.hal\" hal files.  These "
"differ because of the requirement to connect more or fewer axes.  The "
"following haltcl code would work for any combination of axes in a trivkins "
"machine."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Create position, velocity and acceleration signals for each axis\n"
"set ddt 0\n"
"for {set jnum 0} {$jnum < $::KINS(JOINTS)} {incr jnum} {\n"
"  # 'list pin' returns an empty list if the pin doesn't exist\n"
"  if {[hal list pin joint.${jnum}.motor-pos-cmd] == {}} {\n"
"    continue\n"
"  }\n"
"  net ${jnum}pos joint.${jnum}.motor-pos-cmd => joint.$axno.motor-pos-fb \\\n"
"                                             => ddt.$ddt.in\n"
"  net ${axis}vel <= ddt.$ddt.out\n"
"  incr ddt\n"
"  net ${axis}vel => ddt.$ddt.in\n"
"  net ${axis}acc <= ddt.$ddt.out\n"
"  incr ddt\n"
"}\n"
"puts [show sig *vel]\n"
"puts [show sig *acc]\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Interactive"
msgstr ""

#. type: Plain text
msgid ""
"The halrun command recognizes haltcl files.  With the -T option, haltcl can "
"be run interaactively as a tcl interpreter.  This capability is useful for "
"testing and for standalone hal applications."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ halrun -T haltclfile.tcl\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Haltcl Distribution Examples (sim)"
msgstr ""

#. type: Plain text
msgid ""
"The configs/sim/axis/simtcl directory includes an ini file that uses a .tcl "
"file to demonstrate a haltcl configuration in conjunction with the usage of "
"twopass processing.  The example shows the use of tcl procedures, looping, "
"the use of comments, and output to the terminal."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Remap Extending G code"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Introduction: Extending the RS274NGC Interpreter by Remapping Codes"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "A Definition: Remapping Codes"
msgstr ""

#. type: Plain text
msgid "By 'remapping codes' we mean one of the following:"
msgstr ""

#. type: Plain text
msgid ""
"define the semantics of new - that is, currently unallocated - M- or G-codes"
msgstr ""

#. type: Plain text
msgid ""
"redefine the semantics of a - currently limited - set of existing codes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Why would you want to extend the RS274NGC Interpreter?"
msgstr ""

#. type: Plain text
msgid ""
"The set of codes (M,G,T,S,F) currently understood by the RS274NGC "
"interpreter is fixed and cannot be extended by configuration options."
msgstr ""

#. type: Plain text
msgid ""
"In particular, some of these codes implement a fixed sequence of steps to be "
"executed. While some of these, like M6, can be moderately configured by "
"activating or skipping some of these steps through ini file options, overall "
"the behavior is fairly rigid. So - if your are happy with this situation, "
"then this manual section is not for you."
msgstr ""

#. type: Plain text
msgid ""
"In many cases, this means that supporting a non 'out of the box' "
"configuration or machine is either cumbersome or impossible, or requires "
"resorting to changes at the 'C/C\\+\\+' language level. The latter is "
"unpopular for good reasons - changing internals requires in-depth "
"understanding of interpreter internals, and moreover brings its own set of "
"support issues. While it is conceivable that certain patches might make "
"their way into the main LinuxCNC distribution, the result of this approach "
"is a hodge-podge of special-case solutions."
msgstr ""

#. type: Plain text
msgid ""
"A good example for this deficiency is tool change support in LinuxCNC: while "
"random tool changers are well supported, it is next to impossible to "
"reasonably define a configuration for a manual-tool change machine with, for "
"example, an automatic tool length offset switch being visited after a tool "
"change, and offsets set accordingly. Also, while a patch for a very specific "
"rack tool changer exists, it has not found its way back into the main code "
"base."
msgstr ""

#. type: Plain text
msgid ""
"However, many of these things may be fixed by using an O-word procedure "
"instead of a built in code - whenever the - insufficient - built in code is "
"to be executed, call the O-word procedure instead. While possible, it is "
"cumbersome - it requires source-editing of NGC programs, replacing all calls "
"to the deficient code by a an O-word procedure call."
msgstr ""

#. type: Plain text
msgid ""
"In it's simplest form a remapped code isn't much more than a spontaneous "
"call to an O-word procedure. This happens behind the scenes"
msgstr ""

#. type: Plain text
msgid ""
"the procedure is visible at the configuration level, but not at the NGC "
"program level."
msgstr ""

#. type: Plain text
msgid ""
"Generally, the behavior of a remapped code may be defined in the following "
"ways:"
msgstr ""

#. type: Plain text
msgid "you define a O-word subroutine which implements the desired behavior"
msgstr ""

#. type: Plain text
msgid ""
"alternatively, you may employ a Python function which extends the "
"interpreter's behavior."
msgstr ""

#. type: Block title
#, no-wrap
msgid "How to glue things together"
msgstr ""

#. type: Plain text
msgid ""
"M- and G-codes, and O-words subroutine calls have some fairly different "
"syntax."
msgstr ""

#. type: Plain text
msgid ""
"O-word procedures, for example, take positional parameters with a specific "
"syntax like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o<test> call [1.234] [4.65]\n"
msgstr ""

#. type: Plain text
msgid ""
"whereas M- or G-codes typically take required or optional 'word' parameters. "
"For instance, G76 (threading) requires the P,Z,I,J and K words, and "
"optionally takes the R,Q,H, E and L words."
msgstr ""

#. type: Plain text
msgid ""
"So it isn't simply enough to say 'whenever you encounter code X, please call "
"procedure Y' - at least some checking and conversion of parameters needs to "
"happen. This calls for some 'glue code' between the new code, and its "
"corresponding NGC procedure to execute before passing control to the NGC "
"procedure."
msgstr ""

#. type: Plain text
msgid ""
"This glue code is impossible to write as an O-word procedure itself since "
"the RS274NGC language lacks the introspective capabilities and access into "
"interpreter internal data structures to achieve the required effect. Doing "
"the glue code in - again - 'C/C\\+\\+' would be an inflexible and therefore "
"unsatisfactory solution."
msgstr ""

#. type: Block title
#, no-wrap
msgid "How Embedded Python fits in"
msgstr ""

#. type: Plain text
msgid ""
"To make a simple situation easy and a complex situation solvable, the glue "
"issue is addressed as follows:"
msgstr ""

#. type: Plain text
msgid ""
"for simple situations, a built-in glue procedure (`argspec`) covers most "
"common parameter passing requirements"
msgstr ""

#. type: Plain text
msgid ""
"for remapping T,M6,M61,S,F there is some standard Python glue which should "
"cover most situations, see <<remap:standard-glue,Standard Glue>>"
msgstr ""

#. type: Plain text
msgid ""
"for more complex situations, one can write your own Python glue to implement "
"new behavior."
msgstr ""

#. type: Plain text
msgid ""
"Embedded Python functions in the Interpreter started out as glue code, but "
"turned out very useful well beyond that. Users familiar with Python will "
"likely find it easier to write remapped codes, glue, O-word procedures etc "
"in pure Python, without resorting to the somewhat cumbersome RS274NGC "
"language at all."
msgstr ""

#. type: Block title
#, no-wrap
msgid "A Word on Embedded Python"
msgstr ""

#. type: Plain text
msgid ""
"Many people are familiar with 'extending' the Python interpreter by 'C/C\\+\\"
"+' modules, and this is heavily used in LinuxCNC to access Task, HAL and "
"Interpreter internals from Python scripts. 'Extending Python' basically "
"means: your Python script executes as 'it is in the driver seat', and may "
"access non-Python code by importing and using extension modules written in "
"'C/C\\+\\+'. Examples for this are the LinuxCNC `hal`, `gcode` and `emc` "
"modules."
msgstr ""

#. type: Plain text
msgid ""
"Embedded Python is a bit different and less commonly known: The main program "
"is written in C/C++ and may use Python like a subroutine. This is powerful "
"extension mechanism and the basis for the 'scripting extensions' found in "
"many successful software packages. Embedded Python code may access 'C/C\\+\\"
"+' variables and functions through a similar extension module method."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Getting started"
msgstr ""

#. type: Plain text
msgid "Defining a code involves the following steps:"
msgstr ""

#. type: Plain text
msgid ""
"pick a code - either use an unallocated code, or redefine an existing code"
msgstr ""

#. type: Plain text
msgid "deciding how parameters are handled"
msgstr ""

#. type: Plain text
msgid "decide if and how results are handled"
msgstr ""

#. type: Plain text
msgid "decide about the execution sequencing."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Builtin Remaps"
msgstr ""

#. type: Plain text
msgid ""
"There are currently two complete python-only remaps that are available in "
"stdglue.py. +"
msgstr ""

#. type: Plain text
msgid "ignore_m6"
msgstr ""

#. type: Plain text
msgid "index_lathe_tool_with_wear"
msgstr ""

#. type: Plain text
msgid ""
"These are meant for use with lathe. + lathes don't use M6 to index the "
"tools, they use the T command. + This remap also adds wear offsets to the "
"tool offset. + ie. T201 would index to tool 2 (with tool 2's tool offset) "
"and adds wear offset 1. + In the tool table, tools numbers above 10000 are "
"wear offsets. + ie in the tool table, tool 10001 would be wear offset 1. +"
msgstr ""

#. type: Plain text
msgid "Here is what you need in the INI to use them:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"REMAP=T python=index_lathe_tool_with_wear\n"
"REMAP=M6 python=ignore_m6\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[PYTHON]\n"
"# where to find the Python code:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# code specific for this configuration  \n"
"PATH_PREPEND=./\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# generic support code - make sure this actually points to python-stdglue\n"
"PATH_APPEND=../../nc_files/remap_lib/python-stdglue/\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# import the following Python module\n"
"TOPLEVEL=toplevel.py\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# the higher the more verbose tracing of the Python plugin\n"
"LOG_LEVEL = 0\n"
msgstr ""

#. type: Plain text
msgid ""
"You must also add the required python file in your configuration folder. +"
msgstr ""

#. type: Plain text
msgid "<<remap:upgrading-an-existing,Upgrade an existing configuration>>"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Picking a code"
msgstr ""

#. type: Plain text
msgid ""
"Note that currently only a few existing codes may be redefined, whereas "
"there are many 'free' codes which might be made available by remapping. When "
"developing a redefined existing code, it might be a good idea to start with "
"an unallocated G- or M-code so both the existing and new behavior can be "
"exercised. When done, redefine the existing code to use your remapping setup."
msgstr ""

#. type: Plain text
msgid ""
"the current set of unused M-codes open to user definition can be found "
"<<remap:unallocated-m-codes,here>>,"
msgstr ""

#. type: Plain text
msgid "unallocated G-codes are listed <<remap:unallocated-g-codes,here>>."
msgstr ""

#. type: Plain text
msgid ""
"Existing codes which may be remapped are listed <<remap:remappable-codes,"
"here>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Parameter handling"
msgstr ""

#. type: Plain text
msgid ""
"Let's assume the new code will be defined by an NGC procedure, and needs "
"some parameters, some of which might be required, others might be optional. "
"We have the following options to feed values to the procedure:"
msgstr ""

#.  . <<remap:extracting-words,extracting words from the current block>>
#. type: Plain text
msgid ""
"extracting words from the current block and pass them to the procedure as "
"parameters (like `X22.34` or `P47`)"
msgstr ""

#. type: Plain text
msgid "referring to <<gcode:ini-hal-params,ini file variables>>"
msgstr ""

#. type: Plain text
msgid "referring to global variables (like `#2200 = 47.11` or"
msgstr ""

#. type: Plain text
msgid "`#<_global_param> = 315.2`"
msgstr ""

#. type: Plain text
msgid ""
"The first method is preferred for parameters of dynamic nature, , like "
"positions. You need to define which words on the current block have any "
"meaning for your new code, and specify how that is passed to the NGC "
"procedure. Any easy way is to use the <<_the_argspec_parameter,argspec "
"statement>>. A custom prolog might provide better error messages."
msgstr ""

#. type: Plain text
msgid ""
"Using to ini file variables is most useful for referring to setup "
"information for your machine, for instance a fixed position like a tool-"
"length sensor position. The advantage of this method is that the parameters "
"are fixed for your configuration regardless which NGC file you're currently "
"executing."
msgstr ""

#. type: Plain text
msgid ""
"Referring to global variables is always possible, but they are easily "
"overlooked."
msgstr ""

#. type: Plain text
msgid ""
"Note there's a limited supply of words which may be used as parameters, so "
"one might need to fall back to the second and third methods if many "
"parameters are needed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Handling results"
msgstr ""

#. type: Plain text
msgid ""
"Your new code might succeed or fail, for instance if passed an invalid "
"parameter combination. Or you might choose to 'just execute' the procedure "
"and disregard results, in which case there isn't much work to do."
msgstr ""

#. type: Plain text
msgid ""
"Epilog handlers help in processing results of remap procedures - see the "
"reference section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Execution sequencing"
msgstr ""

#. type: Plain text
msgid ""
"Executable G-code words are classified into <<gcode:modal-groups,modal "
"groups>>, which also defines their relative execution behavior."
msgstr ""

#. type: Plain text
msgid ""
"If a G-code block contains several executable words on a line, these words "
"are executed in a predefined <<gcode:order-of-execution, order of "
"execution>>, not in the order they appear in block."
msgstr ""

#. type: Plain text
msgid ""
"When you define a new executable code, the interpreter does not yet know "
"where your code fits into this scheme. For this reason, you need to choose "
"an appropriate modal group for your code to execute in."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "An minimal example remapped code"
msgstr ""

#. type: Plain text
msgid ""
"To give you an idea how the pieces fit together, let's explore a fairly "
"minimal but complete remapped code definition. We choose an unallocated M-"
"code and add the following option to the ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"REMAP=M400  modalgroup=10 argspec=Pq ngc=myprocedure\n"
msgstr ""

#. type: Plain text
msgid "In a nutshell, this means:"
msgstr ""

#. type: Plain text
msgid ""
"The `M400` code takes a required parameter `P` and an optional parameter "
"`Q`. Other words in the current block are ignored with respect to the `M400` "
"code. If the `P` word is not present, fail execution with an error."
msgstr ""

#. type: Plain text
msgid ""
"when an `M400` code is encountered, execute `myprocedure.ngc` along the "
"other <<gcode:modal-groups,modal group>> 10 M-codes as per <<gcode:order-of-"
"execution, order of execution>>."
msgstr ""

#. type: Plain text
msgid "the value of `P`, and `Q` are available in the procedure as local"
msgstr ""

#. type: Plain text
msgid ""
"named parameters. The may be referred to as `#<P>` and `#<Q>`. The procedure "
"may test whether the `Q` word was present with the <<gcode:functions,"
"`EXISTS`>> built in function."
msgstr ""

#. type: Plain text
msgid ""
"The file `myprocedure.ngc` is expected to exists in the `[DISPLAY]NC_FILES` "
"or `[RS274NGC]SUBROUTINE_PATH` directory."
msgstr ""

#. type: Plain text
msgid ""
"A detailed discussion of REMAP parameters is found in the reference section "
"below."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuring Remapping"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The REMAP statement"
msgstr ""

#. type: Plain text
msgid ""
"To remap a code, define it using the `REMAP` option in `RS274NG` section of "
"your ini file. Use one `REMAP` line per remapped code."
msgstr ""

#. type: Plain text
msgid "The syntax of the `REMAP` is:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`REMAP=`'<code>' '<options>'"
msgstr ""

#. type: Plain text
msgid ""
"where '<code>' may be one of `T`,`M6`,`M61`,`S`,`F` (existing codes) or any "
"of the unallocated <<remap:unallocated-m-codes,M-codes>> or <<remap:"
"unallocated-g-codes,G-codes>>."
msgstr ""

#. type: Plain text
msgid "It is an error to omit the '<code>' parameter."
msgstr ""

#. type: Plain text
msgid ""
"The options of the REMAP statement are separated by whitespace. The options "
"are keyword-value pairs and currently are:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`modalgroup=`'<modal group>'"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "G-codes"
msgstr ""

#. type: Plain text
msgid ""
"the only currently supported modal group is 1, which is also the default "
"value if no group is given. Group 1 means 'execute alongside other G-codes'."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "M-codes"
msgstr ""

#. type: Plain text
msgid ""
"currently supported modal groups are: 5,6,7,8,9,10. If no modalgroup is "
"give, it defaults to 10 ('execute after all other words in the block')."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "T,S,F"
msgstr ""

#. type: Plain text
msgid ""
"for these the modal group is fixed and any `modalgroup=` option is ignored."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`argspec=`'<argspec>'"
msgstr ""

#. type: Plain text
msgid ""
"See <<_the_argspec_parameter, description of the argspec parameter "
"options>>. Optional."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`ngc=`'<ngc_basename>'"
msgstr ""

#. type: Plain text
msgid ""
"Basename of an O-word subroutine file name. Do not specify an .ngc "
"extension. Searched for in the directories specified in the directory "
"specified in `[DISPLAY]PROGRAM_PREFIX`, then in `[RS274NGC]SUBROUTINE_PATH`. "
"Mutually exclusive with `python=`. It is an error to omit both `ngc=` and "
"`python=`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`python=`'<Python function name>'"
msgstr ""

#. type: Plain text
msgid ""
"Instead of calling an ngc O-word procedure call a Python function. The "
"function is expected to be defined in the `module_basename.oword` module. "
"Mutually exclusive with `ngc=`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`prolog=`'<Python function name>'"
msgstr ""

#. type: Plain text
msgid ""
"Before executing an ngc procedure, call this Python function.  The function "
"is expected to be defined in the `module_basename.remap` module. Optional."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`epilog=`'<Python function name>'"
msgstr ""

#. type: Plain text
msgid ""
"After executing an ngc procedure, call this Python function.  The function "
"is expected to be defined in the `module_basename.remap` module. Optional."
msgstr ""

#. type: Plain text
msgid ""
"The `python`, `prolog` and `epilog` options require the Python Interpreter "
"plugin to be <<remap:embedded-python,configured>>, and appropriate Python "
"functions to be defined there so they can be referred to with these options."
msgstr ""

#. type: Plain text
msgid ""
"The syntax for defining a new code, and redefining an existing code is "
"identical."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Useful REMAP option combinations"
msgstr ""

#. type: Plain text
msgid ""
"Note that while many combinations of argspec options are possible, not all "
"of them make sense. The following combinations are useful idioms:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`argspec=`'<words>' `ngc=`'<procname>' `modalgroup=`'<group>'"
msgstr ""

#. type: Plain text
msgid ""
"The recommended way to call an NGC procedure with a standard argspec "
"parameter conversion. Used if argspec is good enough. Note it's not good "
"enough for remapping the Tx and M6/M61 tool change codes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`prolog=`'<pythonprolog>' `ngc=`'<procname>' `epilog=`'<pythonepilog>' `modalgroup=`'<group>'"
msgstr ""

#. type: Plain text
msgid ""
"Call a Python prolog function to take any preliminary steps, then call the "
"NGC procedure. When done, call the Python epilog function to do any cleanup "
"or result extraction work which cannot be handled in G-code.  The most "
"flexible way of remapping a code to an NGC procedure, since almost all of "
"the Interpreter internal variables, and some internal functions may be "
"accessed from the prolog and epilog handlers. Also, a longer rope to hang "
"yourselves."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`python=`'<pythonfunction>' `modalgroup=`'<group>'"
msgstr ""

#. type: Plain text
msgid ""
"Directly call to a Python function without any argument conversion.  The "
"most powerful way of remapping a code and going straight to Python. Use this "
"if you don't need an NGC procedure, or NGC is just getting in your way."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`argspec=`'<words>' `python=`'<pythonfunction>' `modalgroup=`'<group>'"
msgstr ""

#. type: Plain text
msgid ""
"Convert the argspec words and pass them to a Python function as keyword "
"argument dictionary. Use it when you're too lazy to investigate words passed "
"on the block yourself."
msgstr ""

#. type: Plain text
msgid ""
"Note that if all you want to achieve is to call some Python code from G-"
"code, there is the somewhat easier way of <<remap:python-o-word-procs, "
"calling Python functions like O-word procedures>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The argspec parameter"
msgstr ""

#. type: Plain text
msgid ""
"The argument specification (keyword `argspec`) describes required and "
"optional words to be passed to an ngc procedure, as well as optional "
"preconditions for that code to execute."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"An argspec consists of 0 or more  characters of the class\n"
" `[@A-KMNP-Za-kmnp-z^>]` . It can by empty (like `argspec=`).\n"
msgstr ""

#. type: Plain text
msgid ""
"An empty argspec, or no argspec argument at all implies the remapped code "
"does not receive any parameters from the block. It will ignore any extra "
"parameters present."
msgstr ""

#. type: Plain text
msgid ""
"Note that RS274NGC rules still apply - for instance you may use axis words "
"(eg X,Y,Z) only in the context of a G-code."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`ABCDEFGHIJKMPQRSTUVWXYZ`"
msgstr ""

#. type: Plain text
msgid ""
"Defines a required word parameter: an uppercase letter specifies that the "
"corresponding word *must* be present in the current block. The word`s value "
"will be passed as a local named parameter with a corresponding name.  If the "
"`@` character is present in the argspec, it will be passed as positional "
"parameter, see below."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`abcdefghijkmpqrstuvwxyz`"
msgstr ""

#. type: Plain text
msgid ""
"Defines an optional word parameter: a lowercase letter specifies that the "
"corresponding word *may* be present in the current block.  If the word is "
"present, the word's value will be passed as a local named parameter. If the "
"`@` character is present in the argspec, it will be passed as positional "
"parameter, see below."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`@`"
msgstr ""

#. type: Plain text
msgid ""
"The `@` (at-sign) tells argspec to pass words as positional parameters, in "
"the order defined following the `@` option. Note that when using positional "
"parameter passing, a procedure cannot tell whether a word was present or "
"not, see example below."
msgstr ""

#. type: Plain text
msgid ""
"this helps with packaging existing NGC procedures as remapped codes. "
"Existing procedures do expect positional parameters. With the `@` option, "
"you can avoid rewriting them to refer to local named parameters."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`^`"
msgstr ""

#. type: Plain text
msgid ""
"The `^` (caret) character specifies that the current spindle speed must be "
"greater than zero (spindle running), otherwise the code fails with an "
"appropriate error message."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`>`"
msgstr ""

#. type: Plain text
msgid ""
"The `>` (greater-than) character specifies that the current feed must be "
"greater than zero, otherwise the code fails with an appropriate error "
"message."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`n`"
msgstr ""

#. type: Plain text
msgid ""
"The `n` (greater-than) character specifies to pass the current line number "
"in the `n`local named parameter."
msgstr ""

#. type: Plain text
msgid ""
"By default, parameters are passed as local named parameter to an NGC "
"procedure. These local parameters appear as 'already set' when the procedure "
"starts executing, which is different from existing semantics (local "
"variables start out with value 0.0 and need to be explicitly assigned a "
"value)."
msgstr ""

#. type: Plain text
msgid ""
"Optional word parameters may be tested for presence by the `EXISTS(#<word>)` "
"idiom."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example for named parameter passing to NGC procedures"
msgstr ""

#. type: Plain text
msgid "Assume the code is defined as"
msgstr ""

#. type: Plain text
msgid "`REMAP=M400 modalgroup=10 argspec=Pq ngc=m400`"
msgstr ""

#. type: Plain text
msgid "and `m400.ngc` looks as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<m400> sub\n"
"(P is required since it's uppercase in the argspec)\n"
"(debug, P word=#<P>)\n"
"(the q argspec is optional since its lowercase in the argspec. Use as follows:)\n"
"o100 if [EXISTS[#<q>]]\n"
"    (debug, Q word set: #<q>)\n"
"o100 endif\n"
"o<m400> endsub\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"executing `M400` will fail with the message `user-defined M400: missing: P`"
msgstr ""

#. type: Plain text
msgid "executing `M400 P123` will display `P word=123.000000`"
msgstr ""

#. type: Plain text
msgid ""
"executing `M400 P123 Q456` will display `P word=123.000000` and `Q word set: "
"456.000000`"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example for positional parameter passing to NGC procedures"
msgstr ""

#. type: Plain text
msgid "`REMAP=M410 modalgroup=10 argspec=@PQr ngc=m410`"
msgstr ""

#. type: Plain text
msgid "and `m410.ngc` looks as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<m410> sub\n"
"(debug, [1]=#1 [2]=#2 [3]=#3)\n"
"o<m410> endsub\n"
"M2\n"
msgstr ""

#. type: Plain text
msgid ""
"executing `M410 P10` will display `m410.ngc: [1]=10.000000 [2]=0.000000`"
msgstr ""

#. type: Plain text
msgid ""
"executing `M410 P10 Q20` will display `m410.ngc: [1]=10.000000 [2]=20.000000`"
msgstr ""

#. type: Plain text
msgid ""
"NB: you lose the capability to distinguish more than one optional parameter "
"word, and you cannot tell whether an optional parameter was present but had "
"the value 0, or was not present at all."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Simple example for named parameter passing to a Python function"
msgstr ""

#. type: Plain text
msgid ""
"It's possible to define new codes 'without' any NGC procedure. Here's a "
"simple first example, a more complex one can be found in the next section."
msgstr ""

#. type: Plain text
msgid "`REMAP=G88.6 modalgroup=1 argspec=XYZp python=g886`"
msgstr ""

#. type: Plain text
msgid ""
"This instructs the interpreter to execute the Python function `g886` in the "
"`module_basename.remap` module which might look like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"from interpreter import INTERP_OK\n"
"from emccanon import MESSAGE\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def g886(self, **words):\n"
"    for key in words:\n"
"        MESSAGE(\"word '%s' = %f\" % (key, words[key]))\n"
"    if words.has_key('p'):\n"
"        MESSAGE(\"the P word was present\")\n"
"    MESSAGE(\"comment on this line: '%s'\" % (self.blocks[self.remap_level].comment))\n"
"    return INTERP_OK\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Try this with out with:\n"
"  g88.6 x1 y2 z3\n"
"  g88.6 x1 y2 z3 p33 (a comment here)\n"
msgstr ""

#. type: Plain text
msgid ""
"You'll notice the gradual introduction of the embedded Python environment - "
"see <<remap:programming-embedded-python,here>> for details.  Note that with "
"Python remapping functions, it make no sense to have Python prolog or epilog "
"functions since it's executing a Python function in the first place."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Advanced example: Remapped codes in pure Python"
msgstr ""

#. type: Plain text
msgid ""
"The `interpreter` and `emccanon` modules expose most of the Interpreter and "
"some Canon internals, so many things which so far required coding in 'C/C\\+"
"\\+' can be now be done in Python."
msgstr ""

#. type: Plain text
msgid ""
"The following example is based on the `nc_files/involute.py` script - but "
"canned as a G-code with some parameter extraction and checking. It also "
"demonstrates calling the interpreter recursively (see `self.execute()`)."
msgstr ""

#. type: Plain text
msgid "Assuming a definition like so (NB: this does not use argspec):"
msgstr ""

#. type: Plain text
msgid "`REMAP=G88.1 modalgroup=1 py=involute`"
msgstr ""

#. type: Plain text
msgid ""
"The `involute` function in `python/remap.py` listed below does all word "
"extraction from the current block directly. Note that interpreter errors can "
"be translated to Python exceptions. Remember this is 'readahead time' - "
"execution time errors cannot be trapped this way."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import sys\n"
"import traceback\n"
"from math import sin,cos\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"from interpreter import *\n"
"from emccanon import MESSAGE\n"
"from util import lineno, call_pydevd\n"
"# raises InterpreterException if execute() or read() fails\n"
"throw_exceptions = 1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def involute(self, **words):\n"
"    \"\"\" remap function with raw access to Interpreter internals \"\"\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    if self.debugmask & 0x20000000: call_pydevd() # USER2 debug flag\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    if equal(self.feed_rate,0.0):\n"
"        return \"feedrate > 0 required\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    if equal(self.speed,0.0):\n"
"        return \"spindle speed > 0 required\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    plunge = 0.1 # if Z word was given, plunge - with reduced feed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    # inspect controlling block for relevant words\n"
"    c = self.blocks[self.remap_level]\n"
"    x0 = c.x_number if c.x_flag else 0\n"
"    y0 = c.y_number if c.y_flag else 0\n"
"    a  = c.p_number if c.p_flag else 10\n"
"    old_z = self.current_z\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    if self.debugmask & 0x10000000:\n"
"        print \"x0=%f y0=%f a=%f old_z=%f\" % (x0,y0,a,old_z)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    try:\n"
"        #self.execute(\"G3456\")  # would raise InterpreterException\n"
"        self.execute(\"G21\",lineno())\n"
"        self.execute(\"G64 P0.001\",lineno())\n"
"        self.execute(\"G0 X%f Y%f\" % (x0,y0),lineno())\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        if c.z_flag:\n"
"            feed = self.feed_rate\n"
"            self.execute(\"F%f G1 Z%f\" % (feed * plunge, c.z_number),lineno())\n"
"            self.execute(\"F%f\" % (feed),lineno())\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        for i in range(100):\n"
"            t = i/10.\n"
"            x = x0 + a * (cos(t) + t * sin(t))\n"
"            y = y0 + a * (sin(t) - t * cos(t))\n"
"            self.execute(\"G1 X%f Y%f\" % (x,y),lineno())\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        if c.z_flag: # retract to starting height\n"
"            self.execute(\"G0 Z%f\" % (old_z),lineno())\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    except InterpreterException,e:\n"
"        msg = \"%d: '%s' - %s\" % (e.line_number,e.line_text, e.error_message)\n"
"  return msg\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    return INTERP_OK\n"
msgstr ""

#. type: Plain text
msgid ""
"The examples described so far can be found in 'configs/sim/axis/remap/"
"getting-started' with complete working configurations."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Upgrading an existing configuration for remapping"
msgstr ""

#. type: Plain text
msgid "The minimal prerequisites for using `REMAP` statements are as follows:"
msgstr ""

#. type: Plain text
msgid "the Python plug in must be activated by specifying a"
msgstr ""

#. type: Plain text
msgid "`[PYTHON]TOPLEVEL=<path-to-toplevel-script>` in the ini file."
msgstr ""

#. type: Plain text
msgid "the toplevel script needs to import the `remap` module, which can be"
msgstr ""

#. type: Plain text
msgid "initially empty, but the import needs to be in place."
msgstr ""

#. type: Plain text
msgid "The Python interpreter needs to find the remap.py module above, so"
msgstr ""

#. type: Plain text
msgid ""
"the path to the directory where your Python modules live needs to be added "
"with `[PYTHON]PATH_APPEND=<path-to-your-local-Python-directory>`"
msgstr ""

#. type: Plain text
msgid "Recommended: import the `stdglue` handlers in the `remap` module. In"
msgstr ""

#. type: Plain text
msgid ""
"this case Python also needs to find `stdglue.py` - we just copy it from the "
"distribution so you can make local changes as needed. Depending on your "
"installation the path to `stdglue.py` might vary."
msgstr ""

#. type: Plain text
msgid ""
"Assuming your configuration lives under `/home/user/xxx` and the ini file is "
"`/home/user/xxx/xxx.ini`, execute the following commands."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd /home/user/xxx\n"
"$ mkdir python\n"
"$ cd python\n"
"$ cp /usr/share/linuxcnc/ncfiles/remap_lib/python-stdglue/stdglue.py .\n"
"$ echo 'from stdglue import *' >remap.py\n"
"$ echo 'import remap' >toplevel.py\n"
msgstr ""

#. type: Plain text
msgid "Now edit `/home/user/xxx/xxx.ini` and add the following:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[PYTHON]\n"
"TOPLEVEL=/home/user/xxx/python/toplevel.py\n"
"PATH_APPEND=/home/user/xxx/python\n"
msgstr ""

#. type: Plain text
msgid ""
"Now verify that LinuxCNC comes up with no error messages - from a terminal "
"window execute:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd /home/user/xxx\n"
"$ linuxcnc xxx.ini\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Remapping tool change-related codes: T, M6, M61"
msgstr ""

#. type: Plain text
msgid ""
"If you are unfamiliar with LinuxCNC internals, first read the <<remap:how-"
"tool-change-currently-works, How tool change currently works>> section (dire "
"but necessary)."
msgstr ""

#. type: Plain text
msgid ""
"Note than when remapping an existing code, we completely disable <<remap:"
"interpreter-action-on-m6,this codes' built in functionality>> of the "
"interpreter."
msgstr ""

#. type: Plain text
msgid ""
"So our remapped code will need to do a bit more than just generating some "
"commands to move the machine as we like - it will also need to replicate "
"those steps from this sequence which are needed to keep the interpreter and "
"task happy."
msgstr ""

#. type: Plain text
msgid ""
"However, this does *not* affect the processing of tool change-related "
"commands in task and iocontrol. This means when we execute <<remap:send-tool-"
"load-msg,step 6b>> this will still cause <<remap:iocontrol-action-on-load,"
"iocontrol to do its thing>>."
msgstr ""

#. type: Plain text
msgid "Decisions, decisions:"
msgstr ""

#. type: Plain text
msgid "Do we want to use an O-word procedure or do it all in Python code?"
msgstr ""

#. type: Plain text
msgid "Is the iocontrol HAL sequence (tool-prepare/tool-prepared and"
msgstr ""

#. type: Plain text
msgid ""
"tool-change/tool-changed pins) good enough or do we need a different kind of "
"HAL interaction for our tool changer (for example: more HAL pins involved "
"with a different interaction sequence)?"
msgstr ""

#. type: Plain text
msgid "Depending on the answer, we have four different scenarios:"
msgstr ""

#. type: Plain text
msgid "When using an O-word procedure, we need prolog and epilog functions"
msgstr ""

#. type: Plain text
msgid ""
"if using all Python code and no O-word procedure, a Python function is enough"
msgstr ""

#. type: Plain text
msgid ""
"when using the iocontrol pins, our O-word procedure or Python code will "
"contain mostly moves"
msgstr ""

#. type: Plain text
msgid ""
"when we need a more complex interaction than offered by iocontrol, we need "
"to completely define our own interaction, using `motion.digital*` and "
"`motion.analog*` pins, and essentially ignore the iocontrol pins by looping "
"them."
msgstr ""

#. type: Plain text
msgid ""
"If you hate O-word procedures and love Python, you're free to do it all in "
"Python, in which case you would just have a `python=<function>` spec in the "
"REMAP statement. But assuming most folks would be interested in using O-word "
"procedures because they are more familiar with that, we'll do that as the "
"first example."
msgstr ""

#. type: Plain text
msgid "So the overall approach for our first example will be:"
msgstr ""

#. type: Plain text
msgid ""
"we'd like to do as much as possible with G-code in an O-word procedure for "
"flexibility. That includes all HAL interaction which would normally be "
"handled by iocontrol - because we rather would want to do clever things with "
"moves, probes, HAL pin I/O and so forth."
msgstr ""

#. type: Plain text
msgid ""
"we'll try to minimize Python code to the extent needed to keep the "
"interpreter happy, and cause task to actually do anything. That will go into "
"the `prolog` and `epilog` Python functions."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Understanding the role of iocontrol with remapped tool change codes"
msgstr ""

#. type: Plain text
msgid ""
"Iocontrol provides two HAL interaction sequences we might or might not use:"
msgstr ""

#. type: Plain text
msgid ""
"when the NML message queued by a SELECT_TOOL() canon command is executed, "
"this triggers the \"raise tool-prepare and wait for tool-prepared to become "
"high\" HAL sequence in iocontrol, besides setting the XXXX pins"
msgstr ""

#. type: Plain text
msgid ""
"when the NML message queued by the CHANGE_TOOL() canon command is executed, "
"this triggers the \"raise tool-change and wait for tool-changed to become "
"high\" HAL sequence in iocontrol, besides setting the XXXX pins"
msgstr ""

#. type: Plain text
msgid ""
"What you need to decide is whether the existing iocontrol HAL sequences are "
"sufficient to drive your changer. Maybe you need a different interaction "
"sequence - for instance more HAL pins, or maybe a more complex interaction. "
"Depending on the answer, we might continue to use the existing iocontrol HAL "
"sequences, or define our own ones."
msgstr ""

#. type: Plain text
msgid ""
"For the sake of documentation, we'll disable these iocontrol sequences, and "
"roll our own - the result will look and feel like the existing interaction, "
"but now we have complete control over them because they are executed in our "
"own O-word procedure."
msgstr ""

#. type: Plain text
msgid ""
"So what we'll do is use some `motion.digital-*` and `motion.analog-*` pins, "
"and the associated `M62` .. `M68` commands to do our own HAL interaction in "
"our O-word procedure, and those will effectively replace the iocontrol 'tool-"
"prepare/tool-prepared' and 'tool-change/tool-changed' sequences. So we'll "
"define our pins replacing existing iocontrol pins functionally, and go ahead "
"and make the iocontrol interactions a loop. We'll use the following "
"correspondence in our example:"
msgstr ""

#. type: Plain text
msgid "Iocontrol pin correspondence in the examples"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"iocontrol.0 pin  ,motion pin     \n"
"tool-prepare,digital-out-00 \n"
"tool-prepared,digital-in-00  \n"
"tool-change,digital-out-01 \n"
"tool-changed,digital-in-01  \n"
"tool-prep-number,analog-out-00  \n"
"tool-prep-pocket,analog-out-01  \n"
"tool-number,analog-out-02"
msgstr ""

#. type: Plain text
msgid ""
"Let us assume you want to redefine the M6 command, and replace it by an O-"
"word procedure, but other than that things 'should continue to work'."
msgstr ""

#. type: Plain text
msgid ""
"So what our O-word procedure would do is to replace the steps <<remap:"
"interpreter-action-on-m6,outlined here>>. Looking through these steps you'll "
"find that NGC code can be used for most of them, but not all. So the stuff "
"NGC can't handle will be done in Python prolog and epilog functions."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Specifying the M6 replacement"
msgstr ""

#. type: Plain text
msgid ""
"To convey the idea, we just replace the built in M6 semantics with our own. "
"Once that works, you may go ahead and place any actions you see fit into the "
"O-word procedure."
msgstr ""

#. type: Plain text
msgid "Going through the <<remap:interpreter-action-on-m6,steps>>, we find:"
msgstr ""

#. type: Plain text
msgid "check for T command already executed - *execute in Python prolog*"
msgstr ""

#. type: Plain text
msgid "check for cutter compensation being active - *execute in Python prolog*"
msgstr ""

#. type: Plain text
msgid "stop the spindle if needed - *can be done in NGC*"
msgstr ""

#. type: Plain text
msgid "quill up - *can be done in NGC*"
msgstr ""

#. type: Plain text
msgid "if TOOL_CHANGE_AT_G30 was set:"
msgstr ""

#. type: Plain text
msgid "move the A, B and C indexers if applicable - *can be done in NGC*"
msgstr ""

#. type: Plain text
msgid "generate rapid move to the G30 position - *can be done in NGC*"
msgstr ""

#. type: Plain text
msgid "send a CHANGE_TOOL Canon command to task - *execute in Python epilog*"
msgstr ""

#. type: Plain text
msgid ""
"set the numberer parameters 5400-5413 according to the new tool - *execute "
"in Python epilog*"
msgstr ""

#. type: Plain text
msgid ""
"signal to task to stop calling the interpreter for readahead until tool "
"change complete - *execute in Python epilog*"
msgstr ""

#. type: Plain text
msgid ""
"So we need a prolog, and an epilog. Lets assume our ini file incantation of "
"the M6 remap looks as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " REMAP=M6   modalgroup=6  prolog=change_prolog ngc=change epilog=change_epilog\n"
msgstr ""

#. type: Plain text
msgid ""
"So the prolog covering steps 1 and 2 would look like so - we decide to pass "
"a few variables to the remap procedure which can be inspected and changed "
"there, or used in a message. Those are: `tool_in_spindle`, `selected_tool` "
"(tool numbers) and their respective tooldata indices `current_pocket` and "
"`selected_pocket`:"
msgstr ""

#. type: Plain text
msgid ""
"The legacy names *selected_pocket* and *current_pocket* actually reference a "
"sequential tooldata index for tool items loaded from a tool table "
"([EMCIO]TOOL_TABLE) or via a tooldata database ([EMCIO]DB_PROGRAM)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def change_prolog(self, **words):\n"
"    try:\n"
"        if self.selected_pocket < 0:\n"
"            return \"M6: no tool prepared\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        if self.cutter_comp_side:\n"
"            return \"Cannot change tools with cutter radius compensation on\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        self.params[\"tool_in_spindle\"] = self.current_tool\n"
"        self.params[\"selected_tool\"] = self.selected_tool\n"
"        self.params[\"current_pocket\"] = self.current_pocket\n"
"        self.params[\"selected_pocket\"] = self.selected_pocket\n"
"        return INTERP_OK\n"
"    except Exception, e:\n"
"        return \"M6/change_prolog: %s\" % (e)\n"
msgstr ""

#. type: Plain text
msgid ""
"You will find that most prolog functions look very similar: first test that "
"all preconditions for executing the code hold, then prepare the environment "
"- inject variables and/or do any preparatory processing steps which cannot "
"easily be done in NGC code; then hand off to the NGC procedure by returning "
"INTERP_OK."
msgstr ""

#. type: Plain text
msgid ""
"Our first iteration of the O-word procedure is unexciting - just verify we "
"got parameters right, and signal success by returning a positive value; "
"steps 3-5 would eventually be covered here (see <<gcode:ini-hal-params,"
"here>> for the variables referring to ini file settings):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"O<change> sub\n"
"(debug, change: current_tool=#<current_tool>)\n"
"(debug, change: selected_pocket=#<selected_pocket>)\n"
";\n"
"; insert any g-code which you see fit here, eg:\n"
"; G0  #<_ini[setup]tc_x>  #<_ini[setup]tc_y>  #<_ini[setup]tc_z>\n"
";\n"
"O<change> endsub [1]\n"
"m2\n"
msgstr ""

#. type: Plain text
msgid "Assuming success of `change.ngc`, we need to mop up steps 6-8:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def change_epilog(self, **words):\n"
"    try:\n"
"        if self.return_value > 0.0:\n"
"            # commit change\n"
"            self.selected_pocket =  int(self.params[\"selected_pocket\"])\n"
"            emccanon.CHANGE_TOOL(self.selected_pocket)\n"
"            # cause a sync()\n"
"            self.tool_change_flag = True\n"
"            self.set_tool_parameters()\n"
"            return INTERP_OK\n"
"        else:\n"
"            return \"M6 aborted (return code %.1f)\" % (self.return_value)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    except Exception, e:\n"
"        return \"M6/change_epilog: %s\" % (e)\n"
msgstr ""

#. type: Plain text
msgid ""
"This replacement M6 is compatible with the built in code, except steps 3-5 "
"need to be filled in with your NGC code."
msgstr ""

#. type: Plain text
msgid ""
"Again, most epilogs have a common scheme: first, determine whether things "
"went right in the remap procedure, then do any commit and cleanup actions "
"which can't be done in NGC code."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configuring iocontrol with a remapped M6"
msgstr ""

#. type: Plain text
msgid ""
"Note that the sequence of operations has changed: we do everything required "
"in the O-word procedure - including any HAL pin setting/reading to get a "
"changer going, and to acknowledge a tool change - likely with `motion."
"digital-*` and `motion-analog-*` IO pins. When we finally execute the "
"`CHANGE_TOOL()` command, all movements and HAL interactions are already "
"completed."
msgstr ""

#. type: Plain text
msgid ""
"Normally only now iocontrol would do its thing as outlined <<remap:iocontrol-"
"action-on-load,here>>. However, we don't need the HAL pin wiggling anymore - "
"all iocontrol is left to do is to accept we're done with prepare and change."
msgstr ""

#. type: Plain text
msgid ""
"This means that the corresponding iocontrol pins have no function any more. "
"Therefore, we configure iocontrol to immediately acknowledge a change by "
"configuring like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# loop change signals when remapping M6\n"
"net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed\n"
msgstr ""

#. type: Plain text
msgid ""
"If you for some reason want to remap `Tx` (prepare), the corresponding "
"iocontrol pins need to be looped as well."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Writing the change and prepare O-word procedures"
msgstr ""

#. type: Plain text
msgid ""
"The standard prologs and epilogs found in `ncfiles/remap_lib/python-stdglue/"
"stdglue.py` pass a few 'exposed parameters' to the remap procedure."
msgstr ""

#. type: Plain text
msgid ""
"An 'exposed parameter' is a named local variable visible in a remap "
"procedure which corresponds to interpreter-internal variable which is "
"relevant for the current remap. Exposed parameters are set up in the "
"respective prolog, and inspected in the epilog. They can be changed in the "
"remap procedure and the change will be picked up in the epilog. The exposed "
"parameters for remappable built in codes are:"
msgstr ""

#. type: Plain text
msgid "`T` (prepare_prolog): `#<tool>` , `#<pocket>`"
msgstr ""

#. type: Plain text
msgid ""
"`M6` (change_prolog): `#<tool_in_spindle>`, `#<selected_tool>`, "
"`#<current_pocket>`, `#<selected_pocket>`"
msgstr ""

#. type: Plain text
msgid "`M61` (settool_prolog): `#<tool>` , `#<pocket>`"
msgstr ""

#. type: Plain text
msgid "`S` (setspeed_prolog): `#<speed>`"
msgstr ""

#. type: Plain text
msgid "`F` (setfeed_prolog): `#<feed>`"
msgstr ""

#. type: Plain text
msgid ""
"If you have specific needs for extra parameters to be made visible, that can "
"simply be added to the prolog - practically all of the interpreter internals "
"are visible to Python."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Making minimal changes to the built in codes, including `M6`"
msgstr ""

#. type: Plain text
msgid ""
"Remember that normally remapping a code completely disables all internal "
"processing for that code."
msgstr ""

#. type: Plain text
msgid ""
"However, in some situations it might be sufficient to add a few codes around "
"the existing `M6` built in implementation, like a tool length probe, but "
"other than that retain the behavior of the built in `M6`."
msgstr ""

#. type: Plain text
msgid ""
"Since this might be a common scenario, the built in behavior of remapped "
"codes has been made available within the remap procedure. The interpreter "
"detects that you are referring to a remapped code within the procedure which "
"is supposed to redefine its behavior. In this case, the built in behavior is "
"used - this currently is enabled for the set: `M6`, `M61`,`T`, `S`, `F`). "
"Note that otherwise referring to a code within its own remap procedure would "
"be a error - a `remapping recursion`."
msgstr ""

#. type: Plain text
msgid "Slightly twisting a built in would look like so (in the case of `M6`):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " REMAP=M6   modalgroup=6  ngc=mychange \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<mychange> sub\n"
"M6 (use built in M6 behavior)\n"
"(.. move to tool length switch, probe and set tool length..)\n"
"o<mychange> endsub \n"
"m2\n"
msgstr ""

#. type: Plain text
msgid ""
"when redefining a built in code, *do not specify any leading zeroes in G- or "
"M-codes* - for example, say `REMAP=M1 ..`, not `REMAP=M01 ...`."
msgstr ""

#. type: Plain text
msgid ""
"See the `configs/sim/axis/remap/extend-builtins` directory for a complete "
"configuration which is the recommended starting point for own work when "
"extending built in codes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Specifying the T (prepare) replacement"
msgstr ""

#. type: Plain text
msgid ""
"If you're confident with the <<remap:interpreter-action-on-t,default "
"implementation>>, you wouldn't need to do this. But remapping is also a way "
"to work around deficiencies in the current implementation, for instance to "
"not block until the \"tool-prepared\" pin is set."
msgstr ""

#. type: Plain text
msgid "What you could do, for instance, is:"
msgstr ""

#. type: Plain text
msgid ""
"in a remapped T, just set the equivalent of the \"tool-prepare\" pin, but "
"*not* wait for \"tool-prepared\" here"
msgstr ""

#. type: Plain text
msgid ""
"in the corresponding remapped M6, wait for the \"tool-prepared\" at the very "
"beginning of the O-word procedure."
msgstr ""

#. type: Plain text
msgid ""
"Again, the iocontrol tool-prepare/tool-prepared pins would be unused and "
"replaced by `motion.*` pins, so those would pins must be looped:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# loop prepare signals when remapping T\n"
"net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared\n"
msgstr ""

#. type: Plain text
msgid "So, here's the setup for a remapped T:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  REMAP=T  prolog=prepare_prolog epilog=prepare_epilog ngc=prepare\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def prepare_prolog(self,**words):\n"
"    try:\n"
"        cblock = self.blocks[self.remap_level]\n"
"        if not cblock.t_flag:\n"
"            return \"T requires a tool number\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        tool  = cblock.t_number\n"
"        if tool:\n"
"            (status, pocket) = self.find_tool_pocket(tool)\n"
"            if status != INTERP_OK:\n"
"                return \"T%d: pocket not found\" % (tool)\n"
"        else:\n"
"            pocket = -1 # this is a T0 - tool unload\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        # these variables will be visible in the ngc oword sub\n"
"        # as #<tool> and #<pocket> local variables, and can be\n"
"        # modified there - the epilog will retrieve the changed\n"
"        # values\n"
"        self.params[\"tool\"] = tool\n"
"        self.params[\"pocket\"] = pocket\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        return INTERP_OK\n"
"    except Exception, e:\n"
"        return \"T%d/prepare_prolog: %s\" % (int(words['t']), e)\n"
msgstr ""

#. type: Plain text
msgid "The minimal ngc prepare procedure again looks like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<prepare> sub\n"
"; returning a positive value to commit:\n"
"o<prepare> endsub [1]\n"
"m2\n"
msgstr ""

#. type: Plain text
msgid "And the epilog:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def prepare_epilog(self, **words):\n"
"    try:\n"
"        if self.return_value > 0:\n"
"            self.selected_tool = int(self.params[\"tool\"])\n"
"            self.selected_pocket = int(self.params[\"pocket\"])\n"
"            emccanon.SELECT_TOOL(self.selected_tool)\n"
"            return INTERP_OK\n"
"        else:\n"
"            return \"T%d: aborted (return code %.1f)\" % (int(self.params[\"tool\"]),self.return_value)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    except Exception, e:\n"
"        return \"T%d/prepare_epilog: %s\" % (tool,e)\n"
msgstr ""

#. type: Plain text
msgid ""
"prepare_prolog and prepare_epilog are part of the 'standard glue' provided "
"by 'nc_files/remap_lib/python-stdglue/stdglue.py'.  This module is intended "
"to cover most standard remapping situations in a common way."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error handling: dealing with abort"
msgstr ""

#. type: Plain text
msgid ""
"The built in tool change procedure has some precautions for dealing with a "
"program abort (e.g. hitting Escape in Axis during a change). Your remapped "
"function has none of this, therefore some explicit cleanup might be needed "
"if a remapped code is aborted. In particular, a remap procedure might "
"establish modal settings which are undesirable to have active after an "
"abort. For instance, if your remap procedure has motion codes (G0,G1,G38..) "
"and the remap is aborted, then the last modal code will remain active. "
"However, you very likely want to have any modal motion canceled when the "
"remap is aborted."
msgstr ""

#. type: Plain text
msgid ""
"The way to do this is by using the `[RS274NGC]ON_ABORT_COMMAND` feature. "
"This ini option specifies a O-word procedure call which is executed if task "
"for some reason aborts program execution."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"ON_ABORT_COMMAND=O <on_abort> call \n"
msgstr ""

#. type: Plain text
msgid ""
"The suggested on_abort procedure would look like so (adapt to your needs):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "o<on_abort> sub\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"G54 (origin offsets are set to the default)\n"
"G17 (select XY plane)\n"
"G90 (absolute)\n"
"G94 (feed mode: units/minute)\n"
"M48 (set feed and speed overrides)\n"
"G40 (cutter compensation off)\n"
"M5  (spindle off)\n"
"G80 (cancel modal motion)\n"
"M9  (mist and coolant off)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<on_abort> endsub\n"
"m2\n"
msgstr ""

#. type: Plain text
msgid ""
"Never use an `M2` in a O-word subroutine, including this one. It will cause "
"hard-to-find errors. For instance, using an `M2` in a subroutine will not "
"end the subroutine properly and will leave the subroutine NGC file open, not "
"your main program."
msgstr ""

#. type: Plain text
msgid ""
"Make sure `on_abort.ngc` is along the interpreter search path (recommended "
"location: `SUBROUTINE_PATH` so as not to clutter your `NC_FILES` directory "
"with internal procedures). `on_abort` receives a single parameter indicating "
"the cause for calling the abort procedure, which might be used for "
"conditional cleanup."
msgstr ""

#. type: Plain text
msgid ""
"Statements in that procedure typically would assure that post-abort any "
"state has been cleaned up, like HAL pins properly reset. For an example, see "
"`configs/sim/axis/remap/rack-toolchange`."
msgstr ""

#. type: Plain text
msgid ""
"Note that terminating a remapped code by returning INTERP_ERROR from the "
"epilog (see previous section) will also cause the `on_abort` procedure to be "
"called."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error handling: failing a remapped code NGC procedure"
msgstr ""

#. type: Plain text
msgid ""
"If you determine in your handler procedure that some error condition "
"occurred, do not use `M2` to end your handler - see above:"
msgstr ""

#. type: Plain text
msgid ""
"If displaying an operator error message and stopping the current program is "
"good enough, use the `(abort, <message>)` feature to terminate the handler "
"with an error message. Note that you can substitute numbered, named, ini and "
"HAL parameters in the text like in this example (see also `tests/interp/"
"abort-hot-comment/test.ngc`):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o100 if [..] (some error condition)\n"
"     (abort, Bad Things! p42=#42 q=#<q> ini=#<_ini[a]x> pin=#<_hal[component.pin])\n"
"o100 endif\n"
msgstr ""

#. type: Plain text
msgid ""
"ini and HAL variable expansion is optional and can be disabled in the "
"<<gcode:ini-features,INI file>>"
msgstr ""

#. type: Plain text
msgid ""
"If more fine grained recovery action is needed, use the idiom laid out in "
"the previous example:"
msgstr ""

#. type: Plain text
msgid ""
"define an epilog function, even if it's just to signal an error condition"
msgstr ""

#. type: Plain text
msgid "pass a negative value from the handler to signal the error"
msgstr ""

#. type: Plain text
msgid "inspect the return value in the epilog function."
msgstr ""

#. type: Plain text
msgid "take any recovery action needed"
msgstr ""

#. type: Plain text
msgid ""
"return the error message string from the handler, which will set the "
"interpreter error message and abort the program (pretty much like `(abort, "
"message=`"
msgstr ""

#. type: Plain text
msgid ""
"This error message will be displayed in the UI, and returning INTERP_ERROR "
"will cause this error handled like any other runtime error."
msgstr ""

#. type: Plain text
msgid ""
"Note that both `(abort, msg)` and returning INTERP_ERROR from an epilog will "
"cause any ON_ABORT handler to be called as well if defined (see previous "
"section)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Remapping other existing codes: S, M0, M1, M60"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Automatic gear selection be remapping  S (set spindle speed)"
msgstr ""

#. type: Plain text
msgid ""
"A potential use for a remapped S code would be 'automatic gear selection' "
"depending on speed. In the remap procedure one would test for the desired "
"speed attainable given the current gear setting, and change gears "
"appropriately if not."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adjusting the behavior of M0, M1, M60"
msgstr ""

#. type: Plain text
msgid ""
"A use case for remapping M0/M1 would be to customize the behavior of the "
"existing code. For instance, it could be desirable to turn off the spindle, "
"mist and flood during an M0 or M1 program pause, and turn these settings "
"back on when the program is resumed."
msgstr ""

#. type: Plain text
msgid ""
"For a complete example doing just that, see 'configs/sim/axis/remap/extend-"
"builtins/', which adapts M1 as laid out above."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Creating new G-code cycles"
msgstr ""

#. type: Plain text
msgid "A G-code cycle as used here is meant to behave as follows:"
msgstr ""

#. type: Plain text
msgid ""
"On first invocation, the associated words are collected and the G-code cycle "
"is executed."
msgstr ""

#. type: Plain text
msgid ""
"If subsequent lines just continue parameter words applicable to this code, "
"but no new G-code, the previous G code is re-executed with the parameters "
"changed accordingly."
msgstr ""

#. type: Plain text
msgid ""
"An example: Assume you have `G84.3` defined as remapped G code cycle with "
"the following ini segment (see <<remap:cycle-stdglue,here>> for a detailed "
"description of +cycle_prolog+ and +cycle_epilog+):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"# A cycle with an oword procedure: G84.3 <X- Y- Z- Q- P->\n"
"REMAP=G84.3 argspec=xyzabcuvwpr prolog=cycle_prolog ngc=g843 epilog=cycle_epilog modalgroup=1 \n"
msgstr ""

#. type: Plain text
msgid "Executing the following lines:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"g17 \n"
"(1)   g84.3 x1 y2 z3  r1  \n"
"(2)   x3 y4 p2            \n"
"(3)   x6 y7 z5            \n"
"(4)   G80                 \n"
msgstr ""

#. type: Plain text
msgid ""
"causes the following (note 'R' is sticky, and 'Z' is sticky since the plane "
"is 'XY'):"
msgstr ""

#. type: Plain text
msgid "`g843.ngc` is called with words x=1, y=2, z=3, r=1"
msgstr ""

#. type: Plain text
msgid "`g843.ngc` is called with words x=3, y=4, z=3, p=2, r=1"
msgstr ""

#. type: Plain text
msgid "`g843.ngc` is called with words x=6, y=7, z=3, r=1"
msgstr ""

#. type: Plain text
msgid "The `G84.3` cycle is canceled."
msgstr ""

#. type: Plain text
msgid ""
"Besides creating new cycles, this provides an easy method for repackaging "
"existing G-codes which do not behave as cycles. For instance, the `G33.1` "
"Rigid Tapping code does not behave as a cycle. With such a wrapper, a new "
"code can be easily created which uses `G33.1` but behaves as a cycle."
msgstr ""

#. type: Plain text
msgid ""
"See 'configs/sim/axis/remap/cycle' for a complete example of this feature. "
"It contains two cycles, one with an NGC procedure like above, and a cycle "
"example using just Python."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuring  Embedded Python"
msgstr ""

#. type: Plain text
msgid ""
"The Python plugin serves both the interpreter, and task if so configured, "
"and hence has its own section `PYTHON` in the ini file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Python plugin : ini file configuration"
msgstr ""

#. type: Plain text
msgid "`[PYTHON]`"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`TOPLEVEL=`'<filename>'"
msgstr ""

#. type: Plain text
msgid ""
"filename of the initial Python script to execute on startup. This script is "
"responsible for setting up the package name structure, see below."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`PATH_PREPEND=`'<directory>'"
msgstr ""

#. type: Plain text
msgid "prepend this directory to `PYTHON_PATH`. A repeating group."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`PATH_APPEND=`'<directory>'"
msgstr ""

#. type: Plain text
msgid "append this directory to `PYTHON_PATH`. A repeating group."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`LOG_LEVEL=`'<integer>'"
msgstr ""

#. type: Plain text
msgid ""
"log level of plugin-related actions. Increase this if you suspect problems. "
"Can be very verbose."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`RELOAD_ON_CHANGE`='[0|1]'"
msgstr ""

#. type: Plain text
msgid ""
"reload the 'TOPLEVEL' script if the file was changed. Handy for debugging "
"but currently incurs some runtime overhead. Turn this off for production "
"configurations."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`PYTHON_TASK`='[0|1]'"
msgstr ""

#. type: Plain text
msgid "Start the Python task plug in. Experimental. See xxx."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Executing Python statements from the interpreter"
msgstr ""

#. type: Plain text
msgid ""
"For ad-hoc execution of commands the Python 'hot comment' has been added. "
"Python output by default goes to stdout, so you need to start LinuxCNC from "
"a terminal window to see results. Example (eg. in the MDI window):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ;py,print 2*3\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that the interpreter instance is available here as `self`, so you could "
"also run:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ;py,print self.tool_table[0].toolno\n"
msgstr ""

#. type: Plain text
msgid "The `emcStatus` structure is accessible, too:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  ;py,from emctask import *\n"
"  ;py,print emcstat.io.aux.estop\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Programming Embedded Python in the RS274NGC Interpreter"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Python plugin namespace"
msgstr ""

#. type: Plain text
msgid "The namespace is expected to be laid out as follows:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`oword`"
msgstr ""

#. type: Plain text
msgid ""
"Any callables in this module are candidates for Python O-word procedures. "
"Note that the Python `oword` module is checked *before* testing for a NGC "
"procedure with the same name - in effect names in `oword` will hide NGC "
"files of the same basename."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`remap`"
msgstr ""

#. type: Plain text
msgid ""
"Python callables referenced in an argspec `prolog`,`epilog` or `python` "
"option are expected to be found here."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`namedparams`"
msgstr ""

#. type: Plain text
msgid ""
"Python funtcions int this module extend or redefine the namespace of "
"predefined named parameters, see <<remap:adding-predefined-named-parameters,"
"adding predefined parameters>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`task`"
msgstr ""

#. type: Plain text
msgid "Task-related callables are expected here."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Interpreter as seen from Python"
msgstr ""

#. type: Plain text
msgid ""
"The interpreter is an existing C++ class ('Interp') defined in 'src/emc/"
"rs274ngc'. Conceptually all `oword.<function>` and `remap.<function>` Python "
"calls are methods of this Interp class, although there is no explicit Python "
"definition of this class (it's a 'Boost.Python' wrapper instance) and hence "
"receive the as the first parameter `self` which can be used to access "
"internals."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Interpreter `__init__` and `__delete__` functions"
msgstr ""

#. type: Plain text
msgid ""
"If the `TOPLEVEL` module defines a function `__init__`, it will be called "
"once the interpreter is fully configured (ini file read, and state "
"synchronized with the world model)."
msgstr ""

#. type: Plain text
msgid ""
"If the `TOPLEVEL` module defines a function `__delete__`, it will be called "
"once before the interpreter is shutdown and after the persistent parameters "
"have been saved to the `PARAMETER_FILE`."
msgstr ""

#. type: Plain text
msgid ""
"Note_ at this time, the `__delete__` handler does not work for interpreter "
"instances created by importing the `gcode` module. If you need an equivalent "
"functionality there (which is quite unlikely), please consider the Python "
"`atexit` module."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# this would be defined in the TOPLEVEL module\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def __init__(self):\n"
"    # add any one-time initialization here\n"
"    if self.task:\n"
"  # this is the milltask instance of interp\n"
"  pass\n"
"    else:\n"
"  # this is a non-milltask instance of interp\n"
"        pass\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def __delete__(self):\n"
"    # add any cleanup/state saving actions here\n"
"    if self.task: # as above\n"
"  pass\n"
"    else:\n"
"        pass\n"
msgstr ""

#. type: Plain text
msgid ""
"This function may be used to initialize any Python-side attributes which "
"might be needed later, for instance in remap or oword functions, and save or "
"restore state beyond what `PARAMETER_FILE` provides."
msgstr ""

#. type: Plain text
msgid ""
"If there are setup or cleanup actions which are to happen only in the "
"milltask Interpreter instance (as opposed to the interpreter instance which "
"sits in the `gcode` Python module and serves preview/progress display "
"purposes but nothing else), this can be tested for by <<remap:axis-preview-"
"and-remapped-code-execution,evaluating 'self.task'>>."
msgstr ""

#. type: Plain text
msgid ""
"An example use of `__init__` and `__delete__` can be found in 'configs/sim/"
"axis/remap/cycle/python/toplevel.py' initialising attributes needed to "
"handle cycles in 'ncfiles/remap_lib/python-stdglue/stdglue.py' (and imported "
"into 'configs/sim/axis/remap/cycle/python/remap.py')."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Calling conventions: NGC to Python"
msgstr ""

#. type: Plain text
msgid "Python code is called from NGC in the following situations:"
msgstr ""

#. type: Plain text
msgid "during normal program execution:"
msgstr ""

#. type: Plain text
msgid ""
"when an O-word call like `O<proc> call` is executed and the name `oword."
"proc` is defined and callable"
msgstr ""

#. type: Plain text
msgid "when a comment like `;py,<Python statement>` is executed"
msgstr ""

#. type: Plain text
msgid ""
"during execution of a remapped code: any `prolog=`, `python=` and `epilog=` "
"handlers."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Calling O-word Python subroutines"
msgstr ""

#. type: Plain text
msgid "Arguments:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`self`"
msgstr ""

#. type: Plain text
msgid "the interpreter instance"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`*args`"
msgstr ""

#. type: Plain text
msgid ""
"the list of actual positional parameters. Since the number of actual "
"parameters may vary, it is best to use this style of declaration:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# this would be defined in the oword module\n"
"def mysub(self, *args):\n"
"    print \"number of parameters passed:\", len(args)\n"
"    for a in args:\n"
"  print a\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Return values of O-word Python subroutines"
msgstr ""

#. type: Plain text
msgid ""
"Just as NGC procedures may return values, so do O-word Python subroutines. "
"They are expected to either:"
msgstr ""

#. type: Plain text
msgid "return no value (no `return` statement or the value `None`)"
msgstr ""

#. type: Plain text
msgid "a float or int value"
msgstr ""

#. type: Plain text
msgid ""
"a string, this means 'this is an error message, abort the program'. Works "
"like `(abort, msg)`."
msgstr ""

#. type: Plain text
msgid "Any other return value type will raise a Python exception."
msgstr ""

#. type: Plain text
msgid ""
"In a calling NGC environment, the following predefined named parameters are "
"available:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`#<_value>`"
msgstr ""

#. type: Plain text
msgid ""
"value returned by the last procedure called. Initialized to 0.0 on startup. "
"Exposed in Interp as `self.return_value` (float)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`#<_value_returned>`"
msgstr ""

#. type: Plain text
msgid ""
"indicates the last procedure called did `return`or `endsub` with an explicit "
"value. 1.0 if true. Set to 0.0 on each `call`. Exposed in Interp was `self."
"value_returned` (int)."
msgstr ""

#. type: Plain text
msgid "See also `tests/interp/value-returned` for an example."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Calling conventions for 'prolog=' and 'epilog=' subroutines"
msgstr ""

#. type: Plain text
msgid "Arguments are:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`words`"
msgstr ""

#. type: Plain text
msgid ""
"keyword parameter dictionary. If an argspec was present, words are collected "
"from the current block accordingly and passed in the dictionary for "
"convenience (the words could as well be retrieved directly from the calling "
"block, but this requires more knowledge of interpreter internals). If no "
"argspec was passed, or only optional values were specified and none of these "
"was present in the calling block, this dict is empty. Word names are "
"converted to lowercase."
msgstr ""

#. type: Plain text
msgid "Example call:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def minimal_prolog(self, **words): # in remap module\n"
"    print len(words),\" words passed\"\n"
"    for w in words:\n"
"        print \"%s: %s\" % (w, words[w])\n"
"    if words['p'] < 78: # NB: could raise an exception if p were optional\n"
"       return \"failing miserably\"\n"
"    return INTERP_OK\n"
msgstr ""

#. type: Plain text
msgid "Return values:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`INTERP_OK`"
msgstr ""

#. type: Plain text
msgid "return this on success. You need to import this from `interpreter`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`\"a message text\"`"
msgstr ""

#. type: Plain text
msgid ""
"returning a string from a handler means 'this is an error message, abort the "
"program'. Works like `(abort, msg)`."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Calling conventions for 'python=' subroutines"
msgstr ""

#. type: Plain text
msgid ""
"keyword parameter dictionary. the same kwargs dictionary as prologs and "
"epilogs (see above)."
msgstr ""

#. type: Plain text
msgid "The minimum `python=` function example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def useless(self,  **words): # in remap module\n"
"    return INTERP_OK\n"
msgstr ""

#. type: Plain text
msgid "return this on success"
msgstr ""

#. type: Plain text
msgid ""
"If the handler needs to execute a 'queuebuster operation' (tool change, "
"probe, HAL pin reading) it is supposed to suspend execution with the "
"following statement:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`yield INTERP_EXECUTE_FINISH`"
msgstr ""

#. type: Plain text
msgid ""
"This signals task to stop read ahead, execute all queued operations, execute "
"the 'queue-buster' operation, synchronize interpreter state with machine "
"state, and then signal the interpreter to continue. At this point the "
"function is resumed at the statement following the `yield ..` statement."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Dealing with queue-buster: Probe, Tool change and waiting for a HAL pin"
msgstr ""

#. type: Plain text
msgid ""
"Queue busters interrupt a procedure at the point where such an operation is "
"called, hence the procedure needs to be restarted after the interpreter "
"synch(). When this happens the procedure needs to know if it is restarted, "
"and where to continue. The Python generator method is used to deal with "
"procedure restart."
msgstr ""

#. type: Plain text
msgid "This demonstrates call continuation with a single point-of-restart:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def read_pin(self,*args):\n"
"    # wait 5secs for digital-input 00 to go high\n"
"    emccanon.WAIT(0,1,2,5.0)\n"
"    # cede control after executing the queue buster:\n"
"    yield INTERP_EXECUTE_FINISH\n"
"    # post-sync() execution resumes here:\n"
"    pin_status = emccanon.GET_EXTERNAL_DIGITAL_INPUT(0,0);\n"
"    print \"pin status=\",pin_status\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'yield' feature is fragile. The following restrictions apply to the "
"usage of 'yield INTERP_EXECUTE_FINISH':"
msgstr ""

#. type: Plain text
msgid ""
"Python code executing a 'yield INTERP_EXECUTE_FINISH' must be part of a "
"remap procedure. Yield does not work in a Python oword procedure."
msgstr ""

#. type: Plain text
msgid ""
"A Python remap subroutine containing 'yield INTERP_EXECUTE_FINISH' statement "
"may not return a value, as with normal Python yield statements."
msgstr ""

#. type: Plain text
msgid ""
"Code following a yield may not recursively call the interpreter, like with "
"self.execute(\"<mdi command>\"). This is an architectural restriction of the "
"interpreter and is not fixable without a major redesign."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Calling conventions: Python to NGC"
msgstr ""

#. type: Plain text
msgid "NGC code is executed from Python when:"
msgstr ""

#. type: Plain text
msgid "the method `self.execute(<NGC code>[,<line number>])` is executed"
msgstr ""

#. type: Plain text
msgid "during execution of a remapped code, if a `prolog=` function is"
msgstr ""

#. type: Plain text
msgid ""
"defined, the NGC procedure given in `ngc=` is executed immediately "
"thereafter."
msgstr ""

#. type: Plain text
msgid ""
"The prolog handler does not call the handler, but it prepares its call "
"environment, for instance by setting up predefined local parameters."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Inserting parameters in a prolog, and retrieving  them in an epilog"
msgstr ""

#. type: Plain text
msgid ""
"Conceptually a prolog and an epilog execute at the same call level like the "
"O-word procedure, that is: after the subroutine call is set up, and before "
"the subroutine endsub or return."
msgstr ""

#. type: Plain text
msgid ""
"This means that any local variable created in a prolog will be a local "
"variable in the O-word procedure, and any local variables created in the O-"
"word procedure are still accessible when the epilog executes."
msgstr ""

#. type: Plain text
msgid ""
"The `self.params` array handles reading and setting numbered and named "
"parameters. If a named parameter begins with `_` (underscore), it is assumed "
"to be a global parameter; if not, it is local to the calling procedure. "
"Also, numbered parameters in the range 1..30 are treated like local "
"variables; their original values are restored on return/endsub from an O-"
"word procedure."
msgstr ""

#. type: Plain text
msgid ""
"Here is an example remapped code demonstrating insertion and extraction of "
"parameters into/from the O-word procedure:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  REMAP=m300 prolog=insert_param ngc=testparam epilog=retrieve_param modalgroup=10\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def insert_param(self, **words): # in the remap module\n"
"    print \"insert_param call level=\",self.call_level\n"
"    self.params[\"myname\"] = 123\n"
"    self.params[1] = 345\n"
"    self.params[2] = 678\n"
"    return INTERP_OK\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def retrieve_param(self, **words):\n"
"    print \"retrieve_param call level=\",self.call_level\n"
"    print \"#1=\", self.params[1]\n"
"    print \"#2=\", self.params[2]\n"
"    try:\n"
"        print \"result=\", self.params[\"result\"]\n"
"    except Exception,e:\n"
"  return \"testparam forgot to assign #<result>\"\n"
"    return INTERP_OK\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o<testparam> sub\n"
"(debug, call_level=#<_call_level> myname=#<myname>)\n"
"; try commenting out the next line and run again\n"
"#<result> = [#<myname> * 3]\n"
"#1 = [#1 * 5]\n"
"#2 = [#2 * 3]\n"
"o<testparam> endsub\n"
"m2\n"
msgstr ""

#. type: Plain text
msgid ""
"`self.params()` returns a list of all variable names currently defined.  "
"Since `myname` is local, it goes away after the epilog finishes."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Calling the interpreter from Python"
msgstr ""

#. type: Plain text
msgid "You can recursively call the interpreter from Python code as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  self.execute(<NGC code>[,<line number>])\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  self.execute(\"G1 X%f Y%f\" % (x,y))\n"
"  self.execute(\"O <myprocedure> call\", currentline)\n"
msgstr ""

#. type: Plain text
msgid ""
"You might want to test for the return value being `< INTERP_MIN_ERROR`. If "
"you're using lots of execute() statements, it's probably easier to trap "
"InterpreterException as per below."
msgstr ""

#. type: Plain text
msgid ""
"The parameter insertion/retrieval method described in the previous section "
"does not work in this case. It is good enough for just executing simple NGC "
"commands or a procedure call and advanced introspection into the procedure, "
"and passing of local named parameters is not needed. The recursive call "
"feature is fragile."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Interpreter Exception during execute()"
msgstr ""

#. type: Plain text
msgid ""
"if `interpreter.throw_exceptions` is nonzero (default 1), and self.execute() "
"returns an error, the exception `InterpreterException` is raised. "
"InterpreterException has the following attributes:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`line_number`"
msgstr ""

#. type: Plain text
msgid "where the error occurred"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`line_text`"
msgstr ""

#. type: Plain text
msgid "the NGC statement causing the error"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`error_message`"
msgstr ""

#. type: Plain text
msgid "the interpreter's error message"
msgstr ""

#. type: Plain text
msgid "Errors can be trapped in the following Pythonic way:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import interpreter\n"
"interpreter.throw_exceptions = 1\n"
"   ...\n"
"   try:\n"
"        self.execute(\"G3456\")  #  raise InterpreterException\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"   except InterpreterException,e:\n"
"        msg = \"%d: '%s' - %s\" % (e.line_number,e.line_text, e.error_message)\n"
"        return msg  # replace builtin error message\n"
msgstr ""

#.  NOTE: to iterate is human, to recurse: divine.
#. type: Block title
#, no-wrap
msgid "Canon"
msgstr ""

#. type: Plain text
msgid "The canon layer is practically all free functions. Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import emccanon\n"
"def example(self,*args):\n"
"    ....\n"
"    emccanon.STRAIGHT_TRAVERSE(line,x0,y0,z0,0,0,0,0,0,0)\n"
"    emccanon.STRAIGHT_FEED(line,x1,y1,z1,0,0,0,0,0,0)\n"
"    ...\n"
"    return INTERP_OK\n"
msgstr ""

#. type: Plain text
msgid ""
"The actual canon functions are declared in `src/emc/nml_intf/canon.hh` and "
"implemented in `src/emc/task/emccanon.cc`.  The implementation of the Python "
"functions can be found in `src/emc/rs274ncg/canonmodule.cc`."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Built in modules"
msgstr ""

#. type: Plain text
msgid "The following modules are built in:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`interpreter`"
msgstr ""

#. type: Plain text
msgid ""
"exposes internals of the Interp class. See `src/emc/rs274ngc/interpmodule."
"cc`, and the `tests/remap/introspect` regression test."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`emccanon`"
msgstr ""

#. type: Plain text
msgid "exposes most calls of `src/emc/task/emccanon.cc`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`emctask`"
msgstr ""

#. type: Plain text
msgid ""
"exposes the `emcStatus` class instance. See `src/emc/task/taskmodule.cc`.  "
"Not present when using the `gcode` module used for user interfaces - only "
"present in the milltask instance of the interpreter."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Adding Predefined Named Parameters"
msgstr ""

#. type: Plain text
msgid ""
"The interpreter comes with a set of predefined named parameters for "
"accessing internal state from the NGC language level. These parameters are "
"read-only and global, and hence cannot be assigned to."
msgstr ""

#. type: Plain text
msgid ""
"Additional parameters may be added by defining a function in the "
"`namedparams` module. The name of the function defines the name of the new "
"predefined named parameter, which now can be referenced in arbitrary "
"expressions."
msgstr ""

#. type: Plain text
msgid "To add or redefine a named parameter:"
msgstr ""

#. type: Plain text
msgid "add a `namedparams` module so it can be found by the interpreter"
msgstr ""

#. type: Plain text
msgid "define new parameters by functions (see below). These functions"
msgstr ""

#. type: Plain text
msgid ""
"receive `self` (the interpreter instance) as parameter and so can access "
"arbitrary state. Arbitrary Python capabilities can be used to return a value."
msgstr ""

#. type: Plain text
msgid "import that module from the `TOPLEVEL` script"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# namedparams.py\n"
"# trivial example\n"
"def _pi(self):\n"
"    return 3.1415926535\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#<circumference> = [2 * #<radius> * #<_pi>]\n"
msgstr ""

#. type: Plain text
msgid ""
"Functions in `namedparams.py` are expected to return a float or int value. "
"If a string is returned, this sets the interpreter error message and aborts "
"execution."
msgstr ""

#. type: Plain text
msgid ""
"Ãnly functions with a leading underscore are added as parameters, since this "
"is the RS274NGC convention for globals."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to redefine an existing predefined parameter by adding a "
"Python function of the same name to the `namedparams` module. In this case, "
"a warning is generated during startup."
msgstr ""

#. type: Plain text
msgid ""
"While the above example isn't terribly useful, note that pretty much all of "
"the interpreter internal state is accessible from Python, so arbitrary "
"predicates may be defined this way. For a slightly more advanced example, "
"see `tests/remap/predefined-named-params`."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Standard Glue routines"
msgstr ""

#. type: Plain text
msgid ""
"Since many remapping tasks are very similar, I've started collecting working "
"prolog and epilog routines in a single Python module. These can currently be "
"found in 'ncfiles/remap_lib/python-stdglue/stdglue.py' and provide the "
"following routines:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "T: +prepare_prolog+ and +prepare_epilog+ "
msgstr ""

#. type: Plain text
msgid "These wrap a NGC procedure for Tx Tool Prepare."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +prepare_prolog+"
msgstr ""

#. type: Plain text
msgid "The following parameters are made visible to the NGC procedure:"
msgstr ""

#. type: Plain text
msgid "`#<tool>` - the parameter of the `T` word"
msgstr ""

#. type: Plain text
msgid "`#<pocket>` - the corresponding pocket"
msgstr ""

#. type: Plain text
msgid ""
"If tool number zero is requested (meaning Tool unload), the corresponding "
"pocket is passed as -1."
msgstr ""

#. type: Plain text
msgid "no tool number is given as T parameter"
msgstr ""

#. type: Plain text
msgid "the tool cannot be found in the tool table."
msgstr ""

#. type: Plain text
msgid ""
"Note that unless you set the `[EMCIO] RANDOM_TOOLCHANGER=1` parameter, tool "
"and pocket number are identical, and the pocket number from the tool table "
"is ignored. This is currently a restriction."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +prepare_epilog+"
msgstr ""

#. type: Plain text
msgid ""
"The NGC procedure is expected to return a positive value, otherwise and "
"error message containing the return value is given and the interpreter "
"aborts."
msgstr ""

#. type: Plain text
msgid ""
"In case the NGC procedure executed the T command (which then refers to the "
"built in T behavior), no further action is taken. This can be used for "
"instance to minimally adjust the built in behavior be preceding or following "
"it with some other statements."
msgstr ""

#. type: Plain text
msgid ""
"Otherwise, the `#<tool>` and `#<pocket>` parameters are extracted from the "
"subroutine's parameter space. This means that the NGC procedure could change "
"these values, and the epilog takes the changed values in account."
msgstr ""

#. type: Plain text
msgid "then, the Canon command `SELECT_TOOL(#<tool>)` is executed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "M6: +change_prolog+ and +change_epilog+ "
msgstr ""

#. type: Plain text
msgid "These wrap a NGC procedure for M6 Tool Change."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +change_prolog+"
msgstr ""

#. type: Plain text
msgid ""
"The following three steps are applicable only if the `iocontrol-v2` "
"component is used:"
msgstr ""

#. type: Plain text
msgid ""
"If parameter 5600 (fault indicator) is greater than zero, this indicates a "
"Toolchanger fault, which is handled as follows:"
msgstr ""

#. type: Plain text
msgid ""
"if parameter 5601 (error code) is negative, this indicates a hard fault and "
"the prolog aborts with an error message."
msgstr ""

#. type: Plain text
msgid ""
"if parameter 5601 (error code) is greater equal zero, this indicates a soft "
"fault. An informational message is displayed and the prolog continues."
msgstr ""

#. type: Plain text
msgid ""
"If there was no preceding T command which caused a pocket to be selected, "
"the prolog aborts with an error message."
msgstr ""

#. type: Plain text
msgid ""
"If cutter radius compensation is on, the prolog aborts with an error message."
msgstr ""

#. type: Plain text
msgid "Then, the following parameters are exported to the NGC procedure:"
msgstr ""

#. type: Plain text
msgid "`#<tool_in_spindle>` : the tool number of the currently loaded tool"
msgstr ""

#. type: Plain text
msgid "`#<selected_tool>` : the tool number selected"
msgstr ""

#. type: Plain text
msgid "`#<selected_pocket>` : the selected tool's tooldata index"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +change_epilog+"
msgstr ""

#. type: Plain text
msgid ""
"If parameter 5600 (fault indicator) is greater than zero, this indicates a "
"Toolchanger fault, which is handled as follows (`iocontrol-v2`-only):"
msgstr ""

#. type: Plain text
msgid ""
"if parameter 5601 (error code) is negative, this indicates a hard fault and "
"the epilog aborts with an error message."
msgstr ""

#. type: Plain text
msgid ""
"if parameter 5601 (error code) is greater equal zero, this indicates a soft "
"fault. An informational message is displayed and the epilog continues."
msgstr ""

#. type: Plain text
msgid ""
"In case the NGC procedure executed the M6 command (which then refers to the "
"built in M6 behavior), no further action is taken. This can be used for "
"instance to minimally adjust the built in behavior be preceding or following "
"it with some other statements."
msgstr ""

#. type: Plain text
msgid ""
"Otherwise, the `#<selected_pocket>` parameter is extracted from the "
"subroutine's parameter space, and used to set the interpreter's "
"`current_pocket` variable. Again, the procedure could change this value, and "
"the epilog takes the changed value in account."
msgstr ""

#. type: Plain text
msgid "then, the Canon command `CHANGE_TOOL(#<selected_pocket>)` is executed."
msgstr ""

#. type: Plain text
msgid "The new tool parameters (offsets, diameter etc) are set."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "G code Cycles: +cycle_prolog+ and +cycle_epilog+"
msgstr ""

#. type: Plain text
msgid ""
"These wrap a NGC procedure so it can act as a cycle, meaning the motion code "
"is retained after finishing execution. If the next line just contains "
"parameter words (e.g. new X,Y values), the code is executed again with the "
"new parameter words merged into the set of the parameters given in the first "
"invocation."
msgstr ""

#. type: Plain text
msgid ""
"These routines are designed to work in conjunction with an "
"<<_the_argspec_parameter,`argspec=<words>` parameter>>. While this is easy "
"to use, in a realistic scenario you would avoid argspec and do a more "
"thorough investigation of the block manually in order to give better error "
"messages."
msgstr ""

#. type: Plain text
msgid "The suggested argspec is as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "REMAP=G<somecode> argspec=xyzabcuvwqplr prolog=cycle_prolog ngc=<ngc procedure> epilog=cycle_epilog modalgroup=1 \n"
msgstr ""

#. type: Plain text
msgid ""
"This will permit +cycle_prolog+ to determine the compatibility of any axis "
"words give in the block, see below."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +cycle_prolog+"
msgstr ""

#. type: Plain text
msgid ""
"Determine whether the words passed in from the current block fulfill the "
"conditions outlined under <<gcode:canned-cycle-errors,Canned Cycle Errors>>."
msgstr ""

#. type: Plain text
msgid ""
"export the axis words as +<x>+, +#<y>+ etc; fail if axis words from "
"different groups (XYZ) (UVW) are used together, or any of (ABC) is given."
msgstr ""

#. type: Plain text
msgid "export 'L-' as +#<l>+; default to 1 if not given."
msgstr ""

#. type: Plain text
msgid "export 'P-' as +#<p>+; fail if p less than 0."
msgstr ""

#. type: Plain text
msgid "export 'R-' as +#<r>+; fail if r not given, or less equal 0 if given."
msgstr ""

#. type: Plain text
msgid ""
"fail if feed rate is zero, or inverse time feed or cutter compensation is on."
msgstr ""

#. type: Plain text
msgid ""
"Determine whether this is the first invocation of a cycle G code, if so:"
msgstr ""

#. type: Plain text
msgid ""
"Add the words passed in (as per argspec) into a set of sticky parameters, "
"which is retained across several invocations."
msgstr ""

#. type: Plain text
msgid "If not (a continuation line with new parameters):"
msgstr ""

#. type: Plain text
msgid "merge the words passed in into the existing set of sticky parameters."
msgstr ""

#. type: Plain text
msgid "export the set of sticky parameters to the NGC procedure."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Actions of +cycle_epilog+"
msgstr ""

#. type: Plain text
msgid "Determine if the current code was in fact a cycle, if so:"
msgstr ""

#. type: Plain text
msgid ""
"retain the current motion mode so a continuation line without a motion code "
"will execute the same motion code."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "S (Set Speed) : +setspeed_prolog+ and +setspeed_epilog+ "
msgstr ""

#. type: Plain text
msgid "TBD"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "F (Set Feed) : +setfeed_prolog+ and +setfeed_epilog+ "
msgstr ""

#. type: Title ===
#, no-wrap
msgid "M61 Set tool number : +settool_prolog+ and +settool_epilog+ "
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Remapped code execution"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "NGC procedure call environment during remaps"
msgstr ""

#. type: Plain text
msgid ""
"Normally, an O-word procedure is called with positional parameters.  This "
"scheme is very limiting in particular in the presence of optional "
"parameters. Therefore, the calling convention has been extended to use "
"something remotely similar to the Python keyword arguments model."
msgstr ""

#. type: Plain text
msgid "see LINKTO gcode/main Subroutines: sub, endsub, return, call."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Nested remapped codes"
msgstr ""

#. type: Plain text
msgid ""
"Remapped codes may be nested just like procedure calls - that is, a remapped "
"code whose NGC procedure refers to some other remapped code will execute "
"properly."
msgstr ""

#. type: Plain text
msgid "The maximum nesting level remaps is currently 10."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Sequence number  during remaps"
msgstr ""

#. type: Plain text
msgid ""
"Sequence numbers are propagated and restored like with O-word calls. See "
"`tests/remap/nested-remaps/word` for the regression test, which shows "
"sequence number tracking during nested remaps three levels deep."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Debugging flags"
msgstr ""

#. type: Plain text
msgid ""
"The following flags are relevant for remapping and Python - related "
"execution:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" EMC_DEBUG_OWORD             0x00002000  traces execution of O-word subroutines\n"
" EMC_DEBUG_REMAP             0x00004000  traces execution of remap-related code\n"
" EMC_DEBUG_PYTHON            0x00008000  calls to the Python plug in\n"
" EMC_DEBUG_NAMEDPARAM        0x00010000  trace named parameter access\n"
" EMC_DEBUG_PYTHON_TASK       0x00040000  trace the task Python plug in\n"
" EMC_DEBUG_USER1             0x10000000  user-defined - not interpreted by LinuxCNC\n"
" EMC_DEBUG_USER2             0x20000000  user-defined - not interpreted by LinuxCNC\n"
msgstr ""

#. type: Plain text
msgid ""
"'or' these flags into the `[EMC]DEBUG` variable as needed. For a current "
"list of debug flags see 'src/emc/nml_intf/debugflags.h'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Debugging Embedded Python code"
msgstr ""

#. type: Plain text
msgid ""
"Debugging of embedded Python code is harder than debugging normal Python "
"scripts, and only a limited supply of debuggers exists. A working open-"
"source based solution is to use the http://www.eclipse.org[Eclipse IDE], and "
"the http://www.pydev.org[PydDev] Eclipse plug in and its http://pydev.org/"
"manual_adv_remote_debugger.html[remote debugging feature]."
msgstr ""

#. type: Plain text
msgid "To use this approach:"
msgstr ""

#. type: Plain text
msgid ""
"install Eclipse via the the 'Ubuntu Software Center' (choose first selection)"
msgstr ""

#. type: Plain text
msgid ""
"install the PyDev plug in from the http://pydev.org/updates[Pydev Update "
"Site]"
msgstr ""

#. type: Plain text
msgid "setup the LinuxCNC source tree as an Eclipse project"
msgstr ""

#. type: Plain text
msgid "start the Pydev Debug Server in Eclipse"
msgstr ""

#. type: Plain text
msgid ""
"make sure the embedded Python code can find the `pydevd.py` module which "
"comes with that plug in - it's buried somewhere deep under the Eclipse "
"install directory. Set the the `pydevd` variable in `util.py` to reflect "
"this directory location."
msgstr ""

#. type: Plain text
msgid ""
"`import pydevd` in your Python module - see example `util.py` and `remap.py`"
msgstr ""

#. type: Plain text
msgid ""
"call `pydevd.settrace()` in your module at some point to connect to the "
"Eclipse Python debug server - here you can set breakpoints in your code, "
"inspect variables, step etc as usual."
msgstr ""

#. type: Plain text
msgid ""
"`pydevd.settrace()` will block execution if Eclipse and the Pydev debug "
"server have not been started."
msgstr ""

#. type: Plain text
msgid ""
"To cover the last two steps: the `o<pydevd>` procedure helps to get into the "
"debugger from MDI mode. See also the `call_pydevd` function in `util.py` and "
"its usage in `remap.involute` to set a breakpoint."
msgstr ""

#. type: Plain text
msgid ""
"Here's a screen-shot of Eclipse/PyDevd debugging the `involute` procedure "
"from above:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#, no-wrap
msgid "Debugging with Eclipse"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/debug_embedded_python.png"
msgstr ""

#. type: Plain text
msgid ""
"See the Python code in `configs/sim/axis/remap/getting-started/python` for "
"details."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Axis Preview and Remapped code execution"
msgstr ""

#. type: Plain text
msgid ""
"For complete preview of a remapped code's tool path some precautions need to "
"be taken. To understand what is going on, let's review the preview and "
"execution process (this covers the Axis case, but others are similar):"
msgstr ""

#. type: Plain text
msgid ""
"First, note that there are *two* independent interpreter instances involved:"
msgstr ""

#. type: Plain text
msgid ""
"one instance in the milltask program, which executes a program when you hit "
"the 'Start' button, and actually makes the machine move"
msgstr ""

#. type: Plain text
msgid ""
"a second instance in the user interface whose primary purpose is to generate "
"the tool path preview. This one 'executes' a program once it is loaded, but "
"it doesn't actually cause machine movements."
msgstr ""

#. type: Plain text
msgid ""
"Now assume that your remap procedure contains a G38 probe operation, for "
"example as part of a tool change with automatic tool length touch off. If "
"the probe fails, that would clearly be an error, so you'd display a message "
"and abort the program."
msgstr ""

#. type: Plain text
msgid ""
"Now, what about preview of this procedure? At preview time, of course it's "
"not known whether the probe succeeds or fails - but you would likely want to "
"see what the maximum depth of the probe is, and assume it succeeds and "
"continues execution to preview further movements. Also, there is no point in "
"displaying a 'probe failed' message and aborting *during preview*."
msgstr ""

#. type: Plain text
msgid ""
"The way to address this issue is to test in your procedure whether it "
"executes in preview or execution mode. This can be checked for by testing "
"the `#<_task>` <<gcode:predefined-named-parameters, predefined named "
"parameter>> - it will be 1 during actual execution and 0 during preview. See "
"'configs/sim/axis/remap/manual-toolchange-with-tool-length-switch/"
"nc_subroutines/manual_change.ngc' for a complete usage example."
msgstr ""

#. type: Plain text
msgid ""
"Within Embedded Python, the task instance can be checked for by testing "
"'self.task' - this will be 1 in the milltask instance, and 0 in the preview "
"instance(s)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Remappable Codes"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Existing codes which can be remapped"
msgstr ""

#. type: Plain text
msgid "The current set of *existing* codes open to redefinition is:"
msgstr ""

#. type: Plain text
msgid "Tx (Prepare)"
msgstr ""

#. type: Plain text
msgid "M6 (Change tool)"
msgstr ""

#. type: Plain text
msgid "M61 (Set tool number)"
msgstr ""

#. type: Plain text
msgid "M0 (pause a running program temporarily)"
msgstr ""

#. type: Plain text
msgid ""
"M1 (pause a running program temporarily if the optional stop switch is on)"
msgstr ""

#. type: Plain text
msgid ""
"M60 (exchange pallet shuttles and then pause a running program temporarily)"
msgstr ""

#. type: Plain text
msgid "S (set spindle speed)"
msgstr ""

#. type: Plain text
msgid "F (set feed)"
msgstr ""

#. type: Plain text
msgid "Note that the use of M61 currently requires the use of iocontrol-v2."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Currently unallocated G-codes:"
msgstr ""

#. type: Plain text
msgid ""
"Currently unallocated G-codes (for remapping) must be selected from the "
"blank areas of the following tables. All the listed G-codes are already "
"defined in the current implementation of LinuxCNC and may *not* be used to "
"remap new G-codes. (Developers who add new G-codes to LinuxCNC are "
"encouraged to also add their new G-codes to these tables.)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Allocated_G-codes_00-09"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.6"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.7"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gxx.9"
msgstr ""

#. type: Table
#, no-wrap
msgid "00"
msgstr ""

#. type: Table
#, no-wrap
msgid "G00"
msgstr ""

#. type: Table
#, no-wrap
msgid "01"
msgstr ""

#. type: Table
#, no-wrap
msgid "G01"
msgstr ""

#. type: Table
#, no-wrap
msgid "02"
msgstr ""

#. type: Table
#, no-wrap
msgid "G02"
msgstr ""

#. type: Table
#, no-wrap
msgid "03"
msgstr ""

#. type: Table
#, no-wrap
msgid "G03"
msgstr ""

#. type: Table
#, no-wrap
msgid "04"
msgstr ""

#. type: Table
#, no-wrap
msgid "G04"
msgstr ""

#. type: Table
#, no-wrap
msgid "05"
msgstr ""

#. type: Table
#, no-wrap
msgid "G05"
msgstr ""

#. type: Table
#, no-wrap
msgid "G05.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "G05.2"
msgstr ""

#. type: Table
#, no-wrap
msgid "G05.3"
msgstr ""

#. type: Table
#, no-wrap
msgid "06"
msgstr ""

#. type: Table
#, no-wrap
msgid "07"
msgstr ""

#. type: Table
#, no-wrap
msgid "G07"
msgstr ""

#. type: Table
#, no-wrap
msgid "08"
msgstr ""

#. type: Table
#, no-wrap
msgid "G08"
msgstr ""

#. type: Table
#, no-wrap
msgid "09"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Table_of_Allocated_G-codes_10-19\n"
"[width=\"90%\",align=\"center\",options=\"header,strong,unbreakable\",cols=\"1*2^em,10*1<m\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|#  |Gxx |Gxx.1|Gxx.2|Gxx.3|Gxx.4|Gxx.5|Gxx.6|Gxx.7|Gxx.8|Gxx.9\n"
"|10 |G10 |     |     |     |     |     |     |     |     |\n"
"|11 |    |     |     |     |     |     |     |     |     |\n"
"|12 |    |     |     |     |     |     |     |     |     |\n"
"|13 |    |     |     |     |     |     |     |     |     |\n"
"|14 |    |     |     |     |     |     |     |     |     |\n"
"|15 |    |     |     |     |     |     |     |     |     |\n"
"|16 |    |     |     |     |     |     |     |     |     |\n"
"|17 |G17 |G17.1|     |     |     |     |     |     |     |\n"
"|18 |G18 |G18.1|     |     |     |     |     |     |     |\n"
"|19 |G19 |G19.1|     |     |     |     |     |     |     |"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Allocated_G-codes_20-29"
msgstr ""

#. type: Table
#, no-wrap
msgid "G20"
msgstr ""

#. type: Table
#, no-wrap
msgid "G21"
msgstr ""

#. type: Table
#, no-wrap
msgid "28"
msgstr ""

#. type: Table
#, no-wrap
msgid "G28"
msgstr ""

#. type: Table
#, no-wrap
msgid "G28.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "29"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Table_of_Allocated_G-codes_30-39\n"
"[width=\"90%\",align=\"center\",options=\"header,strong,unbreakable\",cols=\"1*2^em,10*1<m\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|#  |Gxx |Gxx.1|Gxx.2|Gxx.3|Gxx.4|Gxx.5|Gxx.6|Gxx.7|Gxx.8|Gxx.9\n"
"|30 |G30 |G30.1|     |     |     |     |     |     |     |\n"
"|31 |    |     |     |     |     |     |     |     |     |\n"
"|32 |    |     |     |     |     |     |     |     |     |\n"
"|33 |G30 |G30.1|     |     |     |     |     |     |     |\n"
"|34 |    |     |     |     |     |     |     |     |     |\n"
"|35 |    |     |     |     |     |     |     |     |     |\n"
"|36 |    |     |     |     |     |     |     |     |     |\n"
"|37 |    |     |     |     |     |     |     |     |     |\n"
"|38 |    |     |     |     |     |     |     |     |     |\n"
"|39 |    |     |     |     |     |     |     |     |     |"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Allocated_G-codes_40-49"
msgstr ""

#. type: Table
#, no-wrap
msgid "40"
msgstr ""

#. type: Table
#, no-wrap
msgid "41"
msgstr ""

#. type: Table
#, no-wrap
msgid "42"
msgstr ""

#. type: Table
#, no-wrap
msgid "43"
msgstr ""

#. type: Table
#, no-wrap
msgid "G43"
msgstr ""

#. type: Table
#, no-wrap
msgid "G43.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "44"
msgstr ""

#. type: Table
#, no-wrap
msgid "45"
msgstr ""

#. type: Table
#, no-wrap
msgid "46"
msgstr ""

#. type: Table
#, no-wrap
msgid "47"
msgstr ""

#. type: Table
#, no-wrap
msgid "48"
msgstr ""

#. type: Table
#, no-wrap
msgid "49"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Table_of_Allocated_G-codes_50-59\n"
"[width=\"90%\",align=\"center\",options=\"header,strong,unbreakable\",cols=\"1*2^em,10*1<m\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|#  |Gxx |Gxx.1|Gxx.2|Gxx.3|Gxx.4|Gxx.5|Gxx.6|Gxx.7|Gxx.8|Gxx.9\n"
"|50 |    |     |     |     |     |     |     |     |     |\n"
"|51 |    |     |     |     |     |     |     |     |     |\n"
"|52 |    |     |     |     |     |     |     |     |     |\n"
"|53 |G53 |     |     |     |     |     |     |     |     |\n"
"|54 |G54 |     |     |     |     |     |     |     |     |\n"
"|55 |G55 |     |     |     |     |     |     |     |     |\n"
"|56 |G56 |     |     |     |     |     |     |     |     |\n"
"|57 |G57 |     |     |     |     |     |     |     |     |\n"
"|58 |G58 |     |     |     |     |     |     |     |     |\n"
"|59 |G59 |G59.1|G59.2|G59.3|     |     |     |     |     |"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Allocated_G-codes_60-69"
msgstr ""

#. type: Table
#, no-wrap
msgid "60"
msgstr ""

#. type: Table
#, no-wrap
msgid "G60"
msgstr ""

#. type: Table
#, no-wrap
msgid "61"
msgstr ""

#. type: Table
#, no-wrap
msgid "G61"
msgstr ""

#. type: Table
#, no-wrap
msgid "G61.1"
msgstr ""

#. type: Table
#, no-wrap
msgid "62"
msgstr ""

#. type: Table
#, no-wrap
msgid "63"
msgstr ""

#. type: Table
#, no-wrap
msgid "64"
msgstr ""

#. type: Table
#, no-wrap
msgid "G64"
msgstr ""

#. type: Table
#, no-wrap
msgid "65"
msgstr ""

#. type: Table
#, no-wrap
msgid "66"
msgstr ""

#. type: Table
#, no-wrap
msgid "67"
msgstr ""

#. type: Table
#, no-wrap
msgid "68"
msgstr ""

#. type: Table
#, no-wrap
msgid "69"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Table_of_Allocated_G-codes_70-79\n"
"[width=\"90%\",align=\"center\",options=\"header,strong,unbreakable\",cols=\"1*2^em,10*1<m\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|#  |Gxx |Gxx.1|Gxx.2|Gxx.3|Gxx.4|Gxx.5|Gxx.6|Gxx.7|Gxx.8|Gxx.9\n"
"|70 |    |     |     |     |     |     |     |     |     |\n"
"|71 |    |     |     |     |     |     |     |     |     |\n"
"|72 |    |     |     |     |     |     |     |     |     |\n"
"|73 |    |     |     |     |     |     |     |     |     |\n"
"|74 |    |     |     |     |     |     |     |     |     |\n"
"|75 |    |     |     |     |     |     |     |     |     |\n"
"|76 |G76 |     |     |     |     |     |     |     |     |\n"
"|77 |    |     |     |     |     |     |     |     |     |\n"
"|78 |    |     |     |     |     |     |     |     |     |\n"
"|79 |    |     |     |     |     |     |     |     |     |"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Allocated_G-codes_80-89"
msgstr ""

#. type: Table
#, no-wrap
msgid "80"
msgstr ""

#. type: Table
#, no-wrap
msgid "81"
msgstr ""

#. type: Table
#, no-wrap
msgid "82"
msgstr ""

#. type: Table
#, no-wrap
msgid "83"
msgstr ""

#. type: Table
#, no-wrap
msgid "84"
msgstr ""

#. type: Table
#, no-wrap
msgid "85"
msgstr ""

#. type: Table
#, no-wrap
msgid "86"
msgstr ""

#. type: Table
#, no-wrap
msgid "87"
msgstr ""

#. type: Table
#, no-wrap
msgid "88"
msgstr ""

#. type: Table
#, no-wrap
msgid "89"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Table_of_Allocated_G-codes_90-99\n"
"[width=\"90%\",align=\"center\",options=\"header,strong,unbreakable\",cols=\"1*2^em,10*1<m\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|#  |Gxx |Gxx.1|Gxx.2|Gxx.3|Gxx.4|Gxx.5|Gxx.6|Gxx.7|Gxx.8|Gxx.9\n"
"|90 |G90 |G90.1|     |     |     |     |     |     |     |\n"
"|91 |G91 |G91.1|     |     |     |     |     |     |     |\n"
"|92 |G92 |G92.1|G92.2|G92.3|     |     |     |     |     |\n"
"|93 |G93 |     |     |     |     |     |     |     |     |\n"
"|94 |G94 |     |     |     |     |     |     |     |     |\n"
"|95 |G95 |     |     |     |     |     |     |     |     |\n"
"|96 |G96 |     |     |     |     |     |     |     |     |\n"
"|97 |G97 |     |     |     |     |     |     |     |     |\n"
"|98 |G98 |     |     |     |     |     |     |     |     |\n"
"|99 |G99 |     |     |     |     |     |     |     |     |"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Currently unallocated M-codes:"
msgstr ""

#. type: Plain text
msgid ""
"These M-codes are currently undefined in the current implementation of "
"LinuxCNC and may be used to define new M-codes. (Developers who define new M-"
"codes in LinuxCNC are encouraged to remove them from this table.)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table_of_Unallocated_M-codes_00-99"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx5"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx6"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx7"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Mx9"
msgstr ""

#. type: Table
#, no-wrap
msgid "00-09"
msgstr ""

#. type: Table
#, no-wrap
msgid "10-19"
msgstr ""

#. type: Table
#, no-wrap
msgid "M10"
msgstr ""

#. type: Table
#, no-wrap
msgid "M11"
msgstr ""

#. type: Table
#, no-wrap
msgid "M12"
msgstr ""

#. type: Table
#, no-wrap
msgid "M13"
msgstr ""

#. type: Table
#, no-wrap
msgid "M14"
msgstr ""

#. type: Table
#, no-wrap
msgid "M15"
msgstr ""

#. type: Table
#, no-wrap
msgid "M16"
msgstr ""

#. type: Table
#, no-wrap
msgid "M17"
msgstr ""

#. type: Table
#, no-wrap
msgid "M18"
msgstr ""

#. type: Table
#, no-wrap
msgid "20-29"
msgstr ""

#. type: Table
#, no-wrap
msgid "M20"
msgstr ""

#. type: Table
#, no-wrap
msgid "M21"
msgstr ""

#. type: Table
#, no-wrap
msgid "M22"
msgstr ""

#. type: Table
#, no-wrap
msgid "M23"
msgstr ""

#. type: Table
#, no-wrap
msgid "M24"
msgstr ""

#. type: Table
#, no-wrap
msgid "M25"
msgstr ""

#. type: Table
#, no-wrap
msgid "M26"
msgstr ""

#. type: Table
#, no-wrap
msgid "M27"
msgstr ""

#. type: Table
#, no-wrap
msgid "M28"
msgstr ""

#. type: Table
#, no-wrap
msgid "M29"
msgstr ""

#. type: Table
#, no-wrap
msgid "30-39"
msgstr ""

#. type: Table
#, no-wrap
msgid "M31"
msgstr ""

#. type: Table
#, no-wrap
msgid "M32"
msgstr ""

#. type: Table
#, no-wrap
msgid "M33"
msgstr ""

#. type: Table
#, no-wrap
msgid "M34"
msgstr ""

#. type: Table
#, no-wrap
msgid "M35"
msgstr ""

#. type: Table
#, no-wrap
msgid "M36"
msgstr ""

#. type: Table
#, no-wrap
msgid "M37"
msgstr ""

#. type: Table
#, no-wrap
msgid "M38"
msgstr ""

#. type: Table
#, no-wrap
msgid "M39"
msgstr ""

#. type: Table
#, no-wrap
msgid "40-49"
msgstr ""

#. type: Table
#, no-wrap
msgid "M40"
msgstr ""

#. type: Table
#, no-wrap
msgid "M41"
msgstr ""

#. type: Table
#, no-wrap
msgid "M42"
msgstr ""

#. type: Table
#, no-wrap
msgid "M43"
msgstr ""

#. type: Table
#, no-wrap
msgid "M44"
msgstr ""

#. type: Table
#, no-wrap
msgid "M45"
msgstr ""

#. type: Table
#, no-wrap
msgid "M46"
msgstr ""

#. type: Table
#, no-wrap
msgid "M47"
msgstr ""

#. type: Table
#, no-wrap
msgid "50-59"
msgstr ""

#. type: Table
#, no-wrap
msgid "M54"
msgstr ""

#. type: Table
#, no-wrap
msgid "M55"
msgstr ""

#. type: Table
#, no-wrap
msgid "M56"
msgstr ""

#. type: Table
#, no-wrap
msgid "M57"
msgstr ""

#. type: Table
#, no-wrap
msgid "M58"
msgstr ""

#. type: Table
#, no-wrap
msgid "M59"
msgstr ""

#. type: Table
#, no-wrap
msgid "60-69"
msgstr ""

#. type: Table
#, no-wrap
msgid "70-79"
msgstr ""

#. type: Table
#, no-wrap
msgid "M74"
msgstr ""

#. type: Table
#, no-wrap
msgid "M75"
msgstr ""

#. type: Table
#, no-wrap
msgid "M76"
msgstr ""

#. type: Table
#, no-wrap
msgid "M77"
msgstr ""

#. type: Table
#, no-wrap
msgid "M78"
msgstr ""

#. type: Table
#, no-wrap
msgid "M79"
msgstr ""

#. type: Table
#, no-wrap
msgid "80-89"
msgstr ""

#. type: Table
#, no-wrap
msgid "M80"
msgstr ""

#. type: Table
#, no-wrap
msgid "M81"
msgstr ""

#. type: Table
#, no-wrap
msgid "M82"
msgstr ""

#. type: Table
#, no-wrap
msgid "M83"
msgstr ""

#. type: Table
#, no-wrap
msgid "M84"
msgstr ""

#. type: Table
#, no-wrap
msgid "M85"
msgstr ""

#. type: Table
#, no-wrap
msgid "M86"
msgstr ""

#. type: Table
#, no-wrap
msgid "M87"
msgstr ""

#. type: Table
#, no-wrap
msgid "M88"
msgstr ""

#. type: Table
#, no-wrap
msgid "M89"
msgstr ""

#. type: Table
#, no-wrap
msgid "90-99"
msgstr ""

#. type: Table
#, no-wrap
msgid "M90"
msgstr ""

#. type: Table
#, no-wrap
msgid "M91"
msgstr ""

#. type: Table
#, no-wrap
msgid "M92"
msgstr ""

#. type: Table
#, no-wrap
msgid "M93"
msgstr ""

#. type: Table
#, no-wrap
msgid "M94"
msgstr ""

#. type: Table
#, no-wrap
msgid "M95"
msgstr ""

#. type: Table
#, no-wrap
msgid "M96"
msgstr ""

#. type: Table
#, no-wrap
msgid "M97"
msgstr ""

#. type: Table
#, no-wrap
msgid "M98"
msgstr ""

#. type: Table
#, no-wrap
msgid "M99"
msgstr ""

#. type: Plain text
msgid ""
"All M-codes from `M100` to `M199` are user-defined M-codes already, and "
"should not be remapped."
msgstr ""

#. type: Plain text
msgid "All M-codes from `M200` to `M999` are available for remapping."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "readahead time and execution time"
msgstr ""

#. type: Plain text
msgid "foo"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "plugin/pickle hack"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Module, methods, classes, etc reference"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Introduction: Extending Task Execution"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Why would you want to change Task Execution?"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "A diagram: task, interp, iocontrol, UI (??)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Models of Task execution"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Traditional iocontrol/iocontrolv2 execution"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Redefining IO procedures"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Execution-time Python procedures"
msgstr ""

#.  setup examples
#. type: Title ==
#, no-wrap
msgid "A short survey of LinuxCNC program execution"
msgstr ""

#. type: Plain text
msgid ""
"To understand remapping of codes it might be helpful to survey the execution "
"of task and interpreter as far as it relates to remapping."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Interpreter state"
msgstr ""

#. type: Plain text
msgid ""
"Conceptually, the interpreter's state consist of variables which fall into "
"the following categories:"
msgstr ""

#. type: Plain text
msgid "configuration information (typically from INI file)"
msgstr ""

#. type: Plain text
msgid "the 'World model' - a representation of actual machine state"
msgstr ""

#. type: Plain text
msgid "modal state and settings"
msgstr ""

#. type: Plain text
msgid "interpreter execution state"
msgstr ""

#. type: Plain text
msgid ""
"refers to state which is 'carried over' between executing individual NGC "
"codes - for instance, once the spindle is turned on and the speed is set, it "
"remains at this setting until turned off. The same goes for many codes, like "
"feed, units, motion modes (feed or rapid)  and so forth."
msgstr ""

#. type: Plain text
msgid ""
"holds information about the block currently executed, whether we are in a "
"subroutine, interpreter variables etc."
msgstr ""

#. type: Plain text
msgid ""
"Most of this state is aggregated in a - fairly unsystematic - `structure "
"_setup` (see interp_internals.hh)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Task and Interpreter interaction, Queuing and Read-Ahead"
msgstr ""

#. type: Plain text
msgid ""
"The task part of LinuxCNC is responsible for coordinating actual machine "
"commands - movement, HAL interactions and so forth. It does not by itself "
"handle the RS274NGC language. To do so, task calls upon the interpreter to "
"parse and execute the next command - either from MDI or the current file."
msgstr ""

#. type: Plain text
msgid ""
"The interpreter execution generates canonical machine operations, which "
"actually move something. These are, however, not immediately executed but "
"put on a queue. The actual execution of these codes happens in the task part "
"of LinuxCNC: canon commands are pulled off that interpreter queue, and "
"executed resulting in actual machine movements."
msgstr ""

#. type: Plain text
msgid ""
"This means that typically the interpreter is far ahead of the actual "
"execution of commands - the parsing of the program might well be finished "
"before any noticeable movement starts. This behavior is called 'read-ahead'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Predicting the machine position"
msgstr ""

#. type: Plain text
msgid ""
"To compute canonical machine operations in advance during read ahead, the "
"interpreter must be able to predict the machine position after each line of "
"Gcode, and that is not always possible."
msgstr ""

#. type: Plain text
msgid ""
"Let's look at a simple example program which does relative moves (G91), and "
"assume the machine starts at x=0,y=0,z=0. Relative moves imply that the "
"outcome of the next move relies on the position of the previous one:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"N10 G91\n"
"N20 G0 X10 Y-5 Z20\n"
"N30 G1 Y20 Z-5\n"
"N40 G0 Z30\n"
"N50 M2\n"
msgstr ""

#. type: Plain text
msgid ""
"Here the interpreter can clearly predict machine positions for each line:"
msgstr ""

#. type: Plain text
msgid ""
"After N20: x=10 y=-5 z=20; after N30: x=10 y=15 z=15; after N40: x=10 y=15 "
"z=45"
msgstr ""

#. type: Plain text
msgid ""
"and so can parse the whole program and generate canonical operations well in "
"advance."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Queue-busters break position prediction"
msgstr ""

#. type: Plain text
msgid ""
"However, complete read ahead is only possible when the interpreter can "
"predict the position impact for *every* line in the program in advance. "
"Let's look at a modified example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"N10 G91\n"
"N20 G0 X10 Y-5 Z20\n"
"N30 G38.3 Z-10\n"
"N40 O100 if [#5070 EQ 0]\n"
"N50    G1 Y20 Z-5\n"
"N60 O100 else\n"
"N70    G0 Z30\n"
"N80 O100 endif\n"
"N90 G1 Z10\n"
"N95 M2\n"
msgstr ""

#. type: Plain text
msgid ""
"To pre-compute the move in N90, the interpreter would need to know where the "
"machine is after line N80 - and that depends on whether the probe command "
"succeeded or not, which is not known until it's actually executed."
msgstr ""

#. type: Plain text
msgid ""
"So, some operations are incompatible with further read-ahead. These are "
"called 'queue busters', and they are:"
msgstr ""

#. type: Plain text
msgid "reading a HAL pin's value with M66: value of HAL pin not predictable"
msgstr ""

#. type: Plain text
msgid "loading a new tool with M6: tool geometry not predictable"
msgstr ""

#. type: Plain text
msgid ""
"executing a probe with G38.n: final position and success/failure not "
"predictable"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "How queue-busters are dealt with"
msgstr ""

#. type: Plain text
msgid ""
"Whenever the interpreter encounters a queue-buster, it needs to stop read "
"ahead and wait until the relevant result is available. The way this works is:"
msgstr ""

#. type: Plain text
msgid ""
"when such a code is encountered, the interpreter returns a special return "
"code to task ('INTERP_EXECUTE_FINISH')."
msgstr ""

#. type: Plain text
msgid ""
"this return code signals to task to stop read ahead for now, execute all "
"queued canonical commands built up so far (including the last one, which is "
"the queue buster), and then 'synchronize the interpreter state with the "
"world model'. Technically, this means updating internal variables to reflect "
"HAL pin values, reload tool geometries after an M6, and convey results of a "
"probe."
msgstr ""

#. type: Plain text
msgid ""
"The interpreter's 'synch()' method is called by task and does just that - "
"read all the world model 'actual' values which are relevant for further "
"execution."
msgstr ""

#. type: Plain text
msgid ""
"at this point, task goes ahead and calls the interpreter for more read ahead "
"- until either the program ends or another queue-buster is encountered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Word order and execution order"
msgstr ""

#. type: Plain text
msgid ""
"One or several 'words' may be present on an NGC 'block' if they are "
"compatible (some are mutually exclusive and must be on different lines).  "
"The execution model however prescribes a strict ordering of execution of "
"codes, regardless of their appearance on the source line (<<gcode:order-of-"
"execution, G-Code Order of Execution>>)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Parsing"
msgstr ""

#. type: Plain text
msgid ""
"Once a line is read (in either MDI mode, or from the current NGC file), it "
"is parsed and flags and parameters are set in a 'struct block' (struct "
"_setup, member block1). This struct holds all information about the current "
"source line, but independent of different ordering of codes on the current "
"line: as long as several codes are compatible, any source ordering will "
"result in the same variables set in the struct block. Right after parsing, "
"all codes on a block are checked for compatibility."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Execution"
msgstr ""

#. type: Plain text
msgid ""
"After successful parsing the block is executed by execute_block(), and here "
"the different items are handled according to execution order."
msgstr ""

#. type: Plain text
msgid ""
"If a \"queue buster\" is found, a corresponding flag is set in the "
"interpreter state (toolchange_flag, input_flag, probe_flag) and the "
"interpreter returns an INTERP_EXECUTE_FINISH return value, signaling 'stop "
"readahead for now, and resynch' to the caller ('task').  If no queue busters "
"are found after all items are executed, INTERP_OK is returned, signalling "
"that read-ahead may continue."
msgstr ""

#. type: Plain text
msgid ""
"When read ahead continues after the synch, task starts executing interpreter "
"read() operations again.  During the next read operation, the above "
"mentioned flags are checked and corresponding variables are set (because the "
"a synch() was just executed, the values are now current). This means that "
"the next command already executes in the properly set variable context."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Procedure execution"
msgstr ""

#. type: Plain text
msgid ""
"O-word procedures complicate handling of queue busters a bit. A queue buster "
"might be found somewhere in a nested procedure, resulting in a semi-finished "
"procedure call when INTERP_EXECUTE_FINISH is returned. Task makes sure to "
"synchronize the world model, and continue parsing and execution as long as "
"there is still a procedure executing (call_level > 0)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "How tool change currently works"
msgstr ""

#. type: Plain text
msgid ""
"The actions happening in LinuxCNC are a bit involved, but it's necessary to "
"get the overall idea what currently happens before you set out to adapt "
"those workings to your own needs."
msgstr ""

#. type: Plain text
msgid ""
"Note that remapping an existing code completely disables all internal "
"processing for that code. That means that beyond your desired behavior - "
"probably described through an NGC Oword or Python procedure, you need to "
"replicate those internal actions of the interpreter which together result in "
"a complete replacement of the existing code. The prolog and epilog code is "
"the place to do this."
msgstr ""

#. type: Block title
#, no-wrap
msgid "How tool information is communicated"
msgstr ""

#. type: Plain text
msgid ""
"Several processes are 'interested' in tool information: task and its "
"interpreter, as well as the user interface. Also, the 'halui' process."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Tool information is held in the 'emcStatus' structure, which is\n"
" shared by all parties. One of its fields is the 'toolTable' array,\n"
" which holds the description as loaded from the tool table file (tool\n"
" number, diameter, frontangle, backangle and orientation for lathe,\n"
" tool offset information).\n"
msgstr ""

#. type: Plain text
msgid ""
"The authoritative source and only process actually 'setting' tool "
"information in this structure is the 'iocontrol' process. All others "
"processes just consult this structure. The interpreter holds actually a "
"local copy of the tool table."
msgstr ""

#. type: Plain text
msgid ""
"For the curious, the current emcStatus structure can be accessed by <<remap:"
"executing-python-statements,Python statements>>. The interpreter's "
"perception of the tool currently loaded for instance is accessed by:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" ;py,from interpreter import *\n"
" ;py,print this.tool_table[0]\n"
msgstr ""

#. type: Plain text
msgid "To see fields in the global emcStatus structure, try this:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" ;py,from emctask import *\n"
" ;py,print emcstat.io.tool.pocketPrepped\n"
" ;py,print emcstat.io.tool.toolInSpindle\n"
" ;py,print emcstat.io.tool.toolTable[0]\n"
msgstr ""

#. type: Plain text
msgid ""
"You need to have LinuxCNC started from a terminal window to see the results."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "How Tx (Prepare Tool) works"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Interpreter action on a Tx command"
msgstr ""

#. type: Plain text
msgid ""
"All the interpreter does is evaluate the toolnumber parameter, looks up its "
"corresponding tooldata index, remembers it in the `selected_pocket` variable "
"for later, and queues a canon command (SELECT_TOOL). See 'Interp::"
"convert_tool_select' in 'src/emc/rs274/interp_execute.cc'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Task action on SELECT_TOOL"
msgstr ""

#. type: Plain text
msgid ""
"When task gets around to handle a SELECT_TOOL, it sends a EMC_TOOL_PREPARE "
"message to the iocontrol process, which handles most tool-related actions in "
"LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"In the current implementation, task actually waits for iocontrol to complete "
"the changer positioning operation, which is not necessary IMO"
msgstr ""

#. type: Plain text
msgid ""
"it defeats the idea that changer preparation and code execution can proceed "
"in parallel."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Iocontrol action on EMC_TOOL_PREPARE"
msgstr ""

#. type: Plain text
msgid ""
"When iocontrol sees the select pocket command, it does the related HAL pin "
"wiggling - it sets the \"tool-prep-number\" pin to indicate which tool is "
"next, raises the \"tool-prepare\" pin, and waits for the \"tool-prepared\" "
"pin to go high."
msgstr ""

#. type: Plain text
msgid ""
"When the changer responds by asserting \"tool-prepared\", it considers the "
"prepare phase to be completed and signals task to continue. (again, this "
"'wait' istn strictly necessary IMO)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Building the prolog and epilog for Tx"
msgstr ""

#. type: Plain text
msgid ""
"See the Python functions `prepare_prolog` and `prepare_epilog` in `configs/"
"sim/axis/remap/toolchange/python/toolchange.py`."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "How M6 (Change tool) works"
msgstr ""

#. type: Plain text
msgid ""
"You need to understand this fully before you can adapt it. It is very "
"relevant to writing a prolog and epilog handler for a remapped M6. Remapping "
"an existing codes means you disable the internal steps taken normally, and "
"replicate them as far as needed for your own purposes."
msgstr ""

#. type: Plain text
msgid ""
"Even if you are not familiar with C, I suggest you look at the 'Interp::"
"convert_tool_change' code in 'src/emc/rs274/interp_convert.cc'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Interpreter action on a M6 command"
msgstr ""

#. type: Plain text
msgid "When the interpreter sees an M6, it:"
msgstr ""

#. type: Plain text
msgid ""
"checks whether a T command has already been executed (test 'settings-"
">selected_pocket' to be >= 0) and fail with 'Need tool prepared -Txx- for "
"toolchange' message if not."
msgstr ""

#. type: Plain text
msgid ""
"check for cutter compensation being active, and fail with 'Cannot change "
"tools with cutter radius compensation on' if so."
msgstr ""

#. type: Plain text
msgid ""
"stop the spindle except if the \"TOOL_CHANGE_WITH_SPINDLE_ON\" ini option is "
"set."
msgstr ""

#. type: Plain text
msgid ""
"generate a rapid 'Z up' move if if the \"TOOL_CHANGE_QUILL_UP\" ini option "
"is set."
msgstr ""

#. type: Plain text
msgid "move the A, B and C indexers if applicable"
msgstr ""

#. type: Plain text
msgid "generate rapid move to the G30 position"
msgstr ""

#. type: Plain text
msgid ""
"execute a CHANGE_TOOL canon command,with the selected pocket as parameter. "
"CHANGE_TOOL will:"
msgstr ""

#. type: Plain text
msgid "generate a rapid move to TOOL_CHANGE_POSITION if so set in ini"
msgstr ""

#. type: Plain text
msgid "enqueue an EMC_TOOL_LOAD NML message to task."
msgstr ""

#. type: Plain text
msgid "set the numberer parameters 5400-5413 according to the new tool"
msgstr ""

#. type: Plain text
msgid ""
"signal to task to stop calling the interpreter for readahead by returning "
"INTERP_EXECUTE_FINISH since M6 is a queue buster."
msgstr ""

#. type: Block title
#, no-wrap
msgid "What task does when it sees a CHANGE_TOOL command"
msgstr ""

#. type: Plain text
msgid ""
"Again, not much more than passing the buck to iocontrol by sending it an "
"EMC_TOOL_LOAD message, and waiting until iocontrol has done its thing."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Iocontrol action on EMC_TOOL_LOAD"
msgstr ""

#. type: Plain text
msgid "it asserts the \"tool-change\" pin"
msgstr ""

#. type: Plain text
msgid "it waits for the \"tool-changed\" pin to become active"
msgstr ""

#. type: Plain text
msgid "when that has happened:"
msgstr ""

#. type: Plain text
msgid "deassert \"tool-change\""
msgstr ""

#. type: Plain text
msgid "set \"tool-prep-number\" and \"tool-prep-pocket\" pins to zero"
msgstr ""

#. type: Plain text
msgid "execute the 'load_tool()' function with the pocket as parameter."
msgstr ""

#. type: Plain text
msgid ""
"The last step actually sets the tooltable entries in the 'emcStatus' "
"structure. The actual action taken depends on whether the RANDOM_TOOLCHANGER "
"ini option was set, but at the end of the process 'toolTable[0]' reflects "
"the tool currently in the spindle."
msgstr ""

#. type: Plain text
msgid "When that has happened:"
msgstr ""

#. type: Plain text
msgid "iocontrol signals task to go ahead"
msgstr ""

#. type: Plain text
msgid ""
"task tells the interpreter to execute a 'synch()' operation, to see what has "
"changed"
msgstr ""

#. type: Plain text
msgid ""
"the interpreter 'synch()' pulls all information from the world model needed, "
"among it the changed tool table."
msgstr ""

#. type: Plain text
msgid ""
"From there on, the interpreter has complete knowledge of the world model and "
"continues with read ahead."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Building the prolog and epilog for M6"
msgstr ""

#. type: Plain text
msgid ""
"See the Python functions `change_prolog` and `change_epilog` in `configs/sim/"
"axis/remap/toolchange/python/toolchange.py`."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "How M61 (Change tool number) works"
msgstr ""

#. type: Plain text
msgid ""
"M61 requires a non-negative `Q`parameter (tool number). If zero, this means "
"'unload tool', else 'set current tool number to Q'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Building the replacement for M61"
msgstr ""

#. type: Plain text
msgid ""
"An example Python redefinition for M61 can be found in the `set_tool_number` "
"function in `configs/sim/axis/remap/toolchange/python/toolchange.py`."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Status"
msgstr ""

#. type: Plain text
msgid ""
"the RELOAD_ON_CHANGE feature is fairly broken. Restart after changing a "
"Python file."
msgstr ""

#. type: Plain text
msgid ""
"M61 (remapped or not) is broken in iocontrol and requires iocontrol-v2 to "
"actually work."
msgstr ""

#.  A short survey of LinuxCNC execution
#.  Interpreter internals access - Python view
#.  Task internals access - Python view
#. type: Title ==
#, no-wrap
msgid "Changes"
msgstr ""

#. type: Plain text
msgid ""
"the method to return error messages and fail used to be 'self."
"set_errormsg(text)' followed by 'return INTERP_ERROR'. This has been "
"replaced by merely returning a string from a Python handler or oword "
"subroutine. This sets the error message and aborts the program. Previously "
"there was no clean way to abort a Python oword subroutine."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Debugging"
msgstr ""

#. type: Plain text
msgid ""
"In the '[EMC]' section of the ini file the 'DEBUG' parameter can be changed "
"to get various levels of debug messages when LinuxCNC is started from a "
"terminal."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Debug level, 0 means no messages. See src/emc/nml_intf/debugflags.h for others\n"
"DEBUG = 0x00000002 # configuration\n"
"DEBUG = 0x7FFFDEFF # no interp,oword\n"
"DEBUG = 0x00008000 # py only\n"
"DEBUG = 0x0000E000 # py + remap + Oword\n"
"DEBUG = 0x0000C002 # py + remap + config\n"
"DEBUG = 0x0000C100 # py + remap + Interpreter\n"
"DEBUG = 0x0000C140 # py + remap + Interpreter + NML msgs\n"
"DEBUG = 0x0000C040 # py + remap + NML\n"
"DEBUG = 0x0003E100 # py + remap + Interpreter + oword + signals + namedparams\n"
"DEBUG = 0x10000000 # EMC_DEBUG_USER1 - trace statements\n"
"DEBUG = 0x20000000 # EMC_DEBUG_USER2 - trap into Python debugger\n"
"DEBUG = 0x10008000 # USER1, PYTHON\n"
"DEBUG = 0x30008000 # USER1,USER2, PYTHON # USER2 will cause involute to try to connect to pydev\n"
"DEBUG = 0x7FFFFFFF # All debug messages\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Moveoff Component"
msgstr ""

#. type: Plain text
msgid ""
"The moveoff Hal component is a Hal-only method for implementing offsets.  "
"See the manpage ('$ man moveoff')  for the IMPORTANT limitations and "
"warnings."
msgstr ""

#. type: Plain text
msgid ""
"The moveoff component is used to offset joint positions using custom Hal "
"connections.  Implementing an offset-while-program-is-paused functionality "
"is supported with appropriate connections for the input pins.  Nine joints "
"are supported."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The axis offset pin values (offset-in-M) are continuously applied (respecting\n"
"limits on value, velocity, and acceleration) to the output pins\n"
"(offset-current-M, pos-plusoffset-M, fb-minusoffset-M) when both enabling input\n"
"pins (apply-offsets and move-enable) are TRUE.  The two enabling inputs are\n"
"anded internally.   A 'warning pin' is set and a message issued if the\n"
"apply-offsets pin is deasserted while offsets are applied.  The warning pin\n"
"remains TRUE until the offsets are removed or the apply-offsets pin is set.\n"
msgstr ""

#. type: Plain text
msgid ""
"Typically, the move-enable pin is connected to external controls and the "
"apply-offsets pin is connected to halui.program.is-paused (for offsets only "
"while paused) or set to TRUE (for continuously applied offsets)."
msgstr ""

#. type: Plain text
msgid ""
"Applied offsets are 'automatically returned' to zero (respecting limits)  "
"when either of the enabling inputs is deactivated.  The zero value tolerance "
"is specified by the epsilon input pin value."
msgstr ""

#. type: Plain text
msgid ""
"Waypoints are recorded when the moveoff componenent is enabled.  Waypoints "
"are managed with the waypoint-sample-secs and waypoint-threshold pins.  When "
"the backtrack-enable pin is TRUE, the auto-return path follows the recorded "
"waypoints.  When the memory available for waypoints is exhausted, offsets "
"are frozen and the waypoint-limit pin is asserted.  This restriction applies "
"regardless of the state of the backtrack-enable pin.  An enabling pin must "
"be deasserted to allow a return to the original (non-offset position)."
msgstr ""

#. type: Plain text
msgid ""
"Backtracking through waypoints results in 'slower' movement rates as the "
"moves are point-to-point respecting velocity and acceleration settings.  The "
"velocity and acceleration limit pins can be managed dynamically to control "
"offsets at all times."
msgstr ""

#. type: Plain text
msgid ""
"When backtrack-enable is FALSE, the auto-return move is *NOT* coordinated, "
"each axis returns to zero at its own rate.  If a controlled path is wanted "
"in this condition, each axis should be manually returned to zero before "
"deasserting an enabling pin."
msgstr ""

#. type: Plain text
msgid ""
"The waypoint-sample-secs, waypoint-threshold, and epsilon pins are evaluated "
"only when the component is idle."
msgstr ""

#. type: Plain text
msgid ""
"The offsets-applied output pin is provided to indicate the current state to "
"a GUI so that program resumption can be managed.  If the offset(s) are non-"
"zero when the apply-offsets pin is deasserted (for example when resuming a "
"program when offsetting during a pause), offsets are returned to zero "
"(respecting limits) and an 'Error' message is issued."
msgstr ""

#. type: Plain text
msgid ""
"If offsets are enabled and applied and the machine is turned off for any "
"reason, any 'external' Hal logic that manages the enabling pins and the "
"offset-in-M inputs is responsible for their state when the machine is "
"subsequently turned on again."
msgstr ""

#. type: Plain text
msgid ""
"This Hal-only means of offsetting is typically not known to LinuxCNC nor "
"available in GUI preview displays. *No protection is provided* for offset "
"moves that exceed soft limits managed by LinuxCNC. Since soft limits are not "
"honored, an offset move may encounter hard limits (or *CRASH* if there are "
"no limit switches). Use of the offset-min-M and offset-max-M inputs to limit "
"travel is recommended. Triggering a hard limit will turn off the machine -- "
"see *Caution* above."
msgstr ""

#. type: Plain text
msgid ""
"The offset-in-M values may be set with inifile settings, controlled by a "
"GUI, or managed by other Hal components and connections.  Fixed values may "
"be appropriate in simple cases where the direction and amount of offset is "
"well-defined but a control method is required to deactivate an enabling pin "
"in order to return offsets to zero.  GUIs may provide means for users to "
"set, increment, decrement, and accumulate offset values for each axis and "
"may set offset-in-M values to zero before deasserting an enabling pin."
msgstr ""

#. type: Plain text
msgid ""
"The default values for accel, vel, min, max, epsilon, waypoint-sample-secs, "
"and waypoint-threshold may not be suitable for any particular application.  "
"This Hal component is unaware of limits enforced elsewhere by LinuxCNC.  "
"Users should test usage in a simulator application and understand all "
"hazards before use on hardware."
msgstr ""

#. type: Plain text
msgid ""
"Sim configurations that demonstrate the component and a gui (moveoff_gui) "
"are located in:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "configs/sim/axis/moveoff     (axis-ui)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "configs/sim/touchy/ngcgui    (touchy-ui)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modifying an existing configuration"
msgstr ""

#. type: Plain text
msgid ""
"A system-provided halfile (LIB:hookup_moveoff.tcl) can be used to adapt an "
"existing configuration to use the moveoff component.  Additional ini file "
"settings support the use of a simple gui (moveoff_gui) for controlling "
"offsets."
msgstr ""

#. type: Plain text
msgid ""
"When the system halfile (LIB:hookup_moveoff.tcl) is properly specified in a "
"configuration ini file, it will:"
msgstr ""

#. type: Plain text
msgid ""
"Disconnect the original joint.N.motor-pos-cmd and joint.N.motor-pos-fb pin "
"connections"
msgstr ""

#. type: Plain text
msgid ""
"Load (loadrt) the moveoff component (using the name mv) with a personality "
"set to accommodate all axes identified in the ini file"
msgstr ""

#. type: Plain text
msgid "Add (addf) the moveoff component functions in the required sequence"
msgstr ""

#. type: Plain text
msgid ""
"Reconnect the joint.N.motor-pos-cmd and joint.N.motor-pos-fb pins to use the "
"moveoff component"
msgstr ""

#. type: Plain text
msgid ""
"Set the moveoff component operating parameters and limits for each axis in "
"accordance with additional ini file settings"
msgstr ""

#. type: Plain text
msgid ""
"Note: The moveoff_gui application supports configurations that use known "
"kinematics modules with KINEMATICS_TYPE=KINEMATICS_IDENTITY.  Supported "
"modules include: trivkins.  With identity kins, moveoff_gui assigns each "
"axis name specified with the command line parameter '-axes axisnames' to the "
"corresponding joint."
msgstr ""

#. type: Plain text
msgid "Modify an existing configuration as follows:"
msgstr ""

#. type: Plain text
msgid ""
"Make sure there is an ini file entry for [HAL]HALUI and create a new "
"[HAL]HALFILE entry for LIB:hookup_moveoff.tcl.  The entry for LIB:"
"hookup_moveoff.tcl should follow all HALFILE= entries for halfiles that "
"connect the pins for joint.N.motor-pos-cmd, joint.N.motor-pos-fb, and any "
"components connected to these pins (pid and encoder components in a servo "
"system for instance)."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALUI   = halui\n"
"HALFILE = existing_configuration_halfile_1\n"
"...\n"
"HALFILE = existing_configuration_halfile_n\n"
"HALFILE = LIB:hookup_moveoff.tcl\n"
msgstr ""

#. type: Plain text
msgid ""
"Add ini file entries for the per-axis settings for each axis in use (if an "
"entry is not defined, the corresponding entry from the [AXIS_n] section will "
"be used, if no entry is found, then the moveoff component default will be "
"used.  Note: Using component defaults or [AXIS_n] section values for per-"
"axis offset settings is NOT recommended."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[MOVEOFF_n]\n"
"MAX_LIMIT =\n"
"MIN_LIMIT =\n"
"MAX_VELOCITY =\n"
"MAX_ACCELERATION =\n"
msgstr ""

#. type: Plain text
msgid ""
"Add ini file entries for moveoff component settings (omit to use moveoff "
"defaults):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[MOVEOFF]\n"
"EPSILON =\n"
"WAYPOINT_SAMPLE_SECS =\n"
"WAYPOINT_THRESHOLD =\n"
msgstr ""

#. type: Plain text
msgid ""
"The moveoff_gui is used to make additional required connections and provide "
"a popup gui to:"
msgstr ""

#. type: Plain text
msgid "Provide a control togglebutton to Enable/Disable offsets"
msgstr ""

#. type: Plain text
msgid "Provide a control togglebutton to Enable/Disable backtracking"
msgstr ""

#. type: Plain text
msgid ""
"Provide control pushbuttons to Increment/Decrement/Zero each axis offset"
msgstr ""

#. type: Plain text
msgid "Display each axis offset current value"
msgstr ""

#. type: Plain text
msgid "Display current offset status (disabled, active, removing, etc)"
msgstr ""

#. type: Plain text
msgid ""
"The provided control buttons are optional depending upon the state of the "
"moveoff component move-enable pin.  Both a display and controls for enabling "
"offsetting are provided if the pin mv.move-enable is NOT connected when the "
"moveoff_gui is started.  For this case, the moveoff_gui manages the moveoff "
"component move-enable pin (named mv.move-enable) as well as the offsets (mv."
"move-offset-in-M)  and the backtracking enable (mv.backtrack-enable)"
msgstr ""

#. type: Plain text
msgid ""
"If the mv.move-enable pin IS connected when the moveoff_gui is started, the "
"moveoff_gui will provide a display but NO controls.  This mode supports "
"configurations that use a jog wheel or other methods of controlling the "
"offset inputs and the enable pins (mv.offset-in-M, mv.move-enable, mv."
"backtrack-enable)."
msgstr ""

#. type: Plain text
msgid ""
"The moveoff_gui makes the required connections for the moveoff component "
"pins: mv.power_on and mv.apply-offsets.  The mv.power_on pin is connected to "
"the motion.motion-enabled pin (a new signal is automatically created if "
"necessary).  The mv.apply-offsets is connected to halui.program.is-paused or "
"set to 1 depending upon the command line option -mode [ onpause | always ].  "
"A new signal is automatically created if necessary."
msgstr ""

#. type: Plain text
msgid ""
"To use the moveoff_gui, add an entry in the ini file [APPLICATIONS] section "
"as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[APPLICATIONS]\n"
"# Note: a delay (specified in seconds) may be required if connections\n"
"# are made using postgui halfiles ([HAL]POSTGUI_HALFILE=)\n"
"DELAY = 0\n"
"APP = moveoff_gui option1 option2 ...\n"
msgstr ""

#. type: Plain text
msgid ""
"When the halfile LIB:hookup_moveoff.tcl is used to load and connect the "
"moveoff component, the mv.move-enable pin will not be connected and local "
"controls provided by the moveoff_gui will be used.  This is the simplest "
"method to test or demonstrate the moveoff component when modifying an "
"existing ini configuration."
msgstr ""

#. type: Plain text
msgid ""
"To enable external controls while using the moveoff_gui display for offset "
"values and status, halfiles that follow LIB:hookup_moveoff.tcl must make "
"additional connections.  For example, the supplied demonstration configs "
"(configs/sim/axis/moveoff/*.ini) use a simple system halfile (named LIB:"
"moveoff_external.hal) to connect the mv.move-enable,mv.offset-in-M, and mv."
"bactrack-enable pins to signals:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALUI = halui\n"
"...\n"
"HALFILE = LIB:hookup_moveoff.tcl\n"
"HALFILE = LIB:moveoff_external.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"The connections made by LIB:moveoff_external.hal (for a three axis "
"configuration) are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net external_enable    mv.move-enable\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net external_offset_0 mv.offset-in-0\n"
"net external_offset_1 mv.offset-in-1\n"
"net external_offset_2 mv.offset-in-2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net external_backtrack_en mv.backtrack-enable\n"
msgstr ""

#. type: Plain text
msgid ""
"These signals (external_enable, external_offset_M, external_backtrack_en) "
"may be managed by subsequent HALFILES (including POSTGUI_HALFILEs) to "
"provide customized control of the component while using the moveoff_gui "
"display for current offset values and offset status."
msgstr ""

#. type: Plain text
msgid ""
"The moveoff_gui is configured with command line options.  For details on the "
"operation of moveoff_gui, see the man page:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ man moveoff_gui\n"
msgstr ""

#. type: Plain text
msgid ""
"For a brief listing of command line options for moveoff_gui, use the command "
"line help option:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ moveoff_gui --help\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Usage:\n"
"moveoff_gui [Options]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Options:\n"
"    [--help | -? | -- -h ]  (This text)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    [-mode [onpause | always]]  (default: onpause)\n"
"                                  (onpause: show gui when program paused)\n"
"                                  (always:  show gui always)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    [-axes axisnames]       (default: xyz (no spaces))\n"
"                              (letters from set of: x y z a b c u v w)\n"
"                              (example: -axes z)\n"
"                              (example: -axes xz)\n"
"                              (example: -axes xyz)\n"
"    [-inc incrementvalue]   (default: 0.001 0.01 0.10 1.0 )\n"
"                              (specify one per -inc (up to 4) )\n"
"                              (example: -inc 0.001 -inc 0.01 -inc 0.1 )\n"
"    [-size integer]         (default: 14\n"
"                              (Overall gui popup size is based on font size)\n"
"    [-loc center|+x+y]      (default: center)\n"
"                              (example: -loc +10+200)\n"
"    [-autoresume]           (default: notused)\n"
"                              (resume program when move-enable deasserted)\n"
"    [-delay delay_secs]     (default: 5 (resume delay))\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Options for special cases:\n"
"    [-noentry]              (default: notused)\n"
"                              (don't create entry widgets)\n"
"    [-no_resume_inhibit]    (default: notused)\n"
"                              (do not use a resume-inhibit-pin)\n"
"    [-no_pause_requirement] (default: notused)\n"
"                              (no check for halui.program.is-paused)\n"
"    [-no_cancel_autoresume] (default: notused)\n"
"                              (useful for retraact offsets with simple)\n"
"                              (external control                       )\n"
"    [-no_display]           (default: notused)\n"
"                              (Use when both external controls and displays)\n"
"                              (are in use (see Note))                      )\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Note: If the moveoff move-enable pin (mv.move-enable) is connected when\n"
"      moveoff_gui is started, external controls are required and only\n"
"      displays are provided.\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Stepper Configuration"
msgstr ""

#. type: Plain text
msgid ""
"The preferred way to set up a standard stepper machine is with the Step "
"Configuration Wizard. See the <<cha:stepconf-wizard,Stepper Configuration "
"Wizard>> Chapter."
msgstr ""

#. type: Plain text
msgid ""
"This chapter describes some of the more common settings for manually setting "
"up a stepper based system. These systems are using stepper motors with "
"drives that accept step & direction signals."
msgstr ""

#. type: Plain text
msgid ""
"It is one of the simpler setups, because the motors run open-loop (no "
"feedback comes back from the motors), yet the system needs to be configured "
"properly so the motors don't stall or lose steps."
msgstr ""

#. type: Plain text
msgid ""
"Most of this chapter is based on a sample config released along with "
"LinuxCNC. The config is called stepper_inch, and can be found by running the "
"<<cha:running-emc,Configuration Picker>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Maximum step rate"
msgstr ""

#. type: Plain text
msgid ""
"With software step generation, the maximum step rate is one step per two "
"BASE_PERIODs for step-and-direction output. The maximum requested step rate "
"is the product of an axis' MAX_VELOCITY and its INPUT_SCALE.  If the "
"requested step rate is not attainable, following errors will occur, "
"particularly during fast jogs and G0 moves."
msgstr ""

#. type: Plain text
msgid ""
"If your stepper driver can accept quadrature input, use this mode.  With a "
"quadrature signal, one step is possible for each BASE_PERIOD, doubling the "
"maximum step rate."
msgstr ""

#. type: Plain text
msgid ""
"The other remedies are to decrease one or more of: the BASE_PERIOD (setting "
"this too low will cause the machine to become unresponsive or even lock up), "
"the INPUT_SCALE (if you can select different step sizes on your stepper "
"driver, change pulley ratios, or leadscrew pitch), or the MAX_VELOCITY and "
"STEPGEN_MAXVEL."
msgstr ""

#. type: Plain text
msgid ""
"If no valid combination of BASE_PERIOD, INPUT_SCALE, and MAX_VELOCITY is "
"acceptable, then consider using hardware step generation (such as with the "
"LinuxCNC-supported Universal Stepper Controller, Mesa cards, and others.)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pinout"
msgstr ""

#. type: Plain text
msgid ""
"One of the major flaws in LinuxCNC was that you couldn't specify the pinout "
"without recompiling the source code. LinuxCNC is far more flexible, and now "
"(thanks to the Hardware Abstraction Layer) you can easily specify which "
"signal goes where. See the <<cha:basic-hal-reference,HAL Basics>> for more "
"information on HAL."
msgstr ""

#. type: Plain text
msgid ""
"As it is described in the HAL Introduction and tutorial, we have signals, "
"pins and parameters inside the HAL."
msgstr ""

#. type: Plain text
msgid "We are presenting one axis to keep it short, all others are similar."
msgstr ""

#. type: Plain text
msgid "The ones relevant for our pinout are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"signals: Xstep, Xdir & Xen\n"
"pins: parport.0.pin-XX-out & parport.0.pin-XX-in\n"
msgstr ""

#. type: Plain text
msgid ""
"Depending on what you have chosen in your .ini file you are using either "
"standard_pinout.hal or xylotex_pinout.hal. These are two files that instruct "
"the HAL how to link the various signals & pins. Further on we'll investigate "
"the standard_pinout.hal."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Standard Pinout HAL"
msgstr ""

#. type: Plain text
msgid "This file contains several HAL commands, and usually looks like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# standard pinout config file for 3-axis steppers\n"
"# using a parport for I/O\n"
"#\n"
"# first load the parport driver\n"
"loadrt hal_parport cfg=\"0x0378\"\n"
"#\n"
"# next connect the parport functions to threads\n"
"# read inputs first\n"
"addf parport.0.read base-thread 1\n"
"# write outputs last\n"
"addf parport.0.write base-thread -1\n"
"#\n"
"# finally connect physical pins to the signals\n"
"net Xstep => parport.0.pin-03-out\n"
"net Xdir  => parport.0.pin-02-out\n"
"net Ystep => parport.0.pin-05-out\n"
"net Ydir  => parport.0.pin-04-out\n"
"net Zstep => parport.0.pin-07-out\n"
"net Zdir  => parport.0.pin-06-out\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# create a signal for the estop loopback\n"
"net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# create signals for tool loading loopback\n"
"net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared\n"
"net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect \"spindle on\" motion controller pin to a physical pin\n"
"net spindle-on spindle.0.on => parport.0.pin-09-out\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### You might use something like this to enable chopper drives when machine ON\n"
"### the Xen signal is defined in core_stepper.hal\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# net Xen => parport.0.pin-01-out\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### If you want active low for this pin, invert it like this:\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# setp parport.0.pin-01-out-invert 1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### A sample home switch on the X axis (axis 0).  make a signal,\n"
"### link the incoming parport pin to the signal, then link the signal\n"
"### to LinuxCNC's axis 0 home switch input pin\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# net Xhome parport.0.pin-10-in => joint.0.home-sw-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### Shared home switches all on one parallel port pin?\n"
"### that's ok, hook the same signal to all the axes, but be sure to \n"
"### set HOME_IS_SHARED and HOME_SEQUENCE in the ini file.\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# net homeswitches <= parport.0.pin-10-in\n"
"# net homeswitches => joint.0.home-sw-in\n"
"# net homeswitches => joint.1.home-sw-in\n"
"# net homeswitches => joint.2.home-sw-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### Sample separate limit switches on the X axis (axis 0)\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# net X-neg-limit parport.0.pin-11-in => joint.0.neg-lim-sw-in\n"
"# net X-pos-limit parport.0.pin-12-in => joint.0.pos-lim-sw-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"###\n"
"### Just like the shared home switches example, you can wire together\n"
"### limit switches.  Beware if you hit one, LinuxCNC will stop but can't tell\n"
"### you which switch/axis has faulted.  Use caution when recovering from this.\n"
"###\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# net Xlimits parport.0.pin-13-in => joint.0.neg-lim-sw-in joint.0.pos-lim-sw-in\n"
msgstr ""

#. type: Plain text
msgid ""
"The lines starting with '#' are comments, and their only purpose is to guide "
"the reader through the file."
msgstr ""

#. type: Plain text
msgid ""
"There are a couple of operations that get executed when the standard_pinout."
"hal gets executed/interpreted:"
msgstr ""

#. type: Plain text
msgid "The Parport driver gets loaded (see the <<cha:parport,Parport Chapter>>"
msgstr ""

#. type: Plain text
msgid "for details)"
msgstr ""

#. type: Plain text
msgid "The read & write functions of the parport driver get assigned to the"
msgstr ""

#. type: Plain text
msgid ""
"base thread footnote:[the fastest thread in the LinuxCNC setup, usually the "
"code gets executed every few tens of microseconds]"
msgstr ""

#. type: Plain text
msgid "The step & direction signals for axes X,Y,Z get linked to pins on the"
msgstr ""

#. type: Plain text
msgid ""
"Further I/O signals get connected (estop loopback, toolchanger loopback)"
msgstr ""

#. type: Plain text
msgid "A spindle-on signal gets defined and linked to a parport pin"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Changing the standard_pinout.hal"
msgstr ""

#. type: Plain text
msgid ""
"If you want to change the standard_pinout.hal file, all you need is a text "
"editor. Open the file and locate the parts you want to change."
msgstr ""

#. type: Plain text
msgid ""
"If you want for example to change the pin for the X-axis Step & Directions "
"signals, all you need to do is to change the number in the 'parport.0.pin-XX-"
"out' name:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net Xstep parport.0.pin-03-out \n"
"net Xdir  parport.0.pin-02-out\n"
msgstr ""

#. type: Plain text
msgid "can be changed to:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net Xstep parport.0.pin-02-out \n"
"net Xdir  parport.0.pin-03-out\n"
msgstr ""

#. type: Plain text
msgid "or basically any other 'out' pin you like."
msgstr ""

#. type: Plain text
msgid ""
"Hint: make sure you don't have more than one signal connected to the same "
"pin."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Changing polarity of a signal"
msgstr ""

#. type: Plain text
msgid ""
"If external hardware expects an âactive lowâ signal, set the corresponding '-"
"invert' parameter. For instance, to invert the spindle control signal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp parport.0.pin-09-invert TRUE\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adding PWM Spindle Speed Control"
msgstr ""

#. type: Plain text
msgid ""
"If your spindle can be controlled by a PWM signal, use the 'pwmgen' "
"component to create the signal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt pwmgen output_type=0\n"
"addf pwmgen.update servo-thread\n"
"addf pwmgen.make-pulses base-thread\n"
"net spindle-speed-cmd spindle.0.speed-out => pwmgen.0.value\n"
"net spindle-on spindle.0.on => pwmgen.0.enable\n"
"net spindle-pwm pwmgen.0.pwm => parport.0.pin-09-out\n"
"setp pwmgen.0.scale 1800 # Change to your spindleâs top speed in RPM\n"
msgstr ""

#. type: Plain text
msgid ""
"This assumes that the spindle controller's response to PWM is simple: 0% PWM "
"gives 0 RPM, 10% PWM gives 180 RPM, etc. If there is a minimum PWM required "
"to get the spindle to turn, follow the example in the 'nist-lathe' sample "
"configuration to use a 'scale' component."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adding an enable signal"
msgstr ""

#. type: Plain text
msgid ""
"Some amplifiers (drives) require an enable signal before they accept and "
"command movement of the motors. For this reason there are already defined "
"signals called 'Xen', 'Yen', 'Zen'."
msgstr ""

#. type: Plain text
msgid "To connect them use the following example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net Xen parport.0.pin-08-out\n"
msgstr ""

#. type: Plain text
msgid ""
"You can either have one single pin that enables all drives; or several, "
"depending on the setup you have. Note, however, that usually when one axis "
"faults, all the other drives will be disabled as well, so having only one "
"enable signal / pin for all drives is a common practice."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "External ESTOP button"
msgstr ""

#. type: Plain text
msgid ""
"The standard_pinout.hal file assumes no external ESTOP button. For more "
"information on an external E-Stop see the estop_latch man page."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Python Virtual Control Panel"
msgstr ""

#. type: Plain text
msgid ""
"The PyVCP (Python Virtual Control Panel) is designed to give the integrator "
"the ability to customize the AXIS interface with buttons and indicators to "
"do special tasks."
msgstr ""

#. type: Plain text
msgid ""
"Hardware machine control panels can use up a lot of I/O pins and can be "
"expensive. That is where Virtual Control Panels have the advantage as well "
"as it cost nothing to build a PyVCP."
msgstr ""

#. type: Plain text
msgid ""
"Virtual Control Panels can be used for testing or monitoring things to "
"temporarily replace real I/O devices while debugging ladder logic, or to "
"simulate a physical panel before you build it and wire it to an I/O board."
msgstr ""

#. type: Plain text
msgid "The following graphic displays many of the PyVCP widgets."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_group.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Panel Construction"
msgstr ""

#. type: Plain text
msgid ""
"The layout of a PyVCP panel is specified with an XML file that contains "
"widget tags between <pyvcp> and </pyvcp>. For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp>\n"
"    <label text=\"This is a LED indicator\"/>\n"
"    <led/>\n"
"</pyvcp>\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_mypanel.png"
msgstr ""

#. type: Plain text
msgid "If you place this text in a file called tiny.xml, and run"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd loadusr pyvcp -c mypanel tiny.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"PyVCP will create the panel for you, which includes two widgets, a Label "
"with the text 'This is a LED indicator', and a LED, used for displaying the "
"state of a HAL BIT signal. It will also create a HAL component named "
"'mypanel' (all widgets in this panel are connected to pins that start with "
"'mypanel.'). Since no <halpin> tag was present inside the <led> tag, PyVCP "
"will automatically name the HAL pin for the LED widget mypanel.led.0"
msgstr ""

#. type: Plain text
msgid ""
"For a list of widgets and their tags and options, see the widget reference "
"below."
msgstr ""

#. type: Plain text
msgid ""
"Once you have created your panel, connecting HAL signals to and from the "
"PyVCP pins is done with the halcmd:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net <signal-name> <pin-name> <opt-direction> <opt-pin-name>signal-name\n"
msgstr ""

#. type: Plain text
msgid ""
"If you are new to HAL, the HAL basics chapter in the Integrator Manual is a "
"good place to start."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Security"
msgstr ""

#. type: Plain text
msgid ""
"Parts of PyVCP files are evaluated as Python code, and can take any action "
"available to Python programs. Only use PyVCP .xml files from a source that "
"you trust."
msgstr ""

#. type: Plain text
msgid ""
"Since AXIS uses the same GUI toolkit (Tkinter) as PyVCP, it is possible to "
"include a PyVCP panel at either the right side or the bottom of the AXIS "
"user interface. A typical example is explained below."
msgstr ""

#. type: Plain text
msgid ""
"Place your PyVCP XML file describing the panel in the same directory where "
"your .ini file is. Say we we want to display the current spindle speed using "
"a Bar widget. Place the following in a file called spindle.xml:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp>\n"
"    <label>\n"
"        <text>\"Spindle speed:\"</text>\n"
"    </label>\n"
"    <bar>\n"
"        <halpin>\"spindle-speed\"</halpin>\n"
"        <max_>5000</max_>\n"
"    </bar>\n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid ""
"Here we've made a panel with a Label and a Bar widget, specified that the "
"HAL pin connected to the Bar should be named 'spindle-speed', and set the "
"maximum value of the bar to 5000 (see widget reference below for all "
"options). To make AXIS aware of this file, and call it at start up, we need "
"to specify the following in the [DISPLAY] section of the"
msgstr ""

#. type: Block title
#, no-wrap
msgid "ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "PYVCP = spindle.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"If the panel should appear at the bottom of the AXIS user interface then we "
"need to specify the following in the [DISPLAY] section of the"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "PYVCP_POSITION = BOTTOM\n"
msgstr ""

#. type: Plain text
msgid ""
"Anything other than BOTTOM or omitting this variable will place the PYVCP "
"panel at the right."
msgstr ""

#. type: Plain text
msgid ""
"To make our widget actually display the spindle-speed it needs to be hooked "
"up to the appropriate HAL signal. A .hal file that will be run once AXIS and "
"PyVCP have started can be specified in the [HAL] section of the .ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "POSTGUI_HALFILE = spindle_to_pyvcp.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"This change will run the HAL commands specified in 'spindle_to_pyvcp.hal'. "
"In our example the contents could look like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net spindle-rpm-filtered => pyvcp.spindle-speed\n"
msgstr ""

#. type: Plain text
msgid ""
"assuming that a signal called 'spindle-rpm-filtered' already exists.  Note "
"that when running together with AXIS, all PyVCP widget HAL pins have names "
"that start with 'pyvcp.'."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_axis_lathe.png"
msgstr ""

#. type: Plain text
msgid ""
"This is what the newly created PyVCP panel should look like in AXIS.  The "
"'sim/lathe' configuration is already configured this way."
msgstr ""

#. type: Plain text
msgid ""
"This section describes how PyVCP panels can be displayed on their own with "
"or without LinuxCNC's machine controller."
msgstr ""

#. type: Plain text
msgid "To load a stand alone PyVCP panel with LinuxCNC use these commands:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn mypanel pyvcp -g WxH+X+Y -c mypanel <path/>panel_file.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"You would use this if you wanted a floating panel or a panel with a GUI "
"other than AXIS."
msgstr ""

#. type: Plain text
msgid "'-WnÂ panelname' -"
msgstr ""

#. type: Plain text
msgid ""
"makes HAL wait for the component 'panelname' to finish loading ('become "
"ready' in HAL speak) before processing more HAL commands. This is important "
"because PyVCP panels export HAL pins, and other HAL components will need "
"them present to connect to them. Note the capital W and lowercase n. If you "
"use the -Wn option you must use the -c option to name the panel."
msgstr ""

#. type: Plain text
msgid "'pyvcpÂ < -g>Â < -c>Â panel.xml' -"
msgstr ""

#. type: Plain text
msgid ""
"builds the panel with the optional geometry and/or panelname from the xml "
"panel file. The panel.xml can be any name that ends in .xml. The .xml file "
"is the file that describes how to build the panel. You must add the path "
"name if the panel is not in the directory that the HAL script is in."
msgstr ""

#. type: Plain text
msgid "'-gÂ <WxH><+X+Y>' -"
msgstr ""

#. type: Plain text
msgid ""
"specifies the geometry to be used when constructing the panel. The syntax is "
"'Width x Height + X Anchor + Y Anchor'. You can set the size or position or "
"both. The anchor point is the upper left corner of the panel. An example is -"
"g 250x500+800+0 This sets the panel at 250 pixels wide, 500 pixels tall, and "
"anchors it at X800 Y0."
msgstr ""

#. type: Plain text
msgid "'-cÂ panelname' -"
msgstr ""

#. type: Plain text
msgid ""
"tells PyVCP what to call the component and also the title of the window. The "
"panelname can be any name without spaces."
msgstr ""

#. type: Plain text
msgid "To load a 'stand alone' PyVCP panel without LinuxCNC use this command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn mypanel pyvcp -g 250x500+800+0 -c mypanel mypanel.xml\n"
msgstr ""

#. type: Plain text
msgid "The minimum command to load a pyvcp panel is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr pyvcp mypanel.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"You would use this if you want a panel without LinuxCNC's machine controller "
"such as for testing or a standalone DRO."
msgstr ""

#. type: Plain text
msgid ""
"The loadusr command is used when you also load a component that will stop "
"HAL from closing until it's done. If you loaded a panel and then loaded "
"Classic Ladder using 'loadusr -w classicladder', CL would hold HAL open (and "
"the panel)Â  until you closed CL.  The '-Wn' above means wait for the "
"component '-Wn \"name\"' to become ready.  ('name' can be any name. Note the "
"capital W and lowercase n.)  The -c tells PyVCP to build a panel with the "
"name 'panelname' using the info in 'panel_file_name.xml'.  The name "
"'panel_file_name.xml' can be any name but must end in .xml - it is the file "
"that describes how to build the panel. You must add the path name if the "
"panel is not in the directory that the HAL script is in."
msgstr ""

#. type: Plain text
msgid ""
"An optional command to use if you want the panel to stop HAL from continuing "
"commands / shutting down. After loading any other components you want the "
"last HAL command to be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "waituser panelname\n"
msgstr ""

#. type: Plain text
msgid ""
"This tells HAL to wait for component 'panelname' to close before continuing "
"HAL commands. This is usually set as the last command so that HAL shuts down "
"when the panel is closed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Widgets"
msgstr ""

#. type: Plain text
msgid ""
"HAL signals come in two variants, bits and numbers. Bits are off/on signals. "
"Numbers can be 'float', 's32' or 'u32'. For more information on HAL data "
"types see the <<sec:hal-data,HAL Data>> section. The PyVCP widget can either "
"display the value of the signal with an indicator widget, or modify the "
"signal value with a control widget. Thus there are four classes of PyVCP "
"widgets that you can connect to a HAL signal. A fifth class of helper "
"widgets allow you to organize and label your panel."
msgstr ""

#. type: Plain text
msgid "Widgets for indicating 'bit' signals: led, rectled"
msgstr ""

#. type: Plain text
msgid "Widgets for controlling 'bit' signals: button, checkbutton, radiobutton"
msgstr ""

#. type: Plain text
msgid "Widgets for indicating 'number' signals: number, s32, u32, bar, meter"
msgstr ""

#. type: Plain text
msgid "Widgets for controlling 'number' signals: spinbox, scale, jogwheel"
msgstr ""

#. type: Plain text
msgid "Helper widgets: hbox, vbox, table, label, labelframe"
msgstr ""

#. type: Plain text
msgid ""
"Each widget is described briefly, followed by the markup used, and a screen "
"shot. All tags inside the main widget tag are optional."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "General Notes"
msgstr ""

#. type: Plain text
msgid ""
"At the present time, both a tag-based and an attribute-based syntax are "
"supported. For instance, the following XML fragments are treated identically:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<led halpin=\"my-led\"/>\n"
msgstr ""

#. type: Plain text
msgid "and"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<led><halpin>\"my-led\"</halpin></led>\n"
msgstr ""

#. type: Plain text
msgid ""
"When the attribute-based syntax is used, the following rules are used to "
"turn the attributes value into a Python value:"
msgstr ""

#. type: Plain text
msgid ""
"If the first character of the attribute is one of the following, it is "
"evaluated as a Python expression: '{([\"''"
msgstr ""

#. type: Plain text
msgid "If the string is accepted by int(), the value is treated as an integer"
msgstr ""

#. type: Plain text
msgid ""
"If the string is accepted by float(), the value is treated as floating-point"
msgstr ""

#. type: Plain text
msgid "Otherwise, the string is accepted as a string."
msgstr ""

#. type: Plain text
msgid ""
"When the tag-based syntax is used, the text within the tag is always "
"evaluated as a Python expression."
msgstr ""

#. type: Plain text
msgid "The examples below show a mix of formats."
msgstr ""

#. type: Plain text
msgid "To add a comment use the xml syntax for a comment."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<!-- My Comment -->\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Editing the XML file"
msgstr ""

#. type: Plain text
msgid ""
"Edit the XML file with a text editor. In most cases you can right click on "
"the file and select 'open with text editor' or similar."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Colors"
msgstr ""

#. type: Plain text
msgid ""
"Colors can be specified using the X11 rgb colors by name 'gray75' or hex "
"'#0000ff'. A complete list is located here http://sedition.com/perl/rgb."
"html[http://sedition.com/perl/rgb.html]."
msgstr ""

#. type: Plain text
msgid "Common Colors (colors with numbers indicate shades of that color)"
msgstr ""

#. type: Plain text
msgid "white"
msgstr ""

#. type: Plain text
msgid "black"
msgstr ""

#. type: Plain text
msgid "blue and blue1 - 4"
msgstr ""

#. type: Plain text
msgid "cyan and cyan1 - 4"
msgstr ""

#. type: Plain text
msgid "green and green1 - 4"
msgstr ""

#. type: Plain text
msgid "yellow and yellow1 - 4"
msgstr ""

#. type: Plain text
msgid "red and red1 - 4"
msgstr ""

#. type: Plain text
msgid "purple and purple1 - 4"
msgstr ""

#. type: Plain text
msgid "gray and gray0 - 100"
msgstr ""

#. type: Plain text
msgid ""
"HAL pins provide a means to 'connect' the widget to something. Once you "
"create a HAL pin for your widget you can 'connect' it to another HAL pin "
"with a 'net' command in a .hal file. For more information on the 'net' "
"command see the <<sec:hal-commands,HAL Commands>> section."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Label"
msgstr ""

#. type: Plain text
msgid "A label is a way to add text to your panel."
msgstr ""

#. type: Plain text
msgid "'<label></label>' - creates a label"
msgstr ""

#. type: Plain text
msgid ""
"'<text>\"text\"</text>' - the text to put in your label, a blank label can "
"be used as a spacer to align other objects."
msgstr ""

#. type: Plain text
msgid ""
"'<font>(\"Helvetica\",20)</font>' - specify the font and size of the text"
msgstr ""

#. type: Plain text
msgid ""
"'<relief>FLAT</relief>' - specify the border around the label ('FLAT', "
"'RAISED', 'SUNKEN') default is 'FLAT'"
msgstr ""

#. type: Plain text
msgid ""
"'<bd>n</bd>' - where 'n' is the border width when 'RAISED' or 'SUNKEN' "
"borders are used."
msgstr ""

#. type: Plain text
msgid ""
"'<padx>n</padx>' - where 'n' is the amount of extra horizontal extra space."
msgstr ""

#. type: Plain text
msgid ""
"'<pady>n</pady>' - where 'n' is the amount of extra vertical extra space."
msgstr ""

#. type: Plain text
msgid ""
"The label has an optional disable pin that is created when you add "
"'<disable_pin>True</disable_pin>'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<label>\n"
"    <text>\"This is a Label:\"</text>\n"
"    <font>(\"Helvetica\",20)</font>\n"
"</label>\n"
msgstr ""

#. type: Plain text
msgid "The above code produced this example."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_label.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Multi_Label"
msgstr ""

#. type: Plain text
msgid "An extension of the text label."
msgstr ""

#. type: Plain text
msgid ""
"Selectable text label, can display up to 6 label legends when associated bit "
"pin is activated."
msgstr ""

#. type: Plain text
msgid ""
"Attach each legend pin to a signal and get a descriptive label when the "
"signal is TRUE."
msgstr ""

#. type: Plain text
msgid ""
"If more than one legend pin is TRUE, the highest numbered 'TRUE' legend will "
"be displayed."
msgstr ""

#. type: Plain text
msgid ""
"If a disable pin is created with '<disable_pin>True</disable_pin>' and that "
"pin is set to true the label changes to a grayed out state."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<multilabel>\n"
"    <legends>[\"Label1\", \"Label2\", \"Label3\", \"Label4\", \"Label5\", \"Label6\"]</legends>\n"
"    <font>(\"Helvetica\",20)</font>\n"
"    <disable_pin>True</disable_pin>\n"
"</multilabel>\n"
msgstr ""

#. type: Plain text
msgid "The above example would create the following pins."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pyvcp.multilabel.0.disable\n"
"pyvcp.multilabel.0.legend0\n"
"pyvcp.multilabel.0.legend1\n"
"pyvcp.multilabel.0.legend2\n"
"pyvcp.multilabel.0.legend3\n"
"pyvcp.multilabel.0.legend4\n"
"pyvcp.multilabel.0.legend5\n"
msgstr ""

#. type: Plain text
msgid ""
"If you have more than one multilabel the pins created would increment the "
"number like this 'pyvcp.multilabel.1.legend1'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LEDs"
msgstr ""

#. type: Plain text
msgid ""
"A LED is used to indicate the status of a 'bit' halpin. The LED color will "
"be on_color when the halpin is true, and off_color otherwise."
msgstr ""

#. type: Plain text
msgid "'<led></led>' - makes a round LED"
msgstr ""

#. type: Plain text
msgid "'<rectled></rectled>' - makes a rectangle LED"
msgstr ""

#. type: Plain text
msgid ""
"'<halpin>name</halpin>' - 'name' of the pin, default is 'led.n', where n is "
"an integer that is incremented for each LED."
msgstr ""

#. type: Plain text
msgid "'<size>n</size>' - 'n' is the size of the led in pixels, default is 20"
msgstr ""

#. type: Plain text
msgid ""
"'<on_color>color</on_color>' - sets the color of the LED when the pin is "
"true.  default is 'green'. See <<pyvcp-colors,colors>> for more info."
msgstr ""

#. type: Plain text
msgid ""
"'<off_color>color</off_color>' - sets the color of the LED when the pin is "
"false. default is 'red'"
msgstr ""

#. type: Plain text
msgid "'<height>n</height>' - sets the height of the LED in pixels"
msgstr ""

#. type: Plain text
msgid "'<width>n</width>' - sets the width of the LED in pixels"
msgstr ""

#. type: Plain text
msgid ""
"'<disable_pin>false</disable_pin>' - when true adds a disable pin to the led."
msgstr ""

#. type: Plain text
msgid ""
"'<disabled_color>color</disabled_color>' - sets the color of the LED when "
"the pin is disabled."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Round LED"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<led>\n"
"    <halpin>\"my-led\"</halpin>\n"
"    <size>50</size>\n"
"    <on_color>\"green\"</on_color>\n"
"    <off_color>\"red\"</off_color>\n"
"</led>\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_led.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Rectangle LED"
msgstr ""

#. type: Plain text
msgid "This is a variant of the 'led' widget."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<vbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>6</bd>\n"
"    <rectled>\n"
"        <halpin>\"my-led\"</halpin>\n"
"        <height>\"50\"</height>\n"
"        <width>\"100\"</width>\n"
"        <on_color>\"green\"</on_color>\n"
"        <off_color>\"red\"</off_color>\n"
"    </rectled>\n"
"</vbox>\n"
msgstr ""

#. type: Plain text
msgid ""
"The above code produced this example.  Also showing a vertical box with "
"relief."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_rectled.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Buttons"
msgstr ""

#. type: Plain text
msgid ""
"A button is used to control a BIT pin. The pin will be set True when the "
"button is pressed and held down, and will be set False when the button is "
"released. Buttons can use the following optional options."
msgstr ""

#. type: Plain text
msgid ""
"'<activebackground>\"color\"</activebackground>' - the cursor over color."
msgstr ""

#. type: Plain text
msgid "'<fg> \"color\"</fg>' - the foreground color."
msgstr ""

#. type: Plain text
msgid "'<bg>\"color\"</bg>' - the background color."
msgstr ""

#. type: Plain text
msgid "'<disable_pin>True</disable_pin>' - disable pin."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Text Button"
msgstr ""

#. type: Plain text
msgid ""
"A text button controls a 'bit' halpin. The halpin is false until the button "
"is pressed then it is true. The button is a momentary button."
msgstr ""

#. type: Plain text
msgid ""
"The text button has an optional disable pin that is created when you add "
"<disable_pin>True</disable_pin>."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<button>\n"
"    <halpin>\"ok-button\"</halpin>\n"
"    <text>\"OK\"</text>\n"
"</button>\n"
"<button>\n"
"    <halpin>\"abort-button\"</halpin>\n"
"    <text>\"Abort\"</text>\n"
"</button\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_button.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Checkbutton"
msgstr ""

#. type: Plain text
msgid ""
"A checkbutton controls a bit halpin. The halpin will be set True when the "
"button is checked, and false when the button is unchecked. The checkbutton "
"is a toggle type button. The Checkbuttons may be set initially as TRUE or "
"FALSE the initval field A pin called changepin is also created "
"automatically, which can toggle the Checkbutton via HAL, if the value linked "
"is changed, to update the display remotely."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<checkbutton>\n"
"    <halpin>\"coolant-chkbtn\"</halpin>\n"
"    <text>\"Coolant\"</text>\n"
"    <initval>1</initval>\n"
"</checkbutton>\n"
"<checkbutton>\n"
"    <halpin>\"chip-chkbtn\"</halpin>\n"
"    <text>\"Chips    \"</text>\n"
"    <initval>0</initval>\n"
"</checkbutton>\n"
msgstr ""

#. type: Plain text
msgid ""
"The above code produced this example.  The coolant checkbutton is checked.  "
"Notice the extra spaces in the Chips text to keep the checkbuttons aligned."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_checkbutton.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Radiobutton"
msgstr ""

#. type: Plain text
msgid ""
"A radiobutton will set one of the halpins true. The other pins are set "
"false.  The initval field may be set to choose the default selection when "
"the panel displays. Only one radio button may be set to TRUE (1) or only the "
"highest number pin set TRUE will have that value."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<radiobutton>\n"
"    <choices>[\"one\",\"two\",\"three\"]</choices>\n"
"    <halpin>\"my-radio\"</halpin>\n"
"    <initval>0</initval>\n"
"</radiobutton>\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp_radiobutton.png"
msgstr ""

#. type: Plain text
msgid ""
"Note that the HAL pins in the example above will be named my-radio.one, my-"
"radio.two, and my-radio.three. In the image above, 'one' is the selected "
"value.  Use this tag '<orient>HORIZONTAL</orient>' to display horizontally."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Number Displays"
msgstr ""

#. type: Plain text
msgid "Number displays can use the following formatting options"
msgstr ""

#. type: Plain text
msgid "<font>(\"Font Name\",n)</font> where 'n' is the font size"
msgstr ""

#. type: Plain text
msgid "<width>n</width> where 'n' is the overall width of the space used"
msgstr ""

#. type: Plain text
msgid ""
"<justify>pos</justify> where 'pos' is LEFT, CENTER, or RIGHT (doesn't work)"
msgstr ""

#. type: Plain text
msgid "<padx>n</padx> where 'n' is the amount of extra horizontal extra space"
msgstr ""

#. type: Plain text
msgid "<pady>n</pady> where 'n' is the amount of extra vertical extra space"
msgstr ""

#. type: Plain text
msgid "The number widget displays the value of a float signal."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<number>\n"
"    <halpin>\"my-number\"</halpin>\n"
"    <font>(\"Helvetica\",24)</font>\n"
"    <format>\"+4.4f\"</format>\n"
"</number>\n"
"--------------------------------------- \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "The above code produced this example.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_number.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<font>' - is a Tkinter font type and size specification. One font that\n"
"will show up to at least size 200 is 'courier 10 pitch', so for a\n"
"really big Number widget you could specify:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[source,xml]\n"
msgstr ""

#. type: Plain text
msgid "<font>(\"courier 10 pitch\",100)</font>"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<format>' - is a 'C-style' format specified that determines how\n"
"the number is displayed.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".s32 Number\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"The s32 number widget displays the value of a s32 number. The syntax\n"
"is the same as 'number' except the name which is <s32>. Make sure the\n"
"width is wide enough to cover the largest number you expect to use.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<s32>\n"
"    <halpin>\"my-number\"</halpin>\n"
"    <font>(\"Helvetica\",24)</font>\n"
"    <format>\"6d\"</format>\n"
"    <width>6</width>\n"
"</s32>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "The above code produced this example. \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_s32.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".u32 Number\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"The u32 number widget displays the value of a u32 number. The syntax\n"
"is the same as 'number' except the name which is <u32>.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Bar\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"A bar widget displays the value of a FLOAT signal both graphically\n"
"using a bar display and numerically.\n"
"The color of the bar can be set as one color throughout its range (default\n"
"using fillcolor) or set to change color dependent upon the value of the halpin\n"
"(range1, range2 range3 must all be set, if you only want 2 ranges, set 2 of\n"
"them to the same color).\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* <halpin>\"my-bar\"</halpin> text, sets the pin name, pyvcp.my-bar\n"
"* <min_>0</min_> number, sets the minimum scale\n"
"* <max_>140</max_> number, sets the maximum scale\n"
"* <format>\"3.1f\"</format> text, sets the number format using python number\n"
"  formatting\n"
"* <bgcolor>\"grey\"</bgcolor> text, sets the background color\n"
"* <fillcolor>\"red\"</fillcolor> text, sets the fill color\n"
"* <range1>0,100,\"green\"</range1> number, number, text, sets the first range and\n"
"  color\n"
"* <range2>101,135,\"orange\"</range2> number, number, text, sets the first range\n"
"  and color\n"
"* <range3>136, 150,\"red\"</range3> number, number, text, sets the first range and\n"
"  color\n"
"* <canvas_width>200</canvas_width> number, sets the overall width\n"
"* <canvas_height>50</canvas_height> number, sets the overall height\n"
"* <bar_height>30</bar_height> number, sets the bar height, must be less than\n"
"  canvas_height\n"
"* <bar_width>150</bar_width> number, sets the bar width, must be less than\n"
"  canvas_width\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<bar>\n"
"    <halpin>\"my-bar\"</halpin>\n"
"    <min_>0</min_>\n"
"    <max_>123</max_>\n"
"    <format>\"3.1f\"</format>\n"
"    <bgcolor>\"grey\"</bgcolor>\n"
"    <fillcolor>\"red\"</fillcolor>\n"
"    <range1>0,100,\"green\"</range1>\n"
"    <range2>101,135,\"orange\"</range2>\n"
"    <range3>136, 150,\"red\"</range3>\n"
"    <canvas_width>200</canvas_width>\n"
"    <canvas_height>50</canvas_height>\n"
"    <bar_height>30</bar_height>\n"
"    <bar_width>150</bar_width>\n"
"</bar>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_bar.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Meter\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "Meter displays the value of a FLOAT signal using a traditional dial indicator.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<meter>\n"
"    <halpin>\"mymeter\"</halpin>\n"
"    <text>\"Battery\"</text>\n"
"    <subtext>\"Volts\"</subtext>\n"
"    <size>250</size>\n"
"    <min_>0</min_>\n"
"    <max_>15.5</max_>\n"
"    <majorscale>1</majorscale>\n"
"    <minorscale>0.2</minorscale>\n"
"    <region1>(14.5,15.5,\"yellow\")</region1>\n"
"    <region2>(12,14.5,\"green\")</region2>\n"
"    <region3>(0,12,\"red\")</region3>\n"
"</meter>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_meter.png[]\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Number Inputs"
msgstr ""

#. type: delimited block -
msgid ".Spinbox"
msgstr ""

#. type: delimited block -
msgid ""
"Spinbox controls a FLOAT pin. You increase or decrease the value of the pin "
"by either pressing on the arrows, or pointing at the spinbox and rolling "
"your mouse-wheel. If the param_pin field is set TRUE(1), a pin will be "
"created that can be used to set the spinbox to an initial value and to "
"remotely alter its value without HID input."
msgstr ""

#. type: delimited block -
msgid "[source,xml]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<spinbox>\n"
"    <halpin>\"my-spinbox\"</halpin>\n"
"    <min_>-12</min_>\n"
"    <max_>33</max_>\n"
"    <initval>0</initval>\n"
"    <resolution>0.1</resolution>\n"
"    <format>\"2.3f\"</format>\n"
"    <font>(\"Arial\",30)</font>\n"
"    <param_pin>1</param_pin>\n"
"</spinbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_spinbox.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Scale\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Scale controls a float or a s32 pin. You increase or decrease the\n"
"value of the pin be either dragging the slider, or pointing at the\n"
"scale and rolling your mouse-wheel. The 'halpin' will have both '-f'\n"
"and '-i' added to it to form the float and s32 pins. Width is the width\n"
"of the slider in vertical and the height of the slider in horizontal\n"
"orientation. If the param_pin field is set TRUE(1), a pin will be created that\n"
"can be used to set the spinbox to an initial value and to remotely alter its\n"
"value without HID input.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<scale>\n"
"    <font>(\"Helvetica\",16)</font>\n"
"    <width>\"25\"</width>\n"
"    <halpin>\"my-hscale\"</halpin>\n"
"    <resolution>0.1</resolution>\n"
"    <orient>HORIZONTAL</orient>\n"
"    <initval>-15</initval>\n"
"    <min_>-33</min_>\n"
"    <max_>26</max_>\n"
"    <param_pin>1</param_pin>\n"
"</scale>\n"
"<scale>\n"
"    <font>(\"Helvetica\",16)</font>\n"
"    <width>\"50\"</width>\n"
"    <halpin>\"my-vscale\"</halpin>\n"
"    <resolution>1</resolution>\n"
"    <orient>VERTICAL</orient>\n"
"    <min_>100</min_>\n"
"    <max_>0</max_>\n"
"    <param_pin>1</param_pin>\n"
"</scale>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_scale.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Dial\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"The Dial outputs a HAL float and reacts to both mouse wheel and\n"
"dragging. Double left click to increase the resolution and double right\n"
"click to reduce the resolution by one digit. The output is capped by\n"
"the min and max values. The <cpr> is how many tick marks are on the\n"
"outside of the ring (beware of high numbers). If the param_pin field is set\n"
"TRUE(1), a pin will be created that can be used to set the spinbox to\n"
"an initial value and to remotely alter its value without HID input.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<dial>\n"
"    <size>200</size>\n"
"    <cpr>100</cpr>\n"
"    <min_>-15</min_>\n"
"    <max_>15</max_>\n"
"    <text>\"Dial\"</text>\n"
"    <initval>0</initval>\n"
"    <resolution>0.001</resolution>\n"
"    <halpin>\"anaout\"</halpin>\n"
"    <dialcolor>\"yellow\"</dialcolor>\n"
"    <edgecolor>\"green\"</edgecolor>\n"
"    <dotcolor>\"black\"</dotcolor>\n"
"    <param_pin>1</param_pin>\n"
"</dial>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_dial.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Jogwheel\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Jogwheel mimics a real jogwheel by outputting a FLOAT pin which counts\n"
"up or down as the wheel is turned, either by dragging in a circular\n"
"motion, or by rolling the mouse-wheel. Optional tags \n"
"'<text>\"My Text\"</text>' displays text\n"
"'<bgcolor>\"grey\"</bgcolor> <fillcolor>\"green\"</fillcolor>' background & active colors\n"
"'<scale_pin>1</scale_pin>' creates scale text and a FLOAT.scale pin to display jog scale\n"
"'<clear_pin>1</clear_pin>' creates DRO and a BIT.reset pin to reset DRO. Needs scale_pin \n"
"for scaled DRO. shift+click resets DRO also\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<jogwheel>\n"
"    <halpin>\"my-wheel\"</halpin>\n"
"    <cpr>45</cpr>\n"
"    <size>250</size>\n"
"</jogwheel>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_jogwheel.png[]\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Images"
msgstr ""

#. type: delimited block -
msgid ""
"Image displays use only .gif image format. All of the images must be the "
"same size. The images must be in the same directory as your ini file (or in "
"the current directory if running from the command line with halrun/halcmd)."
msgstr ""

#. type: delimited block -
msgid ".Image Bit"
msgstr ""

#. type: delimited block -
msgid ""
"The 'image_bit' toggles between two images by setting the halpin to true or "
"false."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<image name='fwd' file='fwd.gif'/>\n"
"<image name='rev' file='rev.gif'/>\n"
"<vbox>\n"
"    <image_bit halpin='selectimage' images='fwd rev'/>\n"
"</vbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"This example was produced from the above code.\n"
"Using the two image files fwd.gif and rev.gif.\n"
"FWD is displayed when 'selectimage' is false\n"
"and REV is displayed when 'selectimage' is true.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image:images/pyvcp_image01.png[] image:images/pyvcp_image02.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Image u32\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"The 'image_u32' is the same as 'image_bit' except you have essentially\n"
"an unlimited number of images and you 'select' the image by setting the\n"
"halpin to a integer value with 0 for the first image in the images list\n"
"and 1 for the second image etc.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<image name='stb' file='stb.gif'/>\n"
"<image name='fwd' file='fwd.gif'/>\n"
"<image name='rev' file='rev.gif'/>\n"
"<vbox>\n"
"    <image_u32 halpin='selectimage' images='stb fwd rev'/>\n"
"</vbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"The above code produced the following example\n"
"by adding the stb.gif image.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"image:images/pyvcp_image_u32_01.png[]\n"
"image:images/pyvcp_image01.png[]\n"
"image:images/pyvcp_image02.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Notice that the default is the min even though it is set higher than\n"
"max unless there is a negative min.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Containers"
msgstr ""

#. type: delimited block -
msgid ""
"Containers are widgets that contain other widgets. Containers are used to "
"group other widgets."
msgstr ""

#. type: delimited block -
msgid ".Borders"
msgstr ""

#. type: delimited block -
msgid ""
"Container borders are specified with two tags used together. The <relief> "
"tag specifies the type of border and the <bd> specifies the width of the "
"border."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<relief>type</relief>' -\n"
"    Where 'type' is FLAT, SUNKEN, RAISED, GROOVE, or RIDGE\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<bd>n</bd>' - \n"
"    Where 'n' is the width of the border.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<hbox>\n"
"    <button>\n"
"        <relief>FLAT</relief>\n"
"        <text>\"FLAT\"</text>\n"
"        <bd>3</bd>\n"
"    </button>\n"
"    <button>\n"
"        <relief>SUNKEN</relief>\n"
"        <text>\"SUNKEN\"</text>\n"
"        <bd>3</bd>\n"
"    </button>\n"
"    <button>\n"
"        <relief>RAISED</relief>\n"
"        <text>\"RAISED\"</text>\n"
"        <bd>3</bd>\n"
"    </button>\n"
"    <button>\n"
"        <relief>GROOVE</relief>\n"
"        <text>\"GROOVE\"</text>\n"
"        <bd>3</bd>\n"
"    </button>\n"
"    <button>\n"
"        <relief>RIDGE</relief>\n"
"        <text>\"RIDGE\"</text>\n"
"        <bd>3</bd>\n"
"    </button>\n"
"</hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_borders.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Fill\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Container fill are specified with the '<boxfill fill=\"\"/>' tag. Valid entries\n"
"are none, x, y and both. The x fill is a horizontal fill and the y fill is a \n"
"vertical fill\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<boxfill fill =\"style\"/>' - \n"
"    Where 'style' is none, x, y, or both. Default is x for Vbox and y for Hbox.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Anchor\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Container anchors are specified with the <boxanchor anchor=\"\"/> tag. The anchor\n"
"specifies where to position each slave in its parcel. Valid entries are center,\n"
"n, s, e, w, for center, north, south, east and west. Combinations like sw, se,\n"
"nw and ne are also valid.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<boxanchor anchor=\"position\"/>' -\n"
"    Where 'position' is center, n, s, e, w, ne, nw, se or sw. Default is center.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Expand\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Container expand is specified with the boolean <boxexpand expand=\"\"/> tag.\n"
"Valid entries are yes, no.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"* '<boxexpand expand=\"boolean\"/>' -\n"
"    Where 'boolean' is either yes or no. Default is yes.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Hbox\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Use an Hbox when you want to stack widgets horizontally\n"
"next to each other.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<hbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>6</bd>\n"
"    <label><text>\"a hbox:\"</text></label>\n"
"    <led></led>\n"
"    <number></number>\n"
"    <bar></bar>\n"
"</hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_hbox.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Inside an Hbox, you can use the '<boxfill fill=\"\"/>', '<boxanchor anchor=\"\"/>'\n"
", and '<boxexpand expand=\"\"/>' tags to choose how items in the box behave when\n"
"the window is re-sized.The default is 'fill=\"y\"', 'anchor=\"center\"', 'expand=\"yes\"'\n"
"for a Hbox.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Vbox\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Use a Vbox when you want to stack widgets vertically on top of each\n"
"other.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<vbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>6</bd>\n"
"    <label><text>\"a vbox:\"</text></label>\n"
"    <led></led>\n"
"    <number></number>\n"
"    <bar></bar>\n"
"</vbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_vbox.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Inside a Vbox, you can use the '<boxfill fill=\"\"/>', '<boxanchor anchor=\"\"/>'\n"
", and '<boxexpand expand=\"\"/>' tags to choose how items in the box behave\n"
"when the window is re-sized. The default is 'fill=\"x\"', 'anchor=\"center\"',\n"
"'expand=\"yes\"' for a Hbox.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Labelframe\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"A labelframe is a frame with a groove and a label at the upper-left\n"
"corner.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<labelframe text=\"Group Title\">\n"
"    <font>(\"Helvetica\",16)</font>\n"
"    <hbox>\n"
"    <led/>\n"
"    <led/>\n"
"    </hbox>\n"
"</labelframe>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_labelframe.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Table\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"A table is a container that allows layout in a grid of rows and\n"
"columns. Each row is started by a '<tablerow/>' tag. A contained\n"
"widget may span rows or columns through the use of\n"
"the '<tablespan rows= cols=/>' tag. The sides of the cells to which\n"
"the contained widgets âstickâ\n"
"may be set through the use of the '<tablesticky sticky=/>' tag. A\n"
"table expands on its flexible rows and columns.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Example:\n"
"[source,xml]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<table flexible_rows=\"[2]\" flexible_columns=\"[1,4]\">\n"
"<tablesticky sticky=\"new\"/>\n"
"<tablerow/>\n"
"    <label>\n"
"        <text>\" A (cell 1,1) \"</text>\n"
"        <relief>RIDGE</relief>\n"
"        <bd>3</bd>\n"
"    </label>\n"
"    <label text=\"B (cell 1,2)\"/>\n"
"    <tablespan columns=\"2\"/>\n"
"    <label text=\"C, D (cells 1,3 and 1,4)\"/>\n"
"<tablerow/>\n"
"    <label text=\"E (cell 2,1)\"/>\n"
"    <tablesticky sticky=\"nsew\"/>\n"
"    <tablespan rows=\"2\"/>\n"
"    <label text=\"'spans\\n2 rows'\"/>\n"
"    <tablesticky sticky=\"new\"/>\n"
"    <label text=\"G (cell 2,3)\"/>\n"
"    <label text=\"H (cell 2,4)\"/>\n"
"<tablerow/>\n"
"    <label text=\"J (cell 3,1)\"/>\n"
"    <label text=\"K (cell 3,2)\"/>\n"
"    <u32 halpin=\"test\"/>\n"
"</table>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_table.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ".Tabs\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "A tabbed interface can save quite a bit of space.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"<tabs>\n"
"    <names> [\"spindle\",\"green eggs\"]</names>\n"
"</tabs>\n"
"<tabs>\n"
"    <names>[\"Spindle\", \"Green Eggs\", \"Ham\"]</names>\n"
"    <vbox>\n"
"        <label>\n"
"            <text>\"Spindle speed:\"</text>\n"
"        </label>\n"
"        <bar>\n"
"            <halpin>\"spindle-speed\"</halpin>\n"
"            <max_>5000</max_>\n"
"        </bar>\n"
"    </vbox>\n"
"    <vbox>\n"
"        <label>\n"
"            <text>\"(this is the green eggs tab)\"</text>\n"
"        </label>\n"
"    </vbox>\n"
"    <vbox>\n"
"        <label>\n"
"            <text>\"(this tab has nothing on it)\"</text>\n"
"        </label>\n"
"    </vbox>\n"
"</tabs>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "The above code produced this example showing each tab selected.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_tabs1.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_tabs2.png[]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "image::images/pyvcp_tabs3.png[]\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "PyVCP Examples"
msgstr ""

#. type: Plain text
msgid ""
"To create a PyVCP panel to use with the AXIS interface that is attached to "
"the right of AXIS you need to do the following basic things."
msgstr ""

#. type: Plain text
msgid "Create an .xml file that contains your panel description and put it in"
msgstr ""

#. type: Plain text
msgid "your config directory."
msgstr ""

#. type: Plain text
msgid "Add the PyVCP entry to the [DISPLAY] section of the ini file with your"
msgstr ""

#. type: Plain text
msgid ".xml file name."
msgstr ""

#. type: Plain text
msgid "Add the POSTGUI_HALFILE entry to the [HAL] section of the ini file"
msgstr ""

#. type: Plain text
msgid "with the name of your postgui HAL file name."
msgstr ""

#. type: Plain text
msgid "Add the links to HAL pins for your panel in the postgui.hal file to"
msgstr ""

#. type: Plain text
msgid "'connect' your PyVCP panel to LinuxCNC."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Floating Panels"
msgstr ""

#. type: Plain text
msgid ""
"To create floating PyVCP panels that can be used with any interface you need "
"to do the following basic things."
msgstr ""

#. type: Plain text
msgid "Add a loadusr line to your .hal file to load each panel."
msgstr ""

#. type: Plain text
msgid ""
"The following is an example of a loadusr command to load two PyVCP panels "
"and name each one so the connection names in HAL will be known."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadusr -Wn btnpanel pyvcp -c btnpanel panel1.xml \n"
"loadusr -Wn sppanel pyvcp -c sppanel panel2.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"The -Wn makes HAL 'Wait for name' to be loaded before proceeding. The pyvcp -"
"c makes PyVCP name the panel."
msgstr ""

#. type: Plain text
msgid "The HAL pins from panel1.xml will be named btnpanel.<pin name>"
msgstr ""

#. type: Plain text
msgid "The HAL pins from panel2.xml will be named sppanel.<pin name>"
msgstr ""

#. type: Plain text
msgid ""
"Make sure the loadusr line is before any nets that make use of the PyVCP "
"pins."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Jog Buttons"
msgstr ""

#. type: Plain text
msgid ""
"In this example we will create a PyVCP panel with jog buttons for X, Y, and "
"Z. This configuration will be built upon a Stepconf Wizard generated "
"configuration. First we run the Stepconf Wizard and configure our machine, "
"then on the Advanced Configuration Options page we make a couple of "
"selections to add a blank PyVCP panel as shown in the following figure. For "
"this example we named the configuration 'pyvcp_xyz' on the Basic Machine "
"Information page of the Stepconf Wizard."
msgstr ""

#. type: Block title
#, no-wrap
msgid "XYZ Wizard Configuration[[cap:XYZ-Wizard-Configuration]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "XYZ Wizard Configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/xyz_ACO.png"
msgstr ""

#. type: Plain text
msgid ""
"The Stepconf Wizard will create several files and place them in the linuxcnc/"
"configs/pyvcp_xyz directory. If you left the create link checked you will "
"have a link to those files on your desktop."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Create the Widgets"
msgstr ""

#. type: Plain text
msgid ""
"Open up the custompanel.xml file by right clicking on it and selecting 'open "
"with text editor'. Between the <pyvcp></pyvcp> tags we will add the widgets "
"for our panel."
msgstr ""

#. type: Plain text
msgid ""
"Look in the PyVCP Widgets Reference section of the manual for more detailed "
"information on each widget."
msgstr ""

#. type: Plain text
msgid ""
"In your custompanel.xml file we will add the description of the widgets."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp>\n"
"  <labelframe text=\"Jog Buttons\"> \n"
"    <font>(\"Helvetica\",16)</font>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      <!-- the X jog buttons --> \n"
"      <hbox> \n"
"      <relief>RAISED</relief> \n"
"      <bd>3</bd> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"x-plus\"</halpin> \n"
"        <text>\"X+\"</text> \n"
"      </button> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"x-minus\"</halpin> \n"
"        <text>\"X-\"</text> \n"
"      </button> \n"
"      </hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      <!-- the Y jog buttons --> \n"
"      <hbox> \n"
"      <relief>RAISED</relief> \n"
"      <bd>3</bd> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"y-plus\"</halpin> \n"
"        <text>\"Y+\"</text> \n"
"      </button> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"y-minus\"</halpin> \n"
"        <text>\"Y-\"</text> \n"
"      </button> \n"
"      </hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      <!-- the Z jog buttons --> \n"
"      <hbox> \n"
"      <relief>RAISED</relief> \n"
"      <bd>3</bd> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"z-plus\"</halpin> \n"
"        <text>\"Z+\"</text> \n"
"      </button> \n"
"      <button> \n"
"        <font>(\"Helvetica\",20)</font> \n"
"        <width>3</width> \n"
"        <halpin>\"z-minus\"</halpin> \n"
"        <text>\"Z-\"</text> \n"
"      </button> \n"
"      </hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"      <!-- the jog speed slider --> \n"
"      <vbox> \n"
"      <relief>RAISED</relief> \n"
"      <bd>3</bd> \n"
"      <label> \n"
"        <text>\"Jog Speed\"</text> \n"
"        <font>(\"Helvetica\",16)</font> \n"
"      </label> \n"
"      <scale> \n"
"        <font>(\"Helvetica\",14)</font> \n"
"        <halpin>\"jog-speed\"</halpin> \n"
"        <resolution>1</resolution> \n"
"        <orient>HORIZONTAL</orient> \n"
"        <min_>0</min_> \n"
"        <max_>80</max_> \n"
"      </scale> \n"
"      </vbox>\n"
"  </labelframe>\n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid ""
"After adding the above you now will have a PyVCP panel that looks like the "
"following attached to the right side of AXIS. It looks nice but it does not "
"do anything until you 'connect' the buttons to halui. If you get an error "
"when you try and run scroll down to the bottom of the pop up window and "
"usually the error is a spelling or syntax error and it will be there."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Jog Buttons[[cap:Jog-Buttons]]"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/xyz_buttons.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Make Connections"
msgstr ""

#. type: Plain text
msgid ""
"To make the connections needed open up your custom_postgui.hal file and add "
"the following."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the X PyVCP buttons\n"
"net my-jogxminus halui.axis.x.minus <= pyvcp.x-minus\n"
"net my-jogxplus halui.axis.x.plus <= pyvcp.x-plus\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the Y PyVCP buttons\n"
"net my-jogyminus halui.axis.y.minus <= pyvcp.y-minus\n"
"net my-jogyplus halui.axis.y.plus <= pyvcp.y-plus\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the Z PyVCP buttons\n"
"net my-jogzminus halui.axis.z.minus <= pyvcp.z-minus\n"
"net my-jogzplus halui.axis.z.plus <= pyvcp.z-plus\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the PyVCP jog speed slider\n"
"net my-jogspeed halui.axis.jog-speed <= pyvcp.jog-speed-f\n"
msgstr ""

#. type: Plain text
msgid ""
"After resetting the E-Stop and putting it into jog mode and moving the jog "
"speed slider in the PyVCP panel to a value greater than zero the PyVCP jog "
"buttons should work. You can not jog when running a g code file or while "
"paused or while the MDI tab is selected."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Port Tester"
msgstr ""

#. type: Plain text
msgid ""
"This example shows you how to make a simple parallel port tester using PyVCP "
"and HAL."
msgstr ""

#. type: Plain text
msgid ""
"First create the ptest.xml file with the following code to create the panel "
"description."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<!-- Test panel for the parallel port cfg for out -->\n"
"<pyvcp>\n"
"  <hbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>2</bd>\n"
"    <button>\n"
"      <halpin>\"btn01\"</halpin>\n"
"      <text>\"Pin 01\"</text>\n"
"    </button>\n"
"    <led>\n"
"      <halpin>\"led-01\"</halpin>\n"
"      <size>25</size>\n"
"      <on_color>\"green\"</on_color>\n"
"      <off_color>\"red\"</off_color>\n"
"    </led>\n"
"  </hbox>\n"
"  <hbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>2</bd>\n"
"    <button>\n"
"      <halpin>\"btn02\"</halpin>\n"
"      <text>\"Pin 02\"</text>\n"
"    </button>\n"
"    <led>\n"
"      <halpin>\"led-02\"</halpin>\n"
"      <size>25</size>\n"
"      <on_color>\"green\"</on_color>\n"
"      <off_color>\"red\"</off_color>\n"
"    </led>\n"
"  </hbox>\n"
"  <hbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>2</bd>\n"
"    <label>\n"
"      <text>\"Pin 10\"</text>\n"
"      <font>(\"Helvetica\",14)</font>\n"
"    </label>\n"
"    <led>\n"
"      <halpin>\"led-10\"</halpin>\n"
"      <size>25</size>\n"
"      <on_color>\"green\"</on_color>\n"
"      <off_color>\"red\"</off_color>\n"
"    </led>\n"
"  </hbox>\n"
"  <hbox>\n"
"    <relief>RIDGE</relief>\n"
"    <bd>2</bd>\n"
"    <label>\n"
"      <text>\"Pin 11\"</text>\n"
"      <font>(\"Helvetica\",14)</font>\n"
"    </label>\n"
"    <led>\n"
"      <halpin>\"led-11\"</halpin>\n"
"      <size>25</size>\n"
"      <on_color>\"green\"</on_color>\n"
"      <off_color>\"red\"</off_color>\n"
"    </led>\n"
"  </hbox>\n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid ""
"This will create the following floating panel which contains a couple of in "
"pins and a couple of out pins."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Port Tester Panel[[cap:Port-Tester-Panel]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Port Tester Panel"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ptest.png"
msgstr ""

#. type: Plain text
msgid ""
"To run the HAL commands that we need to get everything up and running we put "
"the following in our ptest.hal file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt hal_parport cfg=\"0x378 out\"\n"
"loadusr -Wn ptest pyvcp -c ptest ptest.xml\n"
"loadrt threads name1=porttest period1=1000000\n"
"addf parport.0.read porttest\n"
"addf parport.0.write porttest\n"
"net pin01 ptest.btn01 parport.0.pin-01-out ptest.led-01\n"
"net pin02 ptest.btn02 parport.0.pin-02-out ptest.led-02\n"
"net pin10 parport.0.pin-10-in ptest.led-10\n"
"net pin11 parport.0.pin-11-in ptest.led-11\n"
"start\n"
msgstr ""

#. type: Plain text
msgid ""
"To run the HAL file we use the following command from a terminal window."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "~$ halrun -I -f ptest.hal\n"
msgstr ""

#. type: Plain text
msgid "The following figure shows what a complete panel might look like."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Port Tester Complete[[cap:Port-Tester-Complete]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Port Tester Complete"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/ptest-final.png"
msgstr ""

#. type: Plain text
msgid "To add the rest of the parallel port pins just modify the .xml and"
msgstr ""

#. type: Block title
#, no-wrap
msgid "hal files."
msgstr ""

#. type: Plain text
msgid ""
"To show the pins after running the HAL script use the following command at "
"the halcmd prompt:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd: show pin\n"
"Component Pins:\n"
"Owner Type  Dir Value  Name\n"
"    2 bit   IN  FALSE  parport.0.pin-01-out <== pin01\n"
"    2 bit   IN  FALSE  parport.0.pin-02-out <== pin02\n"
"    2 bit   IN  FALSE  parport.0.pin-03-out\n"
"    2 bit   IN  FALSE  parport.0.pin-04-out\n"
"    2 bit   IN  FALSE  parport.0.pin-05-out\n"
"    2 bit   IN  FALSE  parport.0.pin-06-out\n"
"    2 bit   IN  FALSE  parport.0.pin-07-out\n"
"    2 bit   IN  FALSE  parport.0.pin-08-out\n"
"    2 bit   IN  FALSE  parport.0.pin-09-out\n"
"    2 bit   OUT TRUE   parport.0.pin-10-in ==> pin10\n"
"    2 bit   OUT FALSE  parport.0.pin-10-in-not\n"
"    2 bit   OUT TRUE   parport.0.pin-11-in ==> pin11\n"
"    2 bit   OUT FALSE  parport.0.pin-11-in-not\n"
"    2 bit   OUT TRUE   parport.0.pin-12-in\n"
"    2 bit   OUT FALSE  parport.0.pin-12-in-not\n"
"    2 bit   OUT TRUE   parport.0.pin-13-in\n"
"    2 bit   OUT FALSE  parport.0.pin-13-in-not\n"
"    2 bit   IN  FALSE  parport.0.pin-14-out\n"
"    2 bit   OUT TRUE   parport.0.pin-15-in\n"
"    2 bit   OUT FALSE  parport.0.pin-15-in-not\n"
"    2 bit   IN  FALSE  parport.0.pin-16-out\n"
"    2 bit   IN  FALSE  parport.0.pin-17-out\n"
"    4 bit   OUT FALSE  ptest.btn01 ==> pin01\n"
"    4 bit   OUT FALSE  ptest.btn02 ==> pin02\n"
"    4 bit   IN  FALSE  ptest.led-01 <== pin01\n"
"    4 bit   IN  FALSE  ptest.led-02 <== pin02\n"
"    4 bit   IN  TRUE   ptest.led-10 <== pin10\n"
"    4 bit   IN  TRUE   ptest.led-11 <== pin11\n"
msgstr ""

#. type: Plain text
msgid ""
"This will show you what pins are IN and what pins are OUT as well as any "
"connections."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GS2 RPM Meter[[gs2-rpm-meter]]"
msgstr ""

#. type: Plain text
msgid ""
"The following example uses the Automation Direct GS2 VDF driver and displays "
"the RPM and other info in a PyVCP panel. This example is based on the GS2 "
"example in the Hardware Examples section this manual."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Panel"
msgstr ""

#. type: Plain text
msgid "To create the panel we add the following to the .xml file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<pyvcp>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <!-- the RPM meter --> \n"
"  <hbox> \n"
"    <relief>RAISED</relief> \n"
"    <bd>3</bd> \n"
"    <meter> \n"
"      <halpin>\"spindle_rpm\"</halpin> \n"
"      <text>\"Spindle\"</text> \n"
"      <subtext>\"RPM\"</subtext> \n"
"      <size>200</size> \n"
"      <min_>0</min_> \n"
"      <max_>3000</max_> \n"
"      <majorscale>500</majorscale> \n"
"      <minorscale>100</minorscale> \n"
"      <region1>0,10,\"yellow\"</region1> \n"
"    </meter> \n"
"  </hbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <!-- the On Led --> \n"
"  <hbox> \n"
"  <relief>RAISED</relief> \n"
"  <bd>3</bd> \n"
"  <vbox> \n"
"  <relief>RAISED</relief> \n"
"  <bd>2</bd> \n"
"  <label> \n"
"  <text>\"On\"</text> \n"
"  <font>(\"Helvetica\",18)</font> \n"
"  </label> \n"
"  <width>5</width> \n"
"   <hbox> \n"
"  <label width=\"2\"/> <!-- used to center the led --> \n"
"  <rectled> \n"
"  <halpin>\"on-led\"</halpin> \n"
"  <height>\"30\"</height> \n"
"  <width>\"30\"</width> \n"
"  <on_color>\"green\"</on_color> \n"
"  <off_color>\"red\"</off_color> \n"
"  </rectled> \n"
"  </hbox> \n"
"  </vbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <!-- the FWD Led --> \n"
"  <vbox> \n"
"    <relief>RAISED</relief> \n"
"    <bd>2</bd> \n"
"    <label> \n"
"      <text>\"FWD\"</text> \n"
"      <font>(\"Helvetica\",18)</font> \n"
"      <width>5</width> \n"
"    </label> \n"
"    <label width=\"2\"/> \n"
"    <rectled> \n"
"      <halpin>\"fwd-led\"</halpin> \n"
"      <height>\"30\"</height> \n"
"      <width>\"30\"</width> \n"
"      <on_color>\"green\"</on_color> \n"
"      <off_color>\"red\"</off_color> \n"
"    </rectled> \n"
"  </vbox>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <!-- the REV Led --> \n"
"  <vbox> \n"
"  <relief>RAISED</relief> \n"
"  <bd>2</bd> \n"
"    <label> \n"
"      <text>\"REV\"</text> \n"
"      <font>(\"Helvetica\",18)</font> \n"
"       <width>5</width> \n"
"    </label> \n"
"    <label width=\"2\"/> \n"
"    <rectled> \n"
"      <halpin>\"rev-led\"</halpin> \n"
"      <height>\"30\"</height> \n"
"      <width>\"30\"</width> \n"
"      <on_color>\"red\"</on_color> \n"
"      <off_color>\"green\"</off_color> \n"
"    </rectled> \n"
"  </vbox> \n"
"  </hbox> \n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid "The above gives us a PyVCP panel that looks like the following."
msgstr ""

#. type: Block title
#, no-wrap
msgid "GS2 Panel[[cap:GS2-Panel]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GS2 Panel"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gs2_panel.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Connections"
msgstr ""

#. type: Plain text
msgid ""
"To make it work we add the following code to the custom_postgui.hal file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# display the rpm based on freq * rpm per hz \n"
"loadrt mult2 \n"
"addf mult2.0 servo-thread \n"
"setp mult2.0.in1 28.75 \n"
"net cypher_speed mult2.0.in0 <= spindle-vfd.frequency-out \n"
"net speed_out pyvcp.spindle_rpm <= mult2.0.out \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# run led \n"
"net gs2-run => pyvcp.on-led\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# fwd led \n"
"net gs2-fwd => pyvcp.fwd-led\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# rev led \n"
"net running-rev spindle-vfd.spindle-rev => pyvcp.rev-led\n"
msgstr ""

#. type: Plain text
msgid ""
"Some of the lines might need some explanations. The fwd led line uses the "
"signal created in the custom.hal file whereas the rev led needs to use the "
"spindle-rev bit. You can't link the spindle-fwd bit twice so you use the "
"signal that it was linked to."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Rapid to Home Button"
msgstr ""

#. type: Plain text
msgid ""
"This example creates a button on the PyVCP side panel when pressed will send "
"all the axis back to the home position. This example assumes you don't have "
"a PyVCP panel."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pyvcp-rth.png"
msgstr ""

#. type: Plain text
msgid ""
"In your configuration directory create the .xml file. In this example it's "
"named 'rth.xml'. In the 'rth.xml' file add the following code to create the "
"button."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp>\n"
"<!-- rapid to home button example -->\n"
"<button>\n"
"<halpin>\"rth-button\"</halpin>\n"
"<text>\"Rapid to Home\"</text>\n"
"</button>\n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid ""
"Open your .ini file with a text editor and in the [DISPLAY] section add the "
"following line. This is what loads the PyVCP panel."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "PYVCP = rth.xml\n"
msgstr ""

#. type: Plain text
msgid ""
"If you don't have a [HALUI] section in the ini file create it and add the "
"following MDI command."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MDI_COMMAND = G53 G0 X0 Y0 Z0\n"
msgstr ""

#. type: Plain text
msgid "Information about <<gcode:g53,G53>> and <<gcode:g0,G0>> G codes"
msgstr ""

#. type: Plain text
msgid ""
"In the [HAL] section if you don't have a post gui file add the following and "
"create a file called 'postgui.hal'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "POSTGUI_HALFILE = postgui.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"In the 'postgui.hal' file add the following code to link the PyVCP button to "
"the MDI command."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net rth halui.mdi-command-00 <= pyvcp.rth-button\n"
msgstr ""

#. type: Plain text
msgid "Information about the <<sub:net, net>> command"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Glade Virtual Control Panel"
msgstr ""

#.  begin a listing of ini/hal/ngc files like so:
#. [source,{ini}]
#. [source,{hal}]
#. [source,{ngc}]
#. type: Title ==
#, no-wrap
msgid "What is GladeVCP?"
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP is an LinuxCNC component which adds the ability to add a new user "
"interface panel to LinuxCNC user interfaces like:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    -Axis\n"
"    -Touchy\n"
"    -Gscreen\n"
"    -Gmoccapy\n"
msgstr ""

#. type: Plain text
msgid ""
"Unlike PyVCP, GladeVCP is not limited to displaying and setting HAL pins, as "
"arbitrary actions can be executed in Python code - in fact, a complete "
"LinuxCNC user interface could be built with GladeVCP and Python."
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP uses the http://glade.gnome.org/[Glade] WYSIWYG user interface "
"editor, which makes it easy to create visually pleasing panels. It relies on "
"the https://pygobject.readthedocs.io/en/latest/[PyGObject] bindings to the "
"rich http://www.gtk.org/[GTK+] widget set, and in fact all of these may be "
"used in a GladeVCP application - not just the specialized widgets for "
"interacting with HAL and LinuxCNC, which are documented here."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PyVCP versus GladeVCP at a glance"
msgstr ""

#. type: Plain text
msgid ""
"Both support the creation of panels with 'HAL widgets' - user interface "
"elements like LED's, buttons, sliders etc whose values are linked to a HAL "
"pin, which in turn interfaces to the rest of LinuxCNC."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*PyVCP:*\n"
msgstr ""

#. type: Plain text
msgid "widget set: uses TkInter widgets"
msgstr ""

#. type: Plain text
msgid ""
"user interface creation: \"edit XML file / run result / evaluate looks\" "
"cycle"
msgstr ""

#. type: Plain text
msgid "no support for embedding user-defined event handling"
msgstr ""

#. type: Plain text
msgid "no LinuxCNC interaction beyond HAL pin I/O supported"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*GladeVCP:*\n"
msgstr ""

#. type: Plain text
msgid "widget set: relies on the http://www.gtk.org/[GTK+] widget set."
msgstr ""

#. type: Plain text
msgid ""
"user interface creation: uses the http://glade.gnome.org/[Glade] WYSIWYG "
"user interface editor"
msgstr ""

#. type: Plain text
msgid ""
"any HAL pin change may be directed to call back into a user-defined Python "
"event handler"
msgstr ""

#. type: Plain text
msgid ""
"any GTK signal (key/button press, window, I/O, timer, network events) may be "
"associated with user-defined handlers in Python"
msgstr ""

#. type: Plain text
msgid ""
"direct LinuxCNC interaction: arbitrary command execution, like initiating "
"MDI commands to call a G-code subroutine, plus support for status change "
"operations through Action Widgets"
msgstr ""

#. type: Plain text
msgid "several independent GladeVCP panels may be run in different tabs"
msgstr ""

#. type: Plain text
msgid ""
"separation of user interface appearance and functionality: change appearance "
"without touching any code"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "A Quick Tour with the Example Panel"
msgstr ""

#. type: Plain text
msgid "GladeVCP panel windows may be run in three different setups:"
msgstr ""

#. type: Plain text
msgid ""
"always visible integrated into Axis at the right side, exactly like PyVCP "
"panels"
msgstr ""

#. type: Plain text
msgid ""
"as a tab in Axis,Touchy, Gscreen, or Gmoccapy; in Axis this would create a "
"third tab besides the Preview and DRO tabs which must be raised explicitly"
msgstr ""

#. type: Plain text
msgid ""
"as a standalone toplevel window, which can be iconifyed/deiconified "
"independent of the main window."
msgstr ""

#. type: Plain text
msgid ""
"If you're using an installed version of LinuxCNC the examples shown below "
"are in the <<cha:starting-linuxcnc,configuration picker>> in the 'Sample "
"Configurations > apps > gladevcp' branch."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Git Checkout"
msgstr ""

#. type: Plain text
msgid ""
"The following instructions only apply if you're using a git checkout. Open a "
"terminal and change to the directory created by git then issue the commands "
"as shown."
msgstr ""

#. type: Plain text
msgid ""
"For the following commands to work on your git checkout you must first run "
"'make' then run 'sudo make setuid' then run '. ./scripts/rip-environment'.  "
"More information about a git checkout is on the linuxcnc wiki page."
msgstr ""

#. type: Plain text
msgid ""
"Run the sample GladeVCP panel integrated into Axis like PyVCP as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd configs/sim/axis/gladevcp\n"
"$ linuxcnc gladevcp_panel.ini\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/example-panel-small.png"
msgstr ""

#. type: Plain text
msgid "Run the same panel, but as a tab inside Axis:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd configs/sim/axis/gladevcp\n"
"$ linuxcnc gladevcp_tab.ini\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/example-tabbed-small.png"
msgstr ""

#
#
#
#
#. To run this panel as a standalone toplevel window besides Axis, just
#. start Axis in the background and start gladevcp as follows:
#. FIXME: I'm not sure how this is supposed to work with axis in one
#. directory and gladevcp in a different directory.
#. FIXME: there is a conflict for motion.N.spindle-speed-out since it is used by both
#.    axis.ini: sim_spindle_encoder.hal
#.    and
#.    manual-example.ui: manual-example.hal
#. commit cd36e2 Jan 5 2012 added sim_spindle_encoder.hal to axis.ini
#. probably after creation of manual-example.ui
#. ----
#. $ cd configs/sim/axis
#. $ linuxcnc axis.ini &
#. $ cd gladevcp
#. $ gladevcp -c gladevcp -u ./hitcounter.py -H ./manual-example.hal ./manual-example.ui
#. ----
#. image::images/example-float-small.png[]
#. type: Plain text
msgid "To run this panel inside 'Touchy':"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd configs/sim/touchy/gladevcp\n"
"$ linuxcnc gladevcp_touchy.ini\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/touchy-tab-33.png"
msgstr ""

#. type: Plain text
msgid ""
"Functionally these setups are identical - they only differ in screen real "
"estate requirements and visibility. Since it is possible to run several "
"GladeVCP components in parallel (with different HAL component names), mixed "
"setups are possible as well - for instance a panel on the right hand side, "
"and one or more tabs for less-frequently used parts of the interface."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Exploring the example panel"
msgstr ""

#. type: Plain text
msgid ""
"While running configs/sim/axis/gladevcp_panel.ini or configs/sim/axis/"
"gladevcp_tab.ini, explore 'Show HAL Configuration' - you will find the "
"'gladevcp' HAL component and may observe their pin values while interacting "
"with the widgets in the panel. The HAL setup can be found in 'configs/axis/"
"gladevcp/manual-example.hal'."
msgstr ""

#. type: Plain text
msgid ""
"The example panel has two frames at the bottom. The panel is configured so "
"that resetting ESTOP activates the Settings frame and turning the machine on "
"enables the Commands frame at the bottom. The HAL widgets in the Settings "
"frame are linked to LEDs and labels in the 'Status' frame, and to the "
"current and prepared tool number - play with them to see the effect. "
"Executing the 'T<toolnumber>' and 'M6' commands in the MDI window will "
"change the current and prepared tool number fields."
msgstr ""

#. type: Plain text
msgid ""
"The buttons in the 'Commands' frame are 'MDI Action widgets' - pressing them "
"will execute an MDI command in the interpreter.  The third button 'Execute "
"Oword subroutine' is an advanced example - it takes several HAL pin values "
"from the 'Settings' frame, and passes them as parameters to the Oword "
"subroutine. The actual parameters received by the routine are displayed by "
"'(DEBUG, )' commands - see '../../nc_files/oword.ngc' for the subroutine "
"body."
msgstr ""

#. type: Plain text
msgid ""
"To see how the panel is integrated into Axis, see the '[DISPLAY]GLADEVCP' "
"statement in configs/sim/axis/gladevcp/gladevcp_panel.ini, the "
"'[DISPLAY]EMBED*' statement in configs/sim/axis/gladevcp/gladevcp_tab.ini "
"and '[HAL]POSTGUI_HALFILE' statements in both configs/sim/axis/gladevcp/"
"gladevcp_tab.ini and configs/sim/axis/gladevcp/gladevcp_panel.ini"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Exploring the User Interface description"
msgstr ""

#. type: Plain text
msgid ""
"The user interface is created with the glade UI editor - to explore it, you "
"need to have <<gladevcp:prerequisites, glade installed>>. To edit the user "
"interface, run the command"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " $ glade configs/axis/gladevcp/manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"(The required glade program may be named glade-gtk2 on more recent systems.)"
msgstr ""

#. type: Plain text
msgid ""
"The center window shows the appearance of the UI. All user interface objects "
"and support objects are found in the right top window, where you can select "
"a specific widget (or by clicking on it in the center window). The "
"properties of the selected widget are displayed, and can be changed, in the "
"right bottom window."
msgstr ""

#. type: Plain text
msgid ""
"To see how MDI commands are passed from the MDI Action widgets, explore the "
"widgets listed under 'Actions' in the top right window, and in the right "
"bottom window, under the 'General' tab, the 'MDI command' property."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Exploring the Python callback"
msgstr ""

#. type: Plain text
msgid "See how a Python callback is integrated into the example:"
msgstr ""

#. type: Plain text
msgid "in glade, see the +hits+ label widget (a plain GTK+ widget)"
msgstr ""

#. type: Plain text
msgid ""
"in the +button1+ widget, look at the 'Signals' tab, and find the signal "
"'pressed' associated with the handler 'on_button_press'"
msgstr ""

#. type: Plain text
msgid ""
"in hitcounter.py, see the method 'on_button_press' and see how it sets the "
"label property in the 'hits' object"
msgstr ""

#. type: Plain text
msgid ""
"The is just touching upon the concept - the callback mechanism will be "
"handled in more detail in the <<gladevcp:programming,GladeVCP Programming>> "
"section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Creating and Integrating a Glade user interface"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Prerequisite: Glade installation"
msgstr ""

#. type: Plain text
msgid ""
"To view or modify Glade UI files, you need glade 3.38.2 or later installed - "
"it is not needed just to run a GladeVCP panel. If the glade command is "
"missing, install it with the command:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " $ sudo apt install glade\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" Glade contains an internal Python interpreter, and only python3 is supported.\n"
" This is true for Debian Bullseye, Ubuntu 21 and Mint 21 or later.\n"
" Older versions will not work, you will get a python error.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Running Glade to create a new user interface"
msgstr ""

#. type: Plain text
msgid ""
"This section just outlines the initial LinuxCNC-specific steps. For more "
"information and a tutorial on glade, see http://glade.gnome.org. Some glade "
"tips & tricks may also be found on http://www.youtube.com[youtube]."
msgstr ""

#. type: Plain text
msgid ""
"Either modify an existing UI component by running +glade <file>.ui+ or start "
"a new one by just running the +glade+ command from the shell."
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC was not installed from a package, the LinuxCNC shell environment "
"needs to be set up with"
msgstr ""

#. type: Plain text
msgid ""
"<linuxcncdir>/scripts/rip-environment+, otherwise glade won't find the "
"LinuxCNC-specific widgets."
msgstr ""

#. type: Plain text
msgid ""
"When asked for unsaved Preferences, just accept the defaults and hit 'Close'."
msgstr ""

#. type: Plain text
msgid ""
"From 'Toplevel' (left pane), pick 'Window' (first icon) as top level window, "
"which by default will be named 'window1'. Do not change this name - GladeVCP "
"relies on it."
msgstr ""

#. type: Plain text
msgid "In the left tab, scroll down and expand 'HAL Python' and 'VCP Actions'."
msgstr ""

#. type: Plain text
msgid ""
"add a container like a HAL_Box or a HAL_Table from 'HAL Python' to the frame"
msgstr ""

#. type: Plain text
msgid "pick and place some elements like LED, button, etc. within a container"
msgstr ""

#. type: Plain text
msgid "This will look like so:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/glade-manual-small.png"
msgstr ""

#. type: Plain text
msgid ""
"Glade tends to write a lot of messages to the shell window, which mostly can "
"be ignored.  Select 'FileâSave as', give it a name like 'myui.ui' and make "
"sure it's saved as 'GtkBuilder' file (radio button left bottom corner in "
"Save dialog). GladeVCP will also process the older 'libglade' format "
"correctly but there is no point in using it. The convention for GtkBuilder "
"file extension is '.ui'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Testing a panel"
msgstr ""

#. type: Plain text
msgid ""
"You're now ready to give it a try (while LinuxCNC, e.g. Axis is running) it "
"with:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    gladevcp myui.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP creates a HAL component named like the basename of the UI file - "
"'myui' in this case - unless overridden by the +-c <component name>+ "
"option.  If running Axis, just try 'Show HAL configuration' and inspect its "
"pins."
msgstr ""

#. type: Plain text
msgid ""
"You might wonder why widgets contained a 'HAL_Hbox' or 'HAL_Table' appear "
"greyed out (inactive). HAL containers have an associated HAL pin which is "
"off by default, which causes all contained widgets to render inactive. A "
"common use case would be to associate these container HAL pins with +halui."
"machine.is-on+ or one of the +halui.mode.+ signals, to assure some widgets "
"appear active only in a certain state."
msgstr ""

#. type: Plain text
msgid ""
"To just activate a container, execute the HAL command +setp gladevcp."
"<container-name> 1+."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preparing the HAL command file"
msgstr ""

#. type: Plain text
msgid ""
"The suggested way of linking HAL pins in a GladeVCP panel is to collect them "
"in a separate file with extension +.hal+. This file is passed via the "
"+POSTGUI_HALFILE=+ option in the +HAL+ section of your ini file."
msgstr ""

#. type: Plain text
msgid ""
"Do not add the GladeVCP HAL command file to the Axis +[HAL]HALFILE=+ ini "
"section, this will not have the desired effect - see the following sections."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Integrating into Axis like PyVCP"
msgstr ""

#. type: Plain text
msgid ""
"Place the GladeVCP panel in the righthand side panel by specifying the "
"following in the ini file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"# add GladeVCP panel where PyVCP used to live:\n"
"GLADEVCP= -u ./hitcounter.py ./manual-example.ui\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"# HAL commands for GladeVCP components in a tab must be executed via POSTGUI_HALFILE\n"
"POSTGUI_HALFILE =  ./manual-example.hal\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RS274NGC]\n"
"# gladevcp Demo specific Oword subs live here\n"
"SUBROUTINE_PATH = ../../nc_files/gladevcp_lib\n"
msgstr ""

#. type: Plain text
msgid ""
"The default HAL component name of a GladeVCP application started with the "
"GLADEVCP option is: +gladevcp+."
msgstr ""

#. type: Plain text
msgid ""
"The command line actually run by Axis in the above configuration is as "
"follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " halcmd loadusr -Wn gladevcp gladevcp -c gladevcp -x {XID} -u ./hitcounter.py ./manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"You may add arbitrary gladevcp options here, as long as they dont collide "
"with the above command line options."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to create a custom HAL component name by adding the +-c+ "
"option:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"# add GladeVCP panel where PyVCP used to live:\n"
"GLADEVCP= -c example -u ./hitcounter.py ./manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid "The command line actually run by Axis for the above is:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " halcmd loadusr -Wn example gladevcp -c example -x {XID} -u ./hitcounter.py ./manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"The file specifiers like ./hitcounter.py, ./manual-example.ui, etc. indicate "
"that the files are located in the same directory as the ini file.  You might "
"have to copy them to you directory (alternatively, specify a correct "
"absolute or relative path to the file(s))"
msgstr ""

#. type: Plain text
msgid ""
"The +[RS274NGC]SUBROUTINE_PATH=+ option is only set so the example panel "
"will find the Oword subroutine (oword.ngc) for the MDI Command widget. It "
"might not be needed in your setup.  The relative path specifier ../../"
"nc_files/gladevcp_lib is constructed to work with directories copied by the "
"configuration picker and when using a run-in-place setup."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Embeding as a Tab"
msgstr ""

#. type: Plain text
msgid ""
"To do so, edit your .ini file and add to the DISPLAY and HAL sections of ini "
"file as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"# add GladeVCP panel as a tab next to Preview/DRO:\n"
"EMBED_TAB_NAME=GladeVCP demo\n"
"EMBED_TAB_COMMAND=halcmd loadusr -Wn gladevcp gladevcp -c gladevcp -x {XID} -u ./gladevcp/hitcounter.py ./gladevcp/manual-example.ui\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"# HAL commands for GladeVCP components in a tab must be executed via POSTGUI_HALFILE\n"
"POSTGUI_HALFILE =  ./gladevcp/manual-example.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"Note the 'halcmd loadusr' way of starting the tab command - this assures "
"that 'POSTGUI_HALFILE' will only be run after the HAL component is ready. In "
"rare cases you might run a command here which uses a tab but does not have "
"an associated HAL component. Such a command can be started without 'halcmd "
"loadusr', and this signifies to Axis that it does not have to wait for a HAL "
"component since there is none."
msgstr ""

#. type: Plain text
msgid ""
"When changing the component name in the above example, note that the names "
"used in +-Wn <component>+ and +-c <component>+ must be identical."
msgstr ""

#. type: Plain text
msgid ""
"Try it out by running Axis - there should be a new tab called 'GladeVCP "
"demo' near the DRO tab. Select that tab, you should see the example panel "
"nicely fit within Axis."
msgstr ""

#. type: Plain text
msgid ""
"Make sure the UI file is the last option passed to GladeVCP in both the "
"+GLADEVCP=+ and +EMBED_TAB_COMMAND=+ statements."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Integrating into Touchy"
msgstr ""

#. type: Plain text
msgid "To do add a GladeVCP tab to 'Touchy', edit your .ini file as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[DISPLAY]\n"
"# add GladeVCP panel as a tab\n"
"EMBED_TAB_NAME=GladeVCP demo\n"
"EMBED_TAB_COMMAND=gladevcp -c gladevcp -x {XID} -u ./hitcounter.py -H ./gladevcp-touchy.hal  ./manual-example.ui\n"
msgstr ""

#. type: Plain text
msgid "Note the following differences to the Axis tab setup:"
msgstr ""

#. type: Plain text
msgid "The HAL command file is slightly modified since 'Touchy' does not"
msgstr ""

#. type: Plain text
msgid ""
"use the 'halui' components so its signals are not available and some "
"shortcuts have been taken."
msgstr ""

#. type: Plain text
msgid ""
"there is no 'POSTGUI_HALFILE=' ini option, but passing the HAL command file "
"on the 'EMBED_TAB_COMMAND=' line is ok"
msgstr ""

#. type: Plain text
msgid "the 'halcmd loaduser -Wn ...' incantation is not needed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GladeVCP command line options"
msgstr ""

#. type: Plain text
msgid "See also 'man gladevcp' . These are the gladevcp command line options:"
msgstr ""

#. type: Plain text
msgid "Usage: gladevcp [options] myfile.ui"
msgstr ""

#. type: Plain text
msgid "Options:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-h, --help"
msgstr ""

#. type: Plain text
msgid "show this help message and exit"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-c NAME"
msgstr ""

#. type: Plain text
msgid "Set component name to NAME. Default is base name of UI file"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-d"
msgstr ""

#. type: Plain text
msgid "Enable debug output"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-g GEOMETRY"
msgstr ""

#. type: Plain text
msgid ""
"Set geometry WIDTHxHEIGHT+XOFFSET+YOFFSET. Values are in pixel units, "
"XOFFSET/YOFFSET is referenced from top left of screen.  Use -g WIDTHxHEIGHT "
"for just setting size or -g +XOFFSET+YOFFSET for just position"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-H FILE"
msgstr ""

#. type: Plain text
msgid ""
"execute hal statements from FILE with halcmd after the component is set up "
"and ready"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-m MAXIMUM"
msgstr ""

#. type: Plain text
msgid ""
"force panel window to maximize.  Together with the -g geometry option one "
"can move the panel to a second monitor and force it to use all of the screen"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-t THEME"
msgstr ""

#. type: Plain text
msgid ""
"set gtk theme. Default is system theme. Different panels can have different "
"themes.  An example theme can be found in the http://wiki.linuxcnc.org/cgi-"
"bin/wiki.pl?GTK_Themes[EMC Wiki]."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-x XID"
msgstr ""

#. type: Plain text
msgid ""
"Re-parent GladeVCP into an existing window XID instead of creating a new top "
"level window"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-u FILE"
msgstr ""

#. type: Plain text
msgid "Use File's as additional user defined modules with handlers"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-U USEROPT"
msgstr ""

#. type: Plain text
msgid "pass USEROPTs to Python modules"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Understanding the gladeVCP startup process"
msgstr ""

#. type: Plain text
msgid ""
"The integration steps outlined above look a bit tricky, and they are. It "
"does therefore help to understand the startup process of LinuxCNC and how "
"this relates to gladeVCP."
msgstr ""

#. type: Plain text
msgid "The normal LinuxCNC startup process does the following:"
msgstr ""

#. type: Plain text
msgid "the realtime environment is started"
msgstr ""

#. type: Plain text
msgid "all HAL components are loaded"
msgstr ""

#. type: Plain text
msgid "the HAL components are linked together through the .hal cmd scripts"
msgstr ""

#. type: Plain text
msgid "task, iocontrol and eventually the user interface is started"
msgstr ""

#. type: Plain text
msgid ""
"pre-gladeVCP the assumption was: by the time the UI starts, all of HAL is "
"loaded, plumbed and ready to go"
msgstr ""

#. type: Plain text
msgid "The introduction of gladeVCP brought the following issue:"
msgstr ""

#. type: Plain text
msgid ""
"gladeVCP panels need to be embedded in a master GUI window setup, e.g. Axis, "
"or Touchy, Gscreen, or Gmoccapy (embedded window or as an embedded tab)"
msgstr ""

#. type: Plain text
msgid ""
"this requires the master GUI to run before the gladeVCP window can be hooked "
"into the master GUI"
msgstr ""

#. type: Plain text
msgid ""
"however gladeVCP is also a HAL component, and creates HAL pins of its own."
msgstr ""

#. type: Plain text
msgid ""
"as a consequence, all HAL plumbing involving gladeVCP HAL pins as source or "
"destination must be run *after* the GUI has been set up"
msgstr ""

#. type: Plain text
msgid ""
"This is the purpose of the `POSTGUI_HALFILE`. This ini option is inspected "
"by the GUIs. If a GUI detects this option, it runs the corresponding HAl "
"file after any embedded gladVCP panel is set up. However, it does not check "
"whether a gladeVCP panel is actually used, in which case the HAL cmd file is "
"just run normally. So if you do NOT start gladeVCP through `GLADEVCP` or "
"`EMBED_TAB` etc, but later in a separate shell window or some other "
"mechanism, a HAL command file in `POSTGUI_HALFILE` will be executed too "
"early. Assuming gladeVCP pins are referenced herein, this will fail with an "
"error message indicating that the gladeVCP HAL component is not available."
msgstr ""

#. type: Plain text
msgid ""
"So, in case you run gladeVCP from a separate shell window (i.e. not started "
"by the GUI in an embedded fashion):"
msgstr ""

#. type: Plain text
msgid ""
"you cannot rely on the `POSTGUI_HALFILE` ini option causing the HAL commands "
"being run 'at the right point in time', so comment that out in the ini file"
msgstr ""

#. type: Plain text
msgid ""
"explicitly pass the HAL command file which refers to gladeVCP pins to "
"gladeVCP with the '-H <halcmd file>' option (see previous section)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Widget reference"
msgstr ""

#. type: Plain text
msgid ""
"GladeVcp includes a collection of Gtk widgets with attached HAL pins called "
"HAL Widgets, intended to control, display or otherwise interact with the "
"LinuxCNC HAL layer. They are intended to be used with the Glade user "
"interface editor. With proper installation, the HAL Widgets should show up "
"in Glade's 'HAL Python' widget group. Many HAL specific fields in the Glade "
"'General' section have an associated mouse-over tool tip."
msgstr ""

#. type: Plain text
msgid ""
"HAL signals come in two variants, bits and numbers. Bits are off/on signals. "
"Numbers can be \"float\", \"s32\" or \"u32\". For more information on HAL "
"data types see the <<sec:hal-data,HAL manual>>. The GladeVcp widgets can "
"either display the value of the signal with an indicator widget, or modify "
"the signal value with a control widget. Thus there are four classes of "
"GladeVcp widgets that you can connect to a HAL signal. Another class of "
"helper widgets allow you to organize and label your panel."
msgstr ""

#. type: Plain text
msgid "Widgets for indicating \"bit\" signals: <<gladevcp:hal-led,HAL_LED>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for controlling \"bit\" signals: <<gladevcp:hal-buttons,HAL_Button "
"HAL_RadioButton HAL_CheckButton>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for indicating \"number\" signals: <<gladevcp:hal-label,HAL_Label>>, "
"<<gladevcp:hal-progressbar,HAL_ProgressBar>>, <<gladevcp:hal-bars,HAL_HBar "
"and HAL_VBar>>, <<gladevcp:hal-meter,HAL_Meter>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for controlling \"number\" signals: <<gladevcp:hal-spinbutton,"
"HAL_SpinButton>>, <<gladevcp:hal-scales,HAL_HScale and HAL_VScale>>, "
"<<gladevcp:jogwheel, Jog Wheel>>, <<gladevcp:speedcontrol, Speed Control>>"
msgstr ""

#. type: Plain text
msgid ""
"Sensitive control widgets: <<gladevcp:hal-table, State_Sensitive_Table "
"HAL_Table and HAL_HBox>>"
msgstr ""

#. type: Plain text
msgid "Tool Path preview: <<gladevcp:hal-gremlin,HAL_Gremlin>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets to show axis positions: <<gladevcp:dro_widget, DRO Widget>>, "
"<<gladevcp:combi_dro, Combi DRO Widget>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for file handling: <<gladevcp:iconview, IconView File Selection>>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for display/edit of all axes offsets: <<gladevcp:offsetpage, "
"OffsetPage >>"
msgstr ""

#. type: Plain text
msgid ""
"Widgets for display/edit of all tool offsets: <<gladevcp:tooledit, "
"Tooloffset editor >>"
msgstr ""

#. type: Plain text
msgid ""
"Widget for Gcode display and edit: <<gladevcp:hal-sourceview, HAL_Sourceview "
">>"
msgstr ""

#. type: Plain text
msgid ""
"widget for MDI input and history display: <<gladevcp:mdi-history, MDI "
"History >>"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Widget and HAL pin naming"
msgstr ""

#. type: Plain text
msgid ""
"Most HAL widgets have a single associated HAL pin with the same HAL name as "
"the widget (glade: GeneralâName)."
msgstr ""

#. type: Plain text
msgid "Exceptions to this rule currently are."
msgstr ""

#. type: Plain text
msgid ""
"'HAL_Spinbutton' and 'HAL_ComboBox', which have two pins: a +<widgetname>-f+ "
"(float) and a +<widgetname>-s+ (s32) pin"
msgstr ""

#. type: Plain text
msgid ""
"'HAL_ProgressBar', which has a +<widgetname>-value+ input pin, and a "
"+<widgetname>-scale+ input pin."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Python attributes and methods of HAL Widgets"
msgstr ""

#. type: Plain text
msgid ""
"HAL widgets are instances of GtKWidgets and hence inherit the methods, "
"properties and signals of the applicable GtkWidget class. For instance, to "
"figure out which GtkWidget-related methods, properties and signals a "
"'HAL_Button' has, lookup the description of http://www.pygtk.org/docs/pygtk/"
"class-gtkbutton.html[GtkButton] in the http://www.pygtk.org/docs/pygtk[PyGtk "
"Reference Manual]."
msgstr ""

#. type: Plain text
msgid ""
"An easy way to find out the inheritance relationship of a given HAL widget "
"is as follows: run glade, place the widget in a window, and select it; then "
"choose the 'Signals' tab in the 'Properties' window. For example, selecting "
"a 'HAL_LED' widget, this will show that a 'HAL_LED' is derived from a "
"'GtkWidget', which in turn is derived from a 'GtkObject', and eventually a "
"'GObject'."
msgstr ""

#. type: Plain text
msgid "HAL Widgets also have a few HAL-specific Python attributes:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_pin"
msgstr ""

#. type: Plain text
msgid ""
"the underlying HAL pin Python object in case the widget has a single pin type"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_pin_s, hal_pin_f"
msgstr ""

#. type: Plain text
msgid ""
"the S32 and float pins of the 'HAL_Spinbutton' and 'HAL_ComboBox' widgets - "
"note these widgets do not have a 'hal_pin' attribute!"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_pin_scale"
msgstr ""

#. type: Plain text
msgid ""
"the float input pin of 'HAL_ProgressBar' widget representing the maximum "
"absolute value of input."
msgstr ""

#. type: Plain text
msgid ""
"The are several HAL-specific methods of HAL Widgets, but the only relevant "
"method is:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<halpin>.get()"
msgstr ""

#. type: Plain text
msgid ""
"  Retrieve the value of the current HAL pin, where '<halpin>' is the "
"applicable HAL pin name listed above."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting pin and widget values"
msgstr ""

#. type: Plain text
msgid ""
"As a general rule, if you need to set a HAL output widget's value from "
"Python code, do so by calling the underlying Gtk 'setter' (e.g.  "
"+set_active()+, +set_value()+) - do not try to set the associated pin's "
"value by +halcomp[pinname] = value+ directly because the widget will not "
"take notice of the change!."
msgstr ""

#. type: Plain text
msgid ""
"It might be tempting to 'set HAL widget input pins' programmatically.  Note "
"this defeats the purpose of an input pin in the first place - it should be "
"linked to, and react to signals generated by other HAL components. While "
"there is currently no write protection on writing to input pins in HAL "
"Python, this doesn't make sense. You might use setp pinname value in the "
"associated halfile for testing though."
msgstr ""

#. type: Plain text
msgid ""
"It is perfectly OK to set an output HAL pin's value with +halcomp[pinname] = "
"value+ provided this HAL pin is not associated with a widget, that is, has "
"been created by the +hal_glib.GPin(halcomp.newpin(<name>,<type>,"
"<direction>)+ method (see <<gladevcp:programming,GladeVCP Programming>> for "
"an example)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The hal-pin-changed signal"
msgstr ""

#. type: Plain text
msgid ""
"Event-driven programming means that the UI tells your code when \"something "
"happens\" - through a callback, like when a button was pressed. The output "
"HAL widgets (those which display a HAL pin's value) like LED, Bar, VBar, "
"Meter etc, support the 'hal-pin-changed' signal which may cause a callback "
"into your Python code when - well, a HAL pin changes its value. This means "
"there's no more need for permanent polling of HAL pin changes in your code, "
"the widgets do that in the background and let you know."
msgstr ""

#. type: Plain text
msgid ""
"Here is an example how to set a +hal-pin-changed+ signal for a HAL_LED in "
"the Glade UI editor:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal-pin-change-66.png"
msgstr ""

#. type: Plain text
msgid ""
"The example in +configs/apps/gladevcp/complex+ shows how this is handled in "
"Python."
msgstr ""

#. type: Plain text
msgid ""
"This group of widgets are derived from various Gtk buttons and consists of "
"HAL_Button, HAL_ToggleButton, HAL_RadioButton and CheckButton widgets. All "
"of them have a single output BIT pin named identical to the widget. Buttons "
"have no additional properties compared to their base Gtk classes."
msgstr ""

#. type: Plain text
msgid ""
"HAL_Button: instantaneous action, does not retain state. Important signal: "
"+pressed+"
msgstr ""

#. type: Plain text
msgid ""
"HAL_ToggleButton, HAL_CheckButton: retains on/off state. Important signal: "
"+toggled+"
msgstr ""

#. type: Plain text
msgid ""
"HAL_RadioButton: a one-of-many group. Important signal: +toggled+ (per "
"button)."
msgstr ""

#. type: Plain text
msgid "Important common methods: +set_active()+, +get_active()+"
msgstr ""

#. type: Plain text
msgid "Important properties: +label+, +image+"
msgstr ""

#.  .Buttons
#. type: Plain text
msgid "Check button: image:images/checkbutton.png[]"
msgstr ""

#. type: Plain text
msgid "Radio buttons: image:images/radiobutton.png[]"
msgstr ""

#. type: Plain text
msgid "Toggle button: image:images/button.png[]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Defining radio button groups in Glade:\n"
" +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "decide on default active button\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"in the other button's 'GeneralâGroup' select the default active\n"
"button's name in the 'Choose a Radio Button in this project' dialog.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"+\n"
"See +configs/apps/gladevcp/by-widget/+ for a GladeVCP applications\n"
"and UI file for working with radio buttons.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Scales"
msgstr ""

#. type: Plain text
msgid ""
"HAL_HScale and HAL_VScale are derived from the GtkHScale and GtkVScale + "
"respectively. +"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>"
msgstr ""

#. type: Plain text
msgid "out FLOAT pin"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-s"
msgstr ""

#. type: Plain text
msgid "out S32 pin"
msgstr ""

#. type: Plain text
msgid ""
"To make a scale useful in Glade, add an 'Adjustment' + "
"(GeneralâAdjustmentâNew or existing adjustment) and edit the + adjustment "
"object. It defines the default/min/max/increment + values. Also, set "
"adjustment 'Page size' and 'Page increment' to zero + to avoid warnings. +"
msgstr ""

#. type: Plain text
msgid "Example HAL_HScale: image:images/hscale.png[] ."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SpinButton"
msgstr ""

#. type: Plain text
msgid "HAL SpinButton is derived from GtkSpinButton and holds two pins:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-f"
msgstr ""

#. type: Plain text
msgid ""
"To be useful, Spinbuttons need an adjustment value like scales, see above."
msgstr ""

#. type: Plain text
msgid "Example SpinButton: image:images/spinbutton.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal_Dial"
msgstr ""

#. type: Plain text
msgid ""
"The hal_dial widget simulates a jogwheel or adjustment dial. + It can be "
"operated with the mouse. You can just use the mouse wheel, while the mouse "
"cursor is over the Hal_Dial widget, + or you hold the left mouse button and "
"move the cursor in circular direction to increase or degrease the counts. + "
"By double clicking the left or right button the scale factor can be "
"increased or decreased. +"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Counterclockwise   = reduce counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Clockwise          = increase counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Wheel up           = increase counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Wheel down         = reduce counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "left Double Click  = x10 scale\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Right Double Click = /10 scale\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "Hal_Dial exports it's count value as hal pins:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<widgetname>::\n"
"   out S32 pin\n"
"<widgetname>-scaled::\n"
"   out FLOAT pin\n"
"<widgetname>-delta-scaled::\n"
"   out FLOAT pin\n"
msgstr ""

#. type: Plain text
msgid "It has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "cpr"
msgstr ""

#. type: Plain text
msgid ""
"Sets the Counts per Revolution, allowed values are in the range from 25 to "
"360 + default = 100"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show_counts"
msgstr ""

#. type: Plain text
msgid ""
"Set this to False, if you want to hide the counts display in the middle of "
"the widget. + default = True"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "label"
msgstr ""

#. type: Plain text
msgid ""
"Set the content of the label witch may be shown over the counts value. + If "
"the label given is longer than 15 Characters, it will be cut to 15 "
"Characters. + default = blank"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "center_color"
msgstr ""

#. type: Plain text
msgid ""
"This allows one to change the color of the wheel. It uses a GDK color "
"string. + default = #bdefbdefbdef (gray)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "count_type_shown"
msgstr ""

#. type: Plain text
msgid ""
"There are three counts available 0) Raw CPR counts 1) Scaled counts 2) Delta "
"scaled counts. + default = 1"
msgstr ""

#. type: Plain text
msgid ""
"count is based on the CPR selected - it will count positive and negative. It "
"is available as a S32 pin. +"
msgstr ""

#. type: Plain text
msgid ""
"Scaled-count is CPR count times the scale - it can be positive and negative. "
"+"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "If you change the scale the output will immediately reflect the change. It is available as a FLOAT pin. +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Delta-scaled-count is cpr count CHANGE, times scale. +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"If you change the scale, only the counts after that change will be scaled and then added to the current value. +\n"
"It is available as a FLOAT pin.\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "scale_adjustable"
msgstr ""

#. type: Plain text
msgid ""
"Set this to False if you want to disallow scale changes by double clicking "
"the widget. + If this is false the scale factor will not show on the widget. "
"+ default = True"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "scale"
msgstr ""

#. type: Plain text
msgid "Set this to scale the counts. + default = 1.0"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Direct program control"
msgstr ""

#. type: Plain text
msgid "There are ways to directly control the widget using Python."
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the above listed properties: [widget name]."
"set_property(\"cpr\",int(value))  [widget name].set_property(\"show_counts, "
"True)  [widget name].set_property(\"center_color\",gtk.gdk."
"Color('#bdefbdefbdef'))  [widget name].set_property('label', 'Test Dial "
"12345')  [widget name].set_property('scale_adjustable', True)  [widget name]."
"set_property('scale', 10.5)  [widget name].set_property('count_type_shown', "
"0)"
msgstr ""

#. type: Plain text
msgid ""
"There are python methods: [widget name].get_value()  Will return the counts "
"value as a s32 integer [widget name].get_scaled_value()  Will return the "
"counts value as a float [widget name].get_delta_scaled_value()  Will return "
"the counts value as a float [widget name].set_label(\"string\")  Sets the "
"label content with \"string\""
msgstr ""

#. type: Plain text
msgid ""
"There are two GObject signals emitted: count_changed emitted when the "
"widget's count changes eg. from being wheel scrolled.  scale_changed emitted "
"when the widget's scale changes eg. from double clicking. + connect to these "
"like so: [widget name].connect('count_changed', [count function name])  "
"[widget name].connect('scale_changed', [scale function name]) + The callback "
"functions would use this pattern: def [count function name](widget, count,"
"scale,delta_scale): This will return: the widget, the current count, scale "
"and delta scale of that widget."
msgstr ""

#. type: Plain text
msgid "Example Hal_Dial:"
msgstr ""

#. type: Plain text
msgid "image::images/Hal_Dial.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Jog Wheel"
msgstr ""

#. type: Plain text
msgid ""
"The jogwheel widget simulates a real jogwheel. + It can be operated with the "
"mouse. You can just use the mouse wheel, while the mouse cursor is over the "
"JogWheel widget, + or you push the left mouse button and move the cursor in "
"circular direction to increase or degrease the counts. +"
msgstr ""

#. type: Plain text
msgid "Counterclockwise = reduce counts"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Clockwise        = increase counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Wheel up         = increase counts\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Wheel down       = reduce counts\n"
msgstr ""

#. type: Plain text
msgid ""
"As moving the mouse the drag and drop way may be faster than the widget can "
"update itself, you may loose counts turning to fast.  It is recommended to "
"use the mouse wheel, and only for very rough movements the drag and drop way."
msgstr ""

#. type: Plain text
msgid "JogWheel exports it's count value as hal pin:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "size"
msgstr ""

#. type: Plain text
msgid ""
"Sets the size in pixel of the widget, allowed values are in the range of 100 "
"to 500 default = 200"
msgstr ""

#. type: Plain text
msgid ""
"Sets the Counts per Revolution, allowed values are in the range from 25 to "
"100 default = 40"
msgstr ""

#. type: Plain text
msgid ""
"Set this to False, if you want to hide the counts display in the middle of "
"the widget."
msgstr ""

#. type: Plain text
msgid ""
"Set the content of the label witch may be shown over the counts value. The "
"purpose is to give the user an idea about the usage of that jogwheel. If the "
"label given is longer than 12 Characters, it will be cut to 12 Characters."
msgstr ""

#. type: Plain text
msgid "There a couple ways to directly control the widget using Python."
msgstr ""

#. type: Plain text
msgid ""
"Using gobject to set the above listed properties: [widget name]."
"set_property(\"size\",int(value))  [widget name].set_property(\"cpr\","
"int(value))  [widget name].set_property(\"show_counts, True)"
msgstr ""

#. type: Plain text
msgid ""
"There are two python methods: [widget name].get_value()  Will return the "
"counts value as integer [widget name].set_label(\"string\")  Sets the label "
"content with \"string\""
msgstr ""

#. type: Plain text
msgid "Example JogWheel:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/JogWheel.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Speed Control"
msgstr ""

#. type: Plain text
msgid ""
"SpeedControl is a widget specially made to control an adjustment with a "
"touch screen. It is a replacement to the normal scale widget witch is "
"difficult to slide on a touch screen."
msgstr ""

#. type: Plain text
msgid ""
"The value is controlled with two button to increase or decrease the value.  "
"The Increment will change as long a button is pressed. The value of each "
"increment as well as the time between two changes can be set using the "
"widget properties."
msgstr ""

#. type: Plain text
msgid "SpeedControl offers some hal pin:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-value"
msgstr ""

#. type: Plain text
msgid "out float pin The shown value of the widget"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-scaled-value"
msgstr ""

#. type: Plain text
msgid ""
"out float pin The shown value divided by the scale value, this is very "
"useful, if the velocity is shown in units / min, but linuxcnc expects it to "
"be in units / second"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-scale"
msgstr ""

#. type: Plain text
msgid "in float pin The scale to apply Default is 60"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-increase"
msgstr ""

#. type: Plain text
msgid ""
"in bit pin As long as the pin is true, the value will increase Very handy "
"with connected momentary switch"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<widgetname>-decrease"
msgstr ""

#. type: Plain text
msgid ""
"in bit pin As long as the pin is true, the value will decrease Very handy "
"with connected momentary switch"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "height"
msgstr ""

#. type: Plain text
msgid ""
"integer The height of the widget in pixel allowed values are 24 to 96 "
"default is 36"
msgstr ""

#. type: Plain text
msgid ""
"float The start value to set allowed values are in the range from 0.001 to "
"99999.0 default is 10.0"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "min"
msgstr ""

#. type: Plain text
msgid ""
"float The min allowed value allowed values are 0.0 to 99999.0 default is 0.0 "
"If you change this value, the increment will be reset to default, so it "
"might be necessary to set afterwards a new increment."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "max"
msgstr ""

#. type: Plain text
msgid ""
"float The max allowed value allowed values are 0.001 to 99999.0 default is "
"100.0 If you change this value, the increment will be reset to default, so "
"it might be necessary to set afterwards a new increment."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "increment"
msgstr ""

#. type: Plain text
msgid ""
"float sets the applied increment per mouse click allowed values are 0.001 to "
"99999.0 and -1 default is -1 resulting in 100 increments from min to max"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "inc_speed"
msgstr ""

#. type: Plain text
msgid ""
"integer Sets the timer delay for the increment speed holding pressed the "
"buttons allowed values are 20 to 300 default is 100"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "unit"
msgstr ""

#. type: Plain text
msgid ""
"string Sets the unit to be shown in the bar after the value any string is "
"allowed default is \"\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "color"
msgstr ""

#. type: Plain text
msgid ""
"Color Sets the color of the bar any hex color is allowed default is "
"\"#FF8116\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "template"
msgstr ""

#. type: Plain text
msgid ""
"String Text template to display the value Python formatting is used Any "
"allowed format default is \"%.1f\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "do_hide_button"
msgstr ""

#. type: Plain text
msgid ""
"Boolean Whether to show or hide the increment an decrement button True or "
"False Default = False"
msgstr ""

#. type: Plain text
msgid ""
"Using gobject to set the above listed properties: [widget name]."
"set_property(\"do_hide_button\",bool(value))  [widget name]."
"set_property(\"color\",\"#FF00FF\")  [widget name].set_property(\"unit\", "
"\"mm/min\")  etc."
msgstr ""

#. type: Plain text
msgid ""
"There are also python methods to modify the widget: [widget name]."
"set_adjustment(gtk-adjustment)  You can assign a existing adjustment to the "
"control, that way it is easy to replace existing sliders without many code "
"changes. Be aware, that after changing the adjustment you may need to set a "
"new increment, as it will be reset to its default (100 steps from MIN to "
"MAX)  [widget name].get_value()  Will return the counts value as float "
"[widget name].set_value(float(value))  Sets the widget to the commanded "
"value [widget name].set_digits(int(value))  Sets the digits of the value to "
"be used [widget name].hide_button(bool(value))  Hide or show the button"
msgstr ""

#. type: Plain text
msgid "Example Speedcontrol:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/SpeedControl.png"
msgstr ""

#. type: Plain text
msgid ""
"HAL_Label is a simple widget based on GtkLabel which represents a HAL pin "
"value in a user-defined format."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "label_pin_type"
msgstr ""

#. type: Plain text
msgid ""
"The pin's HAL type (0:S32, 1:float, 2:U32), see also the tooltip on "
"'GeneralâHAL pin type '(note this is different from PyVCP which has three "
"label widgets, one for each type)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "text_template"
msgstr ""

#. type: Plain text
msgid ""
"Determines the text displayed - a Python format string to convert the pin "
"value to text. Defaults to +%s+ (values are converted by the str() function) "
"but may contain any legit as an argument to Pythons format() method. + "
"Example: +Distance: %.03f+ will display the text and the pin value with 3 "
"fractional digits padded with zeros for a FLOAT pin."
msgstr ""

#. type: Plain text
msgid "HAL_HideTable"
msgstr ""

#. type: Plain text
msgid "HAL_Table State_Sensitive_Table"
msgstr ""

#. type: Plain text
msgid "HAL_HBox"
msgstr ""

#. type: Plain text
msgid ""
"These containers are meant to be used to sensitize (grey out) or hide their "
"children. + Insensitived children will not respond to input. + HAL_HideTable "
"has one HAL BIT input pin which controls if it's child widgets are hidden or "
"not. +"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<Panel_basename>.<widgetname>"
msgstr ""

#. type: Plain text
msgid ""
"If the pin is low then child widgets are visible which is the default state."
msgstr ""

#. type: Plain text
msgid ""
"HAL_Table and HAL_Hbox have one HAL BIT input pin which controls if their "
"child widgets are sensitive or not. + These widgets's pin name uses the "
"convention: +"
msgstr ""

#. type: Plain text
msgid ""
"If the pin is low then child widgets are inactive which is the default state."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"State_Sensitive_table responds to the state to linuxcnc's interpreter. +\n"
"optionally selectable to respond to 'must-be-all-homed','must-be-on' and 'must-be-idle' +\n"
"You can combine them. It will always be insensitive at Estop. +\n"
" +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"HAL_Hbox is depreceiated - use HAL_Table. +\n"
"If current panels use it it won't fail. You just won't find it in the GLADE editor anymore. +\n"
"Future versions of gladeVCP may remove this widget completely and then you will need to update the panel. +\n"
msgstr ""

#. type: Plain text
msgid ""
"If you find some part of your GladeVCP application is 'grayed "
"out' (insensitive), see whether a HAL_Table pin is unset or unconnected."
msgstr ""

#. type: Plain text
msgid ""
"The hal_led simulates a real indicator LED. + It has a single input BIT pin "
"which controls it's state: ON or OFF. + LEDs have several properties which "
"control their look and feel: +"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "on_color"
msgstr ""

#. type: Plain text
msgid ""
"a String defining ON color of LED. May be any valid gdk.Color name. Not "
"working on Ubuntu 8.04."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "off_color"
msgstr ""

#. type: Plain text
msgid ""
"String defining OFF color of LED. May be any valid gdk.Color name or special "
"value `dark`. `dark` means that OFF color will be set to 0.4 value of ON "
"color. Not working on Ubuntu 8.04."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pick_color_on, pick_color_off"
msgstr ""

#. type: Plain text
msgid ""
"Colors for ON and OFF states may be represented as `#RRRRGGGGBBBB` strings. "
"These are optional properties which have precedence over `on_color` and "
"`off_color`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "led_size"
msgstr ""

#. type: Plain text
msgid "LED radius (for square - half of LED's side)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "led_shape"
msgstr ""

#. type: Plain text
msgid ""
"LED Shape. Valid values are 0 for round, 1 for oval and 2 for square shapes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "led_blink_rate"
msgstr ""

#. type: Plain text
msgid ""
"if set and LED is ON then it's blinking. Blink period is equal to "
"\"led_blink_rate\" specified in milliseconds."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "create hal pin"
msgstr ""

#. type: Plain text
msgid ""
"select/deselect making of HAL pin to control LED. With no HAL pin created "
"LED can be controlled with a python function.  As an input widget, LED also "
"supports the +hal-pin-changed signal+. If you want to get a notification in "
"your code when the LED's HAL pin was changed, then connect this signal to a "
"handler, for example +on_led_pin_changed+ and provide the handler as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def on_led_pin_changed(self,hal_led,data=None):\n"
"    print \"on_led_pin_changed() - HAL pin value:\",hal_led.hal_pin.get()\n"
msgstr ""

#. type: Plain text
msgid ""
"This will be called at any edge of the signal and also during program start "
"up to report the current value."
msgstr ""

#. type: Plain text
msgid "Example LEDs: image:images/leds.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ProgressBar"
msgstr ""

#. type: Plain text
msgid ""
"This widget might go away. Use the HAL_HBar and HAL_VBar widgets instead."
msgstr ""

#. type: Plain text
msgid ""
"The HAL_ProgressBar is derived from gtk.ProgressBar and has two float HAL "
"input pins:"
msgstr ""

#. type: Plain text
msgid "the current value to be displayed"
msgstr ""

#. type: Plain text
msgid "the maximum absolute value of input"
msgstr ""

#. type: Plain text
msgid ""
"value scale. set maximum absolute value of input. Same as setting the "
"<widgetname>.scale pin. A float, range from -2^24 to +2^24."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "green_limit"
msgstr ""

#. type: Plain text
msgid "green zone limit lower limit"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "yellow_limit"
msgstr ""

#. type: Plain text
msgid "yellow zone limit lower limit"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "red_limit"
msgstr ""

#. type: Plain text
msgid "red zone limit lower limit"
msgstr ""

#. type: Plain text
msgid ""
"Text template to display the current value of the +<widgetname>+ pin. Python "
"formatting may be used for dict +{\"value\":value}+"
msgstr ""

#. type: Plain text
msgid "Example HAL_ProgressBar: image:images/progressbar2.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ComboBox"
msgstr ""

#. type: Plain text
msgid ""
"HAL_ComboBox is derived from gtk.ComboBox. It enables choice of a value from "
"a dropdown list."
msgstr ""

#. type: Plain text
msgid "It exports two HAL pins:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the current value, type FLOAT\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the current value, type S32\n"
msgstr ""

#. type: Plain text
msgid "It has the following property which can be set in Glade:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "column"
msgstr ""

#. type: Plain text
msgid "the column index, type S32, defaults to -1, range from -1..100 ."
msgstr ""

#. type: Plain text
msgid ""
"In default mode this widgets sets the pins to the index of the chosen list "
"entry. So if your widget has three labels, it may only assume values 0,1 and "
"2."
msgstr ""

#. type: Plain text
msgid ""
"In column mode (column > -1), the value reported is chosen from the "
"ListStore array as defined in Glade. So typically your widget definition "
"would have two columns in the ListStore , one with text displayed in the "
"dropdown, and an int or float value to use for that choice."
msgstr ""

#. type: Plain text
msgid ""
"There's an example in +configs/apps/by-widget/combobox.{py,ui}+ which uses "
"column mode to pick a float value from the ListStore."
msgstr ""

#. type: Plain text
msgid ""
"If you're confused like me about how to edit ComboBox ListStores and "
"CellRenderer, see http://www.youtube.com/watch?v=Z5_F-rW2cL8."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Bars"
msgstr ""

#. type: Plain text
msgid ""
"HAL Bar and VBar widgets for horizontal and vertical bars representing float "
"values. They have one input FLOAT hal pin. Both bars have the following "
"properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "invert"
msgstr ""

#. type: Plain text
msgid ""
"Swap min and max direction. An inverted HBar grows from right to left, an "
"inverted VBar from top to bottom."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "min, max"
msgstr ""

#. type: Plain text
msgid ""
"Minimum and maximum value of desired range. It is not an error condition if "
"the current value is outside this range."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show limits"
msgstr ""

#. type: Plain text
msgid "Used to select/deselect the limits text on bar."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "zero"
msgstr ""

#. type: Plain text
msgid ""
"Zero point of range. If it's inside of min/max range then the bar will grow "
"from that value and not from the left (or right) side of the widget. Useful "
"to represent values that may be both positive or negative."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "force_width, force_height"
msgstr ""

#. type: Plain text
msgid ""
"Forced width or height of widget. If not set then size will be deduced from "
"packing or from fixed widget size and bar will fill whole area."
msgstr ""

#. type: Plain text
msgid ""
"Like in Label sets text format for min/max/current values. Can be used to "
"turn off value display."
msgstr ""

#. type: Plain text
msgid ""
"Sets the bar display to the value entered: used only for testing in GLADE "
"editor. The value will be set from A HAL pin."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "target value"
msgstr ""

#. type: Plain text
msgid ""
"Sets the target line to the value entered: used only for testing in GLADE "
"editor. The value will can be set in a Python function"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "target_width"
msgstr ""

#. type: Plain text
msgid "Width of the line that marks the target value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "bg_color"
msgstr ""

#. type: Plain text
msgid "Background (inactive) color of bar."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "target_color"
msgstr ""

#. type: Plain text
msgid "Color of the the target line."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "z0_color, z1_color, z2_color"
msgstr ""

#. type: Plain text
msgid ""
"Colors of different value zones.  Defaults are `green`, `yellow` and `red`. "
"For description of zones see `z*_border` properties."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "z0_border, z1_border"
msgstr ""

#. type: Plain text
msgid ""
"Define up bounds of color zones. By default only one zone is enabled. If you "
"want more then one zone set `z0_border` and `z1_border` to desired values so "
"zone 0 will fill from 0 to first border, zone 1 will fill from first to "
"second border and zone 2 -- from last border to 1. Borders are set as "
"fractions, values from 0 to 1."
msgstr ""

#. type: Plain text
msgid ""
"Horizontal bar: image:images/hal_hbar.png[] Vertical bar: image:images/"
"vscale.png[] ."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Meter"
msgstr ""

#. type: Plain text
msgid ""
"HAL Meter is a widget similar to PyVCP meter - it represents a float value "
"and has one input FLOAT hal pin. HAL Meter has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "force_size"
msgstr ""

#. type: Plain text
msgid ""
"Forced diameter of widget. If not set then size will be deduced from packing "
"or from fixed widget size and meter will fill all available space with "
"respect to aspect ratio."
msgstr ""

#. type: Plain text
msgid ""
"Like in Label sets text format for current value. Can be used to turn off "
"value display."
msgstr ""

#. type: Plain text
msgid "Large label above center of meter."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sublabel"
msgstr ""

#. type: Plain text
msgid "Small label below center of meter."
msgstr ""

#. type: Plain text
msgid "Background color of meter."
msgstr ""

#. type: Plain text
msgid ""
"Colors of different value zones. Defaults are `green`, `yellow` and `red`. "
"For description of zones see `z*_border` properties."
msgstr ""

#. type: Plain text
msgid ""
"Define up bounds of color zones. By default only one zone is enabled. If you "
"want more then one zone set `z0_border` and `z1_border` to desired values so "
"zone 0 will fill from min to first border, zone 1 will fill from first to "
"second border and zone 2 -- from last border to max. Borders are set as "
"values in range min-max."
msgstr ""

#. type: Plain text
msgid "Example HAL Meters: image:images/hal_meter.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL_Graph"
msgstr ""

#. type: Plain text
msgid "This widget is for plotting values over time."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Gremlin tool path preview for .ngc files"
msgstr ""

#. type: Plain text
msgid ""
"Gremlin is a plot preview widget similar to the Axis preview window.  It "
"assumes a running LinuxCNC environment like Axis or Touchy. To connect to "
"it, inspects the INI_FILE_NAME environment variable. Gremlin displays the "
"current .ngc file - it does monitor for changes and reloads the ngc file if "
"the file name in Axis/Touchy changes. If you run it in a GladeVCP "
"application when LinuxCNC is not running, you might get a traceback because "
"the Gremlin widget can't find LinuxCNC status, like the current file name."
msgstr ""

#. type: Plain text
msgid "Gremlin does not export any HAL pins. It has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show tool speed"
msgstr ""

#. type: Plain text
msgid "This displays the tool speed. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show commanded"
msgstr ""

#. type: Plain text
msgid "This selects the DRO to use commanded or actual values. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "use metric units"
msgstr ""

#. type: Plain text
msgid "This selects the DRO to use metric or imperial units. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show rapids"
msgstr ""

#. type: Plain text
msgid "This tells the plotter to show the rapid moves. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show DTG"
msgstr ""

#. type: Plain text
msgid "This selects the DRO to display the distance-to-go value. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show relative"
msgstr ""

#. type: Plain text
msgid ""
"This selects the DRO to show values relative to user system or machine "
"coordinates. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show live plot"
msgstr ""

#. type: Plain text
msgid "This tells the plotter to draw or not. Defaults true"
msgstr ""

#. type: Plain text
msgid "This tells the plotter to show the machine's limits. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show lathe radius"
msgstr ""

#. type: Plain text
msgid ""
"This selects the DRO to display the X axis in radius or diameter, if in "
"lathe mode (selectable in the INI file with LATHE = 1). Defaults false"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show extents"
msgstr ""

#. type: Plain text
msgid "This tells the plotter to show the extents. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show tool"
msgstr ""

#. type: Plain text
msgid "This tells the plotter to draw the tool. Defaults true"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "show program"
msgstr ""

#. type: Plain text
msgid "TODO"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "use joints mode"
msgstr ""

#. type: Plain text
msgid "Used in non trivialkins machines (eg robots). Defaults false"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "grid size"
msgstr ""

#. type: Plain text
msgid ""
"Sets the size of the grid. which is only visible in the X, Y and Z view.  "
"Defaults to 0"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "use default mouse controls"
msgstr ""

#. type: Plain text
msgid ""
"This disables the default mouse controls. This is most useful when using a "
"touchscreen as the default controls do not work well. You can programically "
"add controls using python and the handler file technique. Defaults to 'True'"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "view "
msgstr ""

#. type: Plain text
msgid ""
"may be any of `x`, `y`, 'y2' , `z`, 'z2' , `p` (perspective) . Defaults to "
"`z` view."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "enable_dro "
msgstr ""

#. type: Plain text
msgid "boolean; whether to draw a DRO on the plot or not.  Defaults to `True`"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mouse_btn_mode "
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"integer; mouse button handling, leads to different functions of the button\n"
"0 = default: left rotate, middle move,   right zoom\n"
"1 =          left zoom,   middle move,   right rotate\n"
"2 =          left move,   middle rotate, right zoom\n"
"3 =          left zoom,   middle rotate, right move\n"
"4 =          left move,   middle zoom,   right rotate\n"
"5 =          left rotate, middle zoom,   right move\n"
"6 =          left move,   middle zoom,   right zoom\n"
msgstr ""

#. type: Plain text
msgid ""
"mode 6 is recommended for plasmas and lathes, as rotation is not needed for "
"such machines"
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the above listed properties: [widget name]."
"set_property('view','P')  [widget name].set_property('metric_units',False)  "
"[widget name].set_property('use_default_controls',False)  [widget name]."
"set_property('enable_dro' False))  [widget name]."
"set_property('show_program', False)  [widget name]."
"set_property('show_limits', False)  [widget name]."
"set_property('show_extents_option', False)  [widget name]."
"set_property('show_live_plot', False)  [widget name]."
"set_property('show_tool', False)  [widget name]."
"set_property('show_lathe_radius',True)  [widget name]."
"set_property('show_dtg',True)  [widget name].set_property('show_velocity',"
"False)  [widget name].set_property('mouse_btn_mode', 4)"
msgstr ""

#. type: Plain text
msgid ""
"There are python methods: [widget name].show_offsets = True [widget name]."
"grid_size = .75 [widget name].select_fire(event.x,event.y)  [widget name]."
"select_prime(event.x,event.y)  [widget name].start_continuous_zoom(event.y)  "
"[widget name].set_mouse_start(0,0)  [widget name].gremlin.zoom_in()  [widget "
"name].gremlin.zoom_out()  [widget name].get_zoom_distance()  [widget name]."
"set_zoom_distance(dist)  [widget name].clear_live_plotter()  [widget name]."
"rotate_view(x,y)  [widget name].pan(x,y)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Hints"
msgstr ""

#. type: Plain text
msgid ""
"If you set all the plotting options false but show_offsets true you get an"
msgstr ""

#. type: Plain text
msgid "offsets page instead of a graphics plot."
msgstr ""

#. type: Plain text
msgid ""
"If you get the zoom distance before changing the view then reset the zoom"
msgstr ""

#. type: Plain text
msgid "distance, it's much more user friendly."
msgstr ""

#. type: Plain text
msgid ""
"if you select an element in the preview, the selected element will be used"
msgstr ""

#. type: Plain text
msgid "as rotation center point"
msgstr ""

#. type: Plain text
msgid "Example: image:images/gremlin.png[]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL_Offset"
msgstr ""

#. type: Plain text
msgid ""
"The HAL_Offset widget is used to display the offset of a single axis.  It "
"has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Joint Number"
msgstr ""

#. type: Plain text
msgid ""
"Used to select which axis (technically which joint) is displayed.  On a "
"trivialkins machine (mill, lathe, router) axis vrs joint number are:"
msgstr ""

#. type: Plain text
msgid "0:X 1:Y 2:Z 3:A 4:B 5:C 6:U 7:V 8:W"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Text template for metric units"
msgstr ""

#. type: Plain text
msgid ""
"You can use python formatting to display the position with different "
"precision."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Text template for imperial units"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Reference Type"
msgstr ""

#. type: Plain text
msgid "0:G5x 1:tool 2:G92 3:Rotation around Z"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DRO widget"
msgstr ""

#. type: Plain text
msgid ""
"The DRO widget is used to display the current axis position.  It has the "
"following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Actual Position"
msgstr ""

#. type: Plain text
msgid "select actual (feedback) position or commanded position."
msgstr ""

#. type: Plain text
msgid ""
"Absolute <<sec.machine-coordinate-system,(machine origin)>>, Relative (to "
"current user coordinate origin - G5x)  or Distance-to-go (relative to "
"current user coordinate origin)"
msgstr ""

#. type: Plain text
msgid "Used to toggle the display units between metric and imperial."
msgstr ""

#. type: Plain text
msgid "If you want the display to be right justified, set the X align to 1.0"
msgstr ""

#. type: Plain text
msgid ""
"If you want different colors or size or text change the attributes in the"
msgstr ""

#. type: Plain text
msgid "glade editor (eg scale is a good way to change the size of the text)"
msgstr ""

#. type: Plain text
msgid ""
"The background of the widget is actually see through - so if you place if "
"over"
msgstr ""

#. type: Plain text
msgid ""
"an image the DRO numbers will show on top of it with no background. There is "
"a special technique to do this. See the animated function diagrams below."
msgstr ""

#. type: Plain text
msgid ""
"The DRO widget is a modified gtk label widget. As such much or what can be"
msgstr ""

#. type: Plain text
msgid "done to a gtk label can be done to DRO widget."
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the above listed properties: [widget name]."
"set_property(\"display_units_mm\",True)  [widget name].set_property(\"actual"
"\",True)  [widget name].set_property(\"mm_text_template\",\"%f\")  [widget "
"name].set_property(\"imperial_text_template\",\"%f\")  [widget name]."
"set_property(\"Joint_number\",3)  [widget name].set_property(\"reference_type"
"\",3)"
msgstr ""

#. type: Plain text
msgid ""
"There are two python methods: [widget name].set_dro_inch()  [widget name]."
"set_dro_metric()"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Combi_DRO widget"
msgstr ""

#. type: Plain text
msgid ""
"The Combi_DRO widget is used to display the current , the relative axis "
"position and the distance to go in one DRO. + By clicking on the DRO the "
"Order of the DRO will toggle around. + In Relative Mode the actual "
"coordinate system will be displayed."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "joint_number"
msgstr ""

#. type: Plain text
msgid ""
"Used to select which axis (technically which joint) is displayed. + On a "
"trivialkins machine (mill, lathe, router) axis vrs. joint number are: + '0:X "
"1:Y 2:Z etc'"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "actual"
msgstr ""

#. type: Plain text
msgid "select actual (feedback) or commanded position."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "metric_units"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "auto_units"
msgstr ""

#. type: Plain text
msgid ""
"Units will toggle between metric and imperial according to the active gcode "
"being G20 or G21 + default is TRUE"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "diameter"
msgstr ""

#. type: Plain text
msgid ""
"Whether to display position as diameter or radius, in diameter mode the DRO "
"will display the joint value multiplied by 2"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mm_text_template"
msgstr ""

#. type: Plain text
msgid ""
"You can use python formatting to display the position with different "
"precision. + default is \"%10.3f\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "imperial_text_template"
msgstr ""

#. type: Plain text
msgid ""
"You can use python formatting to display the position with different "
"precision. + default is \"%9.4f\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "homed_color"
msgstr ""

#. type: Plain text
msgid ""
"The foreground color of the DRO numbers if the joint is homed + default is "
"green"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "unhomed_color"
msgstr ""

#. type: Plain text
msgid ""
"The foreground color of the DRO numbers if the joint is not homed + default "
"is red"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "abs_color"
msgstr ""

#. type: Plain text
msgid ""
"the background color of the DRO, if main DRO shows absolute coordinates + "
"default is blue"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "rel_color"
msgstr ""

#. type: Plain text
msgid ""
"the background color of the DRO, if main DRO shows relative coordinates + "
"default is black"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "dtg_color"
msgstr ""

#. type: Plain text
msgid ""
"the background color of the DRO, if main DRO shows distance to go + default "
"is yellow"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "font_size"
msgstr ""

#. type: Plain text
msgid ""
"The font size of the big numbers, the small ones will be 2.5 times smaller, "
"the value must be an integer in the range of 8 to 96, + default is 25"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "toggle_readout"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"A left mouse click will toggle the DRO readout through the different modes [\"Rel\", \"Abs\", \"DTG\"]. +\n"
"By unchecking the box you can disable that behavior. The toggling can still be done with [widget name].toggle_readout() +\n"
"Value must be bool +    \n"
"default is TRUE\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "cycle_time"
msgstr ""

#. type: Plain text
msgid ""
"The time the DRO waits between two polls, the value must be an integer in "
"the range of 100 to 1000, + default is 150, this setting should only be "
"changed if you use more + than 5 DRO at the same time, i.e. on a 6 axis "
"config, to avoid, that + the DRO slows down the main application too much."
msgstr ""

#. type: Plain text
msgid "Using gobject to set the above listed properties:"
msgstr ""

#. type: Plain text
msgid "[widget name].set_property(property, value)"
msgstr ""

#. type: Plain text
msgid "There are several python methods to control the widget:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_to_inch(state)\n"
"        sets the DRO to show imperial units\n"
"        state = boolean (True or False)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_auto_units(state)\n"
"        if True the DRO will change units according to active gcode (G20 / G21)\n"
"        state = boolean (True or False)\n"
"        Default is True\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_to_diameter(state)\n"
"        if True the DRO will show the diameter not the radius, specially needed for lathes\n"
"        the DRO will display the axis value multiplied by 2\n"
"        state = boolean (True or False)\n"
"        Default is False\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].toggle_readout()\n"
"        toggles the order of the DRO in the widget\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].change_axisletter(letter)\n"
"        changes the automatically given axis letter\n"
"        very useful to change an lathe DRO from X to R or D\n"
"        letter = string\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].get_order()\n"
"        returns the order of the DRO in the widget mainly used to maintain them consistent\n"
"        the order will also be transmitted with the clicked signal\n"
"        returns a list containing the order\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_order(order)\n"
"        sets the order of the DRO, mainly used to maintain them consistent\n"
"        order = list object, must be one of\n"
"          [\"Rel\", \"Abs\", \"DTG\"]\n"
"          [\"DTG\", \"Rel\", \"Abs\"]\n"
"          [\"Abs\", \"DTG\", \"Rel\"]\n"
"        Default = [\"Rel\", \"Abs\", \"DTG\"]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].get_position()\n"
"        returns the position of the DRO as a list of floats\n"
"        the order is independent of the order shown on the DRO\n"
"        and will be given as [Absolute , relative , DTG]\n"
"        Absolute = the machine coordinates, depends on the actual property\n"
"                 will give actual or commanded position\n"
"        Relative = will be the coordinates of the actual coordinate system\n"
"        DTG = the distance to go, will mostly be 0, as this function should not be used\n"
"            while the machine is moving, because of time delays\n"
msgstr ""

#. type: Plain text
msgid "The widget will emit the following signals:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    clicked\n"
"        This signal is emitted, when the user has clicked on the Combi_DRO widget,\n"
"        it will send the following data:\n"
"        widget = widget object = The widget object that sends the signal\n"
"        joint_number = integer = The joint number of the DRO, where '0:X  1:Y  2:Z  etc'\n"
"        order = list object = the order of the DRO in that widget\n"
"                              the order may be used to set other Combi_DRO widgets to the same order with [widget name].set_order(order)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    units_changed\n"
"        This signal is emitted, if the DRO units are changed, it will send the following data:\n"
"        widget = widget object = The widget object that sends the signal\n"
"        metric_units = boolean = True if the DRO does display metric units, False in case of imperial display\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    system_changed\n"
"        This signal is emitted, if the DRO units are changed, it will send the following data:\n"
"        widget = widget object = The widget object that sends the signal\n"
"        system = string = The actual coordinate system. Will be one of\n"
"                          G54 G55 G56 G57 G58 G59 G59.1 G59.2 G59.3\n"
"                          or Rel if non has been selected at all, what will only happen in Glade with no linuxcnc running\n"
msgstr ""

#. type: Plain text
msgid ""
"There are some information you can get through commands, witch may be of "
"interest for you:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].system\n"
"        The actual system, as mentioned in the system_changed signal\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].homed\n"
"        True if the joint is homed\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].machine_units\n"
"        0 if Imperial, 1 if Metric\n"
msgstr ""

#. type: Plain text
msgid ""
"Example, Three Combi_DRO in a window + X = Relative Mode + Y = Absolute Mode "
"+ Z = DTG Mode +"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/combi_dro.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "IconView (File Select)"
msgstr ""

#. type: Plain text
msgid ""
"This is touch screen friendly widget to select a file and to change "
"directories."
msgstr ""

#. type: Plain text
msgid "The widget has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "icon_size"
msgstr ""

#. type: Plain text
msgid ""
"Sets the size of the displayed icon. + Allowed values are integers in the "
"range from 12 to 96 + default is 48"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "start_dir"
msgstr ""

#. type: Plain text
msgid ""
"Sets the directory to start in when the widget is shown first time, + must "
"be a string, containing a valid directory path, + default is \"/\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "jump_to_dir"
msgstr ""

#. type: Plain text
msgid ""
"Sets the directory \"jump to\" directory, witch is selected by the "
"corresponding button in the bottom button list, the 5th button counting from "
"the left, + must be a string, containing a valid directory path, + default "
"is \"~\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "filetypes"
msgstr ""

#. type: Plain text
msgid ""
"Sets the file filter for the objects to be shown + Must be a string "
"containing a comma separated list of extensions to be shown + Default is "
"\"ngc,py\""
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sortorder"
msgstr ""

#. type: Plain text
msgid ""
"Sets the sorting order of the displayed icon must be an integer value from 0 "
"to 3, where + 0 = ASCENDING (sorted according to file names) + 1 = "
"DESCENDING (sorted according to file names) + 2 = FOLDERFIRST (show the "
"folders first, then the files) + 3 = FILEFIRST (show the files first, then "
"the folders), + Default = 2 = FOLDERFIRST"
msgstr ""

#. type: Plain text
msgid "Using goobject to set the above listed properties:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    [widget name].set_property(property,Value)\n"
msgstr ""

#. type: Plain text
msgid "There are python methods to control the widget:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].show_buttonbox(state)\n"
"        if False the bottom button box will be hidden, this is helpful in custom screens,\n"
"        with special buttons layouts to not alter the layout of the GUI, good example\n"
"        for that is gmoccapy\n"
"        state = boolean (True or False)\n"
"        Default is True\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].show_filelabel(state)\n"
"        if True the file label (between the IconView window and the bottom button box will be shown.\n"
"        Hiding this label may save place, but showing it is very useful for debugging reasons,\n"
"        state = boolean (True or False)\n"
"        Default is True\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_icon_size(iconsize)\n"
"        sets the icon size\n"
"        must be an integer in the range from 12 to 96\n"
"        Default = 48\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_directory(directory)\n"
"        Allows to set an directory to be shown\n"
"        directory = string (a valid file path)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].set_filetypes(filetypes)\n"
"        sets the file filter to be used, only files with the given extensions will be shown\n"
"        filetypes = string containing a comma separated list of extensions\n"
"        Default = \"ngc,py\"\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].get_selected()\n"
"        Returns the path of the selected file, or None if an directory has been selected\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].refresh_filelist()\n"
"        Refreshes the filelist, needed if you add a file without changing the directory\n"
msgstr ""

#. type: Plain text
msgid ""
"If the button box has been hidden, you can reach the functions of this "
"button through it's clicked signals like so:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    [widget name].btn_home.emit(\"clicked\")\n"
"    [widget name].btn_jump_to.emit(\"clicked\")\n"
"    [widget name].btn_sel_prev.emit(\"clicked\")\n"
"    [widget name].btn_sel_next.emit(\"clicked\")\n"
"    [widget name].btn_get_selected.emit(\"clicked\")\n"
"    [widget name].btn_dir_up.emit(\"clicked\")\n"
"    [widget name].btn_exit.emit(\"clicked\")\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    selected\n"
"        This signal is emitted, when the user selects an icon, it will return a string containing a\n"
"        file path if a file has been selected, or None if an directory has been selected\n"
"    sensitive\n"
"        This signal is emitted, when the buttons change there state from sensitive to not sensitive or vice versa. \n"
"        This signal is useful to maintain surrounding GUI synchronized with the button of the widget. See gmoccapy as example.\n"
"        It will return the buttonname and the new state. Buttonname is one of \"btn_home\", \"btn_dir_up\", \"btn_sel_prev\",\n"
"        \"btn_sel_next\", \"btn_jump_to\" or \"btn_select\". State is a boolean and will be True or False.\n"
"    exit\n"
"        This signal is Emmit, when the exit button has been pressed to close the IconView\n"
"        mostly needed if the application is started as stand alone.\n"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/iconview.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Calculator widget"
msgstr ""

#. type: Plain text
msgid ""
"This is a simple calculator widget, that can be used for numerical input. + "
"You can preset the display and retrieve the result or that preset value. + "
"It has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Is editable"
msgstr ""

#. type: Plain text
msgid "This allows the entry display to be typed into from a keyboard."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Set Font"
msgstr ""

#. type: Plain text
msgid "This allows you to set the font of the display."
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the above listed properties: [widget name]."
"set_property(\"is_editable\",True)  [widget name].set_property(\"font\","
"\"sans 25\")"
msgstr ""

#. type: Plain text
msgid ""
"There are python methods: [widget name].set_value(2.5)  This presets the "
"display and is recorded.  [widget name].set_font(\"sans 25\")  [widget name]."
"set_editable(True)  [widget name].get_value()  Returns the calculated value "
"- a float.  [widget name].set_editable(True)  [widget name]."
"get_preset_value()  Returns the recorded value: a float."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tooleditor widget"
msgstr ""

#. type: Plain text
msgid ""
"This is a tooleditor widget for displaying and modifying a tool editor file. "
"+ If in lathe mode, it will display wear offsets and tool offsets "
"separately. + Wear offsets are designated by tool number above 10000 (Fanuc "
"style) + Note linuxcnc requires remapping of tool calls to actually use wear "
"offsets + It checks the current file once a second to see if linuxcnc "
"updated it. + It has the following properties:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Hidden Columns"
msgstr ""

#. type: Plain text
msgid ""
"This will hide the given columns: The columns are designated (in order) as "
"such: + s,t,p,x,y,z,a,b,c,u,v,w,d,i,j,q,; + You can hide any number of "
"columns including the select and comments +"
msgstr ""

#. type: Plain text
msgid ""
"using goobject to set the above listed properties: [widget name]."
"set_properties('hide_columns','uvwijq')  This would hide the uvwij and q "
"columns and show all others."
msgstr ""

#. type: Plain text
msgid ""
"There are python methods: [widget name].set_visible(\"ijq\",False)  Would "
"hide ij and Q columns and leave the rest as they were.  [widget name]."
"set_filename(path_to_file)  Sets and loads the tool file.  [widget name]."
"reload(None)  Reloads the current toolfile [widget name].set_font('sans 16,"
"tab='1')  Sets the (Pango) font on the Tab, column title, and tool data.  "
"The all_offsets, wear_offsets, tool_offsets can be set at the same time by "
"adding 1,2 and/or 3 to the tab string. Default is all the tabs set.  [widget "
"name].set_title_font('sans 16,tab='1')  Sets the (Pango) font on the column "
"titles only.  The all_offsets, wear_offsets, tool_offsets can be set at the "
"same time by adding 1,2 and/or 3 to the tab string. Default is all the tabs "
"set.  [widget name].set_tab_font('sans 16,tab='1')  Sets the (Pango) font on "
"the tabs only.  The all_offsets, wear_offsets, tool_offsets can be set at "
"the same time by adding 1,2 and/or 3 to the tab string. Default is all the "
"tabs set.  [widget name].set_col_visible(\"abcUVW\", False, tab='1')  This "
"would hide (False) the abcuvw columns on tab 1 (all_offsets)  [widget name]."
"set_lathe_display(value)  hides or shows the wear and tool offset tabs used "
"for lathes [widget name].get_toolinfo(toolnum)  Returns the tool information "
"array of the requested toolnumber or current tool if no tool number is "
"specified returns None if tool not found in table or if there is no current "
"tool [widget name].hide_buttonbox(self, True)  'convenience' method to hide "
"buttons you must call this after show_all()  [widget name]."
"get_selected_tool()  return the user selected (highlighted) tool number "
"[widget name].set_selected_tool(toolnumber)  Selects (highlights) the "
"requested tool"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/gtk-tooledit.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Offsetpage"
msgstr ""

#. type: Plain text
msgid ""
"The Offsetpage widget is used to display/edit the offsets of all the axes. + "
"It has convenience buttons for zeroing G92 and Rotation-Around-Z offsets. + "
"It will only allow you to select the edit mode when the machine is on and "
"idle. + You can directly edit the offsets in the table at this time. "
"Unselect the edit + button to allow the OffsetPage to reflect changes."
msgstr ""

#. type: Plain text
msgid ""
"A no-space list of columns to hide: The columns are designated (in order) as "
"such: + xyzabcuvwt + You can hide any of the columns."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Hidden Rows"
msgstr ""

#. type: Plain text
msgid ""
"A no-space list of rows to hide: the rows are designated (in order) as such "
"+ 0123456789abc + You can hide any of the rows."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Pango Font"
msgstr ""

#. type: Plain text
msgid "Sets text font type and size"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "HighLight color"
msgstr ""

#. type: Plain text
msgid "when editing this is the high light color"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Active color"
msgstr ""

#. type: Plain text
msgid ""
"when OffsetPage detects an active user coordinate system it will use this + "
"color for the text"
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the above listed properties: [widget name]."
"set_property(\"highlight_color\",gdk.Color('blue'))  [widget name]."
"set_property(\"foreground_color\",gdk.Color('black'))  [widget name]."
"set_property(\"hide_columns\",\"xyzabcuvwt\")  [widget name]."
"set_property(\"hide_rows\",\"123456789abc\")  [widget name]."
"set_property(\"font\",\"sans 25\")"
msgstr ""

#. type: Plain text
msgid ""
"There are python methods to control the widget: [widget name]."
"set_filename(\"../../../configs/sim/gscreen/gscreen_custom/sim.var\")  "
"[widget name].set_col_visible(\"Yabuvw\",False)  [widget name]."
"set_row_visible(\"456789abc\",False)  [widget name].set_to_mm()  [widget "
"name].set_to_inch()  [widget name].hide_button_box(True)  [widget name]."
"set_font(\"sans 20\")  [widget name].set_highlight_color(\"violet\")  "
"[widget name].set_foreground_color(\"yellow\")  [widget name]."
"mark_active(\"G55\")  Allows you to directly set a row to highlight.  (eg in "
"case you wish to use your own navigation controls.  See <<cha:gmoccapy,"
"Gmoccapy Chapter>> [widget name].selection_mask = (\"Tool\",\"Rot\",\"G5x"
"\")  These rows are NOT selectable in edit mode.  [widget name]."
"set_names([['G54','Default'],[\"G55\",\"Vice1\"],['Rot','Rotational']])  "
"This allows you to set the text of the 'T' column of each/any row.  This is "
"a list of a list of offset-name/user-name pairs.  The default text is the "
"same as the offset name.  [widget name].get_names()  This returns a list of "
"a list of row-keyword/user-name pairs.  The user name column is editable, so "
"saving this list is user friendly.  see set_names above."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/offsetpage.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL_sourceview widget"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"This is for displaying and simple editing of Gcode. +\n"
"It looks for .ngc highlight specs in ~/share/gtksourceview-2.0/language-specs/\n"
"The current running line will be highlighted. +\n"
"With external python glue code: +\n"
"    *It can search for text, undo and redo changes. +\n"
"    *It can be used for program line selection. +\n"
msgstr ""

#. type: Plain text
msgid ""
"[widget name].redo()  redo one level of changes.  [widget name].undo()  undo "
"one level of changes [widget name].text_search(direction=True,"
"mixed_case=True,text='G92')  Searches forward (direction = True) or back, + "
"Searches with mixed case (mixed_case = True) or exact match [widget name]."
"set_line_number(linenumber)  Sets the line to high light. Uses the "
"sourceview line numbers.  [widget name].get_line_number()  returns the "
"currently high lighted line.  [widget name].line_up()  Moves the High "
"lighted line up one line [widget name].line_down()  Moves the High lighted "
"line down one line [widget name].load_file('filename')  loads a file. Using "
"None (not a filename string) will reload the same program.  [widget name]."
"get_filename()"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal_sourceview.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "MDI history"
msgstr ""

#. type: Plain text
msgid ""
"This is for displaying and entering MDI codes. + It will automatically gray "
"out when MDI is not available. + Eg during Estop and program running."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "font_size_tree"
msgstr ""

#. type: Plain text
msgid ""
"a integer value between 8 and 96+ will modify the default font size of the "
"treeview + to the selected value +"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "font_size_entry"
msgstr ""

#. type: Plain text
msgid ""
"a integer value between 8 and 96+ will modify the default font size of the "
"entry + to the selected value +"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "use_double_click"
msgstr ""

#. type: Plain text
msgid ""
"True or False, setting this to True will enable the mouse double click + "
"feature and a double click on an entry will submit that command + It is not "
"recommended to use this feature on real machines, as a double + click on a "
"wrong entry may cause dangerous situations"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Using goobject to set the above listed properties"
msgstr ""

#. type: Plain text
msgid ""
"Using goobject to set the listed properties: [widget name]."
"set_property(\"font_size_tree\", 10)  [widget name]."
"set_property(\"font_size_entry\", 20)  [widget name]."
"set_property(\"use_double_click\", False)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Animated function diagrams: HAL widgets in a bitmap"
msgstr ""

#. type: Plain text
msgid ""
"For some applications it might be desirable to have background image - like "
"a functional diagram - and position widgets at appropriate places in that "
"diagram. A good combination is setting a bitmap background image, like from "
"a .png file, making the gladevcp window fixed-size, and use the glade Fixed "
"widget to position widgets on this image."
msgstr ""

#. type: Plain text
msgid ""
"The code for the below example can be found in +configs/apps/gladevcp/"
"animated-backdrop+:"
msgstr ""

#. type: Plain text
msgid "image:images/small-screenshot.png[]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Action Widgets reference"
msgstr ""

#. type: Plain text
msgid ""
"GladeVcp includes a collection of \"canned actions\" called VCP Action "
"Widgets for the Glade user interface editor. Other than HAL widgets, which "
"interact with HAL pins, VCP Actions interact with LinuxCNC and the G-code "
"interpreter."
msgstr ""

#. type: Plain text
msgid ""
"VCP Action Widgets are derived from the Gtk.Action widget. The Action widget "
"in a nutshell:"
msgstr ""

#. type: Plain text
msgid "it is an object available in Glade"
msgstr ""

#. type: Plain text
msgid "it has no visual appearance by itself"
msgstr ""

#. type: Plain text
msgid "it's purpose: associate a visible, sensitive UI component like menu,"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"toolbutton, button with a command. See these widget's 'GeneralâRelated\n"
"Action' property.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the \"canned action\" will be executed when the associated UI component\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "is triggered (button press, menu click..)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "it provides an easy way to execute commands without resorting to\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Python programming.\n"
msgstr ""

#. type: Plain text
msgid "The appearance of VCP Actions in Glade is roughly as follows:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/vcp-actions.png"
msgstr ""

#. type: Plain text
msgid "Tooltip hovers provide a description."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "VCP Action widgets"
msgstr ""

#. type: Plain text
msgid ""
"VCP Action widgets are one-shot type widgets. They implement a single action "
"and are for use in simple buttons, menu entries or radio/check groups."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "VCP Action python"
msgstr ""

#. type: Plain text
msgid ""
"This widget is used to execute small arbitrary python code. + The command "
"string may use special keywords to access important functions."
msgstr ""

#. type: Plain text
msgid ""
"'GSTAT' for access to the Gstat library that is used for linuxcnc status"
msgstr ""

#. type: Plain text
msgid "'STAT' for access to linuxcnc's status via the linuxcnc python module"
msgstr ""

#. type: Plain text
msgid "'CMD' for access to linuxcnc's commands via the linuxcnc python module"
msgstr ""

#. type: Plain text
msgid "'EXT' for access to the handler file functions if available"
msgstr ""

#. type: Plain text
msgid "'linuxcnc' for access to the linuxcnc python module"
msgstr ""

#. type: Plain text
msgid "'self' for access to the widget instance"
msgstr ""

#. type: Plain text
msgid ""
"There are options to select when the widget will be active. + There are "
"options to set the mode before the command is executed. + example command to "
"just print a message to the terminal: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "print('action activated')\n"
msgstr ""

#. type: Plain text
msgid "example command to set the machine to off state: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "CMD.state(linuxcnc.STATE_OFF)\n"
msgstr ""

#. type: Plain text
msgid "example command to call a handler function that passes data: +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "EXT.on_button_press(self, 100)\n"
msgstr ""

#. type: Plain text
msgid "You can use a colon to separate multiple commands."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "print('Set Machine Off');CMD.state(linuxcnc.STATE_OFF)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "VCP ToggleAction widgets"
msgstr ""

#. type: Plain text
msgid ""
"These are bi-modal widgets. They implement two actions or use a second "
"(usually pressed) state to indicate that currently an action is running. "
"Toggle actions are aimed for use in ToggleButtons, ToggleToolButtons or "
"toggling menu items. A simplex example is the ESTOP toggle button."
msgstr ""

#. type: Plain text
msgid "Currently the following widgets are available:"
msgstr ""

#. type: Plain text
msgid ""
"The ESTOP toggle sends ESTOP or ESTOP_RESET commands to LinuxCNC depending "
"on it's state."
msgstr ""

#. type: Plain text
msgid "The ON/OFF toggle sends STATE_ON and STATE_OFF commands."
msgstr ""

#. type: Plain text
msgid "Pause/Resume sends AUTO_PAUSE or AUTO_RESUME commands."
msgstr ""

#. type: Plain text
msgid ""
"The following toggle actions have only one associated command and use the "
"'pressed' state to indicate that the requested operation is running:"
msgstr ""

#. type: Plain text
msgid ""
"The Run toggle sends an AUTO_RUN command and waits in the pressed state "
"until the interpreter is idle again."
msgstr ""

#. type: Plain text
msgid ""
"The Stop toggle is inactive until the interpreter enters the active state "
"(is running G-code) and then allows user to send AUTO_ABORT command."
msgstr ""

#. type: Plain text
msgid ""
"The MDI toggle sends given MDI command and waits for its completion in "
"'pressed' inactive state."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Action_MDI Toggle and Action_MDI widgets"
msgstr ""

#. type: Plain text
msgid ""
"These widgets provide a means to execute arbitrary MDI commands. The "
"Action_MDI widget does not wait for command completion as the Action_MDI "
"Toggle does, which remains disabled until command complete."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "A simple example: Execute MDI command on button press"
msgstr ""

#. type: Plain text
msgid ""
"+configs/apps/gladevcp/mdi-command-example/whoareyou.ui+ is a Glade UI file "
"which conveys the basics:"
msgstr ""

#. type: Plain text
msgid ""
"Open it in Glade and study how it's done. Start Axis, and then start this "
"from a terminal window with `gladevcp whoareyou.ui`. See the "
"+hal_action_mdi1+ Action and it's +MDI command+ property - this just "
"executes +(MSG, \"Hi, I'm an VCP_Action_MDI\")+ so there should be a message "
"popup in Axis like so:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/whoareyou.png"
msgstr ""

#. type: Plain text
msgid ""
"You'll notice that the button associated with the Action_MDI action is "
"grayed out if the machine is off, in E-Stop or the interpreter is running.  "
"It will automatically become active when the machine is turned on and out of "
"E-Stop, and the program is idle."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Parameter passing with Action_MDI and ToggleAction_MDI widgets"
msgstr ""

#. type: Plain text
msgid ""
"Optionally, 'MDI command' strings may have parameters substituted before "
"they are passed to the interpreter. Parameters currently may be names of HAL "
"pins in the GladeVCP component. This is how it works:"
msgstr ""

#. type: Plain text
msgid ""
"assume you have a 'HAL SpinBox' named +speed+, and you want to pass it's "
"current value as a parameter in an MDI command."
msgstr ""

#. type: Plain text
msgid ""
"The HAL SpinBox will have a float-type HAL pin named speed-f (see HalWidgets "
"description)."
msgstr ""

#. type: Plain text
msgid ""
"To substitute this value in the MDI command, insert the HAL pin name "
"enclosed like so: `${pin-name}`"
msgstr ""

#. type: Plain text
msgid ""
"for the above HAL SpinBox, we could use `(MSG, \"The speed is: ${speed-"
"f}\")` just to show what's happening."
msgstr ""

#. type: Plain text
msgid ""
"The example UI file is +configs/apps/gladevcp/mdi-command-example/speed.ui+. "
"Here's what you get when running it:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/speed.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "An advanced example: Feeding parameters to an O-word subroutine"
msgstr ""

#. type: Plain text
msgid ""
"It's perfectly OK to call an O-word subroutine in an MDI command, and pass "
"HAL pin values as actual parameters. An example UI file is in +configs/apps/"
"gladevcp/mdi-command-example/owordsub.ui+."
msgstr ""

#. type: Plain text
msgid ""
"Place +nc_files/gladevcp_lib/oword.ngc+ so Axis can find it, and run "
"`gladevcp owordsub.ui` from a terminal window. This looks like so:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/oword.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Preparing for an MDI Action, and cleaning up afterwards"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC G-Code interpreter has a single global set of variables, like "
"feed, spindle speed, relative/absolute mode and others. If you use G code "
"commands or O-word subs, some of these variables might get changed by the "
"command or subroutine - for example, a probing subroutine will very likely "
"set the feed value quite low. With no further precautions, your previous "
"feed setting will be overwritten by the probing subroutine's value."
msgstr ""

#. type: Plain text
msgid ""
"To deal with this surprising and undesirable side effect of a given O-word "
"subroutine or G-code statement executed with an LinuxCNC ToggleAction_MDI, "
"you might associate pre-MDI and post-MDI handlers with a given LinuxCNC "
"ToggleAction_MDI. These handlers are optional and provide a way to save any "
"state before executing the MDI Action, and to restore it to previous values "
"afterwards. The signal names are +mdi-command-start+ and +mdi-command-stop+; "
"the handler names can be set in Glade like any other handler."
msgstr ""

#. type: Plain text
msgid ""
"Here's an example how a feed value might be saved and restored by such "
"handlers (note that LinuxCNC command and status channels are available as "
"+self.linuxcnc+ and +self.stat+ through the VCP_ActionBase class:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    def on_mdi_command_start(self, action, userdata=None):\n"
"        action.stat.poll()\n"
"        self.start_feed = action.stat.settings[1]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    def on_mdi_command_stop(self, action, userdata=None):\n"
"        action.linuxcnc.mdi('F%.1f' % (self.start_feed))\n"
"        while action.linuxcnc.wait_complete() == -1:\n"
"            pass\n"
msgstr ""

#. type: Plain text
msgid "Only the Action_MDI Toggle widget supports these signals."
msgstr ""

#. type: Plain text
msgid ""
"In a later release of LinuxCNC, the new M-codes M70-M72 are available which "
"make it saving state before a subroutine call, and restoring state on return "
"much easier."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Using the LinuxCNC Stat object to deal with status changes"
msgstr ""

#. type: Plain text
msgid ""
"Many actions depend on LinuxCNC status - is it in manual, MDI or auto mode? "
"is a program running, paused or idle? You cannot start an MDI command while "
"a G-code program is running, so this needs to be taken care of.  Many "
"LinuxCNC actions take care of this themselves, and related buttons and menu "
"entries are deactivated when the operation is currently impossible."
msgstr ""

#. type: Plain text
msgid ""
"When using Python event handlers - which are at a lower level than Actions - "
"one needs to take care of dealing with status dependencies oneself. For this "
"purpose, there's the LinuxCNC Stat widget: to associate LinuxCNC status "
"changes with event handlers."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC Stat has no visible component - you just add it to your UI with "
"Glade. Once added, you can associate handlers with its following signals:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "state-related:     emitted when E-Stop condition occurs, is reset, machine is turned on, or is turned off\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+state-estop+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+state-estop-reset+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+state-on+,\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+state-off+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "mode-related:    emitted when LinuxCNC enters that particular mode\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+mode-manual+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+mode-mdi+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+mode-auto+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "interpreter-related:  emitted when the G-code interpreter changes into that mode\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+interp-run+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+interp-idle+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+interp-paused+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+interp-reading+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+interp-waiting+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+file-loaded+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+line-changed+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "homing-related: emitted when linuxcnc is homed or not\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+all-homed+\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "+not-all-homed+\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GladeVCP Programming"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "User Defined Actions"
msgstr ""

#. type: Plain text
msgid ""
"Most widget sets, and their associated user interface editors, support the "
"concept of callbacks - functions in user-written code which are executed "
"when 'something happens' in the UI - events like mouse clicks, characters "
"typed, mouse movement, timer events, window hiding and exposure and so forth."
msgstr ""

#. type: Plain text
msgid ""
"HAL output widgets typically map input-type events like a button press to a "
"value change of the associated HAL pin by means of such a - predefined - "
"callback. Within PyVCP, this is really the only type of event handling "
"supported - doing something more complex, like executing MDI commands to "
"call a G-code subroutine, is not supported."
msgstr ""

#. type: Plain text
msgid ""
"Within GladeVCP, HAL pin changes are just one type of the general class of "
"events (called signals) in GTK+. Most widgets may originate such signals, "
"and the Glade editor supports associating such a signal with a Python method "
"or function name."
msgstr ""

#. type: Plain text
msgid ""
"If you decide to use user-defined actions, your job is to write a Python "
"module whose class methods - or in the simple case, just functions - can be "
"referred to in Glade as event handlers. GladeVCP provides a way to import "
"your module(s) at startup and will automatically link your event handlers "
"with the widget signals as set in the Glade UI description."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "An example: adding custom user callbacks in Python"
msgstr ""

#. type: Plain text
msgid ""
"This is just a minimal example to convey the idea - details are laid out in "
"the rest of this section."
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP can not only manipulate or display HAL pins, you can also write "
"regular event handlers in Python. This could be used, among others, to "
"execute MDI commands. Here's how you do it:"
msgstr ""

#. type: Plain text
msgid "Write a Python module like so and save as e.g. handlers.py:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"nhits = 0\n"
"def on_button_press(gtkobj,data=None):\n"
"    global nhits\n"
"    nhits += 1 \n"
"    gtkobj.set_label(\"hits: %d\" % nhits)\n"
msgstr ""

#. type: Plain text
msgid ""
"In Glade, define a button or HAL button, select the 'Signals' tab, and in "
"the GtkButton properties select the 'pressed' line. Enter 'on_button_press' "
"there, and save the Glade file."
msgstr ""

#. type: Plain text
msgid ""
"Then add the option '-u handlers.py' to the gladevcp command line. If your "
"event handlers are spread over several files, just add multiple '-u "
"<pyfilename>' options."
msgstr ""

#. type: Plain text
msgid ""
"Now, pressing the button should change its label since it's set in the "
"callback function."
msgstr ""

#. type: Plain text
msgid ""
"What the +-u+ flag does: all Python functions in this file are collected and "
"setup as potential callback handlers for your Gtk widgets"
msgstr ""

#. type: Plain text
msgid ""
"they can be referenced from Glade 'Signals' tabs. The callback handlers are "
"called with the particular object instance as parameter, like the GtkButton "
"instance above, so you can apply any GtkButton method from there."
msgstr ""

#. type: Plain text
msgid "Or do some more useful stuff, like calling an MDI command!"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL value change events"
msgstr ""

#. type: Plain text
msgid ""
"HAL input widgets, like a LED, automatically associate their HAL pin state "
"(on/off) with the optical appearance of the widget (LED lit/dark)."
msgstr ""

#. type: Plain text
msgid ""
"Beyond this built-in functionality, one may associate a change callback with "
"any HAL pin, including those of predefined HAL widgets. This fits nicely "
"with the event-driven structure of a typical widget application: every "
"activity, be it mouse click, key, timer expired, or the change of a HAL "
"pin's value, generates a callback and is handled by the same orthogonal "
"mechanism."
msgstr ""

#. type: Plain text
msgid ""
"For user-defined HAL pins not associated with a particular HAL widget, the "
"signal name is 'value-changed'. See the <<gladevcp:adding-hal-pins,Adding "
"HAL pins>> section below for details."
msgstr ""

#. type: Plain text
msgid ""
"HAL widgets come with a pre-defined signal called 'hal-pin-changed'. See the "
"<<gladevcp:hal-pin-changed-signal,Hal Widgets section>> for details."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Programming model"
msgstr ""

#. type: Plain text
msgid "The overall approach is as follows:"
msgstr ""

#. type: Plain text
msgid ""
"design your UI with Glade, and set signal handlers where you want actions "
"associated with a widget"
msgstr ""

#. type: Plain text
msgid ""
"write a Python module which contains callable objects (see 'handler models' "
"below)"
msgstr ""

#. type: Plain text
msgid "pass your module's path name to gladevcp with the '-u <module>' option"
msgstr ""

#. type: Plain text
msgid ""
"gladevcp imports the module, inspects it for signal handlers and connects "
"them to the widget tree"
msgstr ""

#. type: Plain text
msgid "the main event loop is run."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The simple handler model"
msgstr ""

#. type: Plain text
msgid ""
"For simple tasks it's sufficient to define functions named after the Glade "
"signal handlers. These will be called when the corresponding event happens "
"in the widget tree. Here's a trivial example - it assumes that the 'pressed' "
"signal of a Gtk Button or HAL Button is linked to a callback called "
"'on_button_press':"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"nhits = 0\n"
"def on_button_press(gtkobj,data=None):\n"
"    global nhits\n"
"    nhits += 1\n"
"    gtkobj.set_label(\"hits: %d\" % nhits)\n"
msgstr ""

#. type: Plain text
msgid "Add this function to a Python file and run as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    gladevcp -u <myhandler>.py mygui.ui\n"
msgstr ""

#. type: Plain text
msgid ""
"Note communication between handlers has to go through global variables, "
"which does not scale well and is positively un-pythonic.  This is why we "
"came up with the class-based handler model."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The class-based handler model"
msgstr ""

#. type: Plain text
msgid ""
"The idea here is: handlers are linked to class methods. The underlying "
"class(es) are instantiated and inspected during GladeVCP startup and linked "
"to the widget tree as signal handlers. So the task now is to write:"
msgstr ""

#. type: Plain text
msgid "one or more several class definition(s) with one or several methods,"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "in one module or split over several modules,\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "a function 'get_handlers' in each module which will return a list of\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"class instances to GladeVCP - their method names will be linked to\n"
"signal handlers\n"
msgstr ""

#. type: Plain text
msgid "Here is a minimum user-defined handler example module:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"class MyCallbacks :\n"
"    def on_this_signal(self,obj,data=None):\n"
"        print \"this_signal happened, obj=\",obj\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def get_handlers(halcomp,builder,useropts):\n"
"    return [MyCallbacks ()]\n"
msgstr ""

#. type: Plain text
msgid ""
"Now, 'on_this_signal' will be available as signal handler to your widget "
"tree."
msgstr ""

#. type: Block title
#, no-wrap
msgid "GladeVCP-specific signals"
msgstr ""

#. type: Plain text
msgid ""
"For GladevCP panel which respond to HAL inputs it may be important that the "
"handler code can tell that the GladeVCP panel is currently active and "
"displayed. For example a panel inside the Touchy interface might well need "
"to perform an action when the switch connected to touchy.cycle-start is "
"operated (in the same way that the native tabs respond differently to the "
"same button.)  To make this possible a signal is sent from the GUI (at the "
"time of writing, only Touchy) to the embedded tab. The signal is of type "
"\"Gladevcp\" and the two messages sent are \"Visible\" and \"Hidden\". (Note "
"that the signals have a fixed length of 20 characters so only the first "
"characters should be used in any comparison, hence the [:7] below.) A sample "
"handler for these signals is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    # This catches our messages from another program\n"
"    def event(self,w,event):\n"
"        print event.message_type,event.data\n"
"        if event.message_type == 'Gladevcp':\n"
"            if event.data[:7] == 'Visible':\n"
"                self.active = True\n"
"            else:\n"
"                self.active = False\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    # connect to client-events from the host GUI\n"
"    def on_map_event(self, widget, data=None):\n"
"        top = widget.get_toplevel()\n"
"        print \"map event\"\n"
"        top.connect('client-event', self.event)\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The get_handlers protocol"
msgstr ""

#. type: Plain text
msgid ""
"If during module inspection GladeVCP finds a function `get_handlers`, it "
"calls it as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    get_handlers(halcomp,builder,useropts)\n"
msgstr ""

#. type: Plain text
msgid "the arguments are:"
msgstr ""

#. type: Plain text
msgid "halcomp - refers to the HAL component under construction"
msgstr ""

#. type: Plain text
msgid ""
"builder - widget tree - result of reading the UI definition (either "
"referring to a GtkBuilder or libglade-type object)"
msgstr ""

#. type: Plain text
msgid ""
"useropts - a list of strings collected from the gladevcp command line `-U "
"<useropts>` option"
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP then inspects the list of class instances and retrieves their "
"method names. Qualifying method names are connected to the widget tree as "
"signal handlers. Only method names which do not begin with an "
"'_' (underscore) are considered."
msgstr ""

#. type: Plain text
msgid ""
"Note that regardless whether you're using the libglade or the new GtkBuilder "
"format for your Glade UI, widgets can always be referred to as `builder."
"get_object(<widgetname>)`. Also, the complete list of widgets is available "
"as `builder.get_objects()` regardless of UI format."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Initialization sequence"
msgstr ""

#. type: Plain text
msgid ""
"It is important to know in which state of affairs your `get_handlers()` "
"function is called so you know what is safe to do there and what not.  "
"First, modules are imported and initialized in command line order.  After "
"successful import, `get_handlers()` is called in the following state:"
msgstr ""

#. type: Plain text
msgid "the widget tree is created, but not yet realized (no toplevel"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "`window.show()` has been executed yet)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the halcomp HAL component is set up and all HAL widget's pins have\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "already been added to it\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "it is safe to add more HAL pins because `halcomp.ready()` has not yet\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"been called at this point, so you may add your own pins, for instance\n"
"in the class `__init__()` method.\n"
msgstr ""

#. type: Plain text
msgid ""
"Once all modules have been imported and method names extracted, the "
"following steps happen:"
msgstr ""

#. type: Plain text
msgid "all qualifying method names will be connected to the widget tree with"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"`connect_signals()/signal_autoconnect()` (depending on the type of UI\n"
"imported - GtkBuilder vs the old libglade format).\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the HAL component is finalized with halcomp.ready()\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "if a window ID was passed as argument, the widget tree is re-parented\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"to run in this window, and Glade's toplevel window1 is abandoned (see\n"
"FAQ)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "if a HAL command file was passed with `-H halfile`, it is executed\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "with halcmd\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "the Gtk main loop is run.\n"
msgstr ""

#. type: Plain text
msgid ""
"So when your handler class is initialized, all widgets are existent but not "
"yet realized (displayed on screen). And the HAL component isn't ready as "
"well, so its unsafe to access pins values in your `__init__()` method."
msgstr ""

#. type: Plain text
msgid ""
"If you want to have a callback to execute at program start after it is safe "
"to access HAL pins, then a connect a handler to the realize signal of the "
"top level window1 (which might be its only real purpose). At this point "
"GladeVCP is done with all setup tasks, the halfile has been run, and "
"GladeVCP is about to enter the Gtk main loop."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Multiple callbacks with the same name"
msgstr ""

#. type: Plain text
msgid ""
"Within a class, method names must be unique. However, it is OK to have "
"multiple class instances passed to GladeVCP by get_handlers() with "
"identically named methods. When the corresponding signal occurs, these "
"methods will be called in definition order - module by module, and within a "
"module, in the order class instances are returned by `get_handlers()`."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The GladeVCP `-U <useropts>` flag"
msgstr ""

#. type: Plain text
msgid ""
"Instead of extending GladeVCP for any conceivable option which could "
"potentially be useful for a handler class, you may use the -U <useroption> "
"flag (repeatedly if you wish). This flag collects a list of <useroption> "
"strings. This list is passed to the get_handlers()  function (useropts "
"argument). Your code is free to interpret these strings as you see fit. An "
"possible usage would be to pass them to the Python exec function in your "
"`get_handlers()` as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"debug = 0\n"
"...\n"
"def get_handlers(halcomp,builder,useropts):\n"
"    ...\n"
"    global debug # assuming there's a global var\n"
"    for cmd in useropts:\n"
"        exec cmd in globals()\n"
msgstr ""

#. type: Plain text
msgid ""
"This way you can pass arbitrary Python statements to your module through the "
"gladevcp -U option, for example:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    gladevcp -U debug=42 -U \"print 'debug=%d' % debug\" ...\n"
msgstr ""

#. type: Plain text
msgid ""
"This should set debug to 2 and confirm that your module actually did it."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Persistent variables in GladeVCP"
msgstr ""

#. type: Plain text
msgid ""
"A annoying aspect of GladeVCP in its earlier form and pyvcp is the fact that "
"you may change values and HAL pins through text entry, sliders, spin boxes, "
"toggle buttons etc, but their settings are not saved and restored at the "
"next run of LinuxCNC - they start at the default value as set in the panel "
"or widget definition."
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP has an easy-to-use mechanism to save and restore the state of HAL "
"widgets, and program variables (in fact any instance attribute of type int, "
"float, bool or string)."
msgstr ""

#. type: Plain text
msgid ""
"This mechanism uses the popular '.ini' file format to save and reload "
"persistent attributes."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Persistence, program versions and the signature check"
msgstr ""

#. type: Plain text
msgid ""
"Imagine renaming, adding or deleting widgets in Glade: an .ini file lying "
"around from a previous program version, or an entirely different user "
"interface, would be not be able to restore the state properly since "
"variables and types might have changed."
msgstr ""

#. type: Plain text
msgid ""
"GladeVCP detects this situation by a signature which depends on all object "
"names and types which are saved and to be restored. In the case of signature "
"mismatch, a new .ini file with default settings is generated."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Using persistent variables"
msgstr ""

#. type: Plain text
msgid ""
"If you want any of Gtk widget state, HAL widgets output pin's values and/or "
"class attributes of your handler class to be retained across invocations, "
"proceed as follows:"
msgstr ""

#. type: Plain text
msgid "import the +gladevcp.persistence+ module"
msgstr ""

#. type: Plain text
msgid ""
"decide which instance attributes, and their default values you want to have "
"retained, if any"
msgstr ""

#. type: Plain text
msgid "decide which widgets should have their state retained"
msgstr ""

#. type: Plain text
msgid ""
"describe these decisions in your handler class' +__init__()+ method through "
"a nested dictionary as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def __init__(self, halcomp,builder,useropts):\n"
"    self.halcomp = halcomp\n"
"    self.builder = builder\n"
"    self.useropts = useropts\n"
"    self.defaults = {\n"
"        # the following names will be saved/restored as method attributes\n"
"        # the save/restore mechanism is strongly typed - the variables type will be derived from the type of the\n"
"        # initialization value. Currently supported types are: int, float, bool, string\n"
"        IniFile.vars : { 'nhits' : 0, 'a': 1.67, 'd': True ,'c' : \"a string\"},\n"
"        # to save/restore all widget's state which might remotely make sense, add this:\n"
"        IniFile.widgets : widget_defaults(builder.get_objects())\n"
"        # a sensible alternative might be to retain only all HAL output widgets' state:\n"
"        # IniFile.widgets: widget_defaults(select_widgets(self.builder.get_objects(), hal_only=True,output_only = True)),\n"
"    }\n"
msgstr ""

#. type: Plain text
msgid "Then associate an .ini file with this descriptor:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"self.ini_filename = __name__ + '.ini'\n"
"self.ini = IniFile(self.ini_filename,self.defaults,self.builder)\n"
"self.ini.restore_state(self)\n"
msgstr ""

#. type: Plain text
msgid ""
"After `restore_state()`, self will have attributes set if as running the "
"following:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"self.nhits = 0\n"
"self.a = 1.67\n"
"self.d = True\n"
"self.c = \"a string\"\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that types are saved and preserved on restore. This example assumes "
"that the ini file didn't exist or had the default values from self.defaults."
msgstr ""

#. type: Plain text
msgid "After this incantation, you can use the following IniFil methods:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ini.save_state(obj)"
msgstr ""

#. type: Plain text
msgid ""
"saves objs's attributes as per IniFil.vars dictionary and the widget state "
"as described in IniFile.widgets in self.defaults"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ini.create_default_ini()"
msgstr ""

#. type: Plain text
msgid "create a .ini file with default values"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ini.restore_state(obj)"
msgstr ""

#. type: Plain text
msgid ""
"restore HAL out pins and obj's attributes as saved/initialized to default as "
"above"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Saving the state on Gladvcp shutdown"
msgstr ""

#. type: Plain text
msgid "To save the widget and/or variable state on exit, proceed as follows:"
msgstr ""

#. type: Plain text
msgid ""
"select some interior widget (type is not important, for instance a table)."
msgstr ""

#. type: Plain text
msgid ""
"in the 'Signals' tab, select 'GtkObject'. It should show a 'destroy' signal "
"in the first column."
msgstr ""

#. type: Plain text
msgid "add the handler name, e.g. 'on_destroy' to the second column."
msgstr ""

#. type: Plain text
msgid "add a Python handler like below:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import gtk\n"
"...\n"
"def on_destroy(self,obj,data=None):\n"
"    self.ini.save_state(self)\n"
msgstr ""

#. type: Plain text
msgid ""
"This will save state and shutdown GladeVCP properly, regardless whether the "
"panel is embedded in Axis, or a standalone window."
msgstr ""

#. type: Plain text
msgid ""
"Do not use +window1+ (the toplevel window) to connect a +destroy+ event. Due "
"to the way a GladeVCP panel interacts with Axis if a panel is embedded "
"within Axis, *window1 will not receive destroy events properly*. However, "
"since on shutdown all widgets are destroyed, anyone will do. Recommended: "
"use a second-level widget - for instance, if you have a table container in "
"your panel, use that."
msgstr ""

#. type: Plain text
msgid ""
"Next time you start the GladeVCP application, the widgets should come up in "
"the state when the application was closed."
msgstr ""

#. type: Plain text
msgid ""
"The 'GtkWidget' line has a similarly sounding 'destroy-event' - *dont use "
"that to connect to the 'on_destroy' handler, it wont work* - make sure you "
"use the 'destroy' event from the 'GtkObject' line."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Saving state when Ctrl-C is pressed"
msgstr ""

#. type: Plain text
msgid "By default, the reaction of GladeVCP to a Ctrl-C event is to just exit"
msgstr ""

#. type: Plain text
msgid ""
"+without+ saving state. To make sure that this case is covered, add a "
"handler call +on_unix_signal+ which will be automatically be called on Ctrl-"
"C (actually on the SIGINT and SIGTERM signals). Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def on_unix_signal(self,signum,stack_frame):\n"
"    print \"on_unix_signal(): signal %d received, saving state\" % (signum)\n"
"    self.ini.save_state(self)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hand-editing .ini files"
msgstr ""

#. type: Plain text
msgid ""
"You can do that, but note that the values in self.defaults override your "
"edits if there is a syntax or type error in your edit. The error is "
"detected, a console message will hint about that happened, and the bad "
"inifile will be renamed to have the .BAD suffix. Subsequent bad ini files "
"overwrite earlier .BAD files."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adding HAL pins"
msgstr ""

#. type: Plain text
msgid ""
"If you need HAL pins which are not associated with a specific HAL widget, "
"add them as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import hal_glib\n"
"...\n"
"# in your handler class __init__():\n"
"self.example_trigger = hal_glib.GPin(halcomp.newpin('example-trigger', hal.HAL_BIT, hal.HAL_IN))\n"
msgstr ""

#. type: Plain text
msgid ""
"To get a callback when this pin's value changes, associate a +value-change+ "
"callback with this pin, add:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "self.example_trigger.connect('value-changed', self._on_example_trigger_change)\n"
msgstr ""

#. type: Plain text
msgid ""
"and define a callback method (or function, in this case leave out the +self+ "
"parameter):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# note '_' - this method will not be visible to the widget tree\n"
"def _on_example_trigger_change(self,pin,userdata=None):\n"
"    print \"pin value changed to:\" % (pin.get())\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Adding timers"
msgstr ""

#. type: Plain text
msgid ""
"Since GladeVCP uses Gtk widgets which rely on the http://www.pygtk.org/"
"pygtk2reference/gobject-functions.html[GObject] base class, the full glib "
"functionally is available. Here is an example for a timer callback:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def _on_timer_tick(self,userdata=None):\n"
"    ...\n"
"    return True # to restart the timer; return False for on-shot\n"
"...\n"
"# demonstrate a slow background timer - granularity is one second\n"
"# for a faster timer (granularity 1 ms), use this:\n"
"# glib.timeout_add(100, self._on_timer_tick,userdata) # 10Hz\n"
"glib.timeout_add_seconds(1, self._on_timer_tick)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting HAL widget properties programmatically"
msgstr ""

#. type: Plain text
msgid ""
"With glade, widget properties are typically set fixed while editing.  You "
"can, however, set widget properties at runtime, for instance from ini file "
"values, which would typically be done in the handler initialization code. "
"Setting properties from HAL pin values is possible, too."
msgstr ""

#. type: Plain text
msgid ""
"In the following example (assuming a HAL Meter widget called `meter`), the "
"meter's min value is set from an INI file parameter at startup, and the max "
"value is set via a HAL pin, which causes the widget's scale to readjust "
"dynamically:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import linuxcnc\n"
"import os\n"
"import hal\n"
"import hal_glib\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "class HandlerClass:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    def _on_max_value_change(self,hal_pin,data=None):\n"
"        self.meter.max = float(hal_pin.get())\n"
"        self.meter.queue_draw() # force a widget redraw\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    def __init__(self, halcomp,builder,useropts):\n"
"  self.builder = builder\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        # hal pin with change callback.\n"
"        # When the pin's value changes the callback is executed.\n"
"        self.max_value = hal_glib.GPin(halcomp.newpin('max-value',  hal.HAL_FLOAT, hal.HAL_IN))\n"
"        self.max_value.connect('value-changed', self._on_max_value_change)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  inifile = linuxcnc.ini(os.getenv(\"INI_FILE_NAME\"))\n"
"  mmin = float(inifile.find(\"METER\", \"MIN\") or 0.0)\n"
"        self.meter = self.builder.get_object('meter')\n"
"        self.meter.min = mmin\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def get_handlers(halcomp,builder,useropts):\n"
"    return [HandlerClass(halcomp,builder,useropts)]\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Examples, and rolling your own GladeVCP application"
msgstr ""

#. type: Plain text
msgid ""
"Visit +linuxcnc_root_directory/configs/apps/gladevcp+ for running examples "
"and starters for your own projects."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "FAQ"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "I get an unexpected unmap event in my handler function right after startup. What's this?"
msgstr ""

#. type: Plain text
msgid ""
"This is a consequence of your Glade UI file having the window1 Visible "
"property set to True, together with re-parenting the GladeVCP window into "
"Axis or touchy. The GladeVCP widget tree is created, including a top level "
"window, and then 'reparented into Axis', leaving that toplevel window laying "
"around orphaned. To avoid having this useless empty window hanging around, "
"it is unmapped (made invisible), which is the cause of the unmap signal you "
"get. Suggested fix: set window1.visible to False, and ignore an initial "
"unmap event."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "My GladeVCP program starts, but no window appears where I expect it to be?"
msgstr ""

#. type: Plain text
msgid ""
"The window Axis allocates for GladeVCP will obtain the 'natural size' of all "
"its child widgets combined. It's the child widget's job to request a size "
"(width and/or height). However, not all widgets do request a width greater "
"than 0, for instance the Graph widget in its current form. If there's such a "
"widget in your Glade file and it's the one which defines the layout you "
"might want to set its width explicitly. Note that setting the window1 width "
"and height properties in Glade does not make sense because this window will "
"be orphaned during re-parenting and hence its geometry will have no impact "
"on layout (see above). The general rule is: if you manually run a UI file "
"with 'gladevcp <uifile>' and its window has reasonable geometry, it should "
"come up in Axis properly as well."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "I want a blinking LED, but it wont blink"
msgstr ""

#. type: Plain text
msgid ""
"I ticked the checkbutton to let it blink with 100 msec interval. It wont "
"blink, and I get a startup warning: Warning: value \"0\" of type `gint' is "
"invalid or out of range for property `led-blink-rate' of type `gint'? This "
"seems to be a glade bug. Just type over the blink rate field, and save again "
"- this works for me."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "My gladevcp panel in Axis doesn't save state when I close Axis, although I defined an on_destroy handler linked to the window destroy signal"
msgstr ""

#. type: Plain text
msgid ""
"Very likely this handler is linked to window1, which due to reparenting "
"isn't usable for this purpose. Please link the on_destroy handler to the "
"destroy signal of an interior window. For instance, I have a notebook inside "
"window1, and linked on_destroy to the notebooks destroy signal, and that "
"works fine. It doesn't work for window1."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "I want to set the background color or text of a HAL_Label widget depending on its HAL pin value"
msgstr ""

#. type: Plain text
msgid ""
"See the example in configs/apps/gladevcp/colored-label.  Setting the "
"background color of a GtkLabel widget (and HAL_Label is derived from "
"GtkLabel) is a bit tricky. The GtkLabel widget has no window object of its "
"own for performance reasons, and only window objects can have a background "
"color. The solution is to enclose the Label in an EventBox container, which "
"has a window but is otherwise invisible - see the coloredlabel.ui file."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "I defined a `hal_spinbutton` widget in glade, and set a default `value` property in the corresponding adjustment. It comes up with zero?"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"this is due to a bug in the old   Gtk version distributed with Ubuntu\n"
"8.04 and 10.04, and is likely to be the case for all widgets using\n"
"adjustment. The workaround mentioned for instance in\n"
"http://osdir.com/ml/gtk-app-devel-list/2010-04/msg00129.html does\n"
"not reliably set the HAL pin value, it is better to set it\n"
"explicitly in an `on_realize` signal handler during widget creation.\n"
"See the example in `configs/apps/gladevcp/by-widget/spinbutton.{ui,py}`.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Troubleshooting"
msgstr ""

#. type: Plain text
msgid "make sure you have the development version of LinuxCNC installed. You"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"don't need the axisrc file any more, this was mentioned in the old\n"
"GladeVcp wiki page.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "run GladeVCP or Axis from a terminal window. If you get Python errors,\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"check whether there's still a +/usr/lib/python2.6/dist-packages/hal.so+\n"
"file lying around besides the newer\n"
"+/usr/lib/python2.6/dist-packages/_hal.so+ (note underscore); if yes,\n"
"remove the +hal.so+ file. It has been superseded by hal.py in the same\n"
"directory and  confuses the import mechanism.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "if you're using run-in-place, do a 'make clean' to remove any\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "accidentally left over hal.so file, then 'make'.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "if you're using 'HAL_table' or 'HAL_HBox' widgets, be aware they have\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"an HAL pin associated with it which is off by default. This pin\n"
"controls whether these container's children are active or not.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Implementation note: Key handling in Axis"
msgstr ""

#. type: Plain text
msgid ""
"We believe key handling works OK, but since it is new code, we're telling "
"about it you so you can watch out for problems; please let us know of errors "
"or odd behavior. This is the story:"
msgstr ""

#. type: Plain text
msgid ""
"Axis uses the TkInter widget set. GladeVCP applications use Gtk widgets and "
"run in a separate process context. They are hooked into Axis with the Xembed "
"protocol. This allows a child application like GladeVCP to properly fit in a "
"parent's window, and - in theory - have integrated event handling."
msgstr ""

#. type: Plain text
msgid ""
"However, this assumes that both parent and child application properly "
"support the Xembed protocol, which Gtk does, but TkInter doesn't. A "
"consequence of this is that certain keys would not be forwarded from a "
"GladeVCP panel to Axis properly under all circumstances. One of these "
"situations was the case when an Entry, or SpinButton widget had focus: in "
"this case, for instance an Escape key would not have been forwarded to Axis "
"and cause an abort as it should, with potentially disastrous consequences."
msgstr ""

#. type: Plain text
msgid ""
"Therefore, key events in GladeVCP are explicitly handled, and selectively "
"forwarded to Axis, to assure that such situations cannot arise. For details, "
"see the `keyboard_forward()` function in `lib/python/gladevcp/xembed.py`."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Adding Custom Widgets"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC Wiki has information on adding custom widgets to GladeVCP.  "
"link:http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"GladeVCP_Custom_Widgets[GladeVCP Custom Widgets]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Auxiliary Gladevcp Applications"
msgstr ""

#. type: Plain text
msgid ""
"Support is provided for independently installed gladevcp applications that "
"conform to system directory placements as defined by the "
"LINUXCNC_AUX_GLADEVCP and LINUXCNC_AUX_EXAMPLES items reported by the script "
"linuxcnc_var:"
msgstr ""

#. type: delimited block =
#, no-wrap
msgid ""
"  $ linuxcnc_var LINUXCNC_AUX_GLADEVCP\n"
"  /usr/share/linuxcnc/aux_gladevcp\n"
"  $ linuxcnc_var LINUXCNC_AUX_EXAMPLES\n"
"  /usr/share/linuxcnc/aux_examples\n"
msgstr ""

#. type: Plain text
msgid ""
"The system directory defined by LINUXCNC_AUX_GLADEVCP (/usr/share/linuxcnc/"
"aux_gladevcp) specifies the location for a gladevcp-compatible python "
"file(s) and related subdirectories.  The python file is imported at gladevcp "
"startup and made available to subsequent gladevcp applications including "
"embedded usage in supporting guis."
msgstr ""

#. type: Plain text
msgid ""
"The system directory defined by LINUXCNC_AUX_EXAMPLES (/usr/share/linuxcnc/"
"aux_examples) specifies the location of example configuration subdirectories "
"used for auxiliary applications.  See the getting-started/running-linuxcnc "
"section for 'Adding Configuration Selection Items'."
msgstr ""

#. type: Plain text
msgid ""
"For testing, a runtime specification of auxiliary applications may be "
"specified using the exported environmental variable: GLADEVCP_EXTRAS.  This "
"variable should be a path list of one or more configuration directories "
"separated by a (:). Typically, this variable would be set in a shell "
"starting linuxcnc or in a userâs ~/.profile startup script. Example:"
msgstr ""

#. type: delimited block =
#, no-wrap
msgid "  export GLADEVCP_EXTRAS=~/mygladevcp:/opt/othergladevcp\n"
msgstr ""

#. type: Plain text
msgid ""
"Files found in directories specified with the environmental variable "
"GLADEVCP_EXTRAS supersede identically-named files within subdirectories of "
"the system directory specified by LINUXNC_AUX_GLADEVCP (e.g., /usr/share/"
"linuxcnc/aux_gladevcp).  This provision allows a developer to test an "
"application by exporting GLADEVCP_EXTRAS to specify a private application "
"directory without removing a system-installed application directory.  "
"Messages inidicating rejected duplicates are printed to stdout."
msgstr ""

#. type: Plain text
msgid ""
"Support for auxiliary gladevcp applications requires a python module named "
"'importlib'.  This module may not be available in older installations like "
"Ubuntu-Lucid."
msgstr ""

#. type: Plain text
msgid "[[cha:Panelui]](((Panelui)))"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Panelui"
msgstr ""

#. type: Plain text
msgid ""
"Panelui is a userspace component to interface buttons to linuxcnc or HAL. + "
"It decodes MESA 7I73 style key-scan codes and calls the appropriate routine. "
"+ It gets input from a realtime component - sampler. + Sampler gets it's "
"input from either the MESA 7i73 or sim_matrix_kb component. + Panelui is "
"configurable using an INI style text file to define button types, HAL pin "
"types, and/or commands."
msgstr ""

#. type: Plain text
msgid ""
"It can be extended using a Python based 'handler' file to add functions. + "
"While actual input buttons are required to be momentary, Panelui will use "
"this input to make toggle, radio, or momentary button output. +"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Loading Commands"
msgstr ""

#. type: Plain text
msgid "The command used to load panelui (with optional -d debug switch):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -W panelui -d\n"
msgstr ""

#. type: Plain text
msgid ""
"This will initialize panelui, which will look for the INI file panelui.ini "
"in the config folder or user folder."
msgstr ""

#. type: Plain text
msgid "One can validate the INI file with this command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr pyui\n"
msgstr ""

#. type: Plain text
msgid ""
"This will read, try to correct, then save the panelui.ini file.  It will "
"print errors to the terminal if found."
msgstr ""

#. type: Plain text
msgid "A typical HAL file will have these commands added:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# commands needed for panelui loading\n"
"# \n"
"# sampler is needed for panelui\n"
"# cfg= must always be u for panelui. depth sets the available buffer\n"
"loadrt sampler cfg=u depth=1025\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#uncomment to validate the panelui INI file\n"
"#loadusr pyui\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# -d = debug, -v = verbose debug\n"
"# -d will show you keypress identification and commands called\n"
"# -v is for develeper info\n"
"loadusr -W panelui -d\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# using simulated buttons instead of the MESA 7I73 card\n"
"# so we load the sim_matrix_kb component to convert HAL pins to keyscan codes\n"
"loadrt sim_matrix_kb\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the components together.\n"
"# sampler talks to panelui internally\n"
"net key-scan    sim-matrix-kb.0.out\n"
"net key-scan    sampler.0.pin.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# add panelui components to a thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"addf sim-matrix-kb.0    servo-thread\n"
"addf sampler.0          servo-thread\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "panelui.ini file reference"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*Key words*"
msgstr ""

#. type: Plain text
msgid ""
"KEY= This is used to designate the key that the button responds to. It can "
"be NONE or ROW number and column number eg R1C2. A row and column can only "
"be used once."
msgstr ""

#. type: Plain text
msgid ""
"OUTPUT= This sets the Button's output type, eg S32, U32, FLOAT, BIT, NONE, "
"COMMAND, ZMQ."
msgstr ""

#. type: Plain text
msgid "DEFAULT= This sets the starting output of the group or button."
msgstr ""

#. type: Plain text
msgid "GROUP= In radiobuttons, designates the group the button interacts with."
msgstr ""

#. type: Plain text
msgid ""
"GROUP_OUTPUT= sets the output the group pin will be, if this button is "
"active."
msgstr ""

#. type: Plain text
msgid ""
"STATUS_PIN= If TRUE, a HAL pin will be added that reflects the current state "
"of button."
msgstr ""

#. type: Plain text
msgid "TRUE_STATE= sets the output the HAL pin will be, if button is TRUE."
msgstr ""

#. type: Plain text
msgid ""
"FALSE_STATE= sets the OUTPUT the HAL pin will be, if the button is FALSE."
msgstr ""

#. type: Plain text
msgid ""
"TRUE_COMMAND= sets the command and arguments to be called when the button is "
"TRUE."
msgstr ""

#. type: Plain text
msgid ""
"FALSE_COMMAND= sets the command and arguments to be called when the button "
"is FALSE."
msgstr ""

#. type: Plain text
msgid ""
"TRUE_FUNCTION= sets the ZMQ message function and arguments to be called when "
"the button is TRUE."
msgstr ""

#. type: Plain text
msgid ""
"FALSE_FUNCTION= sets the ZMQ message function and arguments to be called "
"when the button is FALSE."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*HAL Prefix*"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL_PREFIX]\n"
"    NAME= Yourname \n"
msgstr ""

#. type: Plain text
msgid ""
"This allows one to change the prefix of the HAL pins from 'panelui' to an "
"arbitrary name."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*ZMQ Messaging Setup*"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[ZMQ_SETUP]\n"
"    TOPIC = 'QTVCP'\n"
"    SOCKET = 'tcp://127.0.0.1:5690'\n"
"    ENABLE = True\n"
msgstr ""

#. type: Plain text
msgid ""
"This sets up and enables ZMQ based messaging. + TOPIC and SOCKET must match "
"the listening program. +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*Radio Buttons*"
msgstr ""

#. type: Plain text
msgid ""
"Radiobutons allow only one button in the group to be active at a time. + "
"Each group has its own output pin, separate from each button in the group. + "
"Radio button definitions start with the text 'RADIO_BUTTON' inside single "
"brackets."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[RADIO_BUTTONS]\n"
"        # The double bracket section(s) define the group(s) of radio buttons.\n"
"        # The group name must be unique and is case sensitive.\n"
"        # Groups output is controlled by what button is active not directly by keycode.\n"
"        # DEFAULT references a button in the group by name and is case sensitive.\n"
"        [[group1_name]]\n"
"            KEY = NONE\n"
"            OUTPUT = FLOAT\n"
"            DEFAULT = small\n"
"            # The triple bracket sections define the buttons in this group.\n"
"            # button names must be unique and are case sensitive.\n"
"            # There must be at least two buttons in a group.\n"
"            #\n"
"            # This button, named 'small'is controller by the row 0 column 1 key.\n"
"            # It will cause the group output to be .0001 when it is pressed.\n"
"            # It has no output of it's own, but has a status\n"
"            # pin which will follow it's current state.\n"
"            # since this button is in a group, DEFAULT has no bearing.\n"
"            # since OUTPUT in not 'COMMAND' _COMMAND entries are ignored.\n"
"            [[[small]]]\n"
"                KEY = R0C1\n"
"                GROUP = group1_name\n"
"                GROUP_OUTPUT = .0001\n"
"                OUTPUT = NONE\n"
"                STATUS_PIN = True\n"
"                TRUE_STATE = TRUE\n"
"                FALSE_STATE = FALSE\n"
"                TRUE_COMMAND = NONE, NONE\n"
"                FALSE_COMMAND = NONE, NONE\n"
"                DEFAULT = false\n"
"            # This button, named 'large' is controller by the row 0 column 2 key. \n"
"            # It will cause the group output to be 1000 when it is pressed.\n"
"            # It has a S32 output of it's own, will be 20 on true and 0 on false.\n"
"            # It also has a status pin which will follow it's current state.\n"
"            # since this button is in a group, DEFAULT has no bearing.\n"
"            # since OUTPUT in not 'COMMAND' _COMMAND entries are ignored.\n"
"            [[[large]]]\n"
"                KEY = R0C2\n"
"                GROUP = group1_name\n"
"                GROUP_OUTPUT = 1000\n"
"                OUTPUT = S32\n"
"                STATUS_PIN = True\n"
"                TRUE_STATE = 20\n"
"                TRUE_COMMAND = NONE, NONE\n"
"                FALSE_COMMAND = NONE, NONE\n"
"                FALSE_STATE = 0\n"
"                DEFAULT = false\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*Toggle Buttons*"
msgstr ""

#. type: Plain text
msgid ""
"Togglebuttons only change state on each press of the button.  Toggle button "
"definitions start with the text 'TOGGLE_BUTTON' inside single brackets."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TOGGLE_BUTTONS]\n"
"    # Each button name inside double brackets, must be unique and is case sensitive.\n"
"    # This button, named 'tool_change'is controller by the row 2 column 5 key.\n"
"    # It has a BIT output, will output 1 on true state and 0 on false state.\n"
"    # It also has a status pin which will follow it's current state.\n"
"    # DEFAULT sets this to true when first initialized.\n"
"    # The _COMMAND are not used since OUTPUT is not set to COMMAND but validation will\n"
"    # add the lines regardless\n"
"    [[tool_change]]\n"
"        KEY = R2C5\n"
"        OUTPUT = BIT\n"
"        TRUE_COMMAND = NONE, NONE\n"
"        FALSE_COMMAND = NONE, NONE\n"
"        STATUS_PIN = True\n"
"        DEFAULT = TRUE\n"
"        TRUE_STATE = 1\n"
"        FALSE_STATE = 0\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*Momentary Buttons*"
msgstr ""

#. type: Plain text
msgid ""
"Momentary buttons are true when pressed and false when released.  Momentary "
"button definitions start with the text 'MOMENTARY_BUTTON' inside single "
"brackets."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[MOMENTARY_BUTTONS]\n"
"    # Each button name inside double brackets, must be unique and is case sensitive.\n"
"    # This button, named 'spindle_rev'is controller by the row 2 column 3 key.\n"
"    # It has a COMMAND output, so will use TRUE_COMMAND and FALSE_COMMAND.\n"
"    # It also has a status pin which will follow it's current state.\n"
"    # COMMANDs will have a command name and then any required arguments\n"
"    # This TRUE_COMMAND calls an internal command to start the spindle in reverse at 200 rpm\n"
"    # If the spindle is already started, it will increase the rpm.\n"
"    # DEFAULT is not used with Momentary buttons.\n"
"    # The _STATE are not used since OUTPUT is set to COMMAND but validation will\n"
"    # add the lines regardless\n"
"    [[spindle_rev]]\n"
"        KEY = R2C3\n"
"        OUTPUT = COMMAND\n"
"        TRUE_COMMAND = SPINDLE_REVERSE_INCREASE, 200\n"
"        FALSE_COMMAND = None, NONE\n"
"        STATUS_PIN = True\n"
"        DEFAULT = FALSE\n"
"        TRUE_STATE = 1\n"
"        FALSE_STATE = 0\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Internal Command reference"
msgstr ""

#. type: Plain text
msgid "There are a number of internal commands you may use. +"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*mist_on*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*mist_off*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*flood_on*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*flood_off*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*estop*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*estop_reset*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*machine_off*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*machine_on*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*home_all*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*unhome_all*\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*home_selected*"
msgstr ""

#. type: Plain text
msgid "required argument: axis number (int)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*unhome_selected*"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*override_limits*"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_forward_adjust*"
msgstr ""

#. type: Plain text
msgid "optional argument: starting RPM (int) - default 100"
msgstr ""

#. type: Plain text
msgid ""
"Description: If the spindle is stopped it will start in the forward "
"direction.  If it is already running it will increase or decrease the rpm "
"depending on what direction the spindle is running in."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_forward*"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*spindle_stop*\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_reverse*"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_reverse_adjust*"
msgstr ""

#. type: Plain text
msgid ""
"Description: If the spindle is stopped it will start in the reverse "
"direction.  If it is already running it will increase or decrease the rpm "
"depending on what direction the spindle is running in."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_faster*"
msgstr ""

#. type: Plain text
msgid "Description: increases spindle speed by 100 RPM"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_slower*"
msgstr ""

#. type: Plain text
msgid "Description: decreases spindle speed by 100 RPM, until RPM is 100"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*set_linear_jog_velocity*"
msgstr ""

#. type: Plain text
msgid "required argument: velocity in inches per minute (float)"
msgstr ""

#. type: Plain text
msgid "description: sets the jog velocity on axis 0,1,2,6,7,8 (X,Y,Z,U,V,W)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*set_angular_jog_velocity*"
msgstr ""

#. type: Plain text
msgid "required argument: velocity in degrees per minute (float)"
msgstr ""

#. type: Plain text
msgid "description: sets the jog velocity on axis 3,4,5 (A.B.C)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*continuous_jog*"
msgstr ""

#. type: Plain text
msgid "required arguments: axis number (int), direction (int)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*incremental_jog*"
msgstr ""

#. type: Plain text
msgid ""
"required arguments: axis number (int), direction (int), distance (float)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*quill_up*"
msgstr ""

#. type: Plain text
msgid "optional arguments: machine Z axis absolute position (float)"
msgstr ""

#. type: Plain text
msgid "Description: Move Z axis to the given machine position"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*feed_hold*"
msgstr ""

#. type: Plain text
msgid "required argument: state (bool 0 or 1)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*feed_override*"
msgstr ""

#. type: Plain text
msgid "required argument: rate (float)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*rapid_override*"
msgstr ""

#. type: Plain text
msgid "required argument: rate (float 0-1)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*spindle_override*"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_velocity*"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*reload_tooltable*\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*optional_stop*"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*block_delete*"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*abort*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pause*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*resume*\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*single_block*"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*smart_cycle_start*"
msgstr ""

#. type: Plain text
msgid "Description: If idle, starts gcode program, if paused runs one line."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*re_start line*"
msgstr ""

#. type: Plain text
msgid "required argument: line number (int)"
msgstr ""

#. type: Block title
#, no-wrap
msgid "*mdi_and_return*"
msgstr ""

#. type: Plain text
msgid "required argument: Gcode command(s)"
msgstr ""

#. type: Plain text
msgid ""
"Description: records the current mode, calls commands and then returns to "
"mode."
msgstr ""

#. type: Block title
#, no-wrap
msgid "*mdi*"
msgstr ""

#. type: Plain text
msgid "Description: sets mode to MDI, calls commands."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "ZMQ Messages"
msgstr ""

#. type: Plain text
msgid ""
"panelui can send ZMQ based messages on button presses. + In this way panelui "
"can interact will other programs such as qtvcp screens. +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[TOGGLE_BUTTONS]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    [[zmq_test]]\n"
"        KEY = R2C3\n"
"        OUTPUT = ZMQ\n"
"        TRUE_FUNCTION = ZMQ_BUTTON, 200\n"
"        FALSE_FUNCTION = ZMQ_BUTTON, 0\n"
"        STATUS_PIN = False\n"
"        DEFAULT = FALSE\n"
"        TRUE_STATE = 1\n"
"        FALSE_STATE = 0\n"
msgstr ""

#. type: Plain text
msgid ""
"Here is a sample program that will receive the message and print it to the "
"terminal. +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import zmq\n"
"import json\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# ZeroMQ Context\n"
"context = zmq.Context()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Define the socket using the \"Context\"\n"
"sock = context.socket(zmq.SUB)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Define subscription and messages with topic to accept.\n"
"topic = \"\" # all topics\n"
"sock.setsockopt(zmq.SUBSCRIBE, topic)\n"
"sock.connect(\"tcp://127.0.0.1:5690\")\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"while True:\n"
"    topic, message = sock.recv_multipart()\n"
"    print '{} sent message:{}'.format(topic,json.loads(message))\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Handler File Extension"
msgstr ""

#. type: Plain text
msgid ""
"A special file can be used to add custom python code that will be available "
"as commands.  panelui_handler.py must be written in python and be placed in "
"the configuration folder.  If panelui finds a file there it will add it's "
"function calls to the available commands.  Here is an example of a handler "
"file that adds two functions - hello_world and cycle_mode:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "include::panelui_handler.py[]\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL User Interface"
msgstr ""

#. type: Plain text
msgid ""
"Halui is a HAL based user interface for LinuxCNC, it connects HAL pins to "
"NML commands. Most of the functionality (buttons, indicators etc.) that is "
"provided by a traditional GUI (Axis, GMoccapy, QtDragon, etc.), is provided "
"by HAL pins in Halui."
msgstr ""

#. type: Plain text
msgid ""
"The easiest way to add halui is to add the following to the [HAL] section of "
"the ini file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"HALUI = halui\n"
msgstr ""

#. type: Plain text
msgid ""
"An alternate way to invoke it is to include the following in your .hal file. "
"Make sure you use the correct path to your ini file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr halui -ini /path/to/inifile.ini\n"
msgstr ""

#. type: Plain text
msgid ""
"Sometimes the user wants to add more complicated tasks to be performed by "
"the activation of a HAL pin. This is possible by adding MDI commands to the "
"ini file in the [HALUI] section: Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HALUI] \n"
"MDI_COMMAND = G0 X0\n"
"MDI_COMMAND = G0 G53 Z0\n"
"MDI_COMMAND = G28\n"
"MDI_COMMAND = o<mysub>call\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"When halui starts it will read the MDI_COMMAND fields in the ini and export "
"pins from 00 to the number of MDI_COMMAND's found in the ini up to a maximum "
"of 64 commands.  These pins can be connected like any hal pins.  A common "
"method is to use buttons provided by virtual control panels.  Example "
"halfile connections:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net quill-up       <= pyvcp.quillup\n"
"net quill-up       => halui.mdi-command-00\n"
"net reference-pos  <= pyvcp.referencepos\n"
"net reference-pos  => halui.mdi-command-01\n"
"net call-mysub     <= pyvcp.callmysub\n"
"net call-mysub     => halui.mdi-command-02\n"
msgstr ""

#. type: Plain text
msgid "These nets connect the halui.mdi-command-NN pins provided by halui:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ halcmd show pin halui.mdi\n"
"Component Pins:\n"
"Owner  Type  Dir Value  Name\n"
"   10  bit   IN  FALSE  halui.mdi-command-00 <== quill-up\n"
"   10  bit   IN  FALSE  halui.mdi-command-01 <== reference-pos\n"
"   10  bit   IN  FALSE  halui.mdi-command-02 <== call-mysub\n"
"    ...\n"
msgstr ""

#. type: Plain text
msgid ""
"When a halui MDI pin is set (pulsed) true, halui will send the MDI command "
"defined in the ini.  This will not always succeed depending on the current "
"operating mode (e.g., while in AUTO halui can't successfully send MDI "
"commands)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Example Configuration"
msgstr ""

#. type: Plain text
msgid ""
"An example sim config (configs/sim/axis/halui_pyvcp/halui.ini)  is included "
"in the distribution."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Halui Pin Reference"
msgstr ""

#. type: Plain text
msgid "All halui pins are also documented in the halui man page:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ man halui\n"
msgstr ""

#. type: Plain text
msgid ""
"'halui.abort' (bit, in) - pin to send an abort message (clears out most "
"errors)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "E-Stop"
msgstr ""

#. type: Plain text
msgid "'halui.estop.activate' (bit, in) - pin for requesting E-Stop"
msgstr ""

#. type: Plain text
msgid "'halui.estop.is-activated' (bit, out) - indicates E-stop reset"
msgstr ""

#. type: Plain text
msgid "'halui.estop.reset' (bit, in) - pin for requesting E-Stop reset"
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.count-enable' (bit, in) - must be true for 'counts' or "
"'direct-value' to work."
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.counts' (s32, in) - counts * scale = FO percentage. Can "
"be used with an encoder or 'direct-value'."
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.decrease' (bit, in) - pin for decreasing the FO (-"
"=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.increase' (bit, in) - pin for increasing the FO "
"(+=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.direct-value' (bit, in) - false when using encoder to "
"change counts, true when setting counts directly."
msgstr ""

#. type: Plain text
msgid ""
"'halui.feed-override.scale' (float, in) - pin for setting the scale for "
"increase and decrease of 'feed-override'."
msgstr ""

#. type: Plain text
msgid "'halui.feed-override.value' (float, out) - current FO value"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Mist "
msgstr ""

#. type: Plain text
msgid "'halui.mist.is-on' (bit, out) - indicates mist is on"
msgstr ""

#. type: Plain text
msgid "'halui.mist.off' (bit, in) - pin for requesting mist off"
msgstr ""

#. type: Plain text
msgid "'halui.mist.on' (bit, in) - pin for requesting mist on"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Flood"
msgstr ""

#. type: Plain text
msgid "'halui.flood.is-on' (bit, out) - indicates flood is on"
msgstr ""

#. type: Plain text
msgid "'halui.flood.off' (bit, in) - pin for requesting flood off"
msgstr ""

#. type: Plain text
msgid "'halui.flood.on' (bit, in) - pin for requesting flood on"
msgstr ""

#. type: Plain text
msgid "'halui.home-all' (bit, in) - pin for requesting all axis to home. This"
msgstr ""

#. type: Plain text
msgid "pin will only be there if HOME_SEQUENCE is set in the ini file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Lube"
msgstr ""

#. type: Plain text
msgid "'halui.lube.is-on' (bit, out) - indicates lube is on"
msgstr ""

#. type: Plain text
msgid "'halui.lube.off' (bit, in) - pin for requesting lube off"
msgstr ""

#. type: Plain text
msgid "'halui.lube.on' (bit, in) - pin for requesting lube on"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Machine"
msgstr ""

#. type: Plain text
msgid ""
"'halui.machine.units-per-mm' (float out) - pin for machine units-per-mm "
"(inch:1/25.4, mm:1) according to inifile setting: [TRAJ]LINEAR_UNITS"
msgstr ""

#. type: Plain text
msgid "'halui.machine.is-on' (bit, out) - indicates machine on"
msgstr ""

#. type: Plain text
msgid "'halui.machine.off' (bit, in) - pin for requesting machine off"
msgstr ""

#. type: Plain text
msgid "'halui.machine.on' (bit, in) - pin for requesting machine on"
msgstr ""

#. type: Plain text
msgid ""
"The maximum linear velocity can be adjusted from 0 to the MAX_VELOCITY that "
"is set in the [TRAJ] section of the ini file."
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.count-enable' (bit, in) - must be true for 'counts' or "
"'direct-value' to work."
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.counts' (s32, in) - counts * scale = MV percentage. Can "
"be used with an encoder or 'direct-value'."
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.direct-value' (bit, in) - false when using encoder to "
"change counts, true when setting counts directly."
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.decrease' (bit, in) - pin for decreasing max velocity"
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.increase' (bit, in) - pin for increasing max velocity"
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.scale' (float, in) - the amount applied to the current "
"maximum velocity with each transition from off to on of the increase or "
"decrease pin in machine units per second."
msgstr ""

#. type: Plain text
msgid ""
"'halui.max-velocity.value' (float, out) - is the maximum linear velocity in "
"machine units per second."
msgstr ""

#. type: Plain text
msgid "'halui.mdi-command-<nn>' (bit, in) - halui will try to send the MDI"
msgstr ""

#. type: Plain text
msgid ""
"command defined in the ini. <nn> is a two digit number starting at 00. + If "
"the command succeeds then it will place LinuxCNC in the MDI mode and then "
"back to Manual mode. + If no [HALUI]MDI_COMMAND variables are set in the ini "
"file, no halui.mdi-command-<nn> pins will be exported by halui."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Joint"
msgstr ""

#. type: Plain text
msgid "N = joint number (0 ... num_joints-1)  Example:"
msgstr ""

#. type: Plain text
msgid "'halui.joint.N.select' (bit in) - pin for selecting joint N"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.is-selected' (bit out) - status pin that joint N is selected"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.has-fault' (bit out) - status pin telling that joint N has a "
"fault"
msgstr ""

#. type: Plain text
msgid "'halui.joint.N.home' (bit in) - pin for homing joint N"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.is-homed' (bit out) - status pin telling that joint N is homed"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.on-hard-max-limit' (bit out) - status pin telling that joint "
"N is on the positive hardware limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.on-hard-min-limit' (bit out) - status pin telling that joint "
"N is on the negative hardware limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.on-soft-max-limit' (bit out) - status pin telling that joint "
"N is on the positive software limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.on-soft-min-limit' (bit out) - status pin telling that joint "
"N is on the negative software limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.N.override-limits' (bit out) - status pin telling that joint "
"N's limits are temporarily overridden"
msgstr ""

#. type: Plain text
msgid "'halui.joint.N.unhome' (bit in) - pin for unhoming joint N"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected' (u32 out) - selected joint number (0 ... num_joints-1)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.has-fault' (bit out) - status pin selected joint is "
"faulted"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.home' (bit in) - pin for homing the selected joint"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.is-homed' (bit out) - status pin telling that the "
"selected joint is homed"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.on-hard-max-limit' (bit out) - status pin telling that "
"the selected joint is on the positive hardware limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.on-hard-min-limit' (bit out) - status pin telling that "
"the selected joint is on the negative hardware limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.on-soft-max-limit' (bit out) - status pin telling that "
"the selected joint is on the positive software limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.on-soft-min-limit' (bit out) - status pin telling that "
"the selected joint is on the negative software limit"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.override-limits' (bit out) - status pin telling that "
"the selected joint's limits are temporarily overridden"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.selected.unhome' (bit in) - pin for unhoming the selected joint"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Joint Jogging"
msgstr ""

#. type: Plain text
msgid "N = joint number (0 ... num_joints-1)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.jog-deadband' (float in pin for setting jog analog deadband"
msgstr ""

#. type: Plain text
msgid ""
"(jog analog inputs smaller/slower than this (in absolute value) are ignored)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.joint.jog-speed' (float in) - pin for setting jog speed for plus/"
"minus jogging."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.analog' (float in) - pin for jogging the joint N using  an  float  value  (e.g.  joy-stick).   The value, typically set between 0.0 and Â±1.0, is used as a jog-speed multiplier.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.increment' (float in) - pin for setting the jog increment for joint N when using  increment-plus/minus\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.increment-minus' (bit in) - a  rising edge will will make joint N jog in the negative direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.increment-plus' (bit in) - a rising edge will will make joint N jog in the positive  direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.minus' (bit in) - pin   for   jogging   joint  N  in  negative  direction at the halui.joint.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.N.plus' (bit in) - pin  for  jogging  joint  N  in  positive   direction at the halui.joint.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.selected.increment' (float in) - pin  for  setting  the jog increment for the selected joint when using increment-plus/minus\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.selected.increment-minus' (bit in) - a rising edge will will make the selected joint jog in the negative direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.selected.increment-plus' (bit in) - a rising edge will will make the selected joint jog in the positive direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.selected.minus' (bit in) - pin for jogging the selected joint in negative direction at  the halui.joint.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.joint.selected.plus' (bit in) - pin for jogging the selected joint in positive direction at the halui.joint.jog-speed velocity\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "axis"
msgstr ""

#. type: Plain text
msgid "L = axis letter (xyzabcuvw)"
msgstr ""

#. type: Plain text
msgid "'halui.axis.L.select' (bit) - pin for selecting axis by letter"
msgstr ""

#. type: Plain text
msgid ""
"'halui.axis.L.is-selected' (bit out) - status pin that axis L is selected"
msgstr ""

#. type: Plain text
msgid ""
"'halui.axis.L.pos-commanded' (float out) - Commanded axis position in "
"machine coordinates"
msgstr ""

#. type: Plain text
msgid ""
"'halui.axis.L.pos-feedback' float out) - Feedback axis position in machine "
"coordinates"
msgstr ""

#. type: Plain text
msgid ""
"'halui.axis.L.pos-relative' (float out) - Commanded axis position in "
"relative coordinates"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Axis Jogging"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.jog-deadband' (float in) - pin  for  setting  jog  analog  deadband  (jog   analog   inputs smaller/slower than this (in absolute value) are ignored)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.jog-speed' (float in) - pin for setting jog speed for plus/minus jogging.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.analog' (float in) - pin for jogging the axis L using an float value (e.g. joystick). The value, typically set between 0.0 and  Â±1.0,  is  used as a jog-speed multiplier.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.increment' (float in) - pin  for  setting the jog increment for axis L when using increment-plus/minus\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.increment-minus' (bit in) - a rising edge will will make axis L jog in the  negative  direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.increment-plus' (bit in) - a  rising  edge will will make axis L jog in the positive direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.minus' (bit in) - pin  for  jogging  axis  L  in   negative   direction   at   the halui.axis.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.L.plus' (bit in) - pin   for   jogging   axis   L  in  positive  direction  at  the halui.axis.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected' (u32 out) - selected axis (by index: 0:x 1:y 2:z 3:a 4:b 5:cr 6:u 7:v 8:w)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected.increment' (float in) - pin for setting the jog increment for  the  selected  axis  when using increment-plus/minus\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected.increment-minus' (bit in) - a  rising edge will will make the selected axis jog in the negative direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected.increment-plus' (bit in) - a rising edge will will make the selected axis jog in the  positive direction by the increment amount\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected.minus' (bit in) - pin  for  jogging the selected axis in negative direction at the halui.axis.jog-speed velocity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'halui.axis.selected.plus' (pin in) - for jogging the selected axis bit in in positive  direction at the halui.axis.jog-speed velocity\n"
msgstr ""

#. type: Plain text
msgid "'halui.mode.auto' (bit, in) - pin for requesting auto mode"
msgstr ""

#. type: Plain text
msgid "'halui.mode.is-auto' (bit, out) - indicates auto mode is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.mode.is-joint' (bit, out) - indicates joint by joint jog mode is on"
msgstr ""

#. type: Plain text
msgid "'halui.mode.is-manual' (bit, out) - indicates manual mode is on"
msgstr ""

#. type: Plain text
msgid "'halui.mode.is-mdi' (bit, out) - indicates mdi mode is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.mode.is-teleop' (bit, out) - indicates coordinated jog mode is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.mode.joint' (bit, in) - pin for requesting joint by joint jog mode"
msgstr ""

#. type: Plain text
msgid "'halui.mode.manual' (bit, in) - pin for requesting manual mode"
msgstr ""

#. type: Plain text
msgid "'halui.mode.mdi' (bit, in) - pin for requesting mdi mode"
msgstr ""

#. type: Plain text
msgid "'halui.mode.teleop' (bit, in) - pin for requesting coordinated jog mode"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Program"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.block-delete.is-on' (bit, out) - status pin telling that "
"block delete is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.block-delete.off' (bit, in) - pin for requesting that block "
"delete is off"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.block-delete.on' (bit, in) - pin for requesting that block "
"delete is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.is-idle' (bit, out) - status pin telling that no program is "
"running"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.is-paused' (bit, out) - status pin telling that a program is "
"paused"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.is-running' (bit, out) - status pin telling that a program is "
"running"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.optional-stop.is-on' (bit, out) - status pin telling that the "
"optional stop is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.optional-stop.off' (bit, in) - pin requesting that the "
"optional stop is off"
msgstr ""

#. type: Plain text
msgid ""
"'halui.program.optional-stop.on' (bit, in) - pin requesting that the "
"optional stop is on"
msgstr ""

#. type: Plain text
msgid "'halui.program.pause' (bit, in) - pin for pausing a program"
msgstr ""

#. type: Plain text
msgid "'halui.program.resume' (bit, in) - pin for resuming a paused program"
msgstr ""

#. type: Plain text
msgid "'halui.program.run' (bit, in) - pin for running a program"
msgstr ""

#. type: Plain text
msgid "'halui.program.step' (bit, in) - pin for stepping in a program"
msgstr ""

#. type: Plain text
msgid "'halui.program.stop' (bit, in) - pin for stopping a program"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Rapid Override"
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.count-enable' (bit in (default: TRUE)) - When TRUE, "
"modify Rapid Override when counts changes."
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.counts' (s32 in) - counts X scale = Rapid Override "
"percentage. Can be used with an encoder or 'direct-value'."
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.decrease' (bit in) - pin for decreasing the Rapid "
"Override (-=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.direct-value' (bit in) - pin to enable direct value "
"Rapid Override input"
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.increase' (bit in) - pin for increasing the Rapid "
"Override (+=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.rapid-override.scale' (float in) - pin for setting the scale on "
"changing the Rapid Override"
msgstr ""

#. type: Plain text
msgid "'halui.rapid-override.value' (float out) - current Rapid Override value"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle Override"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.count-enable' (bit, in) - must be true for "
"'counts' or 'direct-value' to work."
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.counts' (s32, in) - counts * scale = SO "
"percentage.  Can be used with an encoder or 'direct-value'."
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.decrease' (bit, in) - pin for decreasing the SO (-"
"=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.direct-value' (bit, in) - false when using encoder "
"to change counts, true when setting counts directly."
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.increase' (bit, in) - pin for increasing the SO "
"(+=scale)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.override.scale' (float, in) - pin for setting the scale on "
"changing the SO"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.override.value' (float, out) - current SO value"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.brake-is-on' (bit, out) - indicates brake is on"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.brake-off' (bit, in) - pin for deactivating spindle/brake"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.brake-on' (bit, in) - pin for activating spindle-brake"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.decrease' (bit, in) - decreases spindle speed"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.forward' (bit, in) - starts the spindle with CW motion"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.increase' (bit, in)- increases spindle speed"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.is-on' (bit, out) - indicates spindle is on (either "
"direction)"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.reverse' (bit, in)- starts the spindle with a CCW motion"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.runs-backward' (bit, out) - indicates spindle is on, and in "
"reverse"
msgstr ""

#. type: Plain text
msgid ""
"'halui.spindle.N.runs-forward' (bit, out) - indicates spindle is on, and in "
"forward"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.start' (bit, in) - starts the spindle"
msgstr ""

#. type: Plain text
msgid "'halui.spindle.N.stop' (bit, in) - stops the spindle"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.a' (float out) - current applied tool length "
"offset for the A axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.b' (float out) - current applied tool length "
"offset for the B axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.c' (float out) - current applied tool length "
"offset for the C axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.u' (float out) - current applied tool length "
"offset for the U axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.v' (float out) - current applied tool length "
"offset for the V axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.w' (float out) - current applied tool length "
"offset for the W axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.x' (float out) - current applied tool length "
"offset for the X axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.y' (float out) - current applied tool length "
"offset for the Y axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.length-offset.z' (float out) - current applied tool length "
"offset for the Z axis"
msgstr ""

#. type: Plain text
msgid ""
"'halui.tool.diameter' (float out) - Current tool diameter, or 0 if no tool "
"is loaded."
msgstr ""

#. type: Plain text
msgid "'halui.tool.number' (u32, out) - indicates current selected tool"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Halui Examples"
msgstr ""

#. type: Plain text
msgid ""
"For any Halui examples to work you need to add the following line to the "
"[HAL] section of the ini file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "HALUI = halui\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Remote Start"
msgstr ""

#. type: Plain text
msgid ""
"To connect a remote program start button to LinuxCNC you use the `halui."
"program.run` pin and the `halui.mode.auto` pin.  You have to insure that it "
"is OK to run first by using the `halui.mode.is-auto` pin. You do this with "
"an `and2` component. The following figure shows how this is done.  When the "
"Remote Run Button is pressed it is connected to both `halui.mode.auto` and "
"`and2.0.in0`. If it is OK for auto mode the pin `halui.mode.is-auto` will be "
"on.  If both the inputs to the `and2.0` component are on the `and2.0.out` "
"will be on and this will start the program."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Remote Start Example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/remote-start.png"
msgstr ""

#. type: Plain text
msgid "The hal commands needed to accomplish the above are:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    net program-start-btn halui.mode.auto and2.0.in0 <= <your input pin>\n"
"    net program-run-ok and2.0.in1 <= halui.mode.is-auto\n"
"    net remote-program-run halui.program.run <= and2.0.out\n"
msgstr ""

#. type: Plain text
msgid ""
"Notice on line one that there are two reader pins, this can also be split up "
"to two lines like this:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    net program-start-btn halui.mode.auto <= <your input pin>\n"
"    net program-start-btn and2.0.in0\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pause & Resume"
msgstr ""

#. type: Plain text
msgid ""
"This example was developed to allow LinuxCNC to move a rotary axis on a "
"signal from an external machine.  The coordination between the two systems "
"will be provided by two Halui components:"
msgstr ""

#. type: Plain text
msgid "halui.program.is-paused"
msgstr ""

#. type: Plain text
msgid "halui.program.resume"
msgstr ""

#. type: Plain text
msgid ""
"In your customized hal file, add the following two lines that will be "
"connected to your I/O to turn on the program pause or to resume when the "
"external system wants LinuxCNC to continue."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    net ispaused halui.program.is paused => \"your output pin\"\n"
"    net resume halui.program.resume <= \"your input pin\"\n"
msgstr ""

#. type: Plain text
msgid ""
"Your input and output pins are connected to the pins wired to the other "
"controller. They may be parallel port pins or any other I/O pins that you "
"have access to."
msgstr ""

#. type: Plain text
msgid ""
"This system works in the following way. When an M0 is encountered in your G-"
"code, the `halui.program.is-paused` signal goes true. This turns on your "
"output pin so that the external controller knows that LinuxCNC is paused."
msgstr ""

#. type: Plain text
msgid ""
"To resume the LinuxCNC gcode program, when the external controller is ready "
"it will make its output true. This will signal LinuxCNC that it should "
"resume executing Gcode."
msgstr ""

#. type: Plain text
msgid "Difficulties in timing"
msgstr ""

#. type: Plain text
msgid ""
"The \"resume\" input return signal should not be longer than the time "
"required to get the g-code running again."
msgstr ""

#. type: Plain text
msgid ""
"The \"is-paused\" output should no longer be active by the time the \"resume"
"\" signal ends."
msgstr ""

#. type: Plain text
msgid ""
"These timing problems could be avoided by using ClassicLadder to activate "
"the \"is-paused\" output via a monostable timer to deliver one narrow output "
"pulse.  The \"resume\" pulse could also be received via a monostable timer."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Python Interface"
msgstr ""

#. type: Plain text
msgid ""
"This documentation describes the 'linuxcnc' python module, which provides a "
"python API for talking to LinuxCNC."
msgstr ""

#. constants are located in src/emc/usr_intf/axis/extensions/emcmodule.cc
#. type: Title ==
#, no-wrap
msgid "The linuxcnc Python module"
msgstr ""

#. type: Plain text
msgid ""
"User interfaces control LinuxCNC activity by sending NML messages to the "
"LinuxCNC task controller, and monitor results by observing the LinuxCNC "
"status structure, as well as the error reporting channel."
msgstr ""

#. type: Plain text
msgid ""
"Programmatic access to NML is through a C++ API; however, the most important "
"parts of the NML interface to LinuxCNC are also available to Python programs "
"through the `linuxcnc` module."
msgstr ""

#. type: Plain text
msgid ""
"Beyond the NML interface to the command, status and error channels, the "
"`linuxcnc` module also contains:"
msgstr ""

#. type: Plain text
msgid "support for reading values from ini files"
msgstr ""

#. - support for position logging  (???)
#. type: Title ==
#, no-wrap
msgid "Usage Patterns for the LinuxCNC NML interface"
msgstr ""

#. type: Plain text
msgid "The general pattern for `linuxcnc` usage is roughly like this:"
msgstr ""

#. type: Plain text
msgid "import the `linuxcnc` module"
msgstr ""

#. type: Plain text
msgid ""
"establish connections to the command, status and error NML channels as needed"
msgstr ""

#. type: Plain text
msgid "poll the status channel, either periodically or as needed"
msgstr ""

#. type: Plain text
msgid "before sending a command, determine from status whether it is in"
msgstr ""

#. type: Plain text
msgid ""
"fact OK to do so (for instance, there is no point in sending a 'Run' command "
"if task is in the ESTOP state, or the interpreter is not idle)"
msgstr ""

#. type: Plain text
msgid "send the command by using one of the `linuxcnc` command channel methods"
msgstr ""

#. type: Plain text
msgid ""
"To retrieve messages from the error channel, poll the error channel "
"periodically, and process any messages retrieved."
msgstr ""

#. type: Plain text
msgid "print any error message and explore the exception code"
msgstr ""

#. type: Plain text
msgid ""
"`linuxcnc` also defines the `error` Python exception type to support error "
"reporting."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reading LinuxCNC status"
msgstr ""

#. type: Plain text
msgid ""
"Here is a Python fragment to explore the contents of the `linuxcnc.stat` "
"object which contains some 80+ values (run while linuxcnc is running for "
"typical values):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import sys\n"
"import linuxcnc\n"
"try:\n"
"    s = linuxcnc.stat() # create a connection to the status channel\n"
"    s.poll() # get current values\n"
"except linuxcnc.error, detail:\n"
"    print \"error\", detail\n"
"    sys.exit(1)\n"
"for x in dir(s):\n"
"    if not x.startswith(\"_\"):\n"
"        print x, getattr(s,x)\n"
msgstr ""

#. type: Plain text
msgid ""
"Linuxcnc uses the default compiled-in path to the NML configuration file "
"unless overridden, see <<python:reading-ini-values,Reading ini file values>> "
"for an example."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "linuxcnc.stat attributes"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*acceleration* "
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - default acceleration, reflects the ini entry "
"[TRAJ]DEFAULT_ACCELERATION."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*active_queue*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - number of motions blending."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*actual_position*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of floats)' - current trajectory position, (x y z a b c u v "
"w) in machine units."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*adaptive_feed_enabled*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - status of adaptive feedrate override (0/1)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*ain*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - current value of the analog input pins."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*angular_units*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - machine angular units per deg, reflects "
"[TRAJ]ANGULAR_UNITS ini value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*aout*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - current value of the analog output pins."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*axes*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - number of axes. Derived from [TRAJ]COORDINATES ini "
"value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*axis*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of dicts)' - reflecting current axis values. See <<sec:the-"
"axis-dictionary,The axis dictionary>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*axis_mask*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - mask of axis available as defined by [TRAJ]COORDINATES "
"in the ini file. Returns the sum of the axes X=1, Y=2, Z=4, A=8, B=16, C=32, "
"U=64, V=128, W=256."
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - block delete current status."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*command*"
msgstr ""

#. type: Plain text
msgid "'(returns string)' - currently executing command."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*current_line*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - currently executing line, int."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*current_vel*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current velocity in user units per second."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*cycle_time*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - thread period"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*debug*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - debug flag from the ini file."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*delay_left*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - remaining time on dwell (G4) command, seconds."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*din*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of integers)' - current value of the digital input pins."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*distance_to_go*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - remaining distance of current move, as reported by "
"trajectory planner."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*dout*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of integers)' - current value of the digital output pins."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*dtg*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of floats)' - remaining distance of current move for each "
"axis, as reported by trajectory planner."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*echo_serial_number*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - The serial number of the last completed command sent "
"by a UI to task. All commands carry a serial number. Once the command has "
"been executed, its serial number is reflected in `echo_serial_number`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*enabled*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - trajectory planner enabled flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*estop*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - Returns either STATE_ESTOP or not."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*exec_state*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - task execution state. One of EXEC_ERROR, EXEC_DONE, "
"EXEC_WAITING_FOR_MOTION, EXEC_WAITING_FOR_MOTION_QUEUE, EXEC_WAITING_FOR_IO, "
"EXEC_WAITING_FOR_MOTION_AND_IO, EXEC_WAITING_FOR_DELAY, "
"EXEC_WAITING_FOR_SYSTEM_CMD, EXEC_WAITING_FOR_SPINDLE_ORIENTED."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*feed_hold_enabled*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - enable flag for feed hold."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*feed_override_enabled*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - enable flag for feed override."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*feedrate*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current feedrate override, 1.0 = 100%."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*file*"
msgstr ""

#. type: Plain text
msgid "'(returns string)' - currently loaded gcode filename with path."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*flood*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - Flood status, either FLOOD_OFF or FLOOD_ON."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*g5x_index*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - currently active coordinate system, G54=1, G55=2 etc."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*g5x_offset*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of floats)' - offset of the currently active coordinate "
"system."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*g92_offset*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - pose of the current g92 offset."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*gcodes*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of integers)' - Active G-codes for each modal group.  G code "
"constants G_0, G_1, G_2, G_3, G_4, G_5, G_5_1, G_5_2, G_5_3, G_7, G_8, "
"G_100, G_17, G_17_1, G_18, G_18_1, G_19, G_19_1, G_20, G_21, G_28, G_28_1, "
"G_30, G_30_1, G_33, G_33_1, G_38_2, G_38_3, G_38_4, G_38_5, G_40, G_41, "
"G_41_1, G_42, G_42_1, G_43, G_43_1, G_43_2, G_49, G_50, G_51, G_53, G_54, "
"G_55, G_56, G_57, G_58, G_59, G_59_1, G_59_2, G_59_3, G_61, G_61_1, G_64, "
"G_73, G_76, G_80, G_81, G_82, G_83, G_84, G_85, G_86, G_87, G_88, G_89, "
"G_90, G_90_1, G_91, G_91_1, G_92, G_92_1, G_92_2, G_92_3, G_93, G_94, G_95, "
"G_96, G_97, G_98, G_99"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*homed*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of integers)' - currently homed joints, 0 = not homed, 1 = "
"homed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*id*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - currently executing motion id."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*inpos*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - machine-in-position flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*input_timeout*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - flag for M66 timer in progress."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*interp_state*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - current state of RS274NGC interpreter. One of "
"INTERP_IDLE, INTERP_READING, INTERP_PAUSED, INTERP_WAITING."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*interpreter_errcode*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - current RS274NGC interpreter return code. One of "
"INTERP_OK, INTERP_EXIT, INTERP_EXECUTE_FINISH, INTERP_ENDFILE, "
"INTERP_FILE_NOT_OPEN, INTERP_ERROR.  see src/emc/nml_intf/interp_return.hh"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*joint*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of dicts)' - reflecting current joint values. See <<sec:the-"
"joint-dictionary,The joint dictionary>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*joint_actual_position*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - actual joint positions."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*joint_position*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - Desired joint positions."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*joints*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - number of joints. Reflects [KINS]JOINTS ini value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*kinematics_type*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - The type of kinematics.  One of:"
msgstr ""

#. type: Plain text
msgid "KINEMATICS_IDENTITY"
msgstr ""

#. type: Plain text
msgid "KINEMATICS_FORWARD_ONLY"
msgstr ""

#. type: Plain text
msgid "KINEMATICS_INVERSE_ONLY"
msgstr ""

#. type: Plain text
msgid "KINEMATICS_BOTH"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*limit*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of integers)' - axis limit masks. minHardLimit=1, "
"maxHardLimit=2, minSoftLimit=4, maxSoftLimit=8."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*linear_units*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - machine linear units per mm, reflects [TRAJ]LINEAR_UNITS "
"ini value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*lube*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - 'lube on' flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*lube_level*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - reflects 'iocontrol.0.lube_level'."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_acceleration*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - maximum acceleration. reflects [TRAJ]MAX_ACCELERATION."
msgstr ""

#. type: Plain text
msgid "'(returns float)' - maximum velocity. reflects [TRAJ]MAX_VELOCITY."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*mcodes*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of 10 integers)' - currently active M-codes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*mist*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - Mist status, either MIST_OFF or MIST_ON"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*motion_line*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - source line number motion is currently executing. "
"Relation to `id` unclear."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*motion_mode*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - This is the mode of the Motion controller.  One of "
"TRAJ_MODE_COORD, TRAJ_MODE_FREE, TRAJ_MODE_TELEOP."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*motion_type*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - The type of the currently executing motion.  One of:"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_TRAVERSE"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_FEED"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_ARC"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_TOOLCHANGE"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_PROBING"
msgstr ""

#. type: Plain text
msgid "MOTION_TYPE_INDEXROTARY"
msgstr ""

#. type: Plain text
msgid "Or 0 if no motion is currently taking place."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - option stop flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*paused*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - `motion paused` flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*pocket_prepped*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - A Tx command completed, and this pocket is prepared. "
"-1 if no prepared pocket."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*poll()*"
msgstr ""

#. type: Plain text
msgid "-'(built-in function)' method to update current status attributes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*position*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - trajectory position."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*probe_tripped*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - flag, True if probe has tripped (latch)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*probe_val*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - reflects value of the `motion.probe-input` pin."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*probed_position*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - position where probe tripped."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*probing*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - flag, True if a probe operation is in progress."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*program_units*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - one of CANON_UNITS_INCHES=1, CANON_UNITS_MM=2, "
"CANON_UNITS_CM=3"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*queue*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - current size of the trajectory planner queue."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*queue_full*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - the trajectory planner queue is full."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*rapidrate*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - rapid override scale."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*read_line*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - line the RS274NGC interpreter is currently reading."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*rotation_xy*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current XY rotation angle around Z axis."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*settings*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of floats)' - current interpreter settings. settings[0] = "
"sequence number, settings[1] = feed rate, settings[2] = speed, settings[3] = "
"`G64 P` blend tolerance, settings[4] = `G64 Q` naive CAM tolerance."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*spindle*"
msgstr ""

#. type: Plain text
msgid ""
"' (returns tuple of dicts) ' - returns the current spindle status see <<sec:"
"the-spindle-dictionary, The spindle dictionary>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*spindles*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - number of spindles. Reflects [TRAJ]SPINDLES ini value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*state*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - current command execution status. One of RCS_DONE, "
"RCS_EXEC, RCS_ERROR."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*task_mode*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - current task mode. one of MODE_MDI, MODE_AUTO, "
"MODE_MANUAL."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*task_paused*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - task paused flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*task_state*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - current task state. one of STATE_ESTOP, "
"STATE_ESTOP_RESET, STATE_ON, STATE_OFF."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*tool_in_spindle*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - current tool number."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*tool_offset*"
msgstr ""

#. type: Plain text
msgid "'(returns tuple of floats)' - offset values of the current tool."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*tool_table*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns tuple of tool_results)' - list of tool entries. Each entry is a "
"sequence of the following fields: id, xoffset, yoffset, zoffset, aoffset, "
"boffset, coffset, uoffset, voffset, woffset, diameter, frontangle, "
"backangle, orientation. The id and orientation are integers and the rest are "
"floats."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import linuxcnc\n"
"s = linuxcnc.stat()\n"
"s.poll()\n"
"# to find the loaded tool information it is in tool table index 0\n"
"if s.tool_table[0].id != 0: # a tool is loaded\n"
"    print s.tool_table[0].zoffset\n"
"else:\n"
"    print \"no tool loaded\"\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*velocity*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - This property is defined, but it does not have a useful "
"interpretation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The `axis` dictionary [[sec:the-axis-dictionary]]"
msgstr ""

#. type: Plain text
msgid ""
"The axis configuration and status values are available through a list of per-"
"axis dictionaries. Here's an example how to access an attribute of a "
"particular axis:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import linuxcnc\n"
"s = linuxcnc.stat()\n"
"s.poll()\n"
"print \"Joint 1 homed: \", s.joint[1][\"homed\"]\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that many properties that were formerly in the `axis` dictionary are "
"now in the `joint` dictionary, because on nontrivial kinematics machines "
"these items (such as backlash) are not the properties of an axis."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_position_limit*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - maximum limit (soft limit) for axis motion, in machine "
"units.configuration parameter, reflects [JOINT_n]MAX_LIMIT."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*min_position_limit*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - minimum limit (soft limit) for axis motion, in machine "
"units.configuration parameter, reflects [JOINT_n]MIN_LIMIT."
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current velocity."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The `joint` dictionary [[sec:the-joint-dictionary]]"
msgstr ""

#. type: Plain text
msgid "For each joint, the following dictionary keys are available:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*backlash*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - Backlash in machine units. configuration parameter, "
"reflects [JOINT_n]BACKLASH."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means enabled."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*fault*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means axis amp fault."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*ferror_current*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current following error."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*ferror_highmark*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - magnitude of max following error."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means has been homed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*homing*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means homing in progress."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means in position."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*input*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - current input position."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*jointType*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - type of axis configuration parameter, reflects "
"[JOINT_n]TYPE. LINEAR=1, ANGULAR=2. See <<sec:axis-section, Joint ini "
"configuration>> for details."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_ferror*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - maximum following error. configuration parameter, "
"reflects [JOINT_n]FERROR."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_hard_limit*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means max hard limit exceeded."
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - maximum limit (soft limit) for joint motion, in machine "
"units. configuration parameter, reflects [JOINT_n]MAX_LIMIT."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*max_soft_limit*"
msgstr ""

#. type: Plain text
msgid "non-zero means `max_position_limit` was exceeded, int"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*min_ferror*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - configuration parameter, reflects [JOINT_n]MIN_FERROR."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*min_hard_limit*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means min hard limit exceeded."
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - minimum limit (soft limit) for joint motion, in machine "
"units. configuration parameter, reflects [JOINT_n]MIN_LIMIT."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*min_soft_limit*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means `min_position_limit` was exceeded."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*output*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - commanded output position."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - non-zero means limits are overridden."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*units*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - joint units per mm, or per degree for angular joints. + "
"(joint units are the same as machine units, unless set otherwise by the "
"configuration parameter [JOINT_n]UNITS)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The `spindle` dictionary [[sec:the-spindle-dictionary]]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*brake*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - value of the spindle brake flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*direction*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns integer)' - rotational direction of the spindle. forward=1, "
"reverse=-1."
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - value of the spindle enabled flag."
msgstr ""

#. type: Plain text
msgid "(not currently implemented)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*increasing*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)' - unclear."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*orient_fault*"
msgstr ""

#. type: Plain text
msgid "'(returns integer)'"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*orient_state*"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*override*"
msgstr ""

#. type: Plain text
msgid "'(returns float)' - spindle speed override scale."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*override_enabled*"
msgstr ""

#. type: Plain text
msgid "'(returns boolean)' - value of the spindle override enabled flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "*speed*"
msgstr ""

#. type: Plain text
msgid ""
"'(returns float)' - spindle speed value, rpm, > 0: clockwise, < 0: "
"counterclockwise."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Preparing to send  commands"
msgstr ""

#. type: Plain text
msgid ""
"Some commands can always be sent, regardless of mode and state; for "
"instance, the `linuxcnc.command.abort()` method can always be called."
msgstr ""

#. type: Plain text
msgid ""
"Other commands may be sent only in appropriate state, and those tests can be "
"a bit tricky. For instance, an MDI command can be sent only if:"
msgstr ""

#. type: Plain text
msgid "ESTOP has not been triggered, and"
msgstr ""

#. type: Plain text
msgid "the machine is turned on and"
msgstr ""

#. type: Plain text
msgid "the axes are homed and"
msgstr ""

#. type: Plain text
msgid "the interpreter is not running and"
msgstr ""

#. type: Plain text
msgid "the mode is set to `MDI mode`"
msgstr ""

#. type: Plain text
msgid ""
"so an appropriate test before sending an MDI command through `linuxcnc."
"command.mdi()` could be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import linuxcnc\n"
"s = linuxcnc.stat()\n"
"c = linuxcnc.command()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def ok_for_mdi():\n"
"    s.poll()\n"
"    return not s.estop and s.enabled and (s.homed.count(1) == s.joints) and (s.interp_state == linuxcnc.INTERP_IDLE)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"if ok_for_mdi():\n"
"    c.mode(linuxcnc.MODE_MDI)\n"
"    c.wait_complete() # wait until mode switch executed\n"
"    c.mdi(\"G0 X10 Y20 Z30\")\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Sending commands through `linuxcnc.command`"
msgstr ""

#. type: Plain text
msgid "Before sending a command, initialize a command channel like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import linuxcnc\n"
"c = linuxcnc.command()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Usage examples for some of the commands listed below:\n"
"c.abort()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.auto(linuxcnc.AUTO_RUN, program_start_line)\n"
"c.auto(linuxcnc.AUTO_STEP)\n"
"c.auto(linuxcnc.AUTO_PAUSE)\n"
"c.auto(linuxcnc.AUTO_RESUME)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.brake(linuxcnc.BRAKE_ENGAGE)\n"
"c.brake(linuxcnc.BRAKE_RELEASE)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.flood(linuxcnc.FLOOD_ON)\n"
"c.flood(linuxcnc.FLOOD_OFF)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.home(2)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.jog(linuxcnc.JOG_STOP,        jjogmode, joint_num_or_axis_index)\n"
"c.jog(linuxcnc.JOG_CONTINUOUS,  jjogmode, joint_num_or_axis_index, velocity)\n"
"c.jog(linuxcnc.JOG_INCREMENT,   jjogmode, joint_num_or_axis_index, velocity, increment)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.load_tool_table()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.maxvel(200.0)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.mdi(\"G0 X10 Y20 Z30\")\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.mist(linuxcnc.MIST_ON)\n"
"c.mist(linuxcnc.MIST_OFF)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.mode(linuxcnc.MODE_MDI)\n"
"c.mode(linuxcnc.MODE_AUTO)\n"
"c.mode(linuxcnc.MODE_MANUAL)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.override_limits()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"c.program_open(\"foo.ngc\")\n"
"c.reset_interpreter()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "c.tool_offset(toolno, z_offset,  x_offset, diameter, frontangle, backangle, orientation)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "`linuxcnc.command` attributes"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`serial`"
msgstr ""

#. type: Plain text
msgid "the current command serial number"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "`linuxcnc.command` methods:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`abort()`"
msgstr ""

#. type: Plain text
msgid "send EMC_TASK_ABORT message."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`auto(int[, int])`"
msgstr ""

#. type: Plain text
msgid "run, step, pause or resume a program."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`brake(int)`"
msgstr ""

#. type: Plain text
msgid "engage or release spindle brake."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`debug(int)`"
msgstr ""

#. type: Plain text
msgid "set debug level via EMC_SET_DEBUG message."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`display_msg(string)`"
msgstr ""

#. type: Plain text
msgid "sends a operator display message to the screen. (max 256 characters)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`error_msg(string)`"
msgstr ""

#. type: Plain text
msgid "sends a operator error message to the screen. (max 256 characters)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`feedrate(float)`"
msgstr ""

#. type: Plain text
msgid "set the feedrate."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`flood(int)`"
msgstr ""

#. type: Plain text
msgid ""
"turn on/off flooding. + Syntax: + flood(command) + flood(linuxcnc.FLOOD_ON) "
"+ flood(linuxcnc.FLOOD_OFF) + Constants: + FLOOD_ON + FLOOD_OFF"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`home(int)`"
msgstr ""

#. type: Plain text
msgid "home a given joint."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`jog(command-constant, bool, int[, float[, float]])`"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Syntax: +\n"
"jog(command,                 jjogmode, joint_num_or_axis_index, velocity[, distance]]) +\n"
"jog(linuxcnc.JOG_STOP,       jjogmode, joint_num_or_axis_index) +\n"
"jog(linuxcnc.JOG_CONTINUOUS, jjogmode, joint_num_or_axis_index, velocity) +\n"
"jog(linuxcnc.JOG_INCREMENT,  jjogmode, joint_num_or_axis_index, velocity, distance)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Command Constants"
msgstr ""

#. type: Plain text
msgid "linuxcnc.JOG_STOP + linuxcnc.JOG_CONTINUOUS + linuxcnc.JOG_INCREMENT"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "jjogmode"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "True:"
msgstr ""

#. type: Plain text
msgid "request individual joint jog (requires teleop_enable(0))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "False:"
msgstr ""

#. type: Plain text
msgid "request axis Cartesian coordinate jog (requires teleop_enable(1))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "joint_num_or_axis_index"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "For joint jog (jjogmode=1):"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "For axis Cartesian coordinate jog (jjogmode=0):"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"zero-based index of the axis coordinate with respect to\n"
"the known coordinate letters XYZABCUVW\n"
"(x=>0,y=>1,z=>2,a=>3,b=>4,c=>5,u=>6,v=>7,w=>8)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`load_tool_table()`"
msgstr ""

#. type: Plain text
msgid "reload the tool table."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`maxvel(float)`"
msgstr ""

#. type: Plain text
msgid "set maximum velocity"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`mdi(string)`"
msgstr ""

#. type: Plain text
msgid "send an MDI command. Maximum 255 chars."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`mist(int)`"
msgstr ""

#. type: Plain text
msgid ""
"turn on/off mist. + Syntax: + mist(command) + mist(linuxcnc.MIST_ON) + "
"mist(linuxcnc.MIST_OFF) + Constants: + MIST_ON + MIST_OFF"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`mode(int)`"
msgstr ""

#. type: Plain text
msgid "set mode (MODE_MDI, MODE_MANUAL, MODE_AUTO)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`override_limits()`"
msgstr ""

#. type: Plain text
msgid "set the override axis limits flag."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`program_open(string)`"
msgstr ""

#. type: Plain text
msgid "open an NGC file."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`rapidrate()`"
msgstr ""

#. type: Plain text
msgid "set rapid override factor"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`reset_interpreter()`"
msgstr ""

#. type: Plain text
msgid "reset the RS274NGC interpreter"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_adaptive_feed(int)`"
msgstr ""

#. type: Plain text
msgid "set adaptive feed flag"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_analog_output(int, float)`"
msgstr ""

#. type: Plain text
msgid "set analog output pin to value"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_block_delete(int)`"
msgstr ""

#. type: Plain text
msgid "set block delete flag"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_digital_output(int, int)`"
msgstr ""

#. type: Plain text
msgid "set digital output pin to value"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_feed_hold(int)`"
msgstr ""

#. type: Plain text
msgid "set feed hold on/off"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_feed_override(int)`"
msgstr ""

#. type: Plain text
msgid "set feed override on/off"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_max_limit(int, float)`"
msgstr ""

#. type: Plain text
msgid "set max position limit for a given axis"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_min_limit()`"
msgstr ""

#. type: Plain text
msgid "set min position limit for a given axis"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_optional_stop(int)`"
msgstr ""

#. type: Plain text
msgid "set optional stop on/off"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`set_spindle_override(int [, int])`"
msgstr ""

#. type: Plain text
msgid "set spindle override enabled. Defaults to spindle 0."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`spindle(int [[float] [int] [float,int]])`"
msgstr ""

#. type: Plain text
msgid ""
"set spindle direction. Argument one of SPINDLE_FORWARD, SPINDLE_REVERSE, "
"SPINDLE_OFF, SPINDLE_INCREASE, SPINDLE_DECREASE, or SPINDLE_CONSTANT."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`text_msg(string)`"
msgstr ""

#. type: Plain text
msgid "sends a operator text message to the screen. (max 256 characters)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"import linuxcnc\n"
"c = linuxcnc.command()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Increase speed of spindle 0 by 100rpm. Spindle must be on first\n"
"c.spindle(linuxcnc.INCREASE)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Increase speed of spindle 2 by 100rpm. Spindle must be on first\n"
"c.spindle(linuxcnc.SPINDLE_INCREASE, 2)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Set speed of spindle 0 to 1024 rpm\n"
"c.spindle.(linuxcnc.SPINDLE_FORWARD, 1024)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Set speed of spindle 1 to -666 rpm\n"
"c.spindle.(linuxcnc.SPINDLE_REVERSE, 666, 1)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Stop spindle 0\n"
"c.spindle.(linuxcnc.SPINDLE_OFF)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Stop spindle 0 explicitly\n"
"c.spindle.(linuxcnc.SPINDLE_OFF, 0)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`spindleoverride(float [, int])`"
msgstr ""

#. type: Plain text
msgid "set spindle override factor. Defaults to spindle 0."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`state(int)`"
msgstr ""

#. type: Plain text
msgid ""
"set the machine state. Machine state should be STATE_ESTOP, "
"STATE_ESTOP_RESET, STATE_ON, or STATE_OFF"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`task_plan_sync()`"
msgstr ""

#. type: Plain text
msgid ""
"on completion of this call, the var file on disk is updated with live values "
"from the interpreter."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`teleop_enable(int)`"
msgstr ""

#. type: Plain text
msgid "enable/disable teleop mode (disable for joint jogging)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`tool_offset(int, float, float, float, float, float, int)`"
msgstr ""

#. type: Plain text
msgid "set the tool offset. See usage example above."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`traj_mode(int)`"
msgstr ""

#. type: Plain text
msgid ""
"set trajectory mode. Mode is one of MODE_FREE, MODE_COORD, or MODE_TELEOP."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`unhome(int)`"
msgstr ""

#. type: Plain text
msgid "unhome a given joint."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`wait_complete([float])`"
msgstr ""

#. type: Plain text
msgid ""
"wait for completion of the last command sent. If timeout in seconds not "
"specified, default is 5 seconds. Return -1 if timed out, return RCS_DONE or "
"RCS_ERROR according to command execution status."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reading the error channel"
msgstr ""

#. type: Plain text
msgid ""
"To handle error messages, connect to the error channel and periodically "
"poll() it."
msgstr ""

#. type: Plain text
msgid ""
"Note that the NML channel for error messages has a queue (other than the "
"command and status channels), which means that the first consumer of an "
"error message deletes that message from the queue; whether your another "
"error message consumer (e.g. Axis)  will 'see' the message is dependent on "
"timing. It is recommended to have just one error channel reader task in a "
"setup."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"import linuxcnc\n"
"e = linuxcnc.error_channel()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "error = e.poll()\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"if error:\n"
"    kind, text = error\n"
"    if kind in (linuxcnc.NML_ERROR, linuxcnc.OPERATOR_ERROR):\n"
"        typus = \"error\"\n"
"    else:\n"
"        typus = \"info\"\n"
"    print typus, text\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reading ini file values [[python:reading-ini-values]]"
msgstr ""

#. type: Plain text
msgid ""
"Here's an example for reading values from an ini file through the `linuxcnc."
"ini` object:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"# -*- coding: utf-8 -*-\n"
"# run as:\n"
"# python ini-example.py ~/emc2-dev/configs/sim/axis/axis_mm.ini\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import sys\n"
"import linuxcnc\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "inifile = linuxcnc.ini(sys.argv[1])\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# inifile.find() returns None if the key wasn't found - the\n"
"# following idiom is useful for setting a default value:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"machine_name = inifile.find(\"EMC\", \"MACHINE\") or \"unknown\"\n"
"print \"machine name: \", machine_name\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# inifile.findall() returns a list of matches, or an empty list\n"
"# if the key wasn't found:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"extensions = inifile.findall(\"FILTER\", \"PROGRAM_EXTENSION\")\n"
"print \"extensions: \", extensions\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# override default NML file by ini parameter if given\n"
"nmlfile = inifile.find(\"EMC\", \"NML_FILE\")\n"
"if nmlfile:\n"
"    linuxcnc.nmlfile = os.path.join(os.path.dirname(sys.argv[1]), nmlfile)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The `linuxcnc.positionlogger` type"
msgstr ""

#. type: Plain text
msgid ""
"Some usage hints can be gleaned from `src/emc/usr_intf/gremlin/gremlin.py`."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "members"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`npts`"
msgstr ""

#. type: Plain text
msgid "number of points."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "methods"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`start(float)`"
msgstr ""

#. type: Plain text
msgid "start the position logger and run every ARG seconds"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`clear()`"
msgstr ""

#. type: Plain text
msgid "clear the position logger"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`stop()`"
msgstr ""

#. type: Plain text
msgid "stop the position logger"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`call()`"
msgstr ""

#. type: Plain text
msgid "Plot the backplot now."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`last([int])`"
msgstr ""

#. type: Plain text
msgid "Return the most recent point on the plot or None ,"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Vismach"
msgstr ""

#. type: Plain text
msgid ""
"Vismach is a set of Python functions that can be used to create and animate "
"models of machines. Vismach displays the model in a 3D viewport and the "
"model parts are animated as the values of associated HAL pins change."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Vismach displays the model in a 3D viewport"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/vismach.png"
msgstr ""

#. type: Plain text
msgid "The Vismach viewport view can be manipulated as follows"
msgstr ""

#. type: Plain text
msgid "zoom by scroll wheel or right button drag"
msgstr ""

#. type: Plain text
msgid "pan by left button drag"
msgstr ""

#. type: Plain text
msgid "rotate by middle-button drag or shift-drag."
msgstr ""

#. type: Plain text
msgid ""
"A Vismach model takes the form of a Python script and can use standard "
"Python syntax. This means that there is more than one way to lay out the "
"script, but in the examples given in this document I will use the simplest "
"and most basic of them."
msgstr ""

#. type: Plain text
msgid "The basic sequence in creating the Vismach model is"
msgstr ""

#. type: Plain text
msgid "Create the HAL pins that control the motion"
msgstr ""

#. type: Plain text
msgid "Create the parts"
msgstr ""

#. type: Plain text
msgid "Define how they move"
msgstr ""

#. type: Plain text
msgid "Assemble into movement groups"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Start the script"
msgstr ""

#. type: Plain text
msgid ""
"It is useful for testing to include the '#!/usr/bin/env python3' to allow "
"the file to be run as a script. The first thing to do is to import the "
"required libraries."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"from vismach import *\n"
"import hal\n"
"import math\n"
"import sys\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Create the HAL pins."
msgstr ""

#. type: Plain text
msgid ""
"Hal pins are created with the normal Python \"hal\" library, and are not "
"specific to Vismach. Further details can be found in the <<cha:halmodule, "
"Creating Userspace Components in Python>> section.  A component should be "
"created with a name that matches the script file name and then the HAL pins "
"are added to that component. They will be referenced by their component "
"handle and short name when used to animate the Vismach model."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" c = hal.component(\"samplegui\")\n"
" c.newpin(\"joint0\", hal.HAL_FLOAT, hal.HAL_IN)\n"
" c.newpin(\"joint1\", hal.HAL_FLOAT, hal.HAL_IN)\n"
" c.ready()\n"
msgstr ""

#. type: Plain text
msgid ""
"Will create HAL pins 'samplegui.joint0' and 'samplegui.joint1'. When loading "
"the Vismach model with 'loadusr -W samplegui' the 'c.ready()' function tells "
"loadusr it's ready."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Creating Parts"
msgstr ""

#. type: Plain text
msgid ""
"It is probably easiest to create geometry in a CAD package and import into "
"the model script with the AsciiSTL() or AsciiOBJ() functions.  Both "
"functions can take one of two named arguments, either a filename or raw data"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" part = AsciiSTL(filename=\"path/to/file.stl)\n"
" part = AsciiSTL(data=\"solid part1 facet normal ....\")\n"
" part = AsciiOBJ(filename=\"path/to/file.obj)\n"
" part = AsciiOBJ(data=\"v 0.123 0.234 0.345 1.0 ...\")\n"
msgstr ""

#. type: Plain text
msgid ""
"The parts will be created in the Vismach space in the same locations as they "
"occupy in the STL or OBJ space. This means that it may be possible to "
"assemble the model in the CAD package."
msgstr ""

#. type: Plain text
msgid ""
"Alternatively parts can be created inside the model script from a range of "
"shape primitives. Many shapes are created at the origin and need to be moved "
"to the required location after creation."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" cylinder = CylinderX(x1, r1, x2, r2)\n"
" cylinder = CylinderY(y1, r1, y2, r2)\n"
" cylinder = CylinderZ(z1, r1, z2, r2)\n"
msgstr ""

#. type: Plain text
msgid ""
"Creates a (optionally tapered) cylinder on the given axis with the given "
"radii at the given points on the axis."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " sphere = Sphere(x, y, z, r)\n"
msgstr ""

#. type: Plain text
msgid "Creates a sphere of radius r at (x,y,z)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" triangle = TriangleXY(x1, y1, x2, y2, x3, y3, z1, z2)\n"
" triangle = TriangleXZ(x1, z1, x2, z2, x3, z3, y1, y2)\n"
" triangle = TriangleYZ(y1, z1, y2, z2, y3, z3, x1, x2)\n"
msgstr ""

#. type: Plain text
msgid ""
"Creates a triangular plate between planes defined by the last two values "
"parallel to the specified plane, with vertices given by the three coordinate "
"pairs."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " arc = ArcX(x1, x2, r1, r2, a1, a2)\n"
msgstr ""

#. type: Plain text
msgid "Create an arc shape."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " box = Box(x1, y1, z1, x2, y2, z2)\n"
msgstr ""

#. type: Plain text
msgid ""
"Creates a rectangular prism with opposite corners at the specified positions "
"and edges parallel to the XYZ axes."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " box = BoxCentered(xw, yw, zw)\n"
msgstr ""

#. type: Plain text
msgid "Creates an xw by yw by zw box centred on the origin."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " box = BoxCenteredXY(xw, yw, z)\n"
msgstr ""

#. type: Plain text
msgid "Creates a box of width xw / yw and height z."
msgstr ""

#. type: Plain text
msgid ""
"Composite parts may be created by assembling these primitives either at "
"creation time or subsequently:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" part1 = Collection([Sphere(100,100,100,50), CylinderX(100,40,150,30)])\n"
" part2 = Box(50,40,75,100,75,100)\n"
" part3 = Collection([part2, TriangleXY(10,10,20,10,15,20,100,101)])\n"
" part4 = Collection([part1, part2])\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Moving Parts"
msgstr ""

#. type: Plain text
msgid ""
"Parts may need to be moved in the Vismach space to assemble the model. They "
"may also need to be moved to create the animation as the animation rotation "
"axis is created at the origin (but moves with the Part)."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " part1 = Translate([part1], x, y, z)\n"
msgstr ""

#. type: Plain text
msgid "Move part1 the specified distances in x, y and z."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " part1 = Rotate([part1], theta, x, y, z)\n"
msgstr ""

#. type: Plain text
msgid ""
"Rotate the part by angle theta about an axis between the origin and x, y, z."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Animating Parts"
msgstr ""

#. type: Plain text
msgid ""
"To animate the model (controlled by the values of HAL pins) there are two "
"functions 'HalTranslate' and 'HalRotate'. For parts to move inside an "
"assembly they need to have their HAL motions defined before being assembled "
"with the \"Collection\" command. The rotation axis and translation vector "
"move with the part as it is moved by the vismach script during model "
"assembly, or as it moves in response to the HAL pins as the model is "
"animated."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " part = HalTranslate([part], comp, \"hal_pin\", xs, ys, zs)\n"
msgstr ""

#. type: Plain text
msgid ""
"The function arguments are first a collection/part which can be pre-created "
"earlier in the script, or could be created at this point if preferred eg "
"part1 = HalTranslate([Box(....)], ...).  The the HAL component is the next "
"argument, ie the object returned by the comp"
msgstr ""

#. type: Title =
#, no-wrap
msgid "hal.component(...) command. After that is the name of the HAL in that will"
msgstr ""

#. type: Plain text
msgid ""
"animate the motion, this needs to match an existing HAL pin that is part of "
"the HAL component created earlier in the script."
msgstr ""

#. type: Plain text
msgid ""
"Then follow the X, Y, Z scales. For a Cartesian machine created at 1:1 scale "
"this would typically be 1,0,0 for a motion in the positive X direction. "
"However if the STL file happened to be in cm and the machine was in inches, "
"this could be fixed at this point by using 0.3937 (1cm /2.54in) as the scale."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " part = HalRotate([part], comp, \"hal_pin\", angle_scale, x, y, z)\n"
msgstr ""

#. type: Plain text
msgid ""
"This command is similar in its operation to HalTranslate except that it is "
"typically necessary to move the part to the origin first to define the "
"axis.  The axis of rotation is from the origin point to the point defined by "
"(x,y,z).  Rotation angles are in degrees, so for a rotary joint with a 0-1 "
"scaling you would need to use an angle scale of 360. When the part is moved "
"back away from the origin to its correct location the axis of rotation can "
"be considered to remain \"embedded\" in the part."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Assembling the model."
msgstr ""

#. type: Plain text
msgid ""
"In order for parts to move together they need to be assembled with the "
"Collection() command. It is important to assemble the parts and define their "
"motions in the correct sequence. For example to create a moving head milling "
"machine with a rotating spindle and an animated draw bar you would:"
msgstr ""

#. type: Plain text
msgid "Create the head main body."
msgstr ""

#. type: Plain text
msgid "Create the spindle at the origin."
msgstr ""

#. type: Plain text
msgid "Define the rotation."
msgstr ""

#. type: Plain text
msgid "Move the head to the spindle or spindle to the head."
msgstr ""

#. type: Plain text
msgid "Create the draw bar"
msgstr ""

#. type: Plain text
msgid "Define the motion of the draw bar"
msgstr ""

#. type: Plain text
msgid "Assemble the three parts into a head assembly"
msgstr ""

#. type: Plain text
msgid "Define the motion of the head assembly."
msgstr ""

#. type: Plain text
msgid ""
"In this example the spindle rotation is indicated by rotation of a set of "
"drive dogs:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Drive dogs\n"
"dogs = Box(-6,-3,94,6,3,100)\n"
"dogs = Color([1,1,1,1],[dogs])\n"
"dogs = HalRotate([dogs],c,\"spindle\",360,0,0,1)\n"
"dogs = Translate([dogs],-1,49,0)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Drawbar\n"
"draw = CylinderZ(120,3,125,3)\n"
"draw = Color([1,0,.5,1],[draw])\n"
"draw = Translate([draw],-1,49,0)\n"
"draw = HalTranslate([draw],c,\"drawbar\",0,0,1)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# head/spindle\n"
"head = AsciiSTL(filename=\"./head.stl\")\n"
"head = Color([0.3,0.3,0.3,1],[head])\n"
"head = Translate([head],0,0,4)\n"
"head = Collection([head, tool, dogs, draw])\n"
"head = HalTranslate([head],c,\"Z\",0,0,0.1)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# base\n"
"base = AsciiSTL(filename=\"./base.stl\")\n"
"base = Color([0.5,0.5,0.5,1],[base]) \n"
"# mount head on it\n"
"base = Collection([head, base])\n"
msgstr ""

#. type: Plain text
msgid ""
"Finally a single collection of all the machine parts, floor and work (if "
"any)  needs to be created. For a serial machine each new part will be added "
"to the collection of the previous part. For a parallel machine there may be "
"several \"base\" parts. Thus, for example, in scaragui.py link3 is added to "
"link2, link2 to link1 and link1 to link0, so the final model is created by"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " model = Collection([link0, floor, table])\n"
msgstr ""

#. type: Plain text
msgid "Whereas a VMC model with separate parts moving on the base might have"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " model = Collection([base, saddle, head, carousel])\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Other functions"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " part = Color([colorspec], [part])\n"
msgstr ""

#. type: Plain text
msgid ""
"Sets the display color of the part. Note that unlike the other functions the "
"part definition comes second in this case. The colorspec consists of the "
"three RGB values and an opacity. For example [1,0,0,0.5] for a 50% opacity "
"red."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " myhud = Hud()\n"
msgstr ""

#. type: Plain text
msgid ""
"Creates a heads-up display in the Vismach GUI to display such items as axis "
"positions."
msgstr ""

#. Need to play around with this to see how it works.
#. type: Plain text
#, no-wrap
msgid " part = Capture()\n"
msgstr ""

#. type: Plain text
msgid ""
"I have no idea what this does, but it seems to be important for tool tip "
"visualization."
msgstr ""

#. type: Plain text
#, no-wrap
msgid " main(model, tooltip, work, size=10, hud=0, rotation_vectors=None, lat=0, lon=0)\n"
msgstr ""

#. type: Plain text
msgid ""
"This is the command that makes it all happen, creates the display etc.  "
"\"model\" should be a collection that contains all the machine parts. "
"\"tooltip\" and \"work\" need to be created by Capture() to visualize their "
"motion in the back plot. See scaragui.py for an example of how to connect "
"the tool tip to a tool and the tool to the model."
msgstr ""

#. type: Plain text
msgid ""
"Either rotation_vectors or latitude / longitude can be used to set the "
"original viewpoint and it is advisable to do as the default initial "
"viewpoint is rather unhelpfully from immediately overhead."
msgstr ""

#. type: Plain text
msgid ""
"size sets the extent of the volume visualized in the initial view.  hud "
"refers to a head-up display of axis positions."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic structure of a Vismach script."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#imports\n"
"from vismach import *\n"
"import hal\n"
"#create the HAL component and pins\n"
"comp = hal.component(\"compname\")\n"
"comp.newpin(\"pin_name\", hal.HAL_FLOAT, hal.HAL_IN)\n"
"...\n"
"#create the floor, tool and work\n"
"floor = Box(-50, -50, -3, 50, 50, 0)\n"
"work = Capture()\n"
"tooltip = Capture()\n"
"...\n"
"#Build and assemble the model\n"
"part1 = Collection([Box(-6,-3,94,6,3,100)])\n"
"part1 = Color([1,1,1,1],[part1])\n"
"part1 = HalRotate([part1],comp,\"pin_name\",360,0,0,1)\n"
"part1 = Translate([dogs],-1,49,0)\n"
"...\n"
"#create a top-level model\n"
"model = Collection([base, saddle, head, carousel])\n"
"#Start the visualization\n"
"main(model, tooltip, work, 100, lat=-75, lon=215)\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Parallel Port Driver"
msgstr ""

#. type: Plain text
msgid ""
"The hal_parport component is a driver for the traditional PC parallel port.  "
"The port has a total of 17 physical pins. The original parallel port divided "
"those pins into three groups: data, control, and status. The data group "
"consists of 8 output pins, the control group consists of 4 pins, and the "
"status group consists of 5 input pins."
msgstr ""

#. type: Plain text
msgid ""
"In the early 1990's, the bidirectional parallel port was introduced, which "
"allows the data group to be used for output or input. The HAL driver "
"supports the bidirectional port, and allows the user to set the data group "
"as either input or output. If configured as 'out', a port provides a total "
"of 12 outputs and 5 inputs. If configured as 'in', it provides 4 outputs and "
"13 inputs."
msgstr ""

#. type: Plain text
msgid ""
"In some parallel ports, the control group pins are open collectors, which "
"may also be driven low by an external gate. On a board with open collector "
"control pins. If configured as 'x', it provides 8 outputs, and 9 inputs."
msgstr ""

#. type: Plain text
msgid ""
"In some parallel ports, the control group has push-pull drivers and cannot "
"be used as an input."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL and Open Collectors"
msgstr ""

#. type: delimited block =
msgid ""
"HAL cannot automatically determine if the 'x' mode bidirectional pins are "
"actually open collectors (OC). If they are not, they cannot be used as "
"inputs, and attempting to drive them LOW from an external source can damage "
"the hardware."
msgstr ""

#. type: delimited block =
msgid ""
"To determine whether your port has 'open collector' pins, load hal_parport "
"in 'x' mode. With no device attached, HAL should read the pin as TRUE. Next, "
"insert a 470 ohm resistor from one of the control pins to GND. If the "
"resulting voltage on the control pin is close to 0V, and HAL now reads the "
"pin as FALSE, then you have an OC port. If the resulting voltage is far from "
"0V, or HAL does not read the pin as FALSE, then your port cannot be used in "
"'x' mode."
msgstr ""

#. type: Plain text
msgid ""
"The external hardware that drives the control pins should also use open "
"collector gates (e.g., 74LS05)."
msgstr ""

#. type: delimited block =
msgid ""
"On some computers, BIOS settings may affect whether 'x' mode can be used. "
"'SPP' mode is most likely to work."
msgstr ""

#. type: Plain text
msgid ""
"No other combinations are supported, and a port cannot be changed from input "
"to output once the driver is installed."
msgstr ""

#. type: Plain text
msgid ""
"The parport driver can control up to 8 ports (defined by MAX_PORTS in "
"hal_parport.c). The ports are numbered starting at zero."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Loading"
msgstr ""

#. type: Plain text
msgid ""
"The hal_parport driver is a real time component so it must be loaded into "
"the real time thread with 'loadrt'. The configuration string describes the "
"parallel ports to be used, and (optionally) their types.  If the "
"configuration string does not describe at least one port, it is an error."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"port [type] [port [type] ...]\"\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Specifying the Port"
msgstr ""

#. type: Plain text
msgid ""
"Numbers below 16 refer to parallel ports detected by the system. This is the "
"simplest way to configure the hal_parport driver, and cooperates with the "
"Linux parport_pc driver if it is loaded.  A port of 0 is the first parallel "
"port detected on the system, 1 is the next, and so on."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Basic configuration"
msgstr ""

#. type: Plain text
msgid "This will use the first parallel port Linux detects:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"0\"\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Using the Port Address"
msgstr ""

#. type: Plain text
msgid ""
"Instead, the port address may be specified using the hex notation '0x' then "
"the address."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"0x378\"\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Type"
msgstr ""

#. type: Plain text
msgid ""
"For each parallel port handled by the hal_parport driver, a 'type' can "
"optionally be specified.  The type is one of 'in', 'out', 'epp', or 'x'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parallel Port Direction"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Pin"
msgstr ""

#. type: Table
#, no-wrap
msgid "in"
msgstr ""

#. type: Table
#, no-wrap
msgid "out/epp"
msgstr ""

#. type: Table
#, no-wrap
msgid "x"
msgstr ""

#. type: Table
#, no-wrap
msgid "out"
msgstr ""

#. type: Plain text
msgid "If the type is not specified, the default is 'out'."
msgstr ""

#. type: Plain text
msgid ""
"A type of 'epp' is the same as 'out', but the hal_parport driver requests "
"that the port switch into EPP mode.  The hal_parport driver does *not* use "
"the EPP bus protocol, but on some systems EPP mode changes the electrical "
"characteristics of the port in a way that may make some marginal hardware "
"work better.  The Gecko G540's charge pump is known to require this on some "
"parallel ports."
msgstr ""

#. type: Plain text
msgid "See the Note above about mode 'x'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Example with two parallel ports"
msgstr ""

#. type: Plain text
msgid ""
"This will enable two system-detected parallel ports, the first in output "
"mode and the second in input mode:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"0 out 1 in\"\n"
msgstr ""

#. type: Plain text
msgid "You must also direct LinuxCNC to run the 'read' and 'write' functions."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"addf parport.0.read base-thread\n"
"addf parport.0.write base-thread\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PCI Port Address"
msgstr ""

#. type: Plain text
msgid ""
"One good PCI parport card is made with the Netmos 9815 chipset.  It has good "
"+5V signals, and can come in a single or dual ports."
msgstr ""

#. type: Plain text
msgid ""
"To find the I/O addresses for PCI cards open a terminal window and use the "
"list pci command:"
msgstr ""

#. type: Plain text
msgid "Look for the entry with \"Netmos\" in it. Example of a 2-port card:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"0000:01:0a.0 Communication controller: \\\n"
"      Netmos Technology PCI 9815 Multi-I/O Controller (rev 01)\n"
"Subsystem: LSI Logic / Symbios Logic 2POS (2 port parallel adapter)\n"
"Flags: medium devsel, IRQ 5\n"
"I/O ports at b800 [size=8]\n"
"I/O ports at bc00 [size=8]\n"
"I/O ports at c000 [size=8]\n"
"I/O ports at c400 [size=8]\n"
"I/O ports at c800 [size=8]\n"
"I/O ports at cc00 [size=16]\n"
msgstr ""

#. type: Plain text
msgid ""
"From experimentation, I've found the first port (the on-card port) uses the "
"third address listed (c000), and the second port (the one that attaches with "
"a ribbon cable) uses the first address listed (b800). The following example "
"shows the onboard parallel port and a PCI parallel port using the default "
"out direction."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"0x378 0xc000\"\n"
msgstr ""

#. type: Plain text
msgid ""
"Please note that your values will differ. The Netmos cards are Plug-N-Play, "
"and might change their settings depending on which slot you put them into, "
"so if you like to \\'get under the hood' and re-arrange things, be sure to "
"check these values before you start LinuxCNC."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.pin-<n>-out' (bit) Drives a physical output pin."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.pin-<n>-in' (bit) Tracks a physical input pin."
msgstr ""

#. type: Plain text
msgid ""
"'parport.<p>.pin-<n>-in-not' (bit) Tracks a physical input pin, but inverted."
msgstr ""

#. type: Plain text
msgid ""
"For each pin, '<p>' is the port number, and '<n>' is the physical pin number "
"in the 25 pin D-shell connector."
msgstr ""

#. type: Plain text
msgid ""
"For each physical output pin, the driver creates a single HAL pin, for "
"example: 'parport.0.pin-14-out'."
msgstr ""

#. type: Plain text
msgid ""
"For each physical input pin, the driver creates two HAL pins, for example: "
"'parport.0.pin-12-in' and 'parport.0.pin-12-in-not'."
msgstr ""

#. type: Plain text
msgid ""
"The '-in' HAL pin is TRUE if the physical pin is high, and FALSE if the "
"physical pin is low. The '-in-not' HAL pin is inverted and is FALSE if the "
"physical pin is high."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.pin-<n>-out-invert' (bit) Inverts an output pin."
msgstr ""

#. type: Plain text
msgid ""
"'parport.<p>.pin-<n>-out-reset' (bit) (only for 'out' pins) TRUE if this pin "
"should be reset when the '-reset' function is executed."
msgstr ""

#. type: Plain text
msgid ""
"parport.<p>.reset-time' (U32) The time (in nanoseconds)  between a pin is "
"set by 'write' and reset by the 'reset' function if it is enabled."
msgstr ""

#. type: Plain text
msgid ""
"The '-invert' parameter determines whether an output pin is active high or "
"active low. If '-invert' is FALSE, setting the HAL '-out' pin TRUE drives "
"the physical pin high, and FALSE drives it low. If '-invert' is TRUE, then "
"setting the HAL '-out' pin TRUE will drive the physical pin low."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.read' (funct) Reads physical input pins of port"
msgstr ""

#. type: Plain text
msgid "'<portnum>' and updates HAL '-in' and '-in-not' pins."
msgstr ""

#. type: Plain text
msgid "'parport.read-all' (funct) Reads physical input pins of all ports"
msgstr ""

#. type: Plain text
msgid "and updates HAL '-in' and '-in-not' pins."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.write' (funct) Reads HAL '-out' pins of port"
msgstr ""

#. type: Plain text
msgid "'<p>' and updates that port's physical output pins."
msgstr ""

#. type: Plain text
msgid "'parport.write-all' (funct) Reads HAL '-out' pins of all ports"
msgstr ""

#. type: Plain text
msgid "and updates all physical output pins."
msgstr ""

#. type: Plain text
msgid "'parport.<p>.reset' (funct) Waits until 'reset-time' has"
msgstr ""

#. type: Plain text
msgid ""
"elapsed since the associated 'write', then resets pins to values indicated "
"by '-out-invert' and '-out-invert' settings. 'reset' must be later in the "
"same thread as 'write. 'If '-reset' is TRUE, then the 'reset' function will "
"set the pin to the value of '-out-invert'. This can be used in conjunction "
"with stepgen's 'doublefreq' to produce one step per period. The <<sub:"
"stepgen-parameters,stepgen stepspace>> for that pin must be set to 0 to "
"enable doublefreq."
msgstr ""

#. type: Plain text
msgid ""
"The individual functions are provided for situations where one port needs to "
"be updated in a very fast thread, but other ports can be updated in a slower "
"thread to save CPU time. It is probably not a good idea to use both an '-"
"all' function and an individual function at the same time."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Common problems"
msgstr ""

#. type: Plain text
msgid "If loading the module reports"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"insmod: error inserting '/home/jepler/emc2/rtlib/hal_parport.ko':\n"
"-1 Device or resource busy\n"
msgstr ""

#. type: Plain text
msgid ""
"then ensure that the standard kernel module 'parport_pc' is not "
"loadedfootnote:[In the LinuxCNC packages for Ubuntu, the file /etc/modprobe."
"d/emc2 generally prevents 'parport_pc' from being automatically loaded.] and "
"that no other device in the system has claimed the I/O ports."
msgstr ""

#. type: Plain text
msgid ""
"If the module loads but does not appear to function, then the port address "
"is incorrect."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using DoubleStep"
msgstr ""

#. type: Plain text
msgid ""
"To setup DoubleStep on the parallel port you must add the function parport.n."
"reset after parport.n.write and configure stepspace to 0 and the reset time "
"wanted. So that step can be asserted on every period in HAL and then toggled "
"off by parport after being asserted for time specified by parport.n.reset-"
"time."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt hal_parport cfg=\"0x378 out\"\n"
"setp parport.0.reset-time 5000\n"
"loadrt stepgen step_type=0,0,0\n"
"addf parport.0.read base-thread\n"
"addf stepgen.make-pulses base-thread\n"
"addf parport.0.write base-thread\n"
"addf parport.0.reset base-thread\n"
"addf stepgen.capture-position servo-thread\n"
"... \n"
"setp stepgen.0.steplen 1\n"
"setp stepgen.0.stepspace 0\n"
msgstr ""

#. type: Plain text
msgid ""
"More information on DoubleStep can be found on the http://wiki.linuxcnc.org/"
"cgi-bin/wiki.pl?TweakingSoftwareStepGeneration[wiki]."
msgstr ""

#. type: Title =
#, no-wrap
msgid "AX5214H Driver"
msgstr ""

#. type: Plain text
msgid ""
"The Axiom Measurement & Control AX5214H is a 48 channel digital I/O board. "
"It plugs into an ISA bus, and resembles a pair of 8255 chips. In fact it may "
"be a pair of 8255 chips, but I'm not sure. If/when someone starts a driver "
"for an 8255 they should look at the ax5214 code, much of the work is already "
"done."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Installing"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_ax5214h cfg=\"<config-string>\"\n"
msgstr ""

#. type: Plain text
msgid ""
"The config string consists of a hex port address, followed by an 8 character "
"string of \"I\" and \"O\" which sets groups of pins as inputs and outputs. "
"The first two character set the direction of the first two 8 bit blocks of "
"pins (0-7 and 8-15). The next two set blocks of 4 pins (16-19 and 20-23). "
"The pattern then repeats, two more blocks of 8 bits (24-31 and 32-39) and "
"two blocks of 4 bits (40-43 and 44-47). If more than one board is installed, "
"the data for the second board follows the first. As an example, the string "
"'\"0x220 IIIOIIOO 0x300 OIOOIOIO\"' installs drivers for two boards. The "
"first board is at address 0x220, and has 36 inputs (0-19 and 24-39) and 12 "
"outputs (20-23 and 40-47).  The second board is at address 0x300, and has 20 "
"inputs (8-15, 24-31, and 40-43) and 28 outputs (0-7. 16-23, 32-39, and "
"44-47). Up to 8 boards may be used in one system."
msgstr ""

#. type: Plain text
msgid "'(bit) ax5214.<boardnum>.out-<pinnum>' -- Drives a physical output pin."
msgstr ""

#. type: Plain text
msgid "'(bit) ax5214.<boardnum>.in-<pinnum>' -- Tracks a physical input pin."
msgstr ""

#. type: Plain text
msgid ""
"'(bit) ax5214.<boardnum>.in-<pinnum>-not' -- Tracks a physical input pin, "
"inverted."
msgstr ""

#. type: Plain text
msgid ""
"For each pin, <boardnum> is the board number (starts at zero), and <pinnum> "
"is the I/O channel number (0 to 47)."
msgstr ""

#. type: Plain text
msgid ""
"Note that the driver assumes active LOW signals. This is so that modules "
"such as OPTO-22 will work correctly (TRUE means output ON, or input "
"energized). If the signals are being used directly without buffering or "
"isolation the inversion needs to be accounted for. The in- HAL pin is TRUE "
"if the physical pin is low (OPTO-22 module energized), and FALSE if the "
"physical pin is high (OPTO-22 module off). The in-<pinnum>-not HAL pin is "
"inverted -- it is FALSE if the physical pin is low (OPTO-22 module "
"energized). By connecting a signal to one or the other, the user can "
"determine the state of the input."
msgstr ""

#. type: Plain text
msgid "'(bit) ax5214.<boardnum>.out-<pinnum>-invert' -- Inverts an output pin."
msgstr ""

#. type: Plain text
msgid ""
"The -invert parameter determines whether an output pin is active high or "
"active low. If -invert is FALSE, setting the HAL out- pin TRUE drives the "
"physical pin low, turning ON an attached OPTO-22 module, and FALSE drives it "
"high, turning OFF the OPTO-22 module. If -invert is TRUE, then setting the "
"HAL out- pin TRUE will drive the physical pin high and turn the module OFF."
msgstr ""

#. type: Plain text
msgid ""
"'(funct) ax5214.<boardnum>.read' -- Reads all digital inputs on one board."
msgstr ""

#. type: Plain text
msgid ""
"'(funct) ax5214.<boardnum>.write' -- Writes all digital outputs on one board."
msgstr ""

#. type: Title =
#, no-wrap
msgid "GS2 VFD Driver"
msgstr ""

#. type: Plain text
msgid ""
"This is a userspace HAL program for the GS2 series of VFD's at Automation "
"Direct."
msgstr ""

#. type: Plain text
msgid "This component is loaded using the halcmd \"loadusr\" command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn spindle-vfd gs2_vfd -n spindle-vfd \n"
msgstr ""

#. type: Plain text
msgid ""
"The above command says: loadusr, wait for named to load, component gs2_vfd, "
"named spindle-vfd"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Command Line Options"
msgstr ""

#. type: Plain text
msgid "'-b or --bits <n>' (default 8) Set number of data bits to <n>, where n"
msgstr ""

#. type: Plain text
msgid "must be from 5 to 8 inclusive"
msgstr ""

#. type: Plain text
msgid "'-d or --device <path>' (default /dev/ttyS0) Set the name of the serial"
msgstr ""

#. type: Plain text
msgid "device node to use"
msgstr ""

#. type: Plain text
msgid "'-g or --debug' Turn on debugging messages. This will also set the"
msgstr ""

#. type: Plain text
msgid ""
"verbose flag. Debug mode will cause all modbus messages to be printed in hex "
"on the terminal."
msgstr ""

#. type: Plain text
msgid "'-n or --name <string>' (default gs2_vfd) Set the name of the HAL"
msgstr ""

#. type: Plain text
msgid ""
"module. The HAL comp name will be set to <string>, and all pin and parameter "
"names will begin with <string>."
msgstr ""

#. type: Plain text
msgid "'-p or --parity {even,odd,none}' (default odd) Set serial parity to"
msgstr ""

#. type: Plain text
msgid "even, odd, or none."
msgstr ""

#. type: Plain text
msgid "'-r or --rate <n>' (default 38400) Set baud rate to <n>. It is an error"
msgstr ""

#. type: Plain text
msgid ""
"if the rate is not one of the following: 110, 300, 600, 1200, 2400, 4800, "
"9600, 19200, 38400, 57600, 115200"
msgstr ""

#. type: Plain text
msgid "'-s or --stopbits {1,2}' (default 1) Set serial stop bits to 1 or 2"
msgstr ""

#. type: Plain text
msgid "'-t or --target <n>' (default 1) Set MODBUS target (slave) number. This"
msgstr ""

#. type: Plain text
msgid "must match the device number you set on the GS2."
msgstr ""

#. type: Plain text
msgid "'-v or --verbose' Turn on debug messages."
msgstr ""

#. type: Plain text
msgid ""
"'-A or --accel-seconds' <n> (default 10.0) Seconds to accelerate the spindle "
"from 0 to Max RPM."
msgstr ""

#. type: Plain text
msgid ""
"'-D or --decel-seconds' <n> (default 0.0) Seconds to decelerate the spindle "
"from Max RPM to 0. If set to 0.0 the spindle will be allowed to coast to a "
"stop without controlled deceleration."
msgstr ""

#. type: Plain text
msgid ""
"'-R or --braking-resistor' This argument should be used when a braking "
"resistor is installed on the GS2 VFD (see Appendix A of the GS2 manual).  It "
"disables deceleration over-voltage stall prevention (see GS2 modbus "
"Parameter 6.05), allowing the VFD to keep braking even in situations where "
"the motor is regenerating high voltage. The regenerated voltage gets safely "
"dumped into the braking resistor."
msgstr ""

#. type: Plain text
msgid ""
"That if there are serial configuration errors, turning on verbose may result "
"in a flood of timeout errors."
msgstr ""

#. type: Plain text
msgid ""
"Where <n> is gs2_vfd or the name given during loading with the -n option."
msgstr ""

#. type: Plain text
msgid "'<n>.DC-bus-volts' (float, out) The DC bus voltage of the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.at-speed' (bit, out) when drive is at commanded speed"
msgstr ""

#. type: Plain text
msgid "'<n>.err-reset' (bit, in) reset errors sent to VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.firmware-revision' (s32, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.frequency-command' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.frequency-out' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.is-stopped' (bit, out) when the VFD reports 0 Hz output"
msgstr ""

#. type: Plain text
msgid "'<n>.load-percentage' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.motor-RPM' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.output-current' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.output-voltage' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.power-factor' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.scale-frequency' (float, out) from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.speed-command' (float, in) speed sent to VFD in RPM"
msgstr ""

#. type: Plain text
msgid ""
"It is an error to send a speed faster than the Motor Max RPM as set in the "
"VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-fwd' (bit, in) 1 for FWD and 0 for REV sent to VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-rev' (bit, in) 1 for REV and 0 if off"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-on' (bit, in) 1 for ON and 0 for OFF sent to VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.status-1' (s32, out) Drive Status of the VFD (see the GS2 manual)"
msgstr ""

#. type: Plain text
msgid "'<n>.status-2' (s32, out) Drive Status of the VFD (see the GS2"
msgstr ""

#. type: Plain text
msgid "manual)"
msgstr ""

#. type: Plain text
msgid ""
"The status value is a sum of all the bits that are on. So a 163 which means "
"the drive is in the run mode is the sum of 3 (run) + 32 (freq set by serial) "
"+ 128 (operation set by serial)."
msgstr ""

#. type: Plain text
msgid "'<n>.error-count' (s32, RW)"
msgstr ""

#. type: Plain text
msgid ""
"'<n>.loop-time' (float, RW) how often the modbus is polled (default 0.1)"
msgstr ""

#. type: Plain text
msgid "'<n>.nameplate-HZ' (float, RW) Nameplate Hz of motor (default 60)"
msgstr ""

#. type: Plain text
msgid "'<n>.nameplate-RPM' (float, RW) Nameplate RPM of motor (default 1730)"
msgstr ""

#. type: Plain text
msgid "'<n>.retval' (s32, RW) the return value of an error in HAL"
msgstr ""

#. type: Plain text
msgid "'<n>.tolerance' (s32, RW) speed tolerance (default 0.01)"
msgstr ""

#. type: Plain text
msgid ""
"'<n>.ack-delay' (s32, RW) number of read/write cycles before checking at-"
"speed (default 2)"
msgstr ""

#. type: Plain text
msgid ""
"For an example of using this component to drive a spindle see the <<cha:gs2-"
"spindle,GS2 Spindle>> example."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Mesa HostMot2 Driver "
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Introduction "
msgstr ""

#. type: Plain text
msgid ""
"HostMot2 is an FPGA configuration developed by Mesa Electronics for their "
"line of 'Anything I/O' motion control cards. The firmware is open source, "
"portable and flexible. It can be configured (at compile-time)  with zero or "
"more instances (an object created at runtime) of each of several Modules: "
"encoders (quadrature counters), PWM generators, and step/dir generators. The "
"firmware can be configured (at run-time) to connect each of these instances "
"to pins on the I/O headers. I/O pins not driven by a Module instance revert "
"to general-purpose bi-directional digital I/O."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Firmware Binaries"
msgstr ""

#. type: Block title
#, no-wrap
msgid "50 Pin Header FPGA cards"
msgstr ""

#. type: Plain text
msgid ""
"Several pre-compiled HostMot2 firmware binaries are available for the "
"different Anything I/O boards. (This list is incomplete, check the hostmot2-"
"firmware distribution for up-to-date firmware lists.)"
msgstr ""

#. type: Plain text
msgid "3x20 (144 I/O pins): using hm2_pci module"
msgstr ""

#. type: Plain text
msgid "24-channel servo"
msgstr ""

#. type: Plain text
msgid "16-channel servo plus 24 step/dir generators"
msgstr ""

#. type: Plain text
msgid "5i22 (96 I/O pins): using hm2_pci module"
msgstr ""

#. type: Plain text
msgid "16-channel servo"
msgstr ""

#. type: Plain text
msgid "8-channel servo plus 24 step/dir generators"
msgstr ""

#. type: Plain text
msgid "5i20, 5i23, 4i65, 4i68 (72 I/O pins): using hm2_pci module"
msgstr ""

#. type: Plain text
msgid "12-channel servo"
msgstr ""

#. type: Plain text
msgid "8-channel servo plus 4 step/dir generators"
msgstr ""

#. type: Plain text
msgid "4-channel servo plus 8 step/dir generators"
msgstr ""

#. type: Plain text
msgid "7i43 (48 I/O pins): using hm2_7i43 module"
msgstr ""

#. type: Plain text
msgid "8-channel servo (8 PWM generators & 8 encoders)"
msgstr ""

#. type: Plain text
msgid "4-channel servo plus 4 step/dir generators"
msgstr ""

#. type: Block title
#, no-wrap
msgid "DB25 FPGA cards"
msgstr ""

#. type: Plain text
msgid ""
"The 5i25 Superport FPGA card is preprogrammed when purchased and does not "
"need a firmware binary."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Installing Firmware"
msgstr ""

#. type: Plain text
msgid ""
"Depending on how you installed LinuxCNC you may have to open the Synaptic "
"Package Manager from the System menu and install the package for your Mesa "
"card. The quickest way to find them is to do a search for 'hostmot2' in the "
"Synaptic Package Manager. Mark the firmware for installation, then apply."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Loading HostMot2"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC support for the HostMot2 firmware is split into a generic "
"driver called 'hostmot2' and two low-level I/O drivers for the Anything I/O "
"boards. The low-level I/O drivers are 'hm2_7i43' and 'hm2_pci' (for all the "
"PCI- and PC-104/Plus-based Anything I/O boards). The hostmot2 driver must be "
"loaded first, using a HAL command like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hostmot2 \n"
msgstr ""

#. type: Plain text
msgid "See the hostmot2(9) man page for details."
msgstr ""

#. type: Plain text
msgid ""
"The hostmot2 driver by itself does nothing, it needs access to actual boards "
"running the HostMot2 firmware. The low-level I/O drivers provide this "
"access. The low-level I/O drivers are loaded with commands like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt hm2_pci config=\"firmware=hm2/5i20/SVST8_4.BIT \n"
"       num_encoders=3 num_pwmgens=3 num_stepgens=1\"\n"
msgstr ""

#. type: Plain text
msgid "The config parameters are described in the hostmot2 man page."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Watchdog"
msgstr ""

#. type: Plain text
msgid ""
"The HostMot2 firmware may include a watchdog Module; if it does, the "
"hostmot2 driver will use it."
msgstr ""

#. type: Plain text
msgid ""
"The watchdog must be petted by LinuxCNC periodically or it will bite.  The "
"hm2 write function (see below) pets the watchdog."
msgstr ""

#. type: Plain text
msgid ""
"When the watchdog bites, all the board's I/O pins are disconnected from "
"their Module instances and become high-impedance inputs (pulled high).  The "
"state of the HostMot2 firmware modules is not disturbed (except for the "
"configuration of the I/O Pins). Encoder instances keep counting quadrature "
"pulses, and pwm- and step-generators keep generating signals (which are not "
"relayed to the motors, because the I/O Pins have become inputs)."
msgstr ""

#. type: Plain text
msgid ""
"Resetting the watchdog resets the I/O pins to the configuration chosen at "
"load-time."
msgstr ""

#. type: Plain text
msgid ""
"If the firmware includes a watchdog, the following HAL objects will be "
"exported:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pins:"
msgstr ""

#. type: Plain text
msgid "'has_bit' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit i/o) True if the watchdog has bit, False if the watchdog has not bit. "
"If the watchdog has bit and the has_bit bit is True, the user can reset it "
"to False to resume operation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Parameters:"
msgstr ""

#. type: Plain text
msgid "'timeout_ns' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32 read/write) Watchdog timeout, in nanoseconds. This is initialized to "
"5,000,000 (5 milliseconds) at module load time. If more than this amount of "
"time passes between calls to the hm2 write function, the watchdog will bite."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HostMot2 Functions"
msgstr ""

#. type: Plain text
msgid "'hm2_<BoardType>.<BoardNum>.read' -"
msgstr ""

#. type: Plain text
msgid "Read all inputs, update input HAL pins."
msgstr ""

#. type: Plain text
msgid "'hm2_<BoardType>.<BoardNum>.write' -"
msgstr ""

#. type: Plain text
msgid "Write all outputs."
msgstr ""

#. type: Plain text
msgid "'hm2_<BoardType>.<BoardNum>.read_gpio' -"
msgstr ""

#. type: Plain text
msgid ""
"Read the GPIO input pins only. (This function is not available on the 7i43 "
"due to limitations of the EPP bus.)"
msgstr ""

#. type: Plain text
msgid "'hm2_<BoardType>.<BoardNum>.write_gpio' -"
msgstr ""

#. type: Plain text
msgid ""
"Write the GPIO control registers and output pins only. (This function is not "
"available on the 7i43 due to limitations of the EPP bus.)"
msgstr ""

#. type: delimited block =
msgid ""
"The above 'read_gpio' and 'write_gpio' functions should not normally be "
"needed, since the GPIO bits are read and written along with everything else "
"in the standard 'read' and 'write' functions above, which are normally run "
"in the servo thread."
msgstr ""

#. type: delimited block =
msgid ""
"The 'read_gpio' and 'write_gpio' functions were provided in case some very "
"fast (frequently updated) I/O is needed. These functions should be run in "
"the base thread. If you have need for this, please send an email and tell us "
"about it, and what your application is."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pinouts"
msgstr ""

#. type: Plain text
msgid ""
"The hostmot2 driver does not have a particular pinout. The pinout comes from "
"the firmware that the hostmot2 driver sends to the Anything I/O board. Each "
"firmware has different pinout, and the pinout depends on how many of the "
"available encoders, pwmgens, and stepgens are used. To get a pinout list for "
"your configuration after loading LinuxCNC in the terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "dmesg > hm2.txt\n"
msgstr ""

#. type: Plain text
msgid ""
"The resulting text file will contain lots of information as well as the "
"pinout for the HostMot2 and any error and warning messages."
msgstr ""

#. type: Plain text
msgid ""
"To reduce the clutter by clearing the message buffer before loading LinuxCNC "
"type the following in the terminal window:"
msgstr ""

#. type: Plain text
msgid ""
"Now when you run LinuxCNC and then do a 'dmesg > hm2.txt' in the terminal "
"only the info from the time you loaded LinuxCNC will be in your file along "
"with your pinout. The file will be in the current directory of the terminal "
"window. Each line will contain the card name, the card number, the I/O Pin "
"number, the connector and pin, and the usage. From this printout you will "
"know the physical connections to your card based on your configuration."
msgstr ""

#. type: Plain text
msgid "An example of a 5i20 configuration:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HOSTMOT2] \n"
"DRIVER=hm2_pci \n"
"BOARD=5i20 \n"
"CONFIG=\"firmware=hm2/5i20/SVST8_4.BIT num_encoders=1 num_pwmgens=1 num_stepgens=3\"\n"
msgstr ""

#. type: Plain text
msgid "The above configuration produced this printout."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[ 1141.053386] hm2/hm2_5i20.0: 72 I/O Pins used: \n"
"[ 1141.053394] hm2/hm2_5i20.0: IO Pin 000 (P2-01): IOPort \n"
"[ 1141.053397] hm2/hm2_5i20.0: IO Pin 001 (P2-03): IOPort \n"
"[ 1141.053401] hm2/hm2_5i20.0: IO Pin 002 (P2-05): Encoder #0, pin B (Input) \n"
"[ 1141.053405] hm2/hm2_5i20.0: IO Pin 003 (P2-07): Encoder #0, pin A (Input) \n"
"[ 1141.053408] hm2/hm2_5i20.0: IO Pin 004 (P2-09): IOPort \n"
"[ 1141.053411] hm2/hm2_5i20.0: IO Pin 005 (P2-11): Encoder #0, pin Index (Input) \n"
"[ 1141.053415] hm2/hm2_5i20.0: IO Pin 006 (P2-13): IOPort \n"
"[ 1141.053418] hm2/hm2_5i20.0: IO Pin 007 (P2-15): PWMGen #0, pin Out0 (PWM or Up) (Output) \n"
"[ 1141.053422] hm2/hm2_5i20.0: IO Pin 008 (P2-17): IOPort \n"
"[ 1141.053425] hm2/hm2_5i20.0: IO Pin 009 (P2-19): PWMGen #0, pin Out1 (Dir or Down) (Output) \n"
"[ 1141.053429] hm2/hm2_5i20.0: IO Pin 010 (P2-21): IOPort \n"
"[ 1141.053432] hm2/hm2_5i20.0: IO Pin 011 (P2-23): PWMGen #0, pin Not-Enable (Output) \n"
"<snip>... \n"
"[ 1141.053589] hm2/hm2_5i20.0: IO Pin 060 (P4-25): StepGen #2, pin Step (Output) \n"
"[ 1141.053593] hm2/hm2_5i20.0: IO Pin 061 (P4-27): StepGen #2, pin Direction (Output) \n"
"[ 1141.053597] hm2/hm2_5i20.0: IO Pin 062 (P4-29): StepGen #2, pin (unused) (Output) \n"
"[ 1141.053601] hm2/hm2_5i20.0: IO Pin 063 (P4-31): StepGen #2, pin (unused) (Output) \n"
"[ 1141.053605] hm2/hm2_5i20.0: IO Pin 064 (P4-33): StepGen #2, pin (unused) (Output) \n"
"[ 1141.053609] hm2/hm2_5i20.0: IO Pin 065 (P4-35): StepGen #2, pin (unused) (Output) \n"
"[ 1141.053613] hm2/hm2_5i20.0: IO Pin 066 (P4-37): IOPort \n"
"[ 1141.053616] hm2/hm2_5i20.0: IO Pin 067 (P4-39): IOPort \n"
"[ 1141.053619] hm2/hm2_5i20.0: IO Pin 068 (P4-41): IOPort \n"
"[ 1141.053621] hm2/hm2_5i20.0: IO Pin 069 (P4-43): IOPort \n"
"[ 1141.053624] hm2/hm2_5i20.0: IO Pin 070 (P4-45): IOPort \n"
"[ 1141.053627] hm2/hm2_5i20.0: IO Pin 071 (P4-47): IOPort \n"
"[ 1141.053811] hm2/hm2_5i20.0: registered \n"
"[ 1141.053815] hm2_5i20.0: initialized AnyIO board at 0000:02:02.0\n"
msgstr ""

#. type: Plain text
msgid ""
"That the I/O Pin nnn will correspond to the pin number shown on the HAL "
"Configuration screen for GPIOs. Some of the Stepgen, Encoder and PWMGen will "
"also show up as GPIOs in the HAL Configuration screen."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PIN Files"
msgstr ""

#. type: Plain text
msgid ""
"The default pinout is described in a .PIN file (human-readable text).  When "
"you install a firmware package the .PIN files are installed in"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "/usr/share/doc/hostmot2-firmware-<board>/ \n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Firmware"
msgstr ""

#. type: Plain text
msgid ""
"The selected firmware (.BIT file) and configuration is uploaded from the PC "
"motherboard to the Mesa mothercard on LinuxCNC startup.  If you are using "
"Run In Place, you must still install a hostmot2-firmware-<board> package. "
"There is more information about firmware and configuration in the "
"'Configurations' section."
msgstr ""

#. type: Plain text
msgid ""
"The HAL pins for each configuration can be seen by opening up 'Show HAL "
"Configuration' from the Machine menu. All the HAL pins and parameters can be "
"found there. The following figure is of the 5i20 configuration used above."
msgstr ""

#. type: Block title
#, no-wrap
msgid "5i20 HAL Pins[[cap:5i20-HAL-Pins]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "5i20 HAL Pins"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/5i20-halpins.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configurations"
msgstr ""

#. type: Plain text
msgid ""
"The Hostmot2 firmware is available in several versions, depending on what "
"you are trying to accomplish. You can get a reminder of what a particular "
"firmware is for by looking at the name. Let's look at a couple of examples."
msgstr ""

#. type: Plain text
msgid ""
"In the 7i43 (two ports), SV8 ('Servo 8') would be for having 8 servos or "
"fewer, using the 'classic' 7i33 4-axis (per port) servo board.  So 8 servos "
"would use up all 48 signals in the two ports. But if you only needed 3 "
"servos, you could say 'num_encoders=3' and 'num_pwmgens=3' and recover 5 "
"servos at 6 signals each, thus gaining 30 bits of GPIO."
msgstr ""

#. type: Plain text
msgid ""
"Or, in the 5i22 (four ports), SVST8_24 ('Servo 8, Stepper 24') would be for "
"having 8 servos or fewer (7i33 x2 again), and 24 steppers or fewer (7i47 "
"x2). This would use up all four ports.  If you only needed 4 servos you "
"could say 'num_encoders=4' and 'num_pwmgens=4' and recover 1 port (and save "
"a 7i33).  And if you only needed 12 steppers you could say 'num_stepgens=12' "
"and free up one port (and save a 7i47).  So in this way we can save two "
"ports (48 bits) for GPIO."
msgstr ""

#. type: Plain text
msgid ""
"Here are tables of the firmwares available in the official packages.  There "
"may be additional firmwares available at the Mesanet.com website that have "
"not yet made it into the LinuxCNC official firmware packages, so check there "
"too."
msgstr ""

#. type: Plain text
msgid ""
"3x20 (6-port various) Default Configurations (The 3x20 comes in 1M, 1.5M, "
"and 2M gate versions.  So far, all firmware is available in all gate sizes.)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PWMGen"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "StepGen"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "GPIO"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV24"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST16_24"
msgstr ""

#. type: Plain text
msgid ""
"5i22 (4-port PCI) Default Configurations (The 5i22 comes in 1M and 1.5M gate "
"versions.  So far, all firmware is available in all gate sizes.)"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV16"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST2_4_7I47"
msgstr ""

#. type: Table
#, no-wrap
msgid "72"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST8_8"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST8_24"
msgstr ""

#. type: Plain text
msgid "5i23 (3-port PCI) Default Configurations (The 5i23 has 400k gates.)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV12"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST2_8"
msgstr ""

#. type: Table
#, no-wrap
msgid "8 (tbl5)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV12_2X7I48_72"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV12IM_2X7I48_72"
msgstr ""

#. type: Table
#, no-wrap
msgid "12 (+IM)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST4_8"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST8_4"
msgstr ""

#. type: Table
#, no-wrap
msgid "4 (tbl5)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST8_4IM2"
msgstr ""

#. type: Table
#, no-wrap
msgid "8 (+IM)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST8_8IM2"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVTP6_7I39"
msgstr ""

#. type: Table
#, no-wrap
msgid "0 (6 BLDC)"
msgstr ""

#. type: Plain text
msgid "5i20 (3-port PCI) Default Configurations (The 5i20 has 200k gates.)"
msgstr ""

#. type: Plain text
msgid "4i68 (3-port PC/104) Default Configurations (The 4i68 has 400k gates.)"
msgstr ""

#. type: Plain text
msgid "4i65 (3-port PC/104) Default Configurations (The 4i65 has 200k gates.)"
msgstr ""

#. type: Plain text
msgid "7i43 (2-port parallel) 400k gate versions, Default Configurations"
msgstr ""

#. type: Table
#, no-wrap
msgid "SV8"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST4_4"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST4_6"
msgstr ""

#. type: Table
#, no-wrap
msgid "6 (tbl3)"
msgstr ""

#. type: Table
#, no-wrap
msgid "SVST4_12"
msgstr ""

#. type: Plain text
msgid "7i43 (2-port parallel) 200k gate versions, Default Configurations"
msgstr ""

#. type: Plain text
msgid ""
"Even though several cards may have the same named .BIT file you cannot use "
"a .BIT file that is not for that card. Different cards have different clock "
"frequencies so make sure you load the proper .BIT file for your card. Custom "
"hm2 firmwares can be created for special applications and you may see some "
"custom hm2 firmwares in the directories with the default ones."
msgstr ""

#. type: Plain text
msgid ""
"When you load the board-driver (hm2_pci or hm2_7i43), you can tell it to "
"disable instances of the three primary modules (pwmgen, stepgen, and "
"encoder) by setting the count lower. Any I/O pins belonging to disabled "
"module instances become GPIOs."
msgstr ""

#. type: Plain text
msgid ""
"General Purpose I/O pins on the board which are not used by a module "
"instance are exported to HAL as 'full' GPIO pins. Full GPIO pins can be "
"configured at run-time to be inputs, outputs, or open drains, and have a HAL "
"interface that exposes this flexibility. I/O pins that are owned by an "
"active module instance are constrained by the requirements of the owning "
"module, and have a restricted HAL interface."
msgstr ""

#. type: Plain text
msgid ""
"GPIOs have names like 'hm2_<BoardType>.<BoardNum>.gpio.<IONum>.' IONum. is a "
"three-digit number. The mapping from IONum to connector and pin-on-that-"
"connector is written to the syslog when the driver loads, and it's "
"documented in Mesa's manual for the Anything I/O boards."
msgstr ""

#. type: Plain text
msgid ""
"The hm2 GPIO representation is modeled after the Digital Inputs and Digital "
"Outputs described in the Canonical Device Interface (part of the HAL General "
"Reference document)."
msgstr ""

#. type: Plain text
msgid "GPIO pins default to input."
msgstr ""

#. type: Plain text
msgid "'in' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, Out) Normal state of the hardware input pin. Both full GPIO pins and I/"
"O pins used as inputs by active module instances have this pin."
msgstr ""

#. type: Plain text
msgid "'in_not' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, Out) Inverted state of the hardware input pin. Both full GPIO pins and "
"I/O pins used as inputs by active module instances have this pin."
msgstr ""

#. type: Plain text
msgid "'out' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, In) Value to be written (possibly inverted) to the hardware output "
"pin. Only full GPIO pins have this pin."
msgstr ""

#. type: Plain text
msgid "'invert_output' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) This parameter only has an effect if the 'is_output' parameter is "
"true. If this parameter is true, the output value of the GPIO will be the "
"inverse of the value on the 'out' HAL pin. Only full GPIO pins and I/O pins "
"used as outputs by active module instances have this parameter. To invert an "
"active module pin you have to invert the GPIO pin not the module pin."
msgstr ""

#. type: Plain text
msgid "'is_opendrain' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) This parameter only has an effect if the 'is_output' parameter is "
"true. If this parameter is false, the GPIO behaves as a normal output pin: "
"the I/O pin on the connector is driven to the value specified by the 'out' "
"HAL pin (possibly inverted), and the value of the 'in' and 'in_not' HAL pins "
"is undefined. If this parameter is true, the GPIO behaves as an open-drain "
"pin. Writing 0 to the 'out' HAL pin drives the I/O pin low, writing 1 to the "
"'out' HAL pin puts the I/O pin in a high-impedance state. In this high-"
"impedance state the I/O pin floats (weakly pulled high), and other devices "
"can drive the value; the resulting value on the I/O pin is available on the "
"'in' and 'in_not' pins. Only full GPIO pins and I/O pins used as outputs by "
"active module instances have this parameter."
msgstr ""

#. type: Plain text
msgid "'is_output' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If set to 0, the GPIO is an input. The I/O pin is put in a high-"
"impedance state (weakly pulled high), to be driven by other devices. The "
"logic value on the I/O pin is available in the 'in' and 'in_not' HAL pins. "
"Writes to the 'out' HAL pin have no effect. If this parameter is set to 1, "
"the GPIO is an output; its behavior then depends on the 'is_opendrain' "
"parameter. Only full GPIO pins have this parameter."
msgstr ""

#. type: Plain text
msgid ""
"Stepgens have names like 'hm2_<BoardType>.<BoardNum>.stepgen.<Instance>.'. "
"'Instance' is a two-digit number that corresponds to the HostMot2 stepgen "
"instance number. There are 'num_stepgens' instances, starting with 00."
msgstr ""

#. type: Plain text
msgid ""
"Each stepgen allocates 2-6 I/O pins (selected at firmware compile time), but "
"currently only uses two: Step and Direction outputs.footnote:[At present, "
"the firmware supports multi-phase stepper outputs, but the driver doesn't. "
"Interested volunteers are solicited.]"
msgstr ""

#. type: Plain text
msgid ""
"The stepgen representation is modeled on the stepgen software component. "
"Stepgen default is active high step output (high during step time low during "
"step space). To invert a StepGen output pin you invert the corresponding "
"GPIO pin that is being used by StepGen. To find the GPIO pin being used for "
"the StepGen output run dmesg as shown above."
msgstr ""

#. type: Plain text
msgid "Each stepgen instance has the following pins and parameters:"
msgstr ""

#. type: Plain text
msgid "'control-type' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, In) Switches between position control mode (0) and velocity control "
"mode (1). Defaults to position control (0)."
msgstr ""

#. type: Plain text
msgid "'counts' -"
msgstr ""

#. type: Plain text
msgid "(s32, Out) Feedback position in counts (number of steps)."
msgstr ""

#. type: Plain text
msgid "'enable' -"
msgstr ""

#. type: Plain text
msgid "(Bit, In) Enables output steps. When false, no steps are generated."
msgstr ""

#. type: Plain text
msgid "'position-cmd' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, In) Target position of stepper motion, in user-defined position "
"units."
msgstr ""

#. type: Plain text
msgid "'position-fb' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, Out) Feedback position in user-defined position units (counts / "
"position_scale)."
msgstr ""

#. type: Plain text
msgid "'velocity-cmd' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, In) Target velocity of stepper motion, in user-defined position "
"units per second. This pin is only used when the stepgen is in velocity "
"control mode (control-type=1)."
msgstr ""

#. type: Plain text
msgid "'velocity-fb' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, Out) Feedback velocity in user-defined position units per second."
msgstr ""

#. type: Plain text
msgid "'dirhold' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RW) Minimum duration of stable Direction signal after a step ends, in "
"nanoseconds."
msgstr ""

#. type: Plain text
msgid "'dirsetup' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RW) Minimum duration of stable Direction signal before a step begins, "
"in nanoseconds."
msgstr ""

#. type: Plain text
msgid "'maxaccel' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) Maximum acceleration, in position units per second per second. "
"If set to 0, the driver will not limit its acceleration."
msgstr ""

#. type: Plain text
msgid "'maxvel' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) Maximum speed, in position units per second. If set to 0, the "
"driver will choose the maximum velocity based on the values of steplen and "
"stepspace (at the time that maxvel was set to 0)."
msgstr ""

#. type: Plain text
msgid "'position-scale' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) Converts from counts to position units. position = counts / "
"position_scale"
msgstr ""

#. type: Plain text
msgid "'step_type' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RW) Output format, like the step_type modparam to the software "
"stegen(9) component. 0 = Step/Dir, 1 = Up/Down, 2 = Quadrature. In "
"Quadrature mode (step_type=2), the stepgen outputs one complete Gray cycle "
"(00 \\-> 01 \\-> 11 \\-> 10 \\-> 00) for each 'step' it takes."
msgstr ""

#. type: Plain text
msgid "'steplen' -"
msgstr ""

#. type: Plain text
msgid "(u32, RW) Duration of the step signal, in nanoseconds."
msgstr ""

#. type: Plain text
msgid "'stepspace' -"
msgstr ""

#. type: Plain text
msgid "(u32, RW) Minimum interval between step signals, in nanoseconds."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Output Parameters"
msgstr ""

#. type: Plain text
msgid ""
"The Step and Direction pins of each StepGen have two additional parameters. "
"To find which I/O pin belongs to which step and direction output run dmesg "
"as described above."
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) This parameter only has an effect if the 'is_output' parameter is "
"true. If this parameter is true, the output value of the GPIO will be the "
"inverse of the value on the 'out' HAL pin."
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If this parameter is false, the GPIO behaves as a normal output "
"pin: the I/O pin on the connector is driven to the value specified by the "
"'out' HAL pin (possibly inverted). If this parameter is true, the GPIO "
"behaves as an open-drain pin. Writing 0 to the 'out' HAL pin drives the I/O "
"pin low, writing 1 to the 'out' HAL pin puts the I/O pin in a high-impedance "
"state. In this high-impedance state the I/O pin floats (weakly pulled high), "
"and other devices can drive the value; the resulting value on the I/O pin is "
"available on the 'in' and 'in_not' pins. Only full GPIO pins and I/O pins "
"used as outputs by active module instances have this parameter."
msgstr ""

#. type: Plain text
msgid ""
"PWMgens have names like 'hm2_<BoardType>.<BoardNum>.pwmgen.<Instance>.'. "
"'Instance' is a two-digit number that corresponds to the HostMot2 pwmgen "
"instance number. There are 'num_pwmgens' instances, starting with 00."
msgstr ""

#. type: Plain text
msgid ""
"In HM2, each pwmgen uses three output I/O pins: Not-Enable, Out0, and Out1. "
"To invert a PWMGen output pin you invert the corresponding GPIO pin that is "
"being used by PWMGen. To find the GPIO pin being used for the PWMGen output "
"run dmesg as shown above."
msgstr ""

#. type: Plain text
msgid ""
"The function of the Out0 and Out1 I/O pins varies with output-type parameter "
"(see below)."
msgstr ""

#. type: Plain text
msgid ""
"The hm2 pwmgen representation is similar to the software pwmgen component. "
"Each pwmgen instance has the following pins and parameters:"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, In) If true, the pwmgen will set its Not-Enable pin false and output "
"its pulses. If 'enable' is false, pwmgen will set its Not-Enable pin true "
"and not output any signals."
msgstr ""

#. type: Plain text
msgid "'value' -"
msgstr ""

#. type: Plain text
msgid "(Float, In) The current pwmgen command value, in arbitrary units."
msgstr ""

#. type: Plain text
msgid "'output-type' -"
msgstr ""

#. type: Plain text
msgid ""
"(s32, RW) This emulates the output_type load-time argument to the software "
"pwmgen component. This parameter may be changed at runtime, but most of the "
"time you probably want to set it at startup and then leave it alone. "
"Accepted values are 1 (PWM on Out0 and Direction on Out1), 2 (Up on Out0 and "
"Down on Out1), 3 (PDM mode, PDM on Out0 and Dir on Out1), and 4 (Direction "
"on Out0 and PWM on Out1, 'for locked antiphase')."
msgstr ""

#. type: Plain text
msgid "'scale' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) Scaling factor to convert 'value' from arbitrary units to duty "
"cycle: dc = value / scale. Duty cycle has an effective range of -1.0 to +1.0 "
"inclusive, anything outside that range gets clipped."
msgstr ""

#. type: Plain text
msgid "'pdm_frequency' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RW) This specifies the PDM frequency, in Hz, of all the pwmgen "
"instances running in PDM mode (mode 3). This is the 'pulse slot frequency'; "
"the frequency at which the pdm generator in the Anything I/O board chooses "
"whether to emit a pulse or a space. Each pulse (and space) in the PDM pulse "
"train has a duration of 1/pdm_frequency seconds. For example, setting the "
"pdm_frequency to 2e6 (2 MHz) and the duty cycle to 50% results in a 1 MHz "
"square wave, identical to a 1 MHz PWM signal with 50% duty cycle. The "
"effective range of this parameter is from about 1525 Hz up to just under 100 "
"MHz. Note that the max frequency is determined by the ClockHigh frequency of "
"the Anything I/O board; the 5i20 and 7i43 both have a 100 MHz clock, "
"resulting in a 100 Mhz max PDM frequency. Other boards may have different "
"clocks, resulting in different max PDM frequencies. If the user attempts to "
"set the frequency too high, it will be clipped to the max supported "
"frequency of the board."
msgstr ""

#. type: Plain text
msgid "'pwm_frequency' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RW) This specifies the PWM frequency, in Hz, of all the pwmgen "
"instances running in the PWM modes (modes 1 and 2). This is the frequency of "
"the variable-duty-cycle wave. Its effective range is from 1 Hz up to 193 "
"KHz. Note that the max frequency is determined by the ClockHigh frequency of "
"the Anything I/O board; the 5i20 and 7i43 both have a 100 MHz clock, "
"resulting in a 193 KHz max PWM frequency. Other boards may have different "
"clocks, resulting in different max PWM frequencies. If the user attempts to "
"set the frequency too high, it will be clipped to the max supported "
"frequency of the board.  Frequencies below about 5 Hz are not terribly "
"accurate, but above 5 Hz they're pretty close."
msgstr ""

#. type: Plain text
msgid ""
"The output pins of each PWMGen have two additional parameters. To find which "
"I/O pin belongs to which output run dmesg as described above."
msgstr ""

#. type: Plain text
msgid ""
"Encoders have names like 'hm2_<BoardType>.<BoardNum>.encoder.<Instance>.'. "
"'Instance' is a two-digit number that corresponds to the HostMot2 encoder "
"instance number. There are 'num_encoders' instances, starting with 00."
msgstr ""

#. type: Plain text
msgid ""
"Each encoder uses three or four input I/O pins, depending on how the "
"firmware was compiled. Three-pin encoders use A, B, and Index (sometimes "
"also known as Z). Four-pin encoders use A, B, Index, and Index-mask."
msgstr ""

#. type: Plain text
msgid ""
"The hm2 encoder representation is similar to the one described by the "
"Canonical Device Interface (in the HAL General Reference document), and to "
"the software encoder component. Each encoder instance has the following pins "
"and parameters:"
msgstr ""

#. type: Plain text
msgid "'count' -"
msgstr ""

#. type: Plain text
msgid "(s32, Out) Number of encoder counts since the previous reset."
msgstr ""

#. type: Plain text
msgid "'index-enable' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, I/O) When this pin is set to True, the count (and therefore also "
"position) are reset to zero on the next Index (Phase-Z) pulse. At the same "
"time, index-enable is reset to zero to indicate that the pulse has occurred."
msgstr ""

#. type: Plain text
msgid "'position' -"
msgstr ""

#. type: Plain text
msgid "(Float, Out) Encoder position in position units (count / scale)."
msgstr ""

#. type: Plain text
msgid "'rawcounts' -"
msgstr ""

#. type: Plain text
msgid ""
"(s32, Out) Total number of encoder counts since the start, not adjusted for "
"index or reset."
msgstr ""

#. type: Plain text
msgid "'reset' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, In) When this pin is TRUE, the count and position pins are set to 0. "
"(The value of the velocity pin is not affected by this.) The driver does not "
"reset this pin to FALSE after resetting the count to 0, that is the user's "
"job."
msgstr ""

#. type: Plain text
msgid "'velocity' -"
msgstr ""

#. type: Plain text
msgid "(Float, Out) Estimated encoder velocity in position units per second."
msgstr ""

#. type: Plain text
msgid "'counter-mode' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) Set to False (the default) for Quadrature. Set to True for Up/Down "
"or for single input on Phase A. Can be used for a frequency to velocity "
"converter with a single input on Phase A when set to true."
msgstr ""

#. type: Plain text
msgid "'filter' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If set to True (the default), the quadrature counter needs 15 "
"clocks to register a change on any of the three input lines (any pulse "
"shorter than this is rejected as noise). If set to False, the quadrature "
"counter needs only 3 clocks to register a change. The encoder sample clock "
"runs at 33 MHz on the PCI Anything I/O cards and 50 MHz on the 7i43."
msgstr ""

#. type: Plain text
msgid "'index-invert' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If set to True, the rising edge of the Index input pin triggers "
"the Index event (if index-enable is True). If set to False, the falling edge "
"triggers."
msgstr ""

#. type: Plain text
msgid "'index-mask' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If set to True, the Index input pin only has an effect if the "
"Index-Mask input pin is True (or False, depending on the index-mask-invert "
"pin below)."
msgstr ""

#. type: Plain text
msgid "'index-mask-invert' -"
msgstr ""

#. type: Plain text
msgid ""
"(Bit, RW) If set to True, Index-Mask must be False for Index to have an "
"effect. If set to False, the Index-Mask pin must be True."
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) Converts from 'count' units to 'position' units. A quadrature "
"encoder will normally have 4 counts per pulse so a 100 PPR encoder would be "
"400 counts per revolution. In '.counter-mode' a 100 PPR encoder would have "
"100 counts per revelution as it only uses the rising edge of A and direction "
"is B."
msgstr ""

#. type: Plain text
msgid "'vel-timeout' -"
msgstr ""

#. type: Plain text
msgid ""
"(Float, RW) When the encoder is moving slower than one pulse for each time "
"that the driver reads the count from the FPGA (in the hm2_read()  function), "
"the velocity is harder to estimate. The driver can wait several iterations "
"for the next pulse to arrive, all the while reporting the upper bound of the "
"encoder velocity, which can be accurately guessed. This parameter specifies "
"how long to wait for the next pulse, before reporting the encoder stopped. "
"This parameter is in seconds."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "5i25 Configuration"
msgstr ""

#. type: Plain text
msgid ""
"The 5i25 firmware comes preloaded for the daughter card it is purchased "
"with.  So the 'firmware=xxx.BIT' is not part of the hm2_pci configuration "
"string when using a 5i25."
msgstr ""

#. type: Plain text
msgid ""
"Example configurations of the 5i25/7i76 and 5i25/7i77 cards are included in "
"the <<sub:configuration-selector,Configuration Selector>>."
msgstr ""

#. type: Plain text
msgid ""
"If you like to roll your own configuration the following examples show how "
"to load the drivers in the HAL file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "5i25 + 7i76 Card"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load the generic driver\n"
"loadrt hostmot2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load the PCI driver and configure\n"
"loadrt hm2_pci config=\"num_encoders=1 num_stepgens=5 sserial_port_0=0XXX\"\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "5i25 + 7i77 Card"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load the PCI driver and configure\n"
"loadrt hm2_pci config=\"num_encoders=6 num_pwmgens=6 sserial_port_0=0XXX\"\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SSERIAL Configuration"
msgstr ""

#. type: Plain text
msgid ""
"The 'sserial_port_0=0XXX' configuration string sets some options for the "
"smart serial daughter card. These options are specific for each daughter "
"card. See the Mesa manual for more information on the exact usage."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "7i77 Limits"
msgstr ""

#. type: Plain text
msgid ""
"The minlimit and maxlimit are bounds on the pin value (in this case the "
"analog out value) fullscalemax is the scale factor."
msgstr ""

#. type: Plain text
msgid ""
"These are by default set to the analog in or analog range (most likely in "
"volts)."
msgstr ""

#. type: Plain text
msgid ""
"So for example on the 7I77 +-10V analog outputs, the default values are:"
msgstr ""

#. type: Plain text
msgid "minlimit -10 maxlimit +10 maxfullscale 10"
msgstr ""

#. type: Plain text
msgid ""
"If you wanted to say scale the analog out of a channel to IPS for a velocity "
"mode servo (say 24 IPS max) you could set the limits like this:"
msgstr ""

#. type: Plain text
msgid "minlimit -24 maxlimit +24 maxfullscale 24"
msgstr ""

#. type: Plain text
msgid ""
"If you wanted to scale the analog out of a channel to RPM for a 0 to 6000 "
"RPM spindle with 0-10V control you could set the limits like this:"
msgstr ""

#. type: Plain text
msgid ""
"minlimit 0 maxlimit 6000 maxfullscale 6000 (this would prevent unwanted "
"negative output voltages from being set)"
msgstr ""

#. type: Plain text
msgid ""
"Several example configurations for Mesa hardware are included with "
"LinuxCNC.  The configurations are located in the hm2-servo and hm2-stepper "
"sections of the <<sub:configuration-selector,Configuration Selector>>. "
"Typically you will need the board installed for the configuration you pick "
"to load. The examples are a good place to start and will save you time.  "
"Just pick the proper example from the LinuxCNC Configuration Selector and "
"save a copy to your computer so you can edit it. To see the exact pins and "
"parameters that your configuration gave you, open the Show HAL Configuration "
"window from the Machine menu, or do dmesg as outlined above."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Motenc Driver"
msgstr ""

#. type: Plain text
msgid "Vital Systems Motenc-100 and Motenc-LITE"
msgstr ""

#. type: Plain text
msgid ""
"The Vital Systems Motenc-100 and Motenc-LITE are 8- and 4-channel servo "
"control boards. The Motenc-100 provides 8 quadrature encoder counters, 8 "
"analog inputs, 8 analog outputs, 64 (68?) digital inputs, and 32 digital "
"outputs. The Motenc-LITE has only 4 encoder counters, 32 digital inputs and "
"16 digital outputs, but it still has 8 analog inputs and 8 analog outputs. "
"The driver automatically identifies the installed board and exports the "
"appropriate HAL objects."
msgstr ""

#. type: Plain text
msgid "Installing:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_motenc\n"
msgstr ""

#. type: Plain text
msgid ""
"During loading (or attempted loading) the driver prints some useful "
"debugging messages to the kernel log, which can be viewed with dmesg."
msgstr ""

#. type: Plain text
msgid "Up to 4 boards may be used in one system."
msgstr ""

#. type: Plain text
msgid ""
"In the following pins, parameters, and functions, <board> is the board ID. "
"According to the naming conventions the first board should always have an ID "
"of zero. However this driver sets the ID based on a pair of jumpers on the "
"board, so it may be non-zero even if there is only one board."
msgstr ""

#. type: Plain text
msgid ""
"'(s32) motenc.<board>.enc-<channel>-count' - Encoder position, in counts."
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.enc-<channel>-position' - Encoder position, in"
msgstr ""

#. type: Plain text
msgid "user units."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.enc-<channel>-index' - Current status of index"
msgstr ""

#. type: Plain text
msgid "pulse input."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.enc-<channel>-idx-latch' - Driver sets this pin"
msgstr ""

#. type: Plain text
msgid ""
"true when it latches an index pulse (enabled by latch-index). Cleared by "
"clearing latch-index."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.enc-<channel>-latch-index' - If this pin is true,"
msgstr ""

#. type: Plain text
msgid "the driver will reset the counter on the next index pulse."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.enc-<channel>-reset-count' - If this pin is true,"
msgstr ""

#. type: Plain text
msgid ""
"the counter will immediately be reset to zero, and the pin will be cleared."
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.dac-<channel>-value' - Analog output value for"
msgstr ""

#. type: Plain text
msgid "DAC (in user units, see -gain and -offset)"
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.adc-<channel>-value' - Analog input value read"
msgstr ""

#. type: Plain text
msgid "by ADC (in user units, see -gain and -offset)"
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.in-<channel>' - State of digital input pin, see"
msgstr ""

#. type: Plain text
msgid "canonical digital input."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.in-<channel>-not' - Inverted state of digital"
msgstr ""

#. type: Plain text
msgid "input pin, see canonical digital input."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.out-<channel>' - Value to be written to digital"
msgstr ""

#. type: Plain text
msgid "output, seen canonical digital output."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.estop-in' - Dedicated estop input, more details"
msgstr ""

#. type: Plain text
msgid "needed."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.estop-in-not' - Inverted state of dedicated estop"
msgstr ""

#. type: Plain text
msgid "input."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.watchdog-reset' - Bidirectional, - Set TRUE to"
msgstr ""

#. type: Plain text
msgid "reset watchdog once, is automatically cleared."
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.enc-<channel>-scale' - The number of counts /"
msgstr ""

#. type: Plain text
msgid "user unit (to convert from counts to units)."
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.dac-<channel>-offset' - Sets the DAC offset."
msgstr ""

#. type: Plain text
msgid ""
"'(float) motenc.<board>.dac-<channel>-gain' - Sets the DAC gain (scaling)."
msgstr ""

#. type: Plain text
msgid "'(float) motenc.<board>.adc-<channel>-offset' - Sets the ADC offset."
msgstr ""

#. type: Plain text
msgid ""
"'(float) motenc.<board>.adc-<channel>-gain' - Sets the ADC gain (scaling)."
msgstr ""

#. type: Plain text
msgid "'(bit) motenc.<board>.out-<channel>-invert' - Inverts a digital output,"
msgstr ""

#. type: Plain text
msgid "see canonical digital output."
msgstr ""

#. type: Plain text
msgid "'(u32) motenc.<board>.watchdog-control' - Configures the watchdog. The"
msgstr ""

#. type: Plain text
msgid "value may be a bitwise OR of the following values:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit #"
msgstr ""

#. type: Table
#, no-wrap
msgid "Timeout is 16ms if set, 8ms if unset"
msgstr ""

#. type: Table
#, no-wrap
msgid "Watchdog is enabled"
msgstr ""

#. type: Table
#, no-wrap
msgid "Watchdog is automatically reset by DAC writes (the HAL dac-write function)"
msgstr ""

#. type: Plain text
msgid ""
"Typically, the useful values are 0 (watchdog disabled) or 20 (8ms watchdog "
"enabled, cleared by dac-write)."
msgstr ""

#. type: Plain text
msgid "'(u32) motenc.<board>.led-view' - Maps some of the I/O to onboard LEDs."
msgstr ""

#. type: Plain text
msgid "'(funct) motenc.<board>.encoder-read' - Reads all encoder counters."
msgstr ""

#. type: Plain text
msgid ""
"'(funct) motenc.<board>.adc-read' - Reads the analog-to-digital converters."
msgstr ""

#. type: Plain text
msgid "'(funct) motenc.<board>.digital-in-read' - Reads digital inputs."
msgstr ""

#. type: Plain text
msgid "'(funct) motenc.<board>.dac-write' - Writes the voltages to the DACs."
msgstr ""

#. type: Plain text
msgid "'(funct) motenc.<board>.digital-out-write' - Writes digital outputs."
msgstr ""

#. type: Plain text
msgid "'(funct) motenc.<board>.misc-update' - Updates misc stuff."
msgstr ""

#. type: Title =
#, no-wrap
msgid "MB2HAL"
msgstr ""

#. type: Plain text
msgid ""
"MB2HAL is a generic userspace HAL component to communicate with one or more "
"Modbus devices.  So far, there are two options to communicate with a Modbus "
"device:"
msgstr ""

#. type: Plain text
msgid ""
"One option is to create a HAL component as a driver see http://wiki.linuxcnc."
"org/cgi-bin/wiki.pl?VFD_Modbus[VFD Modbus]."
msgstr ""

#. type: Plain text
msgid ""
"Another option is to use Classic Ladder which has Modbus built in see <<cha:"
"classicladder,ClassicLadder>>."
msgstr ""

#. type: Plain text
msgid ""
"Now there is a third option that consists of a \"generic\" driver configured "
"by text file, this is called MB2HAL.  Why MB2HAL ? Consider using Mb2hal if:"
msgstr ""

#. type: Plain text
msgid ""
"You have to write a new driver and you don't know anything about programming."
msgstr ""

#. type: Plain text
msgid ""
"You need to use Classic Ladder \"only\" to manage the Modbus connections."
msgstr ""

#. type: Plain text
msgid ""
"You have to discover and configure first time the Modbus transactions. "
"Mb2hal have debug levels to facilitate the low level protocol debug."
msgstr ""

#. type: Plain text
msgid ""
"You have more than one device to connect. Mb2hal is very efficient managing "
"multiple devices, transactions and links. Currently i am monitoring two axis "
"drivers using a Rs232 port, a VFD driver using another Rs232 port, and a "
"remote I/O using TCP/IP."
msgstr ""

#. type: Plain text
msgid ""
"You want a protocol to connect your Arduino to HAL. Look the included sample "
"configuration file, sketch and library for Arduino Modbus."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Example config file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#This .INI file is also the HELP, MANUAL and HOW-TO file for mb2hal.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#Load the modbus HAL userspace module as the examples below,\n"
"#change to match your own HAL_MODULE_NAME and .ini file name\n"
"#Using HAL_MODULE_NAME=mb2hal or nothing (default): loadusr -W mb2hal config=config_file.ini\n"
"#Using HAL_MODULE_NAME=mymodule: loadusr -Wn mymodule mb2hal config=config_file.ini\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#Common section\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[MB2HAL_INIT]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Debug level of init and INI file parsing.\n"
"# 0 = silent.\n"
"# 1 = error messages (default).\n"
"# 2 = OK confirmation messages.\n"
"# 3 = debugging messages.\n"
"# 4 = maximum debugging messages (only in transactions).\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "INIT_DEBUG=3\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#OPTIONAL: HAL module (component) name. Defaults to \"mb2hal\".\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "HAL_MODULE_NAME=mb2hal\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Insert a delay of \"FLOAT seconds\" between transactions in order\n"
"#to not to have a lot of logging and facilitate the debugging.\n"
"#Useful when using DEBUG=3 (NOT INIT_DEBUG=3)\n"
"#It affects ALL transactions.\n"
"#Use \"0.0\" for normal activity.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SLOWDOWN=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#REQUIRED: The number of total Modbus transactions. There is no maximum.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TOTAL_TRANSACTIONS=9\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#One transaction section is required per transaction, starting at 00 and counting up sequentially.\n"
"#If there is a new link (not transaction), you must provide the REQUIRED parameters 1st time.\n"
"#Warning: Any OPTIONAL parameter not specified are copied from the previous transaction.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[TRANSACTION_00]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#REQUIRED: You must specify either a \"serial\" or \"tcp\" link for the first transaction.\n"
"#Later transaction will use the previous transaction link if not specified.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "LINK_TYPE=tcp\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=tcp then REQUIRED (only 1st time): The Modbus slave device ip address.\n"
"#if LINK_TYPE=serial then IGNORED\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TCP_IP=192.168.2.10\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=tcp then OPTIONAL.\n"
"#if LINK_TYPE=serial then IGNORED\n"
"#The Modbus slave device tcp port. Defaults to 502.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TCP_PORT=502\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then REQUIRED (only 1st time).\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#The serial port.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_PORT=/dev/ttyS0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then REQUIRED (only 1st time).\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#The baud rate.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_BAUD=115200\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then REQUIRED (only 1st time).\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#Data bits. One of 5,6,7,8.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_BITS=8\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then REQUIRED (only 1st time).\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#Data parity. One of: even, odd, none.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_PARITY=none\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then REQUIRED (only 1st time).\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#Stop bits. One of 1, 2.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_STOP=2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#if LINK_TYPE=serial then OPTIONAL:\n"
"#if LINK_TYPE=tcp then IGNORED\n"
"#Serial port delay between for this transaction only.\n"
"#In ms. Defaults to 0.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "SERIAL_DELAY_MS=10\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#REQUIRED (only 1st time).\n"
"#Modbus slave number.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MB_SLAVE_ID=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#REQUIRED: The first element address.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "FIRST_ELEMENT=0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#REQUIRED: The number of elements.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "NELEMENTS=16\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#REQUIRED: Modbus transaction function code (see www.modbus.org specifications).\n"
"#    fnct_01_read_coils               (01 = 0x01)\n"
"#    fnct_02_read_discrete_inputs     (02 = 0x02)\n"
"#    fnct_03_read_holding_registers   (03 = 0x03)\n"
"#    fnct_04_read_input_registers     (04 = 0x04)\n"
"#    fnct_05_write_single_coil        (05 = 0x05)\n"
"#    fnct_06_write_single_register    (06 = 0x06)\n"
"#    fnct_15_write_multiple_coils     (15 = 0x0F)\n"
"#    fnct_16_write_multiple_registers (16 = 0x10)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#fnct_01_read_coils and\n"
"#fnct_02_read_discrete_inputs: creates boolean output HAL pins 'bit' and 'bit-inv'.\n"
"#fnct_03_read_holding_registers and\n"
"#fnct_04_read_input_registers: creates floating point output HAL pins 'float'.\n"
"#                         also creates u32 output HAL pins 'int'.\n"
"#fnct_05_write_single_coil:    creates a boolean input HAL pin 'bit'\n"
"#\tNELEMENTS needs to be 1 or PIN_NAMES must contain just one name\n"
"#fnct_06_write_single_register: creates a floating point input HAL pin 'float'\n"
"#                          also creates a u32 input HAL pin 'int'.\n"
"#\tNELEMENTS needs to be 1 or PIN_NAMES must contain just one name\n"
"#   Both pin values are added and limited to 65535 (UINT16_MAX). Normally use one and let the other open (read as 0).\n"
"#fnct_15_write_multiple_coils: creates boolean input HAL pins 'bit'.\n"
"#fnct_16_write_multiple_registers: creates floating point input HAL pins 'float'.\n"
"#                             also creates u32 input HAL pins 'int'.\n"
"#    Both pin values are added and limited to 65535 (UINT16_MAX). Normally use one and let the other open (read as 0).\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#The pins are named based on component name, transaction number and order number.\n"
"#Example: mb2hal.00.01.<type> (transaction=00, second register=01 (00 is the first one))\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Response timeout for this transaction. In INTEGER ms. Defaults to 500 ms.\n"
"#This is how much to wait for 1st byte before raise an error.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MB_RESPONSE_TIMEOUT_MS=500\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Byte timeout for this transaction. In INTEGER ms. Defaults to 500 ms.\n"
"#This is how much to wait from byte to byte before raise an error.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MB_BYTE_TIMEOUT_MS=500\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Instead of giving the transaction number, use a name.\n"
"#Example: mb2hal.00.01 could become mb2hal.plcin.01\n"
"#The name must not exceed 28 characters.\n"
"#NOTE: when using names be careful that you dont end up with two transactions\n"
"#using the same name.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "HAL_TX_NAME=remoteIOcfg\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Maximum update rate in HZ. Defaults to 0.0 (0.0 = as soon as available = infinit).\n"
"#NOTE: This is a maximum rate and the actual rate may be lower.\n"
"#If you want to calculate it in ms use (1000 / required_ms).\n"
"#Example: 100 ms = MAX_UPDATE_RATE=10.0, because 1000.0 ms / 100.0 ms = 10.0 Hz\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#OPTIONAL: Debug level for this transaction only.\n"
"#See INIT_DEBUG parameter above.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "DEBUG=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#While DEBUGGING transactions note the returned \"ret[]\" value correspond to:\n"
"#/* Modbus protocol exceptions */\n"
"#ILLEGAL_FUNCTION        -0x01 the FUNCTION code received in the query is not allowed or invalid.\n"
"#ILLEGAL_DATA_ADDRESS    -0x02 the DATA ADDRESS received in the query is not an allowable address for the slave or is invalid.\n"
"#ILLEGAL_DATA_VALUE      -0x03 a VALUE contained in the data query field is not an allowable value or is invalid.\n"
"#SLAVE_DEVICE_FAILURE    -0x04 SLAVE (or MASTER) device unrecoverable FAILURE while attempting to perform the requested action.\n"
"#SERVER_FAILURE          -0x04 (see above).\n"
"#ACKNOWLEDGE             -0x05 This response is returned to PREVENT A TIMEOUT in the master.\n"
"#                              A long duration of time is required to process the request in the slave.\n"
"#SLAVE_DEVICE_BUSY       -0x06 The slave (or server) is BUSY. Retrasmit the request later.\n"
"#SERVER_BUSY             -0x06 (see above).\n"
"#NEGATIVE_ACKNOWLEDGE    -0x07 Unsuccessful programming request using function code 13 or 14.\n"
"#MEMORY_PARITY_ERROR     -0x08 SLAVE parity error in MEMORY.\n"
"#GATEWAY_PROBLEM_PATH    -0x0A (-10) Gateway path(s) not available.\n"
"#GATEWAY_PROBLEM_TARGET  -0x0B (-11) The target device failed to repond (generated by master, not slave).\n"
"#/* Program or connection */\n"
"#COMM_TIME_OUT           -0x0C (-12)\n"
"#PORT_SOCKET_FAILURE     -0x0D (-13)\n"
"#SELECT_FAILURE          -0x0E (-14)\n"
"#TOO_MANY_DATAS          -0x0F (-15)\n"
"#INVALID_CRC             -0x10 (-16)\n"
"#INVALID_EXCEPTION_CODE  -0x11 (-17)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_01]\n"
"MB_TX_CODE=fnct_02_read_discrete_inputs\n"
"FIRST_ELEMENT=1024\n"
"NELEMENTS=24\n"
"HAL_TX_NAME=remoteIOin\n"
"MAX_UPDATE_RATE=0.0\n"
"DEBUG=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_02]\n"
"MB_TX_CODE=fnct_15_write_multiple_coils\n"
"FIRST_ELEMENT=1280\n"
"NELEMENTS=8\n"
"HAL_TX_NAME=remoteIOout\n"
"MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_03]\n"
"LINK_TYPE=serial\n"
"SERIAL_PORT=/dev/ttyS0\n"
"SERIAL_BAUD=115200\n"
"SERIAL_BITS=8\n"
"SERIAL_PARITY=none\n"
"SERIAL_STOP=2\n"
"SERIAL_DELAY_MS=50\n"
"MB_SLAVE_ID=1\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=1\n"
"NELEMENTS=2\n"
"HAL_TX_NAME=XDrive01\n"
"MAX_UPDATE_RATE=0.0\n"
"DEBUG=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_04]\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=4\n"
"NELEMENTS=3\n"
"HAL_TX_NAME=XDrive02\n"
"MAX_UPDATE_RATE=0.0\n"
"DEBUG=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_05]\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=9\n"
"NELEMENTS=1\n"
"HAL_TX_NAME=XDrive03\n"
"MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_06]\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=1024\n"
"NELEMENTS=1\n"
"HAL_TX_NAME=XDrive04\n"
"MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_07]\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=1030\n"
"NELEMENTS=2\n"
"HAL_TX_NAME=XDrive05\n"
"MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[TRANSACTION_08]\n"
"MB_TX_CODE=fnct_03_read_holding_registers\n"
"FIRST_ELEMENT=1033\n"
"NELEMENTS=1\n"
"HAL_TX_NAME=XDrive06\n"
"MAX_UPDATE_RATE=0.0\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Opto22 Driver"
msgstr ""

#. type: Plain text
msgid "PCI AC5 ADAPTER CARD / HAL DRIVER"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Adapter Card"
msgstr ""

#. type: Plain text
msgid ""
"This is a card made by Opto22 for adapting the PCI port to solid state relay "
"racks such as their standard or G4 series. It has 2 ports that can control "
"up to 24 points each and has 4 on board LEDs. The ports use 50 pin "
"connectors the same as Mesa boards. Any relay racks/breakout boards that "
"work with Mesa Cards should work with this card with the understanding any "
"encoder counters, PWM, etc., would have to be done in software. The AC5 does "
"not have any 'smart' logic on board, it is just an adapter."
msgstr ""

#. type: Plain text
msgid "See the manufacturer's website for more info:"
msgstr ""

#. type: Plain text
msgid "http://www.opto22.com/site/pr_details.aspx?cid=4&item=PCI-AC5"
msgstr ""

#. type: Plain text
msgid ""
"I would like to thank Opto22 for releasing info in their manual, easing the "
"writing of this driver!"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Driver "
msgstr ""

#. type: Plain text
msgid ""
"This driver is for the PCI AC5 card and will not work with the ISA AC5 card. "
"The HAL driver is a realtime module. It will support 4 cards as is (more "
"cards are possible with a change in the source code). Load the basic driver "
"like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt opto_ac5\n"
msgstr ""

#. type: Plain text
msgid ""
"This will load the driver which will search for max 4 boards. It will set I/"
"O of each board's 2 ports to a default setting. The default configuration is "
"for 12 inputs then 12 outputs. The pin name numbers correspond to the "
"position on the relay rack. For example the pin names for the default I/O "
"setting of port 0 would be:"
msgstr ""

#. type: Plain text
msgid "'opto_ac5.0.port0.in-00' - They would be numbered from 00 to 11"
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.0.port0.out-12' - They would be numbered 12 to 23 port 1 would be "
"the same."
msgstr ""

#. type: Plain text
msgid "'opto_ac5.[BOARDNUMBER].port[PORTNUMBER].in-[PINNUMBER] OUT bit' -"
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.[BOARDNUMBER].port[PORTNUMBER].in-[PINNUMBER]-not OUT bit' - "
"Connect a HAL bit signal to this pin to read an I/O point from the card. The "
"PINNUMBER represents the position in the relay rack. Eg.  PINNUMBER 0 is "
"position 0 in a Opto22 relay rack and would be pin 47 on the 50 pin header "
"connector. The -not pin is inverted so that LOW gives TRUE and HIGH gives "
"FALSE."
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.[BOARDNUMBER].port[PORTNUMBER].out-[PINNUMBER] IN bit' - Connect a "
"HAL bit signal to this pin to write to an I/O point of the card. The "
"PINNUMBER represents the position in the relay rack.Eg.  PINNUMBER 23 is "
"position 23 in a Opto22 relay rack and would be pin 1 on the 50 pin header "
"connector."
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.[BOARDNUMBER].led[NUMBER] OUT bit' - Turns one of the 4 onboard "
"LEDs on/off. LEDs are numbered 0 to 3."
msgstr ""

#. type: Plain text
msgid ""
"BOARDNUMBER can be 0-3 PORTNUMBER can be 0 or 1. Port 0 is closest to the "
"card bracket."
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.[BOARDNUMBER].port[PORTNUMBER].out-[PINNUMBER]-invert W bit' - "
"When TRUE, invert the meaning of the corresponding -out pin so that TRUE "
"gives LOW and FALSE gives HIGH."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "FUNCTIONS "
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.0.digital-read' - Add this to a thread to read all the input "
"points."
msgstr ""

#. type: Plain text
msgid ""
"'opto_ac5.0.digital-write' - Add this to a thread to write all the output "
"points and LEDs."
msgstr ""

#. type: Plain text
msgid ""
"For example the pin names for the default I/O setting of port 0 would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "opto_ac5.0.port0.in-00\n"
msgstr ""

#. type: Plain text
msgid "They would be numbered from 00 to 11"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "opto_ac5.0.port0.out-12\n"
msgstr ""

#. type: Plain text
msgid "They would be numbered 12 to 23 port 1 would be the same."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuring I/O Ports"
msgstr ""

#. type: Plain text
msgid "To change the default setting load the driver something like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt opto_ac5 portconfig0=0xffff portconfig1=0xff0000\n"
msgstr ""

#. type: Plain text
msgid ""
"Of course changing the numbers to match the I/O you would like. Each port "
"can be set up different."
msgstr ""

#. type: Plain text
msgid ""
"Here's how to figure out the number: The configuration number represents a "
"32 bit long code to tell the card which I/O points are output vrs input. The "
"lower 24 bits are the I/O points of one port. The 2 highest bits are for 2 "
"of the on board LEDs. A one in any bit position makes the I/O point an "
"output. The two highest bits must be output for the LEDs to work. The driver "
"will automatically set the two highest bits for you, we won't talk about "
"them."
msgstr ""

#. type: Plain text
msgid ""
"The easiest way to do this is to fire up the calculator under APPLICATIONS/"
"ACCESSORIES. Set it to scientific (click view). Set it BINARY (radio button "
"Bin). Press 1 for every output you want and/or zero for every input. "
"Remember that HAL pin 00 corresponds to the rightmost bit. 24 numbers "
"represent the 24 I/O points of one port. So for the default setting (12 "
"inputs then 12 outputs) you would push 1 twelve times (that's the outputs) "
"then 0 twelve times (that's the inputs). Notice the first I/O point is the "
"lowest (rightmost) bit.  (that bit corresponds to HAL pin 00 .looks "
"backwards) You should have 24 digits on the screen. Now push the Hex radio "
"button. The displayed number (fff000) is the configport number ( put a '0x' "
"in front of it designating it as a HEX number)."
msgstr ""

#. type: Plain text
msgid ""
"Another example: To set the port for 8 outputs and 16 inputs (the same as a "
"Mesa card). Here is the 24 bits represented in a BINARY number. Bit 1 is the "
"rightmost number."
msgstr ""

#. type: Plain text
msgid "000000000000000011111111"
msgstr ""

#. type: Plain text
msgid "16 zeros for the 16 inputs and 8 ones for the 8 outputs"
msgstr ""

#. type: Plain text
msgid ""
"Which converts to FF on the calculator so 0xff is the number to use for "
"portconfig0 and/or portconfig1 when loading the driver."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pin Numbering"
msgstr ""

#. type: Plain text
msgid ""
"HAL pin 00 corresponds to bit 1 (the rightmost) which represents position 0 "
"on an Opto22 relay rack. HAL pin 01 corresponds to bit 2 (one spot to the "
"left of the rightmost) which represents position 1 on an Opto22 relay rack. "
"HAL pin 23 corresponds to bit 24 (the leftmost) which represents position 23 "
"on an Opto22 relay rack."
msgstr ""

#. type: Plain text
msgid ""
"HAL pin 00 connects to pin 47 on the 50 pin connector of each port.  HAL pin "
"01 connects to pin 45 on the 50 pin connector of each port.  HAL pin 23 "
"connects to pin 1 on the 50 pin connector of each port."
msgstr ""

#. type: Plain text
msgid ""
"Note that Opto22 and Mesa use opposite numbering systems: Opto22 position 23 "
"= connector pin 1, and the position goes down as the connector pin number "
"goes up. Mesa Hostmot2 position 1 = connector pin 1, and the position number "
"goes up as the connector pin number goes up."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Pico Drivers"
msgstr ""

#. type: Plain text
msgid ""
"Pico Systems has a family of boards for doing analog servo, stepper, and PWM "
"(digital) servo control. The boards connect to the PC through a parallel "
"port working in EPP mode. Although most users connect one board to a "
"parallel port, in theory any mix of up to 8 or 16 boards can be used on a "
"single parport. One driver serves all types of boards. The final mix of I/O "
"depends on the connected board(s). The driver doesn't distinguish between "
"boards, it simply numbers I/O channels (encoders, etc) starting from 0 on "
"the first board.  The driver is named hal_ppmc.ko The analog servo interface "
"is also called the PPMC for Parallel Port Motion Control.  There is also the "
"Universal Stepper Controller, abbreviated the USC.  And the Universal PWM "
"Controller, or UPC."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_ppmc port_addr=<addr1>[,<addr2>[,<addr3>...]]\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'port_addr' parameter tells the driver what parallel port(s) to check. "
"By default, '<addr1>' is 0x0378, and '<addr2>' and following are not used. "
"The driver searches the entire address space of the enhanced parallel "
"port(s) at 'port_addr', looking for any board(s) in the PPMC family. It then "
"exports HAL pins for whatever it finds. During loading (or attempted "
"loading) the driver prints some useful debugging messages to the kernel log, "
"which can be viewed with 'dmesg'."
msgstr ""

#. type: Plain text
msgid ""
"Up to 3 parport buses may be used, and each bus may have up to 8 (or "
"possibly 16 PPMC) devices on it."
msgstr ""

#. type: Plain text
msgid ""
"There are several options that can be specified on the loadrt command line.  "
"First, the USC and UPC can have an 8-bit DAC added for spindle speed control "
"and similar functions.  This can be specified with the "
"extradac='0xnn[,0xmm]' parameter.  The part enclosed in [ ] allows you to "
"specify this option on more than one board of the system.  The first hex "
"digit tells which EPP bus is being referred to, it corresponds to the order "
"of the port addresses in the port_addr parameter, where <addr1> would be "
"zero here.  So, for the first EPP bus, the first USC or UPC board would be "
"described as '0x00', the second USC or UPC on the same bus would be '0x02'.  "
"(Note that each USC or UPC takes up two addresses, so if one is at 00, the "
"next would have to be 02.)"
msgstr ""

#. type: Plain text
msgid ""
"Alternatively, the 8 digital output pins can be used as additional digital "
"outputs, it works the same way as above with the syntax : extradout=0xnn'.  "
"The extradac and extradout options are mutually exclusive on each board, you "
"can only specify one."
msgstr ""

#. type: Plain text
msgid ""
"The UPC and PPMC encoder boards can timestamp the arrival of encoder counts "
"to refine the derivation of axis velocity.  This derived velocity can be fed "
"to the PID hal component to produce smoother D term response.  The syntax "
"is : timestamp='0xnn[,0xmm]', this works the same way as above to select "
"which board is being configured.  Default is to not enable the timestamp "
"option.  If you put this option on the command line, it enables the option.  "
"The first 'n' selects the EPP bus, the second one matches the address of the "
"board having the option enabled.  The driver checks the revision level of "
"the board to make sure it has firmware supporting the feature, and produces "
"an error message if the board does not support it."
msgstr ""

#. type: Plain text
msgid ""
"The PPMC encoder board has an option to select the encoder digital filter "
"frequeency.  (The UPC has the same ability via DIP switches on the board.)  "
"Since the PPMC encoder board doesn't have these extra DIP switches, it needs "
"to be selected via a command-line option.  By default, the filter runs at 1 "
"MHz, allowing encoders to be counted up to about 900 KHz (depending on noise "
"and quadrature accuracy of the encoder.)  The options are 1, 2.5, 5 and 10 "
"MHz.  These are set with a parameter of 1,2,5 and 10 (decimal) which is "
"specified as the hex digit \"A\".  These are specified in a manner similar "
"to the above options, but with the frequency setting to the left of the bus/"
"address digits.  So, to set 5 MHz on the encoder board at address 3 on the "
"first EPP bus, you would write : enc_clock='0x503'"
msgstr ""

#. type: Plain text
msgid ""
"It was recently discovered that some parallel port chips would not work with "
"the ppmc driver.  Especially, the Oxford OXPCIe952 chip on the SIIG PCIe "
"parallel port cards had this trouble.  The ppmc driver in all LinuxCNC "
"versions starting from 2.7.8 have been corrected for this problem by "
"default.  However, this possibly could cause problems with really old EPP "
"parallel port hardware, so there is a command line option to go back to the "
"previous behavior.  The new behavior is set by default, or by adding the "
"parameter epp_dir=0 on the command line.  To get the old behavior, add "
"epp_dir=1 to the command line.  All parallel ports I have here work with the "
"new default behavior.  As on the other parameters, it is possible to give a "
"list, like epp_dir=1,0,1 to set different settings for each of up to 3 "
"parallel ports."
msgstr ""

#. type: Plain text
msgid ""
"In the following pins, parameters, and functions, <port> is the parallel "
"port ID. According to the naming conventions the first port should always "
"have an ID of zero.  All the boards have some method of setting the address "
"on the EPP bus.  USC and UPC have simple provisions for only two addresses, "
"but jumper foil cuts allow up to 4 boards to be addressed.  The PPMC boards "
"have 16 possible addresses.  In all cases, the driver enumerates the boards "
"by type and exports the appropriate HAL pins.  For instance, the encoders "
"will be enumerated from zero up, in the same order as the address switches "
"on the board specify.  So, the first board will have encoders 0 -- 3, the "
"second board would have encoders 4 -- 7.  The first column after the bullet "
"tells which boards will have this HAL pin or parameter associated with it.  "
"All means that this pin is available on all three board types.  Option means "
"that this pin will only be exported when that option is enabled by an "
"optional parameter in the loadrt HAL command.  These options require the "
"board to have a sufficient revision level to support the feature."
msgstr ""

#. type: Plain text
msgid "'(All s32 output) ppmc.<port>.encoder.<channel>.count' - Encoder"
msgstr ""

#. type: Plain text
msgid "position, in counts."
msgstr ""

#. type: Plain text
msgid "'(All s32 output) ppmc.<port>.encoder.<channel>.delta' - Change in"
msgstr ""

#. type: Plain text
msgid "counts since last read, in raw encoder count units."
msgstr ""

#. type: Plain text
msgid "'(All float output) 'ppmc.<port>.encoder.<channel>.velocity' -"
msgstr ""

#. type: Plain text
msgid ""
"Velocity scaled in user units per second. On PPMC and USC this is derived "
"from raw encoder counts per servo period, and hence is affected by encoder "
"granularity. On UPC boards with the 8/21/09 and later firmware, velocity "
"estimation by timestamping encoder counts can be used to improve the "
"smoothness of this velocity output. This can be fed to the PID HAL component "
"to produce a more stable servo response. This function has to be enabled in "
"the HAL command line that starts the PPMC driver, with the timestamp=0x00 "
"option."
msgstr ""

#. type: Plain text
msgid "'(All float output) ppmc.<port>.encoder.<channel>.position' -"
msgstr ""

#. type: Plain text
msgid "Encoder position, in user units."
msgstr ""

#. type: Plain text
msgid "'(All bit bidir) ppmc.<port>.encoder.<channel>.index-enable' -"
msgstr ""

#. type: Plain text
msgid ""
"Connect to joint.#.index-enable for home-to-index. This is a bidirectional "
"HAL signal. Setting it to true causes the encoder hardware to reset the "
"count to zero on the next encoder index pulse.  The driver will detect this "
"and set the signal back to false."
msgstr ""

#. type: Plain text
msgid "'(PPMC float output) ppmc.<port>.DAC.<channel>.value' - sends a"
msgstr ""

#. type: Plain text
msgid ""
"signed value to the 16-bit Digital to Analog Converter on the PPMC DAC16 "
"board commanding the analog output voltage of that DAC channel."
msgstr ""

#. type: Plain text
msgid "'(UPC bit input) ppmc.<port>.pwm.<channel>.enable' - Enables a"
msgstr ""

#. type: Plain text
msgid "PWM generator."
msgstr ""

#. type: Plain text
msgid "'(UPC float input) ppmc.<port>.pwm.<channel>.value' - Value"
msgstr ""

#. type: Plain text
msgid ""
"which determines the duty cycle of the PWM waveforms. The value is divided "
"by 'pwm.<channel>.scale', and if the result is 0.6 the duty cycle will be "
"60%, and so on.  Negative values result in the duty cycle being based on the "
"absolute value, and the direction pin is set to indicate negative."
msgstr ""

#. type: Plain text
msgid "'(USC bit input) ppmc.<port>.stepgen.<channel>.enable' -"
msgstr ""

#. type: Plain text
msgid "Enables a step pulse generator."
msgstr ""

#. type: Plain text
msgid "'(USC float input) ppmc.<port>.stepgen.<channel>.velocity' -"
msgstr ""

#. type: Plain text
msgid ""
"Value which determines the step frequency. The value is multiplied by "
"'stepgen.<channel>.scale' , and the result is the frequency in steps per "
"second. Negative values result in the frequency being based on the absolute "
"value, and the direction pin is set to indicate negative."
msgstr ""

#. type: Plain text
msgid "'(All bit output) ppmc.<port>.din.<channel>.in' - State of digital"
msgstr ""

#. type: Plain text
msgid "'(All bit output) ppmc.<port>.din.<channel>.in-not' - Inverted"
msgstr ""

#. type: Plain text
msgid "state of digital input pin, see canonical digital input."
msgstr ""

#. type: Plain text
msgid "'(All bit input) ppmc.<port>.dout.<channel>.out' - Value to be"
msgstr ""

#. type: Plain text
msgid "written to digital output, see canonical digital output."
msgstr ""

#. type: Plain text
msgid "'(Option float input) ppmc.<port>.DAC8-<channel>.value' - Value to"
msgstr ""

#. type: Plain text
msgid ""
"be written to analog output, range from 0 to 255. This sends 8 output bits "
"to J8, which should have a Spindle DAC board connected to it. 0 corresponds "
"to zero Volts, 255 corresponds to 10 Volts. The polarity of the output can "
"be set for always minus, always plus, or can be controlled by the state of "
"SSR1 (plus when on) and SSR2 (minus when on). You must specify extradac = "
"0x00 on the HAL command line that loads the PPMC driver to enable this "
"function on the first USC ur UPC board."
msgstr ""

#. type: Plain text
msgid "'(Option bit input) ppmc.<port>.dout.<channel>.out' - Value to be"
msgstr ""

#. type: Plain text
msgid ""
"written to one of the 8 extra digital output pins on J8. You must specify "
"extradout = 0x00 on the HAL command line that loads the ppmc driver to "
"enable this function on the first USC or UPC board. extradac and extradout "
"are mutually exclusive features as they use the same signal lines for "
"different purposes.  These output pins will be enumerated after the standard "
"digital outputs of the board."
msgstr ""

#. type: Plain text
msgid "'(All float) ppmc.<port>.encoder.<channel>.scale' - The number of"
msgstr ""

#. type: Plain text
msgid "counts / user unit (to convert from counts to units)."
msgstr ""

#. type: Plain text
msgid "'(UPC float) ppmc.<port>.pwm.<channel-range>.freq' - The PWM"
msgstr ""

#. type: Plain text
msgid ""
"carrier frequency, in Hz. Applies to a group of four consecutive PWM "
"generators, as indicated by '<channel-range>'. Minimum is 610Hz, maximum is "
"500KHz."
msgstr ""

#. type: Plain text
msgid "'(PPMC float) ppmc.<port>.DAC.<channel>.scale' - Sets scale"
msgstr ""

#. type: Plain text
msgid ""
"of DAC16 output channel such that an output value equal to the 1/scale value "
"will produce an output of + or - value Volts.  So, if the scale parameter is "
"0.1 and you send a value of 0.5, the output will be 5.0 Volts."
msgstr ""

#. type: Plain text
msgid "'(UPC float) ppmc.<port>.pwm.<channel>.scale' - Scaling for PWM"
msgstr ""

#. type: Plain text
msgid ""
"generator. If 'scale' is X, then the duty cycle will be 100% when the "
"'value' pin is X (or -X)."
msgstr ""

#. type: Plain text
msgid "'(UPC float) ppmc.<port>.pwm.<channel>.max-dc' - Maximum duty"
msgstr ""

#. type: Plain text
msgid "cycle, from 0.0 to 1.0."
msgstr ""

#. type: Plain text
msgid "'(UPC float) ppmc.<port>.pwm.<channel>.min-dc' - Minimum duty"
msgstr ""

#. type: Plain text
msgid "'(UPC float) ppmc.<port>.pwm.<channel>.duty-cycle' - Actual duty"
msgstr ""

#. type: Plain text
msgid "cycle (used mostly for troubleshooting.)"
msgstr ""

#. type: Plain text
msgid "'(UPC bit) ppmc.<port>.pwm.<channel>.bootstrap' - If true, the"
msgstr ""

#. type: Plain text
msgid ""
"PWM generator will generate a short sequence of pulses of both polarities "
"when E-stop goes false, to reset the shutdown latches on some PWM servo "
"drives."
msgstr ""

#. type: Plain text
msgid "'(USC u32) ppmc.<port>.stepgen.<channel-range>.setup-time' - Sets"
msgstr ""

#. type: Plain text
msgid ""
"minimum time between direction change and step pulse, in units of 100ns. "
"Applies to a group of four consecutive step generators, as indicated by "
"'<channel-range>'. Values between 200 ns and 25.5 us can be specified."
msgstr ""

#. type: Plain text
msgid "'(USC u32) ppmc.<port>.stepgen.<channel-range>.pulse-width' - Sets"
msgstr ""

#. type: Plain text
msgid ""
"width of step pulses, in units of 100ns. Applies to a group of four "
"consecutive step generators, as indicated by '<channel-range>'.  Values "
"between 200 ns and 25.5 us may be specified."
msgstr ""

#. type: Plain text
msgid "'(USC u32) ppmc.<port>.stepgen.<channel-range>.pulse-space-min' - Sets"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"minimum time between pulses, in units of 100ns. \n"
"Applies to a group of four consecutive step generators, as indicated by\n"
"'<channel-range>'. Values between 200 ns and 25.5 us can be specified.\n"
"The maximum step rate is:\n"
"image:images/pico-ppmc-math.png[]    \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'(USC float) ppmc.<port>.stepgen.<channel>.scale' - Scaling for\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"step pulse generator. The step frequency in Hz is the\n"
"absolute value of 'velocity' * 'scale'.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'(USC float) ppmc.<port>.stepgen.<channel>.max-vel' - The maximum\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"value for 'velocity'. Commands greater than 'max-vel'  will be clamped.\n"
"Also applies to negative values. (The absolute value is clamped.)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'(USC float) ppmc.<port>.stepgen.<channel>.frequency' - Actual\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "step pulse frequency in Hz (used mostly for troubleshooting.)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'(Option float) ppmc.<port>.DAC8.<channel>.scale' - Sets scale\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"of extra DAC output such that an output value equal to\n"
"scale gives a magnitude of 10.0 V output. (The sign of the output is\n"
"set by jumpers and/or other digital outputs.)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "'(Option bit) ppmc.<port>.dout.<channel>.invert' - Inverts a\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "digital output, see canonical digital output.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "digital output pin of J8, see canonical digital output.\n"
msgstr ""

#. type: Plain text
msgid "'(All funct) ppmc.<port>.read' - Reads all inputs (digital inputs"
msgstr ""

#. type: Plain text
msgid ""
"and encoder counters) on one port. These reads are organized into blocks of "
"contiguous registers to be read in a block to minimize CPU overhead."
msgstr ""

#. type: Plain text
msgid "'(All funct) ppmc.<port>.write' - Writes all outputs (digital"
msgstr ""

#. type: Plain text
msgid ""
"outputs, stepgens, PWMs) on one port.  These writes are organized into "
"blocks of contiguous registers to be written in a block to minimize CPU "
"overhead."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Pluto P Driver"
msgstr ""

#. type: Plain text
msgid "The Pluto-P is a FPGA board featuring the ACEX1K chip from Altera."
msgstr ""

#. type: Plain text
msgid "A Pluto-P board"
msgstr ""

#. type: Plain text
msgid ""
"An EPP-compatible parallel port, configured for EPP mode in the system BIOS "
"or a PCI EPP compatible parallel port card."
msgstr ""

#. type: Plain text
msgid ""
"The Pluto P board requires EPP mode. Netmos98xx chips do not work in EPP "
"mode.  The Pluto P board will work on some computers and not on others.  "
"There is no known pattern to which computers work and which don't work."
msgstr ""

#. type: Plain text
msgid ""
"For more information on PCI EPP compatible parallel port cards see the "
"http://wiki.linuxcnc.org/cgi-bin/wiki.pl?"
"LinuxCNC_Supported_Hardware[LinuxCNC Supported Hardware] page on the wiki."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Connectors"
msgstr ""

#. type: Plain text
msgid "The Pluto-P board is shipped with the left connector presoldered, with"
msgstr ""

#. type: Plain text
msgid ""
"the key in the indicated position. The other connectors are unpopulated. "
"There does not seem to be a standard 12-pin IDC connector, but some of the "
"pins of a 16P connector can hang off the board next to QA3/QZ3."
msgstr ""

#. type: Plain text
msgid "The bottom and right connectors are on the same .1\" grid, but the left"
msgstr ""

#. type: Plain text
msgid ""
"connector is not. If OUT2â¦OUT9 are not required, a single IDC connector can "
"span the bottom connector and the bottom two rows of the right connector."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Physical Pins"
msgstr ""

#. type: Plain text
msgid "Read the ACEX1K datasheet for information about input and output"
msgstr ""

#. type: Plain text
msgid ""
"voltage thresholds. The pins are all configured in 'LVTTL/LVCMOS' mode and "
"are generally compatible with 5V TTL logic."
msgstr ""

#. type: Plain text
msgid ""
"Before configuration and after properly exiting LinuxCNC, all Pluto-P pins"
msgstr ""

#. type: Plain text
msgid ""
"are tristated with weak pull-ups (20k-ohms min, 50k-ohms max). If the "
"watchdog timer is enabled (the default), these pins are also tristated after "
"an interruption of communication between LinuxCNC and the board. The "
"watchdog timer takes approximately 6.5ms to activate. However, software bugs "
"in the pluto_servo firmware or LinuxCNC can leave the Pluto-P pins in an "
"undefined state."
msgstr ""

#. type: Plain text
msgid "In pwm+dir mode, by default dir is HIGH for negative values and LOW"
msgstr ""

#. type: Plain text
msgid ""
"for positive values. To select HIGH for positive values and LOW for negative "
"values, set the corresponding dout-NN-invert parameter TRUE to invert the "
"signal."
msgstr ""

#. type: Plain text
msgid "The index input is triggered on the rising edge. Initial testing has"
msgstr ""

#. type: Plain text
msgid ""
"shown that the QZx inputs are particularly noise sensitive, due to being "
"polled every 25ns. Digital filtering has been added to filter pulses shorter "
"than 175ns (seven polling times). Additional external filtering on all input "
"pins, such as a Schmitt buffer or inverter, RC filter, or differential "
"receiver (if applicable) is recommended."
msgstr ""

#. type: Plain text
msgid "The IN1â¦IN7 pins have 22-ohm series resistors to their associated FPGA"
msgstr ""

#. type: Plain text
msgid ""
"pins. No other pins have any sort of protection for out-of-spec voltages or "
"currents. It is up to the integrator to add appropriate isolation and "
"protection. Traditional parallel port optoisolator boards do not work with "
"pluto_servo due to the bidirectional nature of the EPP protocol."
msgstr ""

#. type: Plain text
msgid ""
"When the device is unprogrammed, the LED glows faintly. When the device is "
"programmed, the LED glows according to the duty cycle of PWM0 ('LED' = 'UP0' "
"'xor' 'DOWN0') or STEPGEN0 ('LED' = 'STEP0' 'xor' 'DIR0')."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Power"
msgstr ""

#. type: Plain text
msgid ""
"A small amount of current may be drawn from VCC. The available current "
"depends on the unregulated DC input to the board. Alternately, regulated "
"+3.3VDC may be supplied to the FPGA through these VCC pins.  The required "
"current is not yet known, but is probably around 50mA plus I/O current."
msgstr ""

#. type: Plain text
msgid ""
"The regulator on the Pluto-P board is a low-dropout type. Supplying 5V at "
"the power jack will allow the regulator to work properly."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PC interface"
msgstr ""

#. type: Plain text
msgid "Only a single pluto_servo or pluto_step board is supported."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Rebuilding the FPGA firmware"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The 'src/hal/drivers/pluto_servo_firmware/' and\n"
"'src/hal/drivers/pluto_step_firmware/'  subdirectories contain the\n"
"Verilog source code plus additional files\n"
"used by Quartus for the FPGA firmwares. Altera's Quartus II software is\n"
"required to rebuild the FPGA firmware. To rebuild the firmware from the\n"
" .hdl and other source files, open the '.qpf' file and press CTRL-L.\n"
"Then, recompile LinuxCNC.\n"
msgstr ""

#. type: Plain text
msgid ""
"Like the HAL hardware driver, the FPGA firmware is licensed under the terms "
"of the GNU General Public License."
msgstr ""

#. type: Plain text
msgid ""
"The gratis version of Quartus II runs only on Microsoft Windows, although "
"there is apparently a paid version that runs on Linux."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "For more information"
msgstr ""

#. type: Plain text
msgid ""
"Some additional information about it is available from http://www.knjn.com/"
"FPGA-Parallel.html[KNJC LLC] and from http://emergent.unpy."
"net/01165081407[the developer's blog]."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pluto Servo"
msgstr ""

#. type: Plain text
msgid ""
"The pluto_servo system is suitable for control of a 4-axis CNC mill with "
"servo motors, a 3-axis mill with PWM spindle control, a lathe with spindle "
"encoder, etc. The large number of inputs allows a full set of limit switches."
msgstr ""

#. type: Plain text
msgid "This driver features:"
msgstr ""

#. type: Plain text
msgid ""
"4 quadrature channels with 40MHz sample rate. The counters operate in '4x' "
"mode. The maximum useful quadrature rate is 8191 counts per LinuxCNC servo "
"cycle, or about 8MHz for LinuxCNC's default 1ms servo rate."
msgstr ""

#. type: Plain text
msgid ""
"4 PWM channels, 'up/down' or 'pwm+dir' style. 4095 duty cycles from -100% to "
"+100%, including 0%. The PWM period is approximately 19.5kHz (40MHz / 2047). "
"A PDM-like mode is also available."
msgstr ""

#. type: Plain text
msgid ""
"18 digital outputs: 10 dedicated, 8 shared with PWM functions.  (Example: A "
"lathe with unidirectional PWM spindle control may use 13 total digital "
"outputs)"
msgstr ""

#. type: Plain text
msgid ""
"20 digital inputs: 8 dedicated, 12 shared with Quadrature functions.  "
"(Example: A lathe with index pulse only on the spindle may use 13 total "
"digital inputs)"
msgstr ""

#. type: Plain text
msgid ""
"EPP communication with the PC. The EPP communication typically takes around "
"100 us on machines tested so far, enabling servo rates above 1kHz."
msgstr ""

#. type: Plain text
msgid ""
"'UPx' - The 'up' (up/down mode) or 'pwm' (pwm+direction mode) signal from PWM"
msgstr ""

#. type: Plain text
msgid ""
"generator X. May be used as a digital output if the corresponding PWM "
"channel is unused, or the output on the channel is always negative. The "
"corresponding digital output invert may be set to TRUE to make UPx active "
"low rather than active high."
msgstr ""

#. type: Plain text
msgid ""
"'DNx' - The 'down' (up/down mode) or 'direction' (pwm+direction mode) signal"
msgstr ""

#. type: Plain text
msgid ""
"from PWM generator X. May be used as a digital output if the corresponding "
"PWM channel is unused, or the output on the channel is never negative. The "
"corresponding digital output invert may be set to TRUE to make DNx active "
"low rather than active high."
msgstr ""

#. type: Plain text
msgid ""
"'QAx, QBx' - The A and B signals for Quadrature counter X. May be used as a "
"digital"
msgstr ""

#. type: Plain text
msgid "input if the corresponding quadrature channel is unused."
msgstr ""

#. type: Plain text
msgid "'QZx' - The Z (index) signal for quadrature counter X. May be used as a"
msgstr ""

#. type: Plain text
msgid ""
"digital input if the index feature of the corresponding quadrature channel "
"is unused."
msgstr ""

#. type: Plain text
msgid "'INx' - Dedicated digital input #x"
msgstr ""

#. type: Plain text
msgid "'OUTx' - Dedicated digital output #x"
msgstr ""

#. type: Plain text
msgid "'GND' - Ground"
msgstr ""

#. type: Plain text
msgid "'VCC' - +3.3V regulated DC"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pluto-Servo Pinout(((pluto-servo pinout)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pluto-Servo Pinout"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pluto-pinout.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pluto-Servo Alternate Pin Functions"
msgstr ""

#. type: Table
#, no-wrap
msgid "Primary function"
msgstr ""

#. type: Table
#, no-wrap
msgid "Alternate Function"
msgstr ""

#. type: Table
#, no-wrap
msgid "Behavior if both functions used"
msgstr ""

#. type: Table
#, no-wrap
msgid "*UP0*"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM0"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-0-pwmdir is TRUE, this pin is the PWM output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT10"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with UP0 or PWM0"
msgstr ""

#. type: Table
#, no-wrap
msgid "*UP1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM1"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-1-pwmdir is TRUE, this pin is the PWM output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT12"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with UP1 or PWM1"
msgstr ""

#. type: Table
#, no-wrap
msgid "*UP2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM2"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-2-pwmdir is TRUE, this pin is the PWM output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT14"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with UP2 or PWM2"
msgstr ""

#. type: Table
#, no-wrap
msgid "*UP3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "PWM3"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-3-pwmdir is TRUE, this pin is the PWM output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT16"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with UP3 or PWM3"
msgstr ""

#. type: Table
#, no-wrap
msgid "*DN0*"
msgstr ""

#. type: Table
#, no-wrap
msgid "DIR0"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-0-pwmdir is TRUE, this pin is the DIR output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT11"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with DN0 or DIR0"
msgstr ""

#. type: Table
#, no-wrap
msgid "*DN1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "DIR1"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-1-pwmdir is TRUE, this pin is the DIR output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT13"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with DN1 or DIR1"
msgstr ""

#. type: Table
#, no-wrap
msgid "*DN2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "DIR2"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-2-pwmdir is TRUE, this pin is the DIR output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT15"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with DN2 or DIR2"
msgstr ""

#. type: Table
#, no-wrap
msgid "*DN3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "DIR3"
msgstr ""

#. type: Table
#, no-wrap
msgid "When pwm-3-pwmdir is TRUE, this pin is the DIR output"
msgstr ""

#. type: Table
#, no-wrap
msgid "OUT17"
msgstr ""

#. type: Table
#, no-wrap
msgid "XOR'd with DN3 or DIR3"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QZ0*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN8"
msgstr ""

#. type: Table
#, no-wrap
msgid "Read same value"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QZ1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN9"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QZ2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN10"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QZ3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN11"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QA0*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN12"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QA1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN13"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QA2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN14"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QA3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN15"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QB0*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN16"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QB1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN17"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QB2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN18"
msgstr ""

#. type: Table
#, no-wrap
msgid "*QB3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "IN19"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Input latching and output updating"
msgstr ""

#. type: Plain text
msgid "PWM duty cycles for each channel are updated at different times."
msgstr ""

#. type: Plain text
msgid "Digital outputs OUT0 through OUT9 are all updated at the same time."
msgstr ""

#. type: Plain text
msgid ""
"Digital outputs OUT10 through OUT17 are updated at the same time as the pwm "
"function they are shared with."
msgstr ""

#. type: Plain text
msgid "Digital inputs IN0 through IN19 are all latched at the same time."
msgstr ""

#. type: Plain text
msgid "Quadrature positions for each channel are latched at different times."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL Functions, Pins and Parameters"
msgstr ""

#. type: Plain text
msgid ""
"A list of all 'loadrt' arguments, HAL function names, pin names and "
"parameter names is in the manual page, 'pluto_servo.9'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Compatible driver hardware"
msgstr ""

#. type: Plain text
msgid ""
"A schematic for a 2A, 2-axis PWM servo amplifier board is available from the "
"(http://emergent.unpy.net/projects/01148303608[the software developer]).  "
"The L298 H-Bridge can be used for motors up to 4A (one motor per L298) or up "
"to 2A (two motors per L298) with the supply voltage up to 46V. However, the "
"L298 does not have built-in current limiting, a problem for motors with high "
"stall currents. For higher currents and voltages, some users have reported "
"success with International Rectifier's integrated high-side/low-side drivers."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Pluto Step[[sec:Pluto-step:-Hardware-step]](((pluto-step)))"
msgstr ""

#. type: Plain text
msgid ""
"Pluto-step is suitable for control of a 3- or 4-axis CNC mill with stepper "
"motors. The large number of inputs allows for a full set of limit switches."
msgstr ""

#. type: Plain text
msgid "The board features:"
msgstr ""

#. type: Plain text
msgid ""
"4 'step+direction' channels with 312.5kHz maximum step rate, programmable "
"step length, space, and direction change times"
msgstr ""

#. type: Plain text
msgid "14 dedicated digital outputs"
msgstr ""

#. type: Plain text
msgid "16 dedicated digital inputs"
msgstr ""

#. type: Plain text
msgid "EPP communication with the PC"
msgstr ""

#. type: Plain text
msgid "'STEPx' - The 'step' (clock) output of stepgen channel 'x'"
msgstr ""

#. type: Plain text
msgid "'DIRx' - The 'direction' output of stepgen channel 'x'"
msgstr ""

#. type: Plain text
msgid ""
"While the 'extended main connector' has a superset of signals usually found "
"on a Step & Direction DB25 connector--4 step generators, 9 inputs, and 6 "
"general-purpose outputs--the layout on this header is different than the "
"layout of a standard 26-pin ribbon cable to DB25 connector."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pluto-Step Pinout (((pluto-step pinout)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pluto-Step Pinout"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pluto-step-pinout.png"
msgstr ""

#. type: Plain text
msgid "Step frequencies for each channel are updated at different times."
msgstr ""

#. type: Plain text
msgid "Digital outputs are all updated at the same time."
msgstr ""

#. type: Plain text
msgid "Digital inputs are all latched at the same time."
msgstr ""

#. type: Plain text
msgid "Feedback positions for each channel are latched at different times."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Step Waveform Timings"
msgstr ""

#. type: Plain text
msgid ""
"The firmware and driver enforce step length, space, and direction change "
"times. Timings are rounded up to the next multiple of 1.6Î¼s, with a maximum "
"of 49.6Î¼s. The timings are the same as for the software stepgen component, "
"except that 'dirhold' and 'dirsetup' have been merged into a single "
"parameter 'dirtime' which should be the maximum of the two, and that the "
"same step timings are always applied to all channels."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pluto-Step Timings (((pluto-step timings)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pluto-Step Timings"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pluto_step_waveform.png"
msgstr ""

#. type: Plain text
msgid ""
"A list of all 'loadrt' arguments, HAL function names, pin names and "
"parameter names is in the manual page, 'pluto_step.9'."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Powermax Modbus Driver"
msgstr ""

#. type: Plain text
msgid ""
"This is a userspace HAL program, written in python, to control Hypetherm "
"Powermax plasma cutters using the Modbus ASCII protocol over RS485. +"
msgstr ""

#. type: Plain text
msgid ""
"Since this is a userspace program it can be affected by computer loading and "
"latency. It is possible to lose communications which will be indicated by a "
"change in the status output. One should always have an Estop circuit that "
"kills the power to the unit in case of emergency."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn pmx485 pmx485 /dev/ttyUSB0\n"
msgstr ""

#. type: Plain text
msgid ""
"This will load the pmx485 component using the /dev/ttyUSB0 port and wait for "
"it to become ready."
msgstr ""

#. type: Plain text
msgid "It is necessary to name the port to use for communications."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.mode-set* (bit, in) #set cutting mode\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.current-set* (bit, in) #set cutting current \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.pressure-set* (bit, in) #set gas pressure\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.enable* (bit, in) #enable the component\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.mode* (bit, out) #cut mode feedback\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.current* (bit, out) #cutting current feedback\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.pressure* (bit, out) #gas pressure feedback\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.fault* (bit, out) #powermax fault code\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.status* (bit, out) #connection status\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.current-min* (bit, out) #minimum allowed current\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.current-max* (bit, out) #maximum allowed current\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.pressure-min* (bit, out) #minimum allowed gas pressure\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pmx485.pressure-max* (bit, out) #maximum allowed gas pressure\n"
msgstr ""

#. type: Plain text
msgid ""
"To communicate with a Powermax, the component must first be enabled via the "
"*enable* pin and it may then initiate a request to the Powermax by writing a "
"valid string to the following pins:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*mode-set*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*current-set*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pressure-set*\n"
msgstr ""

#. type: Plain text
msgid ""
"A *pressure-set* value of zero is valid, the Powermax will then calculate "
"the required pressure internally."
msgstr ""

#. type: Plain text
msgid ""
"Communications may be validated from the Powermax display or the *status* "
"pin.  While in remote mode, the mode, current and pressure may be changed as "
"needed."
msgstr ""

#. type: Plain text
msgid "To terminate the communications, do one of the following:"
msgstr ""

#. type: Plain text
msgid ""
"Set all set pins to zero: *mode-set*, *current-set*, and *pressure-set*."
msgstr ""

#. type: Plain text
msgid ""
"Disconnect the Powermax power supply from its power source for approximately "
"30 seconds. When you power the system back ON, it will no longer be in "
"remote mode."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reference:"
msgstr ""

#. type: Plain text
msgid ""
"Hypertherm Application Note #807220 + \"Powermax45 XP/65/85/105/125Â® Serial "
"Communication Protocol\""
msgstr ""

#. type: Title =
#, no-wrap
msgid "Servo To Go Driver"
msgstr ""

#. type: Plain text
msgid ""
"The Servo-To-Go (STG) is one of the first PC motion control cards supported "
"by LinuxCNC. It is an ISA card and it exists in different flavors (all "
"supported by this driver). The board includes up to 8 channels of quadrature "
"encoder input, 8 channels of analog input and output, 32 bits digital I/O, "
"an interval timer with interrupt and a watchdog. For more information see "
"the http://www.servotogo.com/[Servo To Go] web page."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"We have had reports that the opamps on the Servo To Go card do\n"
"    not work with newer ATX power supplies that use modern switch\n"
"    mode DC-DC converters.  The failure mode is that STG card outputs a\n"
"    constant voltage regardless of what the driver is commanding it to do.\n"
"    Older ATX power supplies with linear voltage regulators do not have\n"
"    this problem, and work fine with the STG cards.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_stg [base=<address>] [num_chan=<nr>] [dio=\"<dio-string>\"] [model=<model>]\n"
msgstr ""

#. type: Plain text
msgid ""
"The base address field is optional; if it's not provided the driver attempts "
"to autodetect the board. The num_chan field is used to specify the number of "
"channels available on the card, if not used the 8 axis version is assumed. "
"The digital inputs/outputs configuration is determined by a config string "
"passed to insmod when loading the module.  The format consists of a four "
"character string that sets the direction of each group of pins. Each "
"character of the direction string is either \"I\" or \"O\". The first "
"character sets the direction of port A (Port A - DIO.0-7), the next sets "
"port B (Port B - DIO.8-15), the next sets port C (Port C - DIO.16-23), and "
"the fourth sets port D (Port D - DIO.24-31). The model field can be used in "
"case the driver doesn't autodetect the right card version."
msgstr ""

#. type: Plain text
msgid ""
"hint: after starting up the driver, 'dmesg' can be consulted for messages "
"relevant to the driver (e.g. autodetected version number and base address). "
"For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_stg base=0x300 num_chan=4 dio=\"IOIO\"\n"
msgstr ""

#. type: Plain text
msgid ""
"This example installs the STG driver for a card found at the base address of "
"0x300, 4 channels of encoder feedback, DACs and ADCs, along with 32 bits of "
"I/O configured like this: the first 8 (Port A)  configured as Input, the "
"next 8 (Port B) configured as Output, the next 8 (Port C) configured as "
"Input, and the last 8 (Port D) configured as Output"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_stg\n"
msgstr ""

#. type: Plain text
msgid ""
"This example installs the driver and attempts to autodetect the board "
"address and board model, it installs 8 axes by default along with a standard "
"I/O setup: Port A & B configured as Input, Port C & D configured as Output."
msgstr ""

#. type: Plain text
msgid "'stg.<channel>.counts' - (s32) Tracks the counted encoder ticks."
msgstr ""

#. type: Plain text
msgid "'stg.<channel>.position' - (float) Outputs a converted position."
msgstr ""

#. type: Plain text
msgid "'stg.<channel>.dac-value' - (float) Drives the voltage for the"
msgstr ""

#. type: Plain text
msgid "corresponding DAC."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.adc-value' - (float) Tracks the measured voltage from the"
msgstr ""

#. type: Plain text
msgid "corresponding ADC."
msgstr ""

#. type: Plain text
msgid "'stg.in-<pinnum>' - (bit) Tracks a physical input pin."
msgstr ""

#. type: Plain text
msgid ""
"'stg.in-<pinnum>-not' - (bit) Tracks a physical input pin, but inverted."
msgstr ""

#. type: Plain text
msgid "'stg.out-<pinnum>' - (bit) Drives a physical output pin"
msgstr ""

#. type: Plain text
msgid ""
"For each pin, <channel> is the axis number, and <pinnum> is the logic pin "
"number of the STG if `IIOO` is defined, there are 16 input pins (in-00"
msgstr ""

#. type: Plain text
msgid ""
"in-15) and 16 output pins (out-00 .. out-15), and they correspond to PORTs "
"ABCD (in-00 is PORTA.0, out-15 is PORTD.7)."
msgstr ""

#. type: Plain text
msgid ""
"The in-<pinnum> HAL pin is TRUE if the physical pin is high, and FALSE if "
"the physical pin is low. The in-<pinnum>-not HAL pin is inverted -- it is "
"FALSE if the physical pin is high. By connecting a signal to one or the "
"other, the user can determine the state of the input."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.position-scale' - (float) The number of counts / user unit"
msgstr ""

#. type: Plain text
msgid "(to convert from counts to units)."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.dac-offset' - (float) Sets the offset for the corresponding"
msgstr ""

#. type: Plain text
msgid "DAC."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.dac-gain' - (float) Sets the gain of the corresponding DAC."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.adc-offset' - (float) Sets the offset of the corresponding"
msgstr ""

#. type: Plain text
msgid "ADC."
msgstr ""

#. type: Plain text
msgid ""
"'stg.<channel>.adc-gain' - (float) Sets the gain of the corresponding ADC."
msgstr ""

#. type: Plain text
msgid "'stg.out-<pinnum>-invert' - (bit) Inverts an output pin."
msgstr ""

#. type: Plain text
msgid ""
"The -invert parameter determines whether an output pin is active high or "
"active low. If -invert is FALSE, setting the HAL out- pin TRUE drives the "
"physical pin high, and FALSE drives it low. If -invert is TRUE, then setting "
"the HAL out- pin TRUE will drive the physical pin low."
msgstr ""

#. type: Plain text
msgid "'stg.capture-position' - Reads the encoder counters from the axis"
msgstr ""

#. type: Plain text
msgid "<channel>."
msgstr ""

#. type: Plain text
msgid "'stg.write-dacs' - Writes the voltages to the DACs."
msgstr ""

#. type: Plain text
msgid "'stg.read-adcs' - Reads the voltages from the ADCs."
msgstr ""

#. type: Plain text
msgid "'stg.di-read' - Reads physical in- pins of all ports and updates"
msgstr ""

#. type: Plain text
msgid "all HAL in-<pinnum> and in-<pinnum>-not pins."
msgstr ""

#. type: Plain text
msgid "'stg.do-write' - Reads all HAL out-<pinnum> pins and updates all"
msgstr ""

#. type: Plain text
msgid "physical output pins."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Shuttle"
msgstr ""

#. type: Plain text
msgid ""
"Shuttle is a non-realtime HAL component that interfaces Contour Designâs "
"ShuttleXpress, ShuttlePRO, and ShuttlePRO2 devices with LinuxCNCâs HAL."
msgstr ""

#. type: Plain text
msgid ""
"If the driver is started without command-line arguments, it will probe all /"
"dev/hidraw* device files for Shuttle devices, and use all devices found. If "
"it is started with command-line arguments, it will only probe the devices "
"specified."
msgstr ""

#. type: Plain text
msgid ""
"The ShuttleXpress has five momentary buttons, a 10 counts/revolution jog "
"wheel with detents, and a 15-position spring-loaded outer wheel that returns "
"to center when released."
msgstr ""

#. type: Plain text
msgid ""
"The ShuttlePRO has 13 momentary buttons, a 10 counts/revolution jog wheel "
"with detents, and a 15-position spring-loaded outer wheel that returns to "
"center when released."
msgstr ""

#. type: Plain text
msgid ""
"The ShuttlePRO2 has 15 momentary buttons, a 10 counts/revolution jog wheel "
"with detents, and a 15-position spring-loaded outer wheel that returns to "
"center when released."
msgstr ""

#. type: delimited block =
msgid ""
"The Shuttle devices have an internal 8-bit counter for the current jog-wheel "
"position. The shuttle driver can not know this value until the Shuttles "
"device sends its first event. When the first event comes into the driver, "
"the driver uses the deviceâs reported jog-wheel position to initialize "
"counts to 0."
msgstr ""

#. type: delimited block =
msgid ""
"This means that if the first event is generated by a jog-wheel move, that "
"first move will be lost."
msgstr ""

#. type: delimited block =
msgid ""
"Any user interaction with the Shuttle device will generate an event, "
"informing the driver of the jog-wheel position. So if you (for example)  "
"push one of the buttons at startup, the jog-wheel will work fine and notice "
"the first click."
msgstr ""

#. type: Plain text
msgid ""
"The shuttle driver needs read permission to the /dev/hidraw* device files. "
"This can be accomplished by adding a file /etc/udev/rules.d/99-shuttle."
"rules, with the following contents:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"SUBSYSTEM==\"hidraw\", ATTRS{idVendor}==\"0b33\", ATTRS{idProduct}==\"0020\", MODE=\"0444\"\n"
"SUBSYSTEM==\"hidraw\", ATTRS{idVendor}==\"05f3\", ATTRS{idProduct}==\"0240\", MODE=\"0444\"\n"
"SUBSYSTEM==\"hidraw\", ATTRS{idVendor}==\"0b33\", ATTRS{idProduct}==\"0030\", MODE=\"0444\"\n"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC Debian package installs an appropriate udev file automatically, "
"but if you are building LinuxCNC from source and are not using the Debian "
"packaging you'll need to install this file by hand.  If you install the file "
"by hand you'll need to tell udev to reload its rules files by running "
"`udevadm control --reload-rules`."
msgstr ""

#. type: Plain text
msgid ""
"All HAL pin names are prefixed with `shuttle` followed by the index of the "
"device (the order in which the driver found them), for example \"shuttle.0\" "
"or \"shuttle.2\"."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "'<Prefix>.button-<ButtonNumber>' (bit out)"
msgstr ""

#. type: Plain text
msgid "These pins are True (1) when the button is pressed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "'<Prefix>.button-<ButtonNumber>-not' (bit out)"
msgstr ""

#. type: Plain text
msgid "These pins have the inverse of the button state, so they're True"
msgstr ""

#. type: Plain text
msgid "when the button is not pressed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "'<Prefix>.counts' (s32 out)"
msgstr ""

#. type: Plain text
msgid "Accumulated counts from the jog wheel (the inner wheel)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "'<Prefix>.spring-wheel-s32' (s32 out)"
msgstr ""

#. type: Plain text
msgid ""
"The current deflection of the spring-wheel (the outer wheel).  Itâs 0 at "
"rest, and ranges from -7 at the counter-clockwise extreme to +7 at the "
"clockwise extreme."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "'<Prefix>.spring-wheel-f' (float out)"
msgstr ""

#. type: Plain text
msgid ""
"The current deflection of the spring-wheel (the outer wheel).  Itâs 0.0 at "
"rest, -1.0 at the counter-clockwise extreme, and +1.0 at the clockwise "
"extreme. (The Shuttle devices report the spring-wheel position as an integer "
"from -7 to +7, so this pin reports only 15 discrete values in itâs range.)"
msgstr ""

#. type: Title =
#, no-wrap
msgid "General Mechatronics Driver"
msgstr ""

#. type: Plain text
msgid "General Mechatronics GM6-PCI card based motion control system"
msgstr ""

#. type: Plain text
msgid ""
"For detailed description, please refer to the http://www.generalmechatronics."
"com/data/products/robot_controller/PCI_UserManual_eng.pdf[System integration "
"manual]."
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card is based on an FPGA and a PCI bridge "
"interface ASIC. A small automated manufacturing cell can be controlled, with "
"a short time system integration procedure. The following figure "
"demonstrating the typical connection of devices related to the control "
"system:"
msgstr ""

#. type: Plain text
msgid ""
"It can control up to six axis, each can be stepper or CAN bus interface or "
"analogue servo."
msgstr ""

#. type: Plain text
msgid ""
"GPIO: Four time eight I/O pins are placed on standard flat cable headers."
msgstr ""

#. type: Plain text
msgid ""
"RS485 I/O expander modules: RS485 bus was designed for interfacing with "
"compact DIN-rail mounted expander modules. An 8-channel digital input, an 8-"
"channel relay output and an analogue I/O (4x +/-10 Volts output and 8x +/-5 "
"Volts input) modules are available now. Up to 16 modules can be connected to "
"the bus altogether."
msgstr ""

#. type: Plain text
msgid ""
"20 optically isolated input pins: Six times three for the direct connection "
"of two end switch and one homing sensor for each joint. And additionally, "
"two optically isolated E-stop inputs."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GM servo control system"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GMsystem.png"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_gm\n"
msgstr ""

#. type: Plain text
msgid "Up to 3 boards may be used in one system."
msgstr ""

#. type: Plain text
msgid "The following connectors can be found on the GM6-PCI card:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "GM6-PCI card connectors and LEDs(((pci-card connectors)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "GM6-PCI card connectors and LEDs"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_PCIpinout.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "I/O connectors"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pin numbering of GPIO connectors(((pin-numbering-gpio)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pin numbering of GPIO connectors"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_IOpinout.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pinout of GPIO connectors"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/7"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/5"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/3"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/1"
msgstr ""

#. type: Table
#, no-wrap
msgid "VCC"
msgstr ""

#. type: Table
#, no-wrap
msgid "GND"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/6"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/4"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/2"
msgstr ""

#. type: Table
#, no-wrap
msgid "IOx/0"
msgstr ""

#. type: Plain text
msgid ""
"Each pin can be configured as digital input or output.  GM6-PCI motion "
"control card has 4 general purpose I/O (GPIO) connectors, with eight "
"configurable I/O on each.  Every GPIO pin and parameter name begins as "
"follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.gpio.<nr of gpio con>\n"
msgstr ""

#. type: Plain text
msgid ",where <nr of gpio con> is form 0 to 3. For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.gpio.0.in-0\n"
msgstr ""

#. type: Plain text
msgid ""
"indicates the state of the first pin of the first GPIO connector on the GM6-"
"PCI card. Hal pins are updated by function"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr of card>.read\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "GPIO pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "Type and direction"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pin description"
msgstr ""

#. type: Table
#, no-wrap
msgid ".in-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "(bit, Out)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Input pin"
msgstr ""

#. type: Table
#, no-wrap
msgid ".in-not-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated input pin"
msgstr ""

#. type: Table
#, no-wrap
msgid ".out-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "(bit, In)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Output pin. Used only when GPIO is set to output."
msgstr ""

#. type: Block title
#, no-wrap
msgid "GPIO parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parameter description"
msgstr ""

#. type: Table
#, no-wrap
msgid ".is-out-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "(bit, R/W)"
msgstr ""

#. type: Table
#, no-wrap
msgid "When True, the corresponding GPIO is set to totem-pole output, other wise set to high impedance input."
msgstr ""

#. type: Table
#, no-wrap
msgid ".invert-out-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "When True, pin value will be inverted. Used when pin is configured as output."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Axis connectors"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pin numbering of axis connectors(((pin-numbering-axis)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pin numbering of axis connectors"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_AXISpinout.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pinout of axis connectors"
msgstr ""

#. type: Table
#, no-wrap
msgid "Encoder A"
msgstr ""

#. type: Table
#, no-wrap
msgid "+5 Volt (PC)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Encoder B"
msgstr ""

#. type: Table
#, no-wrap
msgid "Encoder Index"
msgstr ""

#. type: Table
#, no-wrap
msgid "Fault"
msgstr ""

#. type: Table
#, no-wrap
msgid "Power Enabled"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step/CCW/B"
msgstr ""

#. type: Table
#, no-wrap
msgid "Direction/CW/A"
msgstr ""

#. type: Table
#, no-wrap
msgid "Ground (PC)"
msgstr ""

#. type: Table
#, no-wrap
msgid "DAC serial line"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Axis interface modules"
msgstr ""

#. type: Plain text
msgid ""
"Small sized DIN rail mounted interface modules gives easy way of connecting "
"different types of servo modules to the axis connectors.  Seven different "
"system configurations are presented in the http://www.generalmechatronics."
"com/data/products/robot_controller/PCI_UserManual_eng.pdf[System integration "
"manual] for evaluating typical applications. Also the detailed description "
"of the Axis modules can be found in the System integration manual."
msgstr ""

#. type: Plain text
msgid ""
"For evaluating the appropriate servo-drive structure the modules have to be "
"connected as the following block diagram shows:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Servo axis interfaces(((axis-iterface)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Servo axis interfaces"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_AxisInterface.png"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has six encoder modules.  Each encoder "
"module has three channels:"
msgstr ""

#. type: Plain text
msgid "Channel-A"
msgstr ""

#. type: Plain text
msgid "Channel-B"
msgstr ""

#. type: Plain text
msgid "Channel-I (index)"
msgstr ""

#. type: Plain text
msgid ""
"It is able to count quadrature encoder signals or step/dir signals.  Each "
"encoder module is connected to the inputs of the corresponding RJ50 axis "
"connector."
msgstr ""

#. type: Plain text
msgid "Every encoder pin and parameter name begins as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.encoder.<nr of axis>\n"
msgstr ""

#. type: Plain text
msgid ",where <nr of axis> is form 0 to 5. For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.encoder.0.position\n"
msgstr ""

#. type: Plain text
msgid "refers to the position of encoder module of axis 0."
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI card counts the encoder signal independently from LinuxCNC.  Hal "
"pins are updated by function:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Encoder pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".reset"
msgstr ""

#. type: Table
#, no-wrap
msgid "When True, resets counts and position to zero."
msgstr ""

#. type: Table
#, no-wrap
msgid ".rawcounts"
msgstr ""

#. type: Table
#, no-wrap
msgid "(s32, Out)"
msgstr ""

#. type: Table
#, no-wrap
msgid "The raw count is the counts, but unaffected by reset or the index pulse."
msgstr ""

#. type: Table
#, no-wrap
msgid ".counts"
msgstr ""

#. type: Table
#, no-wrap
msgid "Position in encoder counts."
msgstr ""

#. type: Table
#, no-wrap
msgid ".position"
msgstr ""

#. type: Table
#, no-wrap
msgid "(float, Out)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Position in scaled units (=.counts/.position-scale)."
msgstr ""

#. type: Table
#, no-wrap
msgid ".index-enabled"
msgstr ""

#. type: Table
#, no-wrap
msgid "(bit, IO)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When True, counts and position are rounded or reset \n"
"                                            (depends on index-mode) on next rising edge of channel-I. \n"
"\t\t\t\t\t\t\t\t\t\t\tEvery time position is reset because of Index, index-enabled \n"
"\t\t\t\t\t\t\t\t\t\t\tpin is set to 0 and remain 0 until connected hal pin does \n"
"\t\t\t\t\t\t\t\t\t\t\tnot set it."
msgstr ""

#. type: Table
#, no-wrap
msgid ".velocity"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Velocity in scaled units per second. GM encoder uses high \n"
"                                            frequency hardware timer to measure time between encoder \n"
"\t\t\t\t\t\t\t\t\t\t\tpulses in order to calculate velocity. It greatly reduces \n"
"\t\t\t\t\t\t\t\t\t\t\tquantization noise as compared to simply differentiating \n"
"\t\t\t\t\t\t\t\t\t\t\tthe position output. When the measured velocity is below \n"
"\t\t\t\t\t\t\t\t\t\t\tmin-speed-estimate, the velocity output is 0."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Encoder parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "Type and Read/Write"
msgstr ""

#. type: Table
#, no-wrap
msgid ".counter-mode"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When True, the counter counts each rising edge of the \n"
"                                              channel-A input to the direction determined by channel-B. \n"
"\t\t\t \t \t\t\t\t\t\t\t  This is useful for counting the output of a single channel \n"
"\t\t\t \t\t\t\t\t\t\t\t  (non-quadrature) or step/dir signal sensor. When false, it \n"
"\t\t\t\t\t\t\t\t\t\t\t  counts in quadrature mode."
msgstr ""

#. type: Table
#, no-wrap
msgid ".index-mode"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When True and .index-enabled is also true, .counts and \n"
"                                              .position are rounded (based on .counts-per-rev) at rising \n"
"\t\t\t\t\t\t\t\t\t\t\t  edge of channel-I. This is useful to correct few pulses \n"
"\t\t\t\t\t\t\t\t\t\t\t  error caused by noise. In round mode, it is essential to \n"
"\t\t\t\t\t\t\t\t\t\t\t  set .counts-per-rev parameter correctly. When .index-mode \n"
"\t\t\t\t\t\t\t\t\t\t\t  is False and .index-enabled is true, .counts and .position \n"
"\t\t\t\t\t\t\t\t\t\t\t  are reset at channel-I pulse."
msgstr ""

#. type: Table
#, no-wrap
msgid ".counts-per-rev"
msgstr ""

#. type: Table
#, no-wrap
msgid "(s32, R/V)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Determine how many counts are between two index pulses. It \n"
"                                              is used only in round mode, so when both .index-enabled and \n"
"\t\t\t\t\t\t\t\t\t\t\t  .index-mode parameters are True. GM encoder process encoder signal \n"
"\t\t\t\t\t\t\t\t\t\t\t  in 4x mode, so for example in case of a 500 CPR encoder it should \n"
"\t\t\t\t\t\t\t\t\t\t\t  be set to 2000. This parameter can be easily measured by setting \n"
"\t\t\t\t\t\t\t\t\t\t\t  .index-enabled True and .index-mode False (so that .counts resets \n"
"\t\t\t\t\t\t\t\t\t\t\t  at channel-I pulse), than move axis by hand and see the maximum \n"
"\t\t\t\t\t\t    \t\t\t\t  magnitude of .counts pin in halmeter."
msgstr ""

#. type: Table
#, no-wrap
msgid ".index-invert"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When True, channel-I event (reset or round) occur on falling \n"
"                                              edge of channel-I signal, otherwise on rising edge."
msgstr ""

#. type: Table
#, no-wrap
msgid ".min-speed-estimate"
msgstr ""

#. type: Table
#, no-wrap
msgid "(float, R/W)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Determine the minimum measured velocity magnitude at which \n"
"                                              .velocity will be set as nonzero. Setting this parameter too \n"
"\t\t\t\t\t\t\t\t\t\t\t  low will cause it to take a long time for velocity to go to zero \n"
"\t\t\t\t\t\t\t\t\t\t\t  after encoder pulses have stopped arriving."
msgstr ""

#. type: Table
#, no-wrap
msgid ".position-scale"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Scale in counts per length unit. .position=.counts/.position-scale. \n"
"                                              For example, if position-scale is 2000, then 1000 counts of the \n"
"\t\t\t\t\t\t\t\t\t\t\t  encoder will produce a position of 0.5 units."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL example"
msgstr ""

#. type: Plain text
msgid ""
"Setting encoder module of axis 0 to receive 500 CPR quadrature encoder "
"signal and use reset to round position."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp gm.0.encoder.0.counter-mode 0         # 0: quad, 1: stepDir\n"
"setp gm.0.encoder.0.index-mode 1           # 0: reset pos at index, 1:round pos at index\n"
"setp gm.0.encoder.0.counts-per-rev 2000      # GM process encoder in 4x mode, 4x500=2000\n"
"setp gm.0.encoder.0.index-invert 0\n"
"setp gm.0.encoder.0.min-speed-estimate 0.1 # in position unit/s\n"
"setp gm.0.encoder.0.position-scale 20000   # 10 encoder rev cause the machine to \n"
"                                             move one position unit (10x2000)\n"
msgstr ""

#. type: Plain text
msgid "Connect encoder position to LinuxCNC position feedback:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net Xpos-fb gm.0.encoder.0.position => joint.0.motor-pos-fb\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Stepgen module"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has six stepgen modules, one for each "
"joint.  Each module has two output signals. It can produce Step/Direction, "
"Up/Down or Quadrature (A/B) pulses. Each stepgen module is connected to the "
"pins of the corresponding RJ50 axis connector."
msgstr ""

#. type: Plain text
msgid "Every stepgen pin and parameter name begins as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.stepgen.<nr of axis>\n"
msgstr ""

#. type: Plain text
msgid ",where nr of axis is form 0 to 5. For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.stepgen.0.position-cmd\n"
msgstr ""

#. type: Plain text
msgid "refers to the position command of stepgen module of axis 0 on card 0."
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI card generates step pulses independently from LinuxCNC.  Hal "
"pins are updated by function"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr of card>.write\n"
msgstr ""

#. type: Plain text
msgid "<<<"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Stepgen module pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".enable"
msgstr ""

#. type: Table
#, no-wrap
msgid "Stepgen produces pulses only when this pin is true."
msgstr ""

#. type: Table
#, no-wrap
msgid ".count-fb"
msgstr ""

#. type: Table
#, no-wrap
msgid "Position feedback in counts unit."
msgstr ""

#. type: Table
#, no-wrap
msgid ".position-fb"
msgstr ""

#. type: Table
#, no-wrap
msgid "Position feedback in position unit."
msgstr ""

#. type: Table
#, no-wrap
msgid ".position-cmd"
msgstr ""

#. type: Table
#, no-wrap
msgid "(float, In)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Commanded position in position units. Used in position mode only."
msgstr ""

#. type: Table
#, no-wrap
msgid ".velocity-cmd"
msgstr ""

#. type: Table
#, no-wrap
msgid "Commanded velocity in position units per second. Used in velocity mode only."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Stepgen module parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid ".step-type"
msgstr ""

#. type: Table
#, no-wrap
msgid "(u32, R/W)"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When 0, module produces Step/Dir signal. When 1, it \n"
"                                             produces Up/Down step signals. And when it is 2, it \n"
"\t\t\t\t\t\t\t\t\t\t\t produces quadrature output signals."
msgstr ""

#. type: Table
#, no-wrap
msgid ".control-type"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"When True, .velocity-cmd is used as reference and velocity \n"
"                                             control calculate pulse rate output. When False, .position-cmd \n"
"\t\t\t\t\t\t\t\t\t\t\t is used as reference and position control calculate pulse rate output."
msgstr ""

#. type: Table
#, no-wrap
msgid ".invert-step1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Invert the output of channel 1 (Step signal in StepDir mode)"
msgstr ""

#. type: Table
#, no-wrap
msgid ".invert-step2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Invert the output of channel 2 (Dir signal in StepDir mode)"
msgstr ""

#. type: Table
#, no-wrap
msgid ".maxvel"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Maximum velocity in position units per second. If it is set to 0.0, \n"
"                                             .maxvel parameter is ignored."
msgstr ""

#. type: Table
#, no-wrap
msgid ".maxaccel"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Maximum acceleration in position units per second squared. If \n"
"                                             it is set to 0.0, .maxaccel parameter is ignored."
msgstr ""

#. type: Table
#, no-wrap
msgid "Scale in steps per length unit."
msgstr ""

#. type: Table
#, no-wrap
msgid ".steplen"
msgstr ""

#. type: Table
#, no-wrap
msgid "Length of step pulse in nano-seconds."
msgstr ""

#. type: Table
#, no-wrap
msgid ".stepspace"
msgstr ""

#. type: Table
#, no-wrap
msgid "Minimum time between two step pulses in nano-seconds."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dirdelay"
msgstr ""

#. type: Table
#, no-wrap
msgid "Minimum time between step pulse and direction change in nano-seconds."
msgstr ""

#. type: Plain text
msgid "For evaluating the appropriate values see the timing diagrams below:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Reference signal timing diagrams(((refsig-timing-diagram)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Reference signal timing diagrams"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_RefSignals.png"
msgstr ""

#. type: Plain text
msgid ""
"Setting stepgen module of axis 0 to generate 1000 step pulse per position "
"unit:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp gm.0.stepgen.0.step-type 0         # 0:stepDir, 1:UpDown, 2:Quad\n"
"setp gm.0.stepgen.0.control-type 0      # 0:Pos. control, 1:Vel. Control\n"
"setp gm.0.stepgen.0.invert-step1 0\n"
"setp gm.0.stepgen.0.invert-step2 0\n"
"setp gm.0.stepgen.0.maxvel 0            # do not set maxvel for step \n"
"                                        # generator, let interpolator control it.\n"
"setp gm.0.stepgen.0.maxaccel 0          # do not set max acceleration for \n"
"                                        # step generator, let interpolator control it.\n"
"setp gm.0.stepgen.0.position-scale 1000 # 1000 step/position unit\n"
"setp gm.0.stepgen.0.steplen 1000        # 1000 ns = 1 us\n"
"setp gm.0.stepgen.0.stepspace1000       # 1000 ns = 1 us\n"
"setp gm.0.stepgen.0.dirdelay 2000       # 2000 ns = 2 us\n"
msgstr ""

#. type: Plain text
msgid "Connect stepgen to axis 0 position reference and enable pins:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net Xpos-cmd joint.0.motor-pos-cmd => gm.0.stepgen.0.position-cmd\n"
"net Xen joint.0.amp-enable-out => gm.0.stepgen.0.enable\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Enable and Fault signals"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has one enable output and one fault input "
"HAL pins, both are connected to each RJ50 axis connector and to the CAN "
"connector."
msgstr ""

#. type: Plain text
msgid "Hal pins are updated by function:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Enable and Fault signal pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.<nr of card>.power-enable"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"If this pin is True,\n"
"\n"
"                                                      * and Watch Dog Timer is not expired\n"
"                                                      * and there is no power fault\n"
"                                                      Then power enable pins of axis- and CAN connectors \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t  are set to high, otherwise set to low."
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.<nr of card>.power-fault"
msgstr ""

#. type: Table
#, no-wrap
msgid "Power fault input."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Axis DAC"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has six serial axis DAC driver modules, one "
"for each joint. Each module is connected to the pin of the corresponding "
"RJ50 axis connector.  Every axis DAC pin and parameter name begins as "
"follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.dac.<nr of axis>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.dac.0.value\n"
msgstr ""

#. type: Plain text
msgid ""
"refers to the output voltage of DAC module of axis 0.  Hal pins are updated "
"by function:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Axis DAC pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Enable DAC output. When enable is \n"
"                                 false, DAC output is 0.0 V."
msgstr ""

#. type: Table
#, no-wrap
msgid ".value"
msgstr ""

#. type: Table
#, no-wrap
msgid "Value of DAC output in Volts."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Axis DAC parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid ".offset"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Offset is added to the value before \n"
"                                        the hardware is updated"
msgstr ""

#. type: Table
#, no-wrap
msgid ".high-limit"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Maximum output voltage of the \n"
"                                        hardware in volts."
msgstr ""

#. type: Table
#, no-wrap
msgid ".low-limit"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Minimum output voltage of the \n"
"                                        hardware in volts."
msgstr ""

#. type: Table
#, no-wrap
msgid ".invert-serial"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"GM6-PCI card is communicating with DAC \n"
"                                        hardware via fast serial communication \n"
"\t\t\t\t\t\t\t\t\t\tto highly reduce time delay compared to \n"
"\t\t\t\t\t\t\t\t\t\tPWM. DAC module is recommended to be \n"
"\t\t\t\t\t\t\t\t\t\tisolated which is negating serial \n"
"\t\t\t\t\t\t\t\t\t\tcommunication line. In case of isolation, \n"
"\t\t\t\t\t\t\t\t\t\tleave this parameter to default (0), \n"
"\t\t\t\t\t\t\t\t\t\twhile in case of none-isolation, set \n"
"\t\t\t\t\t\t\t\t\t\tthis parameter to 1."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "CAN-bus servo amplifiers"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has CAN module to drive CAN servo "
"amplifiers. Implementation of higher level protocols like CANopen is further "
"development. Currently GM produced power amplifiers has upper level driver "
"which export pins and parameters to HAL. They receive position reference and "
"provide encoder feedback via CAN bus."
msgstr ""

#. type: Plain text
msgid ""
"The frames are standard (11 bit) ID frames, with 4 byte data length.  The "
"baud rate is 1 Mbit.  The position command IDs for axis 0..5 are "
"0x10..0x15.  The position feedback IDs for axis 0..5 are 0x20..0x25."
msgstr ""

#. type: Plain text
msgid ""
"These configuration can be changed with the modifivation of hal_gm.c and "
"recompiling LinuxCNC."
msgstr ""

#. type: Plain text
msgid "Every CAN pin and parameter name begins as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.can-gm.<nr of axis>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.can-gm.0.position\n"
msgstr ""

#. type: Plain text
msgid "refers to the output position of axis 0 in position units."
msgstr ""

#. type: Block title
#, no-wrap
msgid "CAN module pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "Enable sending position references."
msgstr ""

#. type: Table
#, no-wrap
msgid "Commanded position in position units."
msgstr ""

#. type: Table
#, no-wrap
msgid "Feed back position in position units."
msgstr ""

#. type: Block title
#, no-wrap
msgid "CAN module parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "Scale in per length unit."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Watchdog timer"
msgstr ""

#. type: Plain text
msgid "Watchdog timer resets at function:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Watchdog pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.<nr of card>.watchdog-expired"
msgstr ""

#. type: Table
#, no-wrap
msgid "Indicates that watchdog timer is expired."
msgstr ""

#. type: Plain text
msgid ""
"Watchdog timer overrun causes the set of power-enable to low in hardware."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Watchdog parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.<nr of card>.watchdog-enable"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Enable watchdog timer. \n"
"                                                             It is strongly recommended to \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t     enable watchdog timer, because \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t     it can disables all the servo \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t     amplifiers by pulling down all \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t     enable signal in case of PC error."
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.<nr of card>.watchdog-timeout-ns"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Time interval in within the \n"
"                                                             gm.<nr of card>.read function \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t must be executed. The gm.<nr of card>.read \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t is typically added to servo-thread, so \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t watch timeout is typically set to 3 times \n"
"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t of the servo period."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "End-, homing- and E-stop switches"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Pin numbering of homing & end switch connector(((pin-numbering-endsw)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Pin numbering of homing and end switch connector"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_ENDSWpinout.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "End- and homing switch connector pinout"
msgstr ""

#. type: Table
#, no-wrap
msgid "*25*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*23*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*21*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*19*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*17*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*15*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*13*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*11*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*9*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*7*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*5*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*3*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*1*"
msgstr ""

#. type: Table
#, no-wrap
msgid "1/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "2/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "2/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "3/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "4/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "4/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "5/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "6/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "6/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "E-Stop 2"
msgstr ""

#. type: Table
#, no-wrap
msgid "V+ (Ext.)"
msgstr ""

#. type: Table
#, no-wrap
msgid "*26*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*24*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*22*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*20*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*18*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*16*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*14*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*12*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*10*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*8*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*6*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*4*"
msgstr ""

#. type: Table
#, no-wrap
msgid "*2*"
msgstr ""

#. type: Table
#, no-wrap
msgid "1/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "1/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "2/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "3/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "3/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "4/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "5/End+"
msgstr ""

#. type: Table
#, no-wrap
msgid "5/Hom-ing"
msgstr ""

#. type: Table
#, no-wrap
msgid "6/End-"
msgstr ""

#. type: Table
#, no-wrap
msgid "E-Stop 1"
msgstr ""

#. type: Plain text
msgid ""
"The GM6-PCI motion control card has two limit- and one homing switch input "
"for each joint. All the names of these pins begin as follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.joint.<nr of axis>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.0.joint.0.home-sw-in\n"
msgstr ""

#. type: Plain text
msgid "indicates the state of the axis 0 home switch."
msgstr ""

#. type: Block title
#, no-wrap
msgid "End- and homing switch pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".home-sw-in"
msgstr ""

#. type: Table
#, no-wrap
msgid "Home switch input"
msgstr ""

#. type: Table
#, no-wrap
msgid ".home-sw-in-not"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated home switch input"
msgstr ""

#. type: Table
#, no-wrap
msgid ".neg-lim-sw-in"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negative limit switch input"
msgstr ""

#. type: Table
#, no-wrap
msgid ".neg-lim-sw-in-not"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated negative limit switch input"
msgstr ""

#. type: Table
#, no-wrap
msgid ".pos-lim-sw-in"
msgstr ""

#. type: Table
#, no-wrap
msgid "Positive limit switch input"
msgstr ""

#. type: Table
#, no-wrap
msgid ".pos-lim-sw-in-not"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated positive limit switch input"
msgstr ""

#. type: Block title
#, no-wrap
msgid "E-stop switch parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.0.estop.0.in"
msgstr ""

#. type: Table
#, no-wrap
msgid "Estop 0 input"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.0.estop.0.in-not"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated Estop 0 input"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.0.estop.1.in"
msgstr ""

#. type: Table
#, no-wrap
msgid "Estop 1 input"
msgstr ""

#. type: Table
#, no-wrap
msgid "gm.0.estop.1.in-not"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negated Estop 1 input"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Status LEDs"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "CAN"
msgstr ""

#. type: Plain text
msgid "Color: Orange"
msgstr ""

#. type: Plain text
msgid "Blink, during data communication."
msgstr ""

#. type: Plain text
msgid "On, when any of the buffers are full - communication error."
msgstr ""

#. type: Plain text
msgid "Off, when no data communication."
msgstr ""

#. type: Plain text
msgid "Blink, during initialization of modules on the bus"
msgstr ""

#. type: Plain text
msgid "On, when the data communication is up between all initialized modules."
msgstr ""

#. type: Plain text
msgid ""
"Off, when any of the initialized modules dropped off because of an error."
msgstr ""

#. type: Plain text
msgid "Color: White"
msgstr ""

#. type: Plain text
msgid "Blink, when LinuxCNC is running."
msgstr ""

#. type: Plain text
msgid "Otherwise off."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Boot"
msgstr ""

#. type: Plain text
msgid "Color: Green"
msgstr ""

#. type: Plain text
msgid "On, when system booted successfully."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error"
msgstr ""

#. type: Plain text
msgid "Color: Red"
msgstr ""

#. type: Plain text
msgid "Off, when there is no fault in the system."
msgstr ""

#. type: Plain text
msgid "Blink, when PCI communication error."
msgstr ""

#. type: Plain text
msgid "On, when watchdog timer overflowed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "RS485 I/O expander modules"
msgstr ""

#. type: Plain text
msgid ""
"These modules were developed for expanding the I/O and function capability "
"along an RS485 line of the GM6-PCI motion control card."
msgstr ""

#. type: Plain text
msgid "Available module types:"
msgstr ""

#. type: Plain text
msgid ""
"8-channel relay output module - gives eight NO-NC relay output on a three "
"pole terminal connector for each channel."
msgstr ""

#. type: Plain text
msgid ""
"8-channel digital input module - gives eight optical isolated digital input "
"pins."
msgstr ""

#. type: Plain text
msgid ""
"8 channel ADC and 4-channel DAC module - gives four digital-to-analogue "
"converter outputs and eight analogue-to-digital inputs.  This module is also "
"optically isolated from the GM6-PCI card."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Automatic node recognizing:*\n"
msgstr ""

#. type: Plain text
msgid ""
"Each node connected to the bus was recognized by the GM6-PCI card "
"automatically.  During starting LinuxCNC, the driver export pins and "
"parameters of all available modules automatically."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Fault handling:*\n"
msgstr ""

#. type: Plain text
msgid ""
"If a module does not answer regularly the GM6-PCI card drops down the "
"module.  If a module with output do not gets data with correct CRC "
"regularly, the module switch to error state (green LED blinking), and turns "
"all outputs to error state."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Connecting the nodes:*\n"
msgstr ""

#. type: Plain text
msgid ""
"The modules on the bus have to be connected in serial topology, with "
"termination resistors on the end. The start of the topology is the PCI card, "
"and the end is the last module."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Connecting the RS485 nodes to the GM6-PCI card(((connecting-rs485)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Connecting the RS485 nodes to the GM6-PCI card"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/GM_RS485topology.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Addressing:*\n"
msgstr ""

#. type: Plain text
msgid ""
"Each node on the bus has a 4 bit unique address that can be set with a red "
"DIP switch."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Status LED:*\n"
msgstr ""

#. type: Plain text
msgid "A green LED indicates the status of the module:"
msgstr ""

#. type: Plain text
msgid ""
"Blink, when the module is only powered, but not jet identified, or when "
"module is dropped down."
msgstr ""

#. type: Plain text
msgid "Off, during identification (computer is on, but LinuxCNC not started)"
msgstr ""

#. type: Plain text
msgid "On, when it communicates continuously."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Relay output module"
msgstr ""

#. type: Plain text
msgid ""
"For pinout, connection and electrical charasteristics of the module, please "
"refer to the http://www.generalmechatronics.com/data/products/"
"robot_controller/PCI_UserManual_eng.pdf[System integration manual]."
msgstr ""

#. type: Plain text
msgid "All the pins and parameters are updated by the following function:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.rs485\n"
msgstr ""

#. type: Plain text
msgid ""
"It should be added to servo thread or other thread with larger period to "
"avoid CPU overload.  Every RS485 module pin and parameter name begins as "
"follows:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "gm.<nr. of card>.rs485.<modul ID>\n"
msgstr ""

#. type: Plain text
msgid ",where <modul ID> is form 00 to 15."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Relay output module pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".relay-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Output pin for relay"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Relay output module parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid ".invert-relay-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Negate relay output pin"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"gm.0.rs485.0.relay-0 # First relay of the node.\n"
"gm.0                 # Means the first GM6-PCI motion control card (PCI card address = 0)\n"
".rs485.0             # Select node with address 0 on the RS485 bus\n"
".relay-0             # Select the first relay\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Digital input module"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Digital input output module pins"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"gm.0.rs485.0.in-0 # First input of the node.\n"
"# gm.0     - Means the first GM6-PCI motion control card (PCI card address = 0)\n"
"# .rs485.0 - Select node with address 0 on the RS485 bus\n"
"# .in-0    - Select the first digital input module\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DAC & ADC module"
msgstr ""

#. type: Block title
#, no-wrap
msgid "DAC & ADC module pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Value of ADC input in Volts."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dac-enable-<0-3>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Enable DAC output. When enable is \n"
"                                             false DAC output is set to 0.0 V."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dac-<0-3>"
msgstr ""

#. type: Block title
#, no-wrap
msgid "DAC & ADC module parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-scale-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"The input voltage will be multiplied by \n"
"                                               scale before being output to .adc- pin."
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-offset-<0-7>"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Offset is subtracted from the hardware input \n"
"                                               voltage after the scale multiplier has been applied."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dac-offset-<0-3>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Offset is added to the value before the hardware is updated."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dac-high-limit-<0-3>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Maximum output voltage of the hardware in volts."
msgstr ""

#. type: Table
#, no-wrap
msgid ".dac-low-limit-<0-3>"
msgstr ""

#. type: Table
#, no-wrap
msgid "Minimum output voltage of the hardware in volts."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"gm.0.rs485.0.adc-0 # First analogue channel of the node.\n"
"# gm.0     - Means the first GM6-PCI motion control card (PCI card address = 0)\n"
"# .rs485.0 - Select node with address 0 on the RS485 bus\n"
"# .adc-0   - Select the first analogue input of the module\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Teach Pendant module"
msgstr ""

#. type: Plain text
msgid ""
",where <modul ID> is form 00 to 15. Note that on the Teach Pendant module it "
"cannot be changed, and pre-programmed as zero. Upon request it can be "
"delivered with firmware pre-programmed different ID."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Teach Pendant module pins"
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-<0-5>"
msgstr ""

#. type: Table
#, no-wrap
msgid ".enc-reset"
msgstr ""

#. type: Table
#, no-wrap
msgid ".enc-counts"
msgstr ""

#. type: Table
#, no-wrap
msgid ".enc-rawcounts"
msgstr ""

#. type: Table
#, no-wrap
msgid "The raw count is the counts, but unaffected by reset."
msgstr ""

#. type: Table
#, no-wrap
msgid ".enc-position"
msgstr ""

#. type: Table
#, no-wrap
msgid "Position in scaled units (=.enc-counts/.enc-position-scale)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Teach Pendant module parameters"
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-scale-<0-5>"
msgstr ""

#. type: Table
#, no-wrap
msgid ".adc-offset-<0-5>"
msgstr ""

#. type: Table
#, no-wrap
msgid ".enc-position-scale"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Errata"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "GM6-PCI card Errata"
msgstr ""

#. type: Plain text
msgid ""
"The revision number in this section refers to the revision of the GM6-PCI "
"card device."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Rev. 1.2"
msgstr ""

#. type: Plain text
msgid ""
"Error: The PCI card do not boot, when Axis 1. END B switch is active (low).  "
"Found on November 16, 2013."
msgstr ""

#. type: Plain text
msgid "Reason: This switch is connected to a boot setting pin of FPGA"
msgstr ""

#. type: Plain text
msgid ""
"Problem fix/workaround: Use other switch pin, or connect only normally open "
"switch to this switch input pin."
msgstr ""

#. type: Title =
#, no-wrap
msgid "VFS11 VFD Driver"
msgstr ""

#. type: Plain text
msgid ""
"This is a userspace HAL program to control the S11 series of VFD's from "
"Toshiba."
msgstr ""

#. type: Plain text
msgid ""
"vfs11_vfd supports serial and TCP connections. Serial connections may be "
"RS232 or RS485. RS485 is supported in full- and half-duplex mode. TCP "
"connections may be passive (wait for incoming connection), or active "
"outgoing connections, which may be useful to connect to TCP-based devices or "
"through a terminal server."
msgstr ""

#. type: Plain text
msgid ""
"Regardless of the connection type, vfs11_vfd operates as a Modbus master."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn spindle-vfd vfs11_vfd -n spindle-vfd \n"
msgstr ""

#. type: Plain text
msgid ""
"The above command says: loadusr, wait for named to load, component "
"vfs11_vfd, named spindle-vfd"
msgstr ""

#. type: Plain text
msgid ""
"'vfs11_vfd' is mostly configured through inifile options. The command line "
"options are:"
msgstr ""

#. type: Plain text
msgid "'-n or --name <halname>' : set the HAL component name"
msgstr ""

#. type: Plain text
msgid ""
"'-I or --ini <inifilename>' : take configuration from this ini file. "
"Defaults to environment variable INI_FILE_NAME."
msgstr ""

#. type: Plain text
msgid ""
"'-S or --section <section name>' : take configuration from this section in "
"the ini file. Defaults to 'VFS11'."
msgstr ""

#. type: Plain text
msgid "'-d or --debug' enable debug messages on console output."
msgstr ""

#. type: Plain text
msgid "'-m or --modbus-debug' enable modbus messages on console output"
msgstr ""

#. type: Plain text
msgid "'-r or --report-device' report device properties on console at startup"
msgstr ""

#. type: Plain text
msgid ""
"Debugging can be toggled by sending a USR1 signal to the vfs11_vfd process. "
"Modbus debugging can be toggled by sending a USR2 signal to vfs11_vfd "
"process (example: +kill -USR1 \\`pidof vfs11_vfd`+)."
msgstr ""

#. type: Plain text
msgid ""
"Where <n> is +vfs11_vfd+ or the name given during loading with the -n option."
msgstr ""

#. type: Plain text
msgid "'<n>.acceleration-pattern' (bit, in) when true, set acceleration and"
msgstr ""

#. type: Plain text
msgid ""
"deceleration times as defined in registers F500 and F501 respectively.  Used "
"in PID loops to choose shorter ramp times to avoid oscillation."
msgstr ""

#. type: Plain text
msgid "'<n>.alarm-code' (s32, out) non-zero if drive is in alarmed"
msgstr ""

#. type: Plain text
msgid ""
"state. Bitmap describing alarm information (see register FC91 description).  "
"Use err-reset (see below) to clear the alarm."
msgstr ""

#. type: Plain text
msgid "'<n>.at-speed' (bit, out)"
msgstr ""

#. type: Plain text
msgid "when drive is at commanded speed (see speed-tolerance below)"
msgstr ""

#. type: Plain text
msgid "'<n>.current-load-percentage' (float, out)"
msgstr ""

#. type: Plain text
msgid "reported from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.dc-brake' (bit, in)"
msgstr ""

#. type: Plain text
msgid "engage the DC brake. Also turns off spindle-on."
msgstr ""

#. type: Plain text
msgid "'<n>.enable' (bit, in)"
msgstr ""

#. type: Plain text
msgid ""
"enable the VFD. If false, all operating parameters are still read but "
"control is released and panel control is enabled (subject to VFD setup)."
msgstr ""

#. type: Plain text
msgid "'<n>.err-reset' (bit, in)"
msgstr ""

#. type: Plain text
msgid ""
"reset errors (alarms a.k.a Trip and e-stop status). Resetting the VFD may "
"cause a 2-second delay until it's rebooted and Modbus is up again."
msgstr ""

#. type: Plain text
msgid "'<n>.estop' (bit, in)"
msgstr ""

#. type: Plain text
msgid ""
"put the VFD into emergency-stopped status. No operation possible until "
"cleared with err-reset or powercycling."
msgstr ""

#. type: Plain text
msgid "'<n>.frequency-command' (float, out)"
msgstr ""

#. type: Plain text
msgid ""
"current target frequency in HZ as set through speed-command (which is in "
"RPM), from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.frequency-out' (float, out)"
msgstr ""

#. type: Plain text
msgid "current output frequency of the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.inverter-load-percentage' (float, out)"
msgstr ""

#. type: Plain text
msgid "current load report from VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.is-e-stopped' (bit, out)"
msgstr ""

#. type: Plain text
msgid ""
"the VFD is in emergency stop status (blinking \"E\" on panel). Use err-reset "
"to reboot the VFD and clear the e- stop status."
msgstr ""

#. type: Plain text
msgid "'<n>.is-stopped' (bit, out)"
msgstr ""

#. type: Plain text
msgid "true when the VFD reports 0 Hz output"
msgstr ""

#. type: Plain text
msgid "'<n>.max-rpm' (float, R)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"actual RPM limit based on maximum frequency the VFD may  generate,  and  the  motors  nameplate  values.  For\n"
"instance,  if  nameplate-HZ is 50, and nameplate-RPM_ is 1410, but the VFD may generate up to 80Hz, then max-\n"
"rpm would read as 2256 (80*1410/50). The frequency limit is read from the VFD at startup.   To  increase  the\n"
"upper  frequency  limit,  the  UL  and FH parameters must be changed on the panel.  See the VF-S11 manual for\n"
"instructions how to set the maximum frequency.\n"
msgstr ""

#. type: Plain text
msgid "'<n>.modbus-ok' (bit, out)"
msgstr ""

#. type: Plain text
msgid ""
"true when the Modbus session is successfully established and the last 10 "
"transactions returned without error."
msgstr ""

#. type: Plain text
msgid "'<n>.motor-RPM' (float, out)"
msgstr ""

#. type: Plain text
msgid "estimated current RPM value, from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.output-current-percentage' (float, out)"
msgstr ""

#. type: Plain text
msgid "from the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.output-voltage-percentage' (float, out)"
msgstr ""

#. type: Plain text
msgid "'<n>.output-voltage' (float, out)"
msgstr ""

#. type: Plain text
msgid "'<n>.speed-command' (float, in)"
msgstr ""

#. type: Plain text
msgid ""
"speed sent to VFD in RPM. It is an error to send a speed faster than the "
"Motor Max RPM as set in the VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-fwd' (bit, in)"
msgstr ""

#. type: Plain text
msgid "1 for FWD and 0 for REV, sent to VFD"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-on' (bit, in)"
msgstr ""

#. type: Plain text
msgid "1 for ON and 0 for OFF sent to VFD, only on when running"
msgstr ""

#. type: Plain text
msgid "'<n>.spindle-rev' (bit, in)"
msgstr ""

#. type: Plain text
msgid "1 for ON and 0 for OFF, only on when running"
msgstr ""

#. type: Plain text
msgid "'<n>.jog-mode' (bit, in)"
msgstr ""

#. type: Plain text
msgid ""
"1 for ON and 0 for OFF, enables the VF-S11 'jog mode'. Speed control is "
"disabled, and the output frequency is determined by register F262 (preset to "
"5Hz). This might be useful for spindle orientation. In normal mode, the VFD "
"shuts off if the frequency drops below 12Hz."
msgstr ""

#. type: Plain text
msgid "'<n>.status' (s32, out)"
msgstr ""

#. type: Plain text
msgid ""
"Drive Status of the VFD (see the TOSVERT VF-S11 Communications Function "
"Instruction Manual, register FD01). A bitmap."
msgstr ""

#. type: Plain text
msgid "'<n>.trip-code' (s32, out)"
msgstr ""

#. type: Plain text
msgid "trip code if VF-S11 is in tripped state."
msgstr ""

#. type: Plain text
msgid "'<n>.error-count' (s32, out)"
msgstr ""

#. type: Plain text
msgid "number of Modbus transactions which returned an error"
msgstr ""

#. type: Plain text
msgid "'<n>.max-speed' (bit, in)"
msgstr ""

#. type: Plain text
msgid ""
"ignore the loop-time parameter and run Modbus at maximum speed, at the "
"expense of higher CPU usage. Suggested use during spindle positioning."
msgstr ""

#. type: Plain text
msgid "'<n>.frequency-limit' (float, RO)"
msgstr ""

#. type: Plain text
msgid "upper limit read from VFD setup."
msgstr ""

#. type: Plain text
msgid "'<n>.loop-time' (float, RW)"
msgstr ""

#. type: Plain text
msgid "how often the Modbus is polled (default interval 0.1 seconds)"
msgstr ""

#. type: Plain text
msgid "'<n>.nameplate-HZ' (float, RW)"
msgstr ""

#. type: Plain text
msgid ""
"Nameplate Hz of motor (default 50). Used to calculate target frequency "
"(together with nameplate-RPM )  for a target RPM value as given by speed-"
"command."
msgstr ""

#. type: Plain text
msgid "'<n>.nameplate-RPM' (float, RW)"
msgstr ""

#. type: Plain text
msgid "Nameplate RPM of motor (default 1410)"
msgstr ""

#. type: Plain text
msgid "'<n>.rpm-limit' (float, RW)"
msgstr ""

#. type: Plain text
msgid "do-not-exceed soft limit for motor RPM (defaults to nameplate-RPM )."
msgstr ""

#. type: Plain text
msgid "'<n>.tolerance' (float, RW)"
msgstr ""

#. type: Plain text
msgid ""
"speed tolerance (default 0.01) for determining whether spindle is at speed "
"(0.01 meaning: output frequency is within 1% of target frequency)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "INI file configuration"
msgstr ""

#. type: Plain text
msgid ""
"This lists all options understood by vfs11_vfd. Typical setups for RS232, "
"RS485 and TCP can be found in 'src/hal/user_comps/vfs11_vfd/*.ini'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[VFS11]\n"
"# serial connection \n"
"TYPE=rtu\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# serial port\n"
"DEVICE=/dev/ttyS0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# TCP server - wait for incoming connection\n"
"TYPE=tcpserver\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# tcp portnumber for TYPE=tcpserver or tcpclient\n"
"PORT=1502\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# TCP client - active outgoing connection\n"
"TYPE=tcpclient\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# destination to connect to if TYPE=tcpclient\n"
"TCPDEST=192.168.1.1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#---------- meaningful only if TYPE=rtu -------\n"
"# serial device detail \n"
"# 5 6 7 8\n"
"BITS= 5\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# even odd none\t\n"
"PARITY=none\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# 110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200\n"
"BAUD=19200\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# 1 2\n"
"STOPBITS=1    \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#rs232 rs485\n"
"SERIAL_MODE=rs485\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# up down none\n"
"# this feature might not work with a stock Ubuntu\n"
"# libmodbus5/libmodbus-dev package, and generate a warning\n"
"# execution will continue as if RTS_MODE=up were given.\n"
"RTS_MODE=up\n"
"#---------------------\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# modbus timers in seconds\n"
"# inter-character timer\n"
"BYTE_TIMEOUT=0.5\n"
"# packet timer\n"
"RESPONSE_TIMEOUT=0.5\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# target modbus ID\n"
"TARGET=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# on I/O failure, try to reconnect after sleeping\n"
"# for RECONNECT_DELAY seconds\n"
"RECONNECT_DELAY=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# misc flags\n"
"DEBUG=10\n"
"MODBUS_DEBUG=0\n"
"POLLCYCLES=10\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#\n"
"# example usage of the VF-S11 VFD driver\n"
"#\n"
"#\n"
"loadusr -Wn spindle-vfd vfs11_vfd -n spindle-vfd\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle direction pins to the VFD\n"
"net vfs11-fwd spindle-vfd.spindle-fwd <= spindle.0.forward\n"
"net vfs11-rev spindle-vfd.spindle-rev <= spindle.0.reverse\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle on pin to the VF-S11\n"
"net vfs11-run spindle-vfd.spindle-on <= spindle.0.on\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the VF-S11 at speed to the motion at speed\n"
"net vfs11-at-speed spindle.0.at-speed <= spindle-vfd.at-speed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle RPM to the VF-S11\n"
"net vfs11-RPM spindle-vfd.speed-command <= spindle.0.speed-out\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the VF-S11 DC brake\n"
"# since this draws power during spindle off, the dc-brake pin would\n"
"# better be driven by a monoflop which triggers on spindle-on falling edge\n"
"#net vfs11-spindle-brake spindle.N.brake => spindle-vfd.dc-brake\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# to use the VFS11 jog mode for spindle orient \n"
"# see orient.9 and motion.9\n"
"net spindle-orient spindle.0.orient spindle-vfd.max-speed spindle-vfd.jog-mode\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# take precedence over control panel\n"
"setp spindle-vfd.enable 1\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Panel operation"
msgstr ""

#. type: Plain text
msgid ""
"The vfs11_vfd driver takes precedence over panel control while it is enabled "
"(see 'enable' pin), effectively disabling the panel. Clearing the 'enable' "
"pin re-enables the panel. Pins and parameters can still be set, but will not "
"be written to the VFD untile the 'enable' pin is set. Operating parameters "
"are still read while bus control is disabled. Exiting the vfs11_vfd driver "
"in a controlled way will release the VFD from the bus and restore panel "
"control."
msgstr ""

#. type: Plain text
msgid ""
"See the EMC2 Integrators Manual for more information. For a detailed "
"register description of the Toshiba VFD's, see the \"TOSVERT VF-S11 "
"Communications Function Instruction Manual\" (Toshiba document number "
"E6581222) and the \"TOSVERT VF-S11 Instruction manual\" (Toshiba document "
"number E6581158)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Error Recovery"
msgstr ""

#. type: Plain text
msgid ""
"+vfs11_vfd+ recovers from I/O errors as follows: First, all HAL pins are set "
"to default values, and the driver will sleep for +RECONNECT_DELAY+ seconds "
"(default 1 second)."
msgstr ""

#. type: Plain text
msgid "Serial (+TYPE=rtu+) mode: on error, close and reopen the serial port."
msgstr ""

#. type: Plain text
msgid ""
"TCP server (+TYPE=tcpserver+) mode: on losing the TCP connection, the driver "
"will go back to listen for incoming connections."
msgstr ""

#. type: Plain text
msgid ""
"TCP client (+TYPE=tcpclient+) mode: on losing the TCP connection, the driver "
"will reconnect to 'TCPDEST:PORTNO'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Configuring the VFS11 VFD for Modbus usage"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Connecting the Serial Port"
msgstr ""

#. type: Plain text
msgid ""
"The VF-S11 has an RJ-45 jack for serial communication. Unfortunately, it "
"does not have a standard RS-232 plug and logic levels.  The Toshiba-"
"recommended way is: connect the USB001Z USB-to-serial conversion unit to the "
"drive, and plug the USB port into the PC. A cheaper alternative is a "
"homebrew interface ( http://git.mah.priv.at/gitweb/vfs11-vfd.git/blob_plain/"
"refs/heads/f12-prod:/VFS11-RJ45_e.pdf[hints from Toshiba support], http://"
"git.mah.priv.at/gitweb/vfs11-vfd.git/blob_plain/refs/heads/f12-prod:/vfs11-"
"rs232.pdf[circuit diagram])."
msgstr ""

#. type: Plain text
msgid "Note: the 24V output from the VFD has no short-circuit protection."
msgstr ""

#. type: Plain text
msgid ""
"Serial port factory defaults are 9600/8/1/even, the protocol defaults to the "
"proprietary \"Toshiba Inverter Protocol\"."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Modbus setup"
msgstr ""

#. type: Plain text
msgid ""
"Several parameters need setting before the VF-S11 will talk to this module. "
"This can either be done manually with the control panel, or over the serial "
"link - Toshiba supplies a Windows application called 'PCM001Z' which can "
"read/set parameters in the VFD.  Note - PCM001Z only talks the Toshiba "
"inverter protocol. So the last parameter which you'd want to change is the "
"protocol - set from Toshiba Inverter Protocol to Modbus; thereafter, the "
"Windows app is useless."
msgstr ""

#. type: Plain text
msgid ""
"To increase the upper frequency limit, the UL and FH parameters must be "
"changed on the panel. I increased them from 50 to 80."
msgstr ""

#. type: Plain text
msgid ""
"See dump-params.mio for a description of non-standard VF-S11 parameters of "
"my setup. This file is for the http://git.mah.priv.at/gitweb/modio.git[modio "
"Modbus interactive utility]."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Programming Note"
msgstr ""

#. type: Plain text
msgid ""
"The vfs11_vfd driver uses the http://www.libmodbus.org[libmodbus version 3] "
"library which is more recent than the version 2 code used in +gs2_vfd+."
msgstr ""

#. type: Plain text
msgid ""
"The Ubuntu +libmodbus5+ and +libmodbus-dev+ packages are only available "
"starting from Ubuntu 12 ('Precise Pengolin'). Moreover, these packages lack "
"support for the MODBUS_RTS_MODE_* flags. Therefore, building vfs11_vfd using "
"this library might generate a warning if RTS_MODE= is specified in the ini "
"file."
msgstr ""

#. type: Plain text
msgid "To use the full functionality on lucid and precise:"
msgstr ""

#. type: Plain text
msgid ""
"remove the libmodbus packages: `sudo apt-get remove libmodbus5 libmodbus-dev`"
msgstr ""

#. type: Plain text
msgid ""
"build and install libmodbus version 3 from source as outlined https://github."
"com/stephane/libmodbus/blob/master/README.rst[here]."
msgstr ""

#. type: Plain text
msgid ""
"Libmodbus does not build on Ubuntu Hardy, hence vfs11_vfd is not available "
"on hardy."
msgstr ""

#.  Michael Haberler; loosely based on gs2_vfd by Steve Padnos and John Thornton.
#. type: Title =
#, no-wrap
msgid "PCI Parallel Port"
msgstr ""

#. type: Plain text
msgid ""
"When you add a second parallel port to your PCI bus you have to find out the "
"address before you can use it with LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"To find the address of your parallel port card open a terminal window and "
"type"
msgstr ""

#. type: Plain text
msgid ""
"You will see something similar to this as well as info on everything else on "
"the PCI bus:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"0000:00:10.0 Communication controller: \\\n"
"        NetMos Technology PCI 1 port parallel adapter (rev 01)  \n"
"        Subsystem: LSI Logic / Symbios Logic: Unknown device 0010  \n"
"        Flags: medium devsel, IRQ 11  \n"
"        I/O ports at a800 [size=8]  \n"
"        I/O ports at ac00 [size=8]  \n"
"        I/O ports at b000 [size=8]  \n"
"        I/O ports at b400 [size=8]  \n"
"        I/O ports at b800 [size=8]  \n"
"        I/O ports at bc00 [size=16]\n"
msgstr ""

#. type: Plain text
msgid "In my case the address was the first one so I changed my .hal file from"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=0x378\n"
msgstr ""

#. type: Plain text
msgid "to"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt hal_parport cfg=\"0x378 0xa800 in\"\n"
msgstr ""

#. type: Plain text
msgid "(Note the double quotes surrounding the addresses.)"
msgstr ""

#. type: Plain text
msgid ""
"and then added the following lines so the parport will be read and written:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"addf parport.1.read base-thread  \n"
"addf parport.1.write base-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"After doing the above then run your config and verify that the parallel port "
"got loaded in Machine/Show HAL Configuration window."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC can control up to 8 spindles. The number is set in the INI file.  "
"The examples below all refer to a single-spindle config with spindle control "
"pins with names like spindle.0...  In the case of a multiple spindle machine "
"all that changes is that additional pins exist with names such as "
"spindle.6..."
msgstr ""

#. type: Plain text
msgid "(((0-10v Spindle Speed Example)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "0-10v Spindle Speed"
msgstr ""

#. type: Plain text
msgid ""
"If your spindle speed is controlled by an analog signal, (for example, by a "
"VFD with a 0 to 10 volt signal) and you're using a DAC card like the m5i20 "
"to output the control signal:"
msgstr ""

#. type: Plain text
msgid ""
"First you need to figure the scale of spindle speed to control signal.  For "
"this example the spindle top speed of 5000 RPM is equal to 10 volts."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/spindle-math.png"
msgstr ""

#. type: Plain text
msgid ""
"We have to add a scale component to the HAL file to scale the spindle.N."
"speed-out to the 0 to 10 needed by the VFD if your DAC card does not do "
"scaling."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt scale count=1\n"
"addf scale.0 servo-thread\n"
"setp scale.0.gain 0.002    \n"
"net spindle-speed-scale spindle.0.speed-out => scale.0.in\n"
"net spindle-speed-DAC scale.0.out => <your DAC pin name>    \n"
msgstr ""

#. type: Plain text
msgid "(((PWM Spindle Speed Example)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PWM Spindle Speed"
msgstr ""

#. type: Plain text
msgid ""
"If your spindle can be controlled by a PWM signal, use the pwmgen component "
"to create the signal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt pwmgen output_type=0 \n"
"addf pwmgen.update servo-thread\n"
"addf pwmgen.make-pulses base-thread    \n"
"net spindle-speed-cmd spindle.0.speed-out => pwmgen.0.value\n"
"net spindle-on spindle.0.on => pwmgen.0.enable\n"
"net spindle-pwm pwmgen.0.pwm => parport.0.pin-09-out\n"
"# Set the spindle's top speed in RPM\n"
"setp pwmgen.0.scale 1800\n"
msgstr ""

#. type: Plain text
msgid ""
"This assumes that the spindle controller's response to PWM is simple: 0% PWM "
"gives 0 RPM, 10% PWM gives 180 RPM, etc. If there is a minimum PWM required "
"to get the spindle to turn, follow the example in the nist-lathe sample "
"configuration to use a scale component."
msgstr ""

#. type: Plain text
msgid "(((Spindle Enable Example)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Spindle Enable"
msgstr ""

#. type: Plain text
msgid ""
"If you need a spindle enable signal, link your output pin to spindle.0.on.  "
"To link these pins to a parallel port pin put something like the following "
"in your .hal file, making sure you pick the pin that is connected to your "
"control device."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net spindle-enable spindle.0.on => parport.0.pin-14-out\n"
msgstr ""

#. type: Plain text
msgid "(((Spindle Direction Example)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Spindle Direction"
msgstr ""

#. type: Plain text
msgid ""
"If you have direction control of your spindle the HAL pins spindle.N.forward "
"and spindle.N.reverse are controlled by M3 and M4. Spindle speed 'Sn' must "
"be set to a positive non-zero value for M3/M4 to turn on spindle motion."
msgstr ""

#. type: Plain text
msgid ""
"To link these pins to a parallel port pin, put something like the following "
"in your .hal file making sure you pick the pin that is connected to your "
"control device."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net spindle-fwd spindle.0.forward => parport.0.pin-16-out\n"
"net spindle-rev spindle.0.reverse => parport.0.pin-17-out\n"
msgstr ""

#. type: Plain text
msgid "(((Spindle Soft Start Example)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Spindle Soft Start"
msgstr ""

#. type: Plain text
msgid ""
"If you need to ramp your spindle speed command and your control does not "
"have that feature it can be done in HAL. Basically you need to hijack the "
"output of spindle.N.speed-out and run it through a limit2 component with the "
"scale set so it will ramp the rpm from spindle.N.speed-out to your device "
"that receives the rpm. The second part is to let LinuxCNC know when the "
"spindle is at speed so motion can begin."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"In the 0-10 volt example the line\n"
"    'net spindle-speed-scale spindle.0.speed-out => scale.0.in'\n"
"is changed as shown in the following example:\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Intro to HAL components limit2 and near:"
msgstr ""

#. type: delimited block *
msgid ""
"In case you have not run across them before, here's a quick introduction to "
"the two HAL components used in the following example."
msgstr ""

#. type: delimited block *
msgid "A \"limit2\" is a HAL component (floating point) that accepts an"
msgstr ""

#. type: delimited block *
msgid ""
"input value and provides an output that has been limited to a max/min range, "
"and also limited to not exceed a specified rate of change."
msgstr ""

#. type: delimited block *
msgid "A \"near\" is a HAL component (floating point) with a binary output"
msgstr ""

#. type: delimited block *
msgid "that says whether two inputs are approximately equal."
msgstr ""

#. type: delimited block *
msgid ""
"More info is available in the documentation for HAL components, or from the "
"man pages, just say 'man limit2' or 'man near' in a terminal."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load real time a limit2 and a near with names so it is easier to follow\n"
"loadrt limit2 names=spindle-ramp\n"
"loadrt near names=spindle-at-speed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# add the functions to a thread\n"
"addf spindle-ramp servo-thread\n"
"addf spindle-at-speed servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set the parameter for max rate-of-change\n"
"# (max spindle accel/decel in units per second)\n"
"setp spindle-ramp.maxv 60\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# hijack the spindle speed out and send it to spindle ramp in\n"
"net spindle-cmd <= spindle.0.speed-out => spindle-ramp.in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# the output of spindle ramp is sent to the scale in\n"
"net spindle-ramped <= spindle-ramp.out => scale.0.in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# to know when to start the motion we send the near component \n"
"# (named spindle-at-speed) to the spindle commanded speed from\n"
"# the signal spindle-cmd and the actual spindle speed\n"
"# provided your spindle can accelerate at the maxv setting.\n"
"net spindle-cmd => spindle-at-speed.in1\n"
"net spindle-ramped => spindle-at-speed.in2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# the output from spindle-at-speed is sent to spindle.0.at-speed\n"
"# and when this is true motion will start\n"
"net spindle-ready <= spindle-at-speed.out => spindle.0.at-speed\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Spindle Feedback"
msgstr ""

#. type: Plain text
msgid "(((Spindle Synchronized Motion Example)))"
msgstr ""

#. type: Plain text
msgid ""
"Spindle feedback is needed by LinuxCNC to perform any spindle coordinated "
"motions like threading and constant surface speed.  LinuxCNC can perform "
"synchronised motion and CSS with any of up to 8 spindles. Which spindles are "
"used is controlled from G-code. CSS is possible with several spindles "
"simultaneously."
msgstr ""

#. type: Plain text
msgid ""
"The StepConf Wizard can perform the connections for a single-spindle "
"configuration for you if you select Encoder Phase A and Encoder Index as "
"inputs."
msgstr ""

#. type: Plain text
msgid "Hardware assumptions:"
msgstr ""

#. type: Plain text
msgid "An encoder is connected to the spindle and puts out 100 pulses per"
msgstr ""

#. type: Plain text
msgid "revolution on phase A"
msgstr ""

#. type: Plain text
msgid "The encoder A phase is connected to the parallel port pin 10"
msgstr ""

#. type: Plain text
msgid "The encoder index pulse is connected to the parallel port pin 11"
msgstr ""

#. type: Plain text
msgid ""
"Basic Steps to add the components and configure them: footnote:[In this "
"example, we will assume that some encoders have already been issued to axes/"
"joints 0, 1, and 2. So the next encoder available for us to attach to the "
"spindle would be number 3. Your situation may differ.] footnote:[The HAL "
"encoder index-enable is an exception to the rule in that it behaves as both "
"an input and an output, see the <<sec:encoder,Encoder Section>> for details] "
"footnote:[It is because we selected 'non-quadrature simple counting...' "
"above that we can get away with 'quadrature' counting without having any B "
"quadrature input.]"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# add the encoder to HAL and attach it to threads.\n"
"loadrt encoder num_chan=4\n"
"addf encoder.update-counters base-thread\n"
"addf encoder.capture-position servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set the HAL encoder to 100 pulses per revolution.\n"
"setp encoder.3.position-scale 100\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set the HAL encoder to non-quadrature simple counting using A only.\n"
"setp encoder.3.counter-mode true\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the HAL encoder outputs to LinuxCNC.\n"
"net spindle-position encoder.3.position => spindle.0.revs\n"
"net spindle-velocity encoder.3.velocity => spindle.0.speed-in\n"
"net spindle-index-enable encoder.3.index-enable <=> spindle.0.index-enable\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the HAL encoder inputs to the real encoder.\n"
"net spindle-phase-a encoder.3.phase-A <= parport.0.pin-10-in\n"
"net spindle-phase-b encoder.3.phase-B \n"
"net spindle-index encoder.3.phase-Z <= parport.0.pin-11-in\n"
msgstr ""

#. type: Plain text
msgid "(((Spindle At Speed Example)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Spindle At Speed"
msgstr ""

#. type: Plain text
msgid ""
"To enable LinuxCNC to wait for the spindle to be at speed before executing a "
"series of moves. You need to set spindle.N.at-speed to true when the spindle "
"is at the commanded speed. To do this you need spindle feedback from an "
"encoder. Since the feedback and the commanded speed are not usually "
"'exactly' the same you should to use the 'near' component to determine that "
"the two numbers are close enough."
msgstr ""

#. type: Plain text
msgid ""
"The connections needed are from the spindle velocity command signal to near."
"n.in1 and from the spindle velocity from the encoder to near.n.in2. Then the "
"near.n.out is connected to spindle.N.at-speed. The near.n.scale needs to be "
"set to say how close the two numbers must be before turning on the output. "
"Depending on your setup you may need to adjust the scale to work with your "
"hardware."
msgstr ""

#. type: Plain text
msgid ""
"The following is typical of the additions needed to your HAL file to enable "
"Spindle At Speed. If you already have near in your HAL file then increase "
"the count and adjust code to suit. Check to make sure the signal names are "
"the same in your HAL file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load a near component and attach it to a thread\n"
"loadrt near\n"
"addf near.0 servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect one input to the commanded spindle speed\n"
"net spindle-cmd => near.0.in1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect one input to the encoder-measured spindle speed\n"
"net spindle-velocity => near.0.in2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the output to the spindle-at-speed input\n"
"net spindle-at-speed spindle.0.at-speed <= near.0.out\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set the spindle speed inputs to agree if within 1%\n"
"setp near.0.scale 1.01\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "MPG Pendant"
msgstr ""

#. type: Plain text
msgid ""
"This example is to explain how to hook up the common MPG pendants found on "
"the market today. This example uses an MPG3 pendant and a C22 pendant "
"interface card from CNC4PC connected to a second parallel port plugged into "
"the PCI slot. This example gives you 3 axes with 3 step increments of 0.1, "
"0.01, 0.001"
msgstr ""

#. type: Plain text
msgid ""
"In your custom.hal file or jog.hal file add the following, making sure you "
"don't have mux4 or an encoder already in use. If you do just increase the "
"counts and change the reference numbers. More information about mux4 and "
"encoder can be found in the HAL manual or the man page."
msgstr ""

#. type: Plain text
msgid ""
"See the <<sec:hal-section,HAL Ini Section>> of the manual for more "
"information on adding a hal file."
msgstr ""

#. type: Plain text
msgid ""
"Jog management pins are provided for each joint and all coordinate letters.  "
"This example uses the axis jog pins for jogging in world mode.  Machines "
"with non-identity kinematics may need use additional connections for jogging "
"in joint mode."
msgstr ""

#. type: Block title
#, no-wrap
msgid "jog.hal"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Jog Pendant \n"
"loadrt encoder num_chan=1 \n"
"loadrt mux4 count=1 \n"
"addf encoder.capture-position servo-thread \n"
"addf encoder.update-counters base-thread \n"
"addf mux4.0 servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# If your MPG outputs a quadrature signal per click set x4 to 1  \n"
"# If your MPG puts out 1 pulse per click set x4 to 0 \n"
"setp encoder.0.x4-mode 0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# For velocity mode, set to 1\n"
"# In velocity mode the axis stops when the dial is stopped\n"
"# even if that means the commanded motion is not completed,\n"
"# For position mode (the default), set to 0\n"
"# In position mode the axis will move exactly jog-scale\n"
"# units for each count, regardless of how long that might take,\n"
"setp axis.x.jog-vel-mode 0\n"
"setp axis.y.jog-vel-mode 0\n"
"setp axis.z.jog-vel-mode 0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This sets the scale that will be used based on the input to the mux4\n"
"setp mux4.0.in0 0.1\n"
"setp mux4.0.in1 0.01\n"
"setp mux4.0.in2 0.001\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The inputs to the mux4 component\n"
"net scale1 mux4.0.sel0 <= parport.1.pin-09-in\n"
"net scale2 mux4.0.sel1 <= parport.1.pin-10-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The output from the mux4 is sent to each axis jog scale\n"
"net mpg-scale <= mux4.0.out\n"
"net mpg-scale => axis.x.jog-scale\n"
"net mpg-scale => axis.y.jog-scale\n"
"net mpg-scale => axis.z.jog-scale\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The MPG inputs\n"
"net mpg-a encoder.0.phase-A <= parport.1.pin-02-in\n"
"net mpg-b encoder.0.phase-B <= parport.1.pin-03-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The Axis select inputs\n"
"net mpg-x axis.x.jog-enable <= parport.1.pin-04-in\n"
"net mpg-y axis.y.jog-enable <= parport.1.pin-05-in\n"
"net mpg-z axis.z.jog-enable <= parport.1.pin-06-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The encoder output counts to the axis. Only the selected axis will move.\n"
"net encoder-counts  <= encoder.0.counts\n"
"net encoder-counts => axis.x.jog-counts\n"
"net encoder-counts => axis.y.jog-counts\n"
"net encoder-counts => axis.z.jog-counts\n"
msgstr ""

#. type: Plain text
msgid ""
"If the machine is capable of high acceleration to smooth out the moves for "
"each click of the MPG use the <<sec:ilowpass,ilowpass>> component to limit "
"the acceleration."
msgstr ""

#. type: Block title
#, no-wrap
msgid "jog.hal with ilowpass"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt encoder num_chan=1\n"
"loadrt mux4 count=1\n"
"addf encoder.capture-position servo-thread\n"
"addf encoder.update-counters base-thread\n"
"addf mux4.0 servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt ilowpass\n"
"addf ilowpass.0 servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp ilowpass.0.scale 1000\n"
"setp ilowpass.0.gain 0.01\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# If your MPG outputs a quadrature signal per click set x4 to 1\n"
"# If your MPG puts out 1 pulse per click set x4 to 0\n"
"setp encoder.0.x4-mode 0\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This sets the scale that will be used based on the input to the mux4\n"
"# The scale used here has to be multiplied by the ilowpass scale\n"
"setp mux4.0.in0 0.0001\n"
"setp mux4.0.in1 0.00001\n"
"setp mux4.0.in2 0.000001\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The output from encoder counts is sent to ilowpass\n"
"net mpg-out ilowpass.0.in <= encoder.0.counts\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The output from the ilowpass is sent to each axis jog count\n"
"# Only the selected axis will move.\n"
"net encoder-counts  <= ilowpass.0.out\n"
"net encoder-counts => axis.x.jog-counts\n"
"net encoder-counts => axis.y.jog-counts\n"
"net encoder-counts => axis.z.jog-counts\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "GS2 Spindle"
msgstr ""

#. type: Plain text
msgid ""
"This example shows the connections needed to use an Automation Direct GS2 "
"VFD to drive a spindle. The spindle speed and direction is controlled by "
"LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"Using the GS2 component involves very little to set up. We start with a "
"Stepconf Wizard generated config. Make sure the pins with \"Spindle CW\" and "
"\"Spindle PWM\" are set to unused in the parallel port setup screen."
msgstr ""

#. type: Plain text
msgid ""
"In the custom.hal file we place the following to connect LinuxCNC to the GS2 "
"and have LinuxCNC control the drive."
msgstr ""

#. type: Block title
#, no-wrap
msgid "GS2 Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load the user space component for the Automation Direct GS2 VFD's \n"
"loadusr -Wn spindle-vfd gs2_vfd -r 9600 -p none -s 2 -n spindle-vfd\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle direction pin to the GS2 \n"
"net gs2-fwd spindle-vfd.spindle-fwd <= spindle.N.forward\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle on pin to the GS2 \n"
"net gs2-run spindle-vfd.spindle-on <= spindle.N.on\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the GS2 at speed to the motion at speed \n"
"net gs2-at-speed spindle.N.at-speed <= spindle-vfd.at-speed\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# connect the spindle RPM to the GS2 \n"
"net gs2-RPM spindle-vfd.speed-command <= spindle.N.speed-out\n"
msgstr ""

#. type: Plain text
msgid ""
"The transmission speed might be able to be faster depending on the exact "
"environment. Both the drive and the command line options must match. To "
"check for transmission errors add the '-v' command line option and run from "
"a terminal."
msgstr ""

#. type: Plain text
msgid ""
"On the GS2 drive itself you need to set a couple of things before the modbus "
"communications will work. Other parameters might need to be set based on "
"your physical requirements but these are beyond the scope of this manual. "
"Refer to the GS2 manual that came with the drive for more information on the "
"drive parameters."
msgstr ""

#. type: Plain text
msgid "The communications switches must be set to RS-232C"
msgstr ""

#. type: Plain text
msgid "The motor parameters must be set to match the motor"
msgstr ""

#. type: Plain text
msgid "P3.00 (Source of Operation Command) must be set to Operation"
msgstr ""

#. type: Plain text
msgid "determined by RS-485 interface, 03 or 04"
msgstr ""

#. type: Plain text
msgid "P4.00 (Source of Frequency Command) must be set to Frequency"
msgstr ""

#. type: Plain text
msgid "determined by RS232C/RS485 communication interface, 05"
msgstr ""

#. type: Plain text
msgid "P9.01 (Transmission Speed) must be set to 9600 baud, 01"
msgstr ""

#. type: Plain text
msgid "P9.02 (Communication Protocol) must be set to \"Modbus RTU mode,"
msgstr ""

#. type: Plain text
msgid "8 data bits, no parity, 2 stop bits\", 03"
msgstr ""

#. type: Plain text
msgid "A PyVCP panel based on this example is <<gs2-rpm-meter,here>>."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Classicladder Introduction"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "History"
msgstr ""

#. type: Plain text
msgid ""
"Classic Ladder is a free implementation of a ladder interpreter, released "
"under the LGPL. It was written by Marc Le Douarain."
msgstr ""

#. type: Plain text
msgid "He describes the beginning of the project on his website:"
msgstr ""

#. type: Positional ($2) AttributeList argument for style 'quote'
#, no-wrap
msgid "Marc Le Douarain"
msgstr ""

#. type: Positional ($3) AttributeList argument for style 'quote'
#, no-wrap
msgid "from \"Genesis\" at the Classic Ladder website"
msgstr ""

#. type: delimited block _
msgid ""
"I decided to program a ladder language only for test purposes at the start, "
"in February 2001. It was planned, that I would have to participate to a new "
"product after leaving the enterprise in which I was working at that time. "
"And I was thinking that to have a ladder language in those products could be "
"a nice option to considerate. And so I started to code the first lines for "
"calculating a rung with minimal elements and displaying dynamically it under "
"Gtk, to see if my first idea to realize all this works."
msgstr ""

#. type: delimited block _
msgid ""
"And as quickly I've found that it advanced quite well, I've continued with "
"more complex elements: timer, multiples rungs, etc..."
msgstr ""

#. type: delimited block _
msgid ""
"Voila, here is this work... and more: I've continued to add features since "
"then."
msgstr ""

#. type: Plain text
msgid ""
"Classic Ladder has been adapted to work with LinuxCNC's HAL, and is "
"currently being distributed along with LinuxCNC. If there are issues/"
"problems/bugs please report them to the Enhanced Machine Controller project."
msgstr ""

#. type: Plain text
msgid ""
"Ladder logic or the Ladder programming language is a method of drawing "
"electrical logic schematics. It is now a graphical language very popular for "
"programming Programmable Logic Controllers (PLCs). It was originally "
"invented to describe logic made from relays. The name is based on the "
"observation that programs in this language resemble ladders, with two "
"vertical 'rails' and a series of horizontal 'rungs' between them. In Germany "
"and elsewhere in Europe, the style is to draw the rails horizontally along "
"the top and bottom of the page while the rungs are drawn vertically from "
"left to right."
msgstr ""

#. type: Plain text
msgid ""
"A program in ladder logic, also called a ladder diagram, is similar to a "
"schematic for a set of relay circuits. Ladder logic is useful because a wide "
"variety of engineers and technicians can understand and use it without much "
"additional training because of the resemblance."
msgstr ""

#. type: Plain text
msgid ""
"Ladder logic is widely used to program PLCs, where sequential control of a "
"process or manufacturing operation is required. Ladder logic is useful for "
"simple but critical control systems, or for reworking old hardwired relay "
"circuits. As programmable logic controllers became more sophisticated it has "
"also been used in very complex automation systems."
msgstr ""

#. type: Plain text
msgid ""
"Ladder logic can be thought of as a rule-based language, rather than a "
"procedural language. A 'rung' in the ladder represents a rule. When "
"implemented with relays and other electromechanical devices, the various "
"rules 'execute' simultaneously and immediately. When implemented in a "
"programmable logic controller, the rules are typically executed sequentially "
"by software, in a loop. By executing the loop fast enough, typically many "
"times per second, the effect of simultaneous and immediate execution is "
"obtained."
msgstr ""

#. type: Plain text
msgid "Ladder logic follows these general steps for operation."
msgstr ""

#. type: Plain text
msgid "Read Inputs"
msgstr ""

#. type: Plain text
msgid "Solve Logic"
msgstr ""

#. type: Plain text
msgid "Update Outputs"
msgstr ""

#. type: Plain text
msgid ""
"The most common components of ladder are contacts (inputs), these usually "
"are either NC (normally closed) or NO (normally open), and coils (outputs)."
msgstr ""

#. type: Plain text
msgid "the NO contact image:images/ladder_action_load.png[]"
msgstr ""

#. type: Plain text
msgid "the NC contact image:images/ladder_action_loadbar.png[]"
msgstr ""

#. type: Plain text
msgid "the coil (output) image:images/ladder_action_out.png[]"
msgstr ""

#. type: Plain text
msgid ""
"Of course there are many more components to a full ladder language, but "
"understanding these will help you grasp the overall concept."
msgstr ""

#. type: Plain text
msgid ""
"The ladder consists of one or more rungs. These rungs are horizontal traces "
"(representing wires), with components on them (inputs, outputs and other), "
"which get evaluated left to right."
msgstr ""

#. type: Plain text
msgid "This example is the simplest rung:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/example_link_contact_coil.png"
msgstr ""

#. type: Plain text
msgid ""
"The input on the left, B0, a normally open contact, is connected to the coil "
"(output) on the right, Q0. Now imagine a voltage gets applied to the "
"leftmost end, because the input B0 turns true (e.g. the input is activated, "
"or the user pushed the NO contact). The voltage has a direct path to reach "
"the coil (output) on the right, Q0.  As a consequence, the Q0 coil (output) "
"will turn from 0/off/false to 1/on/true.  If the user releases B0, the Q0 "
"output quickly returns to 0/off/false."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic Latching On-Off Circuit"
msgstr ""

#. type: Plain text
msgid ""
"Building on the above example, suppose we add a switch that closes whenever "
"the coil Q0 is active. This would be the case in a relay, where the coil can "
"activate the switch contacts; or in a contactor, where there are often "
"several small auxiliary contacts in addition to the large 3-phase contacts "
"that are the primary feature of the contactor."
msgstr ""

#. type: Plain text
msgid ""
"Since this auxiliary switch is driven from coil Q0 in our earlier example, "
"we will give it the same number as the coil that drives it.  This is the "
"standard practice followed in all ladder programming, although it may seem "
"strange at first to see a switch labeled the same as a coil. So let's call "
"this auxiliary contact Q0 and connect it across the B0 'pushbutton' contact "
"from our earlier example."
msgstr ""

#. type: Plain text
msgid "Let's take a look at it:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/example_link_contact_coil2.png"
msgstr ""

#. type: Plain text
msgid ""
"As before, when the user presses pushbutton B0, coil Q0 comes on.  And when "
"coil Q0 comes on, switch Q0 comes on. Now the interesting part happens. When "
"the user releases pushbutton B0, coil Q0 does not stop as it did before. "
"This is because switch Q0 of this circuit is effectively holding the user's "
"pushbutton pressed. So we see that switch Q0 is still holding coil Q0 on "
"after the 'start' pushbutton has been released."
msgstr ""

#. type: Plain text
msgid ""
"This type of contact on a coil or relay, used in this way, is often called a "
"'holding contact', because it 'holds on' the coil that it is associated "
"with. It is also occasionally called a 'seal' contact, and when it is active "
"it is said that the circuit is 'sealed'."
msgstr ""

#. type: Plain text
msgid ""
"Unfortunately, our circuit so far has little practical use, because, "
"although we have an 'on' or 'start' button in the form of pushbutton B0, we "
"have no way to shut this circuit off once it is started. But that's easy to "
"fix. All we need is a way to interrupt the power to coil Q0. So let's add a "
"normally-closed (NC) pushbutton just ahead of coil Q0."
msgstr ""

#. type: Plain text
msgid "Here's how that would look:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/example_link_contact_coil3.png"
msgstr ""

#. type: Plain text
msgid ""
"Now we have added 'off' or 'stop' pushbutton B1. If the user pushes it, "
"contact from the rung to the coil is broken.  When coil Q0 loses power, it "
"drops to 0/off/false. When coil Q0 goes off, so does switch Q0, so the "
"'holding contact' is broken, or the circuit is 'unsealed'. When the user "
"releases the 'stop' pushbutton, contact is restored from the rung to coil "
"Q0, but the rung has gone dead, so the coil doesn't come back on."
msgstr ""

#. type: Plain text
msgid ""
"This circuit has been used for decades on virtually every machine that has a "
"three-phase motor controlled by a contactor, so it was inevitable that it "
"would be adopted by ladder/PLC programmers. It is also a very safe circuit, "
"in that if 'start' and 'stop' are both pressed at the same time, the 'stop' "
"function always wins."
msgstr ""

#. type: Plain text
msgid ""
"This is the basic building block of much of ladder programming, so if you "
"are new to it, you would do well to make sure that you understand how this "
"circuit operates."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Ladder Concepts"
msgstr ""

#. type: Plain text
msgid ""
"Classic Ladder is a type of programming language originally implemented on "
"industrial PLCs (it's called Ladder Programming). It is based on the concept "
"of relay contacts and coils, and can be used to construct logic checks and "
"functions in a manner that is familiar to many systems integrators. Ladder "
"consists of rungs that may have branches and resembles an electrical "
"circuit. It is important to know how ladder programs are evaluated when "
"running."
msgstr ""

#. type: Plain text
msgid ""
"It seems natural that each line would be evaluated left to right, then the "
"next line down, etc., but it doesn't work this way in ladder logic.  Ladder "
"logic 'scans' the ladder rungs 3 times to change the state of the outputs."
msgstr ""

#. type: Plain text
msgid "the inputs are read and updated"
msgstr ""

#. type: Plain text
msgid "the logic is figured out"
msgstr ""

#. type: Plain text
msgid "the outputs are set"
msgstr ""

#. type: Plain text
msgid ""
"This can be confusing at first if the output of one line is read by the "
"input of a another rung. There will be one scan before the second input "
"becomes true after the output is set."
msgstr ""

#. type: Plain text
msgid ""
"Another gotcha with ladder programming is the \"Last One Wins\" rule. If you "
"have the same output in different locations of your ladder the state of the "
"last one will be what the output is set to."
msgstr ""

#. type: Plain text
msgid ""
"The most common language used when working with Classic Ladder is 'ladder'. "
"Classic Ladder also supports Sequential Function Chart (Grafcet)."
msgstr ""

#. type: Plain text
msgid "There are 2 components to Classic Ladder."
msgstr ""

#. type: Plain text
msgid "The real time module classicladder_rt"
msgstr ""

#. type: Plain text
msgid "The user space module (including a GUI) classicladder"
msgstr ""

#. type: Plain text
msgid ""
"Typically classic ladder components are placed in the custom.hal file if "
"your working from a Stepconf generated configuration. These must not be "
"placed in the custom_postgui.hal file or the Ladder Editor menu will be "
"grayed out."
msgstr ""

#. type: Plain text
msgid "Ladder files (.clp) must not contain any blank spaces in the name."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Realtime Module"
msgstr ""

#. type: Plain text
msgid ""
"Loading the Classic Ladder real time module (classicladder_rt) is possible "
"from a HAL file, or directly using a halcmd instruction. The first line "
"loads real time the Classic Ladder module. The second line adds the function "
"classicladder.0.refresh to the servo thread. This line makes Classic Ladder "
"update at the servo thread rate."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt classicladder_rt \n"
"addf classicladder.0.refresh servo-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"The speed of the thread that Classic Ladder is running in directly affects "
"the responsiveness to inputs and outputs. If you can turn a switch on and "
"off faster than Classic Ladder can notice it then you may need to speed up "
"the thread. The fastest that Classic Ladder can update the rungs is one "
"millisecond. You can put it in a faster thread but it will not update any "
"faster. If you put it in a slower than one millisecond thread then Classic "
"Ladder will update the rungs slower.  The current scan time will be "
"displayed on the section display, it is rounded to microseconds. If the scan "
"time is longer than one millisecond you may want to shorten the ladder or "
"put it in a slower thread."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to configure the number of each type of ladder object while "
"loading the Classic Ladder real time module. If you do not configure the "
"number of ladder objects Classic Ladder will use the default values."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Default Variable Count"
msgstr ""

#. type: Table
#, no-wrap
msgid "Object Name"
msgstr ""

#. type: Table
#, no-wrap
msgid "Variable Name"
msgstr ""

#. type: Table
#, no-wrap
msgid "Default Value"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of rungs"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numRungs)"
msgstr ""

#. type: Table
#, no-wrap
msgid "100"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of bits"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numBits)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of word variables"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numWords)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of timers"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numTimers)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of timers IEC"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numTimersIec)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of monostables"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numMonostables)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of counters"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numCounters)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of HAL inputs bit pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numPhysInputs)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of HAL output bit pins"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numPhysOutputs)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of arithmetic expressions"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numArithmExpr)"
msgstr ""

#. type: Table
#, no-wrap
msgid "50"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of Sections"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numSections)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of Symbols"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numSymbols)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of S32 inputs"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numS32in)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of S32 outputs"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numS32out)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of Float inputs"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numFloatIn)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of Float outputs"
msgstr ""

#. type: Table
#, no-wrap
msgid "(numFloatOut)"
msgstr ""

#. type: Plain text
msgid ""
"Objects of most interest are numPhysInputs, numPhysOutputs, numS32in, and "
"numS32out."
msgstr ""

#. type: Plain text
msgid ""
"Changing these numbers will change the number of HAL bit pins available. "
"numPhysInputs and numPhysOutputs control how many HAL bit (on/off) pins are "
"available. numS32in and numS32out control how many HAL signed integers (+- "
"integer range) pins are available."
msgstr ""

#. type: Plain text
msgid "For example (you don't need all of these to change just a few):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt classicladder_rt numRungs=12 numBits=100 numWords=10\n"
"numTimers=10 numMonostables=10 numCounters=10 numPhysInputs=10\n"
"numPhysOutputs=10 numArithmExpr=100 numSections=4 numSymbols=200\n"
"numS32in=5 numS32out=5\n"
msgstr ""

#. type: Plain text
msgid "To load the default number of objects:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt classicladder_rt\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Loading the Classic Ladder user module"
msgstr ""

#. type: Plain text
msgid ""
"Classic Ladder HAL commands must executed before the GUI loads or the menu "
"item Ladder Editor will not function. If you used the Stepper Config Wizard "
"place any Classic Ladder HAL commands in the custom.hal file."
msgstr ""

#. type: Plain text
msgid "To load the user module:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr classicladder\n"
msgstr ""

#. type: Plain text
msgid ""
"Only one .clp file can be loaded. If you need to divide your ladder use "
"Sections."
msgstr ""

#. type: Plain text
msgid "To load a ladder file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr classicladder myladder.clp\n"
msgstr ""

#. type: Plain text
msgid "Classic Ladder Loading Options"
msgstr ""

#. type: Plain text
msgid "'--nogui' - (loads without the ladder editor) normally used after"
msgstr ""

#. type: Plain text
msgid "debugging is finished."
msgstr ""

#. type: Plain text
msgid "'--modbus_port=port' - (loads the modbus port number)"
msgstr ""

#. type: Plain text
msgid "'--modmaster' - (initializes MODBUS master) should load the ladder"
msgstr ""

#. type: Plain text
msgid "program at the same time or the TCP is default port."
msgstr ""

#. type: Plain text
msgid "'--modslave' - (initializes MODBUS slave) only TCP"
msgstr ""

#. type: Plain text
msgid "To use Classic Ladder with HAL without EMC:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -w classicladder\n"
msgstr ""

#. type: Plain text
msgid ""
"The -w tells HAL not to close down the HAL environment until Classic Ladder "
"is finished."
msgstr ""

#. type: Plain text
msgid ""
"If you first load ladder program with the '--nogui' option then load Classic "
"Ladder again with no options the GUI will display the last loaded ladder "
"program."
msgstr ""

#. type: Plain text
msgid "In AXIS you can load the GUI from File/Ladder Editor..."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Classic Ladder GUI"
msgstr ""

#. type: Plain text
msgid ""
"If you load Classic Ladder with the GUI it will display two windows: section "
"display, and section manager."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Sections Manager"
msgstr ""

#. type: Plain text
msgid ""
"When you first start up Classic Ladder you get an empty Sections Manager "
"window."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Sections Manager Default Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Default_Sections_Manager.png"
msgstr ""

#. type: Plain text
msgid ""
"This window allows you to name, create or delete sections and choose what "
"language that section uses. This is also how you name a subroutine for call "
"coils."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Section Display"
msgstr ""

#. type: Plain text
msgid ""
"When you first start up Classic Ladder you get an empty Section Display "
"window. Displayed is one empty rung."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Section Display Default Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Default_Section_Display.png"
msgstr ""

#. type: Plain text
msgid "Most of the buttons are self explanatory:"
msgstr ""

#. type: Plain text
msgid ""
"The Vars button is for looking at variables, toggle it to display one, the "
"other, both, then none of the windows."
msgstr ""

#. type: Plain text
msgid ""
"The Config button is used for modbus and shows the max number of ladder "
"elements that was loaded with the real time module."
msgstr ""

#. type: Plain text
msgid ""
"The Symbols button will display an editable list of symbols for the "
"variables (hint you can name the inputs, outputs, coils etc)."
msgstr ""

#. type: Plain text
msgid ""
"The Quit button will shut down the user program meaning Modbus and the "
"display. The real time ladder program will still run in the background."
msgstr ""

#. type: Plain text
msgid ""
"The check box at the top right allows you to select whether variable names "
"or symbol names are displayed"
msgstr ""

#. type: Plain text
msgid ""
"You might notice that there is a line under the ladder program display that "
"reads \"Project failed to load...\" That is the status bar that gives you "
"info about elements of the ladder program that you click on in the display "
"window. This status line will now display HAL signal names for variables %I, "
"%Q and the first %W (in an equation) You might see some funny labels, such "
"as (103) in the rungs. This is displayed (on purpose) because of an old bug- "
"when erasing elements older versions sometimes didn't erase the object with "
"the right code. You might have noticed that the long horizontal connection "
"button sometimes didn't work in the older versions. This was because it "
"looked for the 'free' code but found something else. The number in the "
"brackets is the unrecognized code. The ladder program will still work "
"properly, to fix it erase the codes with the editor and save the program."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Variable Windows"
msgstr ""

#. type: Plain text
msgid ""
"This are two variable windows: the Bit Status Window (boolean) and the Watch "
"Window (signed integer). The Vars button is in the Section Display Window, "
"toggle the Vars button to display one, the other, both, then none of the "
"variable windows."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Bit Status Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Bit_Status.png"
msgstr ""

#. type: Plain text
msgid ""
"The Bit Status Window displays some of the boolean (on/off) variable data.  "
"Notice all variables start with the % sign. The %I variables represent HAL "
"input bit pins. The %Q represents the relay coil and HAL output bit pins. "
"The %B represents an internal relay coil or internal contact. The three edit "
"areas at the top allow you to select what 15 variables will be displayed in "
"each column. For instance, if the %B Variable column were 15 entries high, "
"and you entered 5 at the top of the column, variables %B5 to %B19 would be "
"displayed. The check boxes allow you to set and unset %B variables manually "
"as long as the ladder program isn't setting them as outputs.  Any Bits that "
"are set as outputs by the program when Classic Ladder is running can not be "
"changed and will be displayed as checked if on and unchecked if off."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Watch Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/watch_window.png"
msgstr ""

#. type: Plain text
msgid ""
"The Watch Window displays variable status. The edit box beside it is the "
"number stored in the variable and the drop-down box beside that allow you to "
"choose whether the number to be displayed in hex, decimal or binary. If "
"there are symbol names defined in the symbols window for the word variables "
"showing and the 'display symbols' checkbox is checked in the section display "
"window, symbol names will be displayed.  To change the variable displayed, "
"type the variable number, e.g. %W2 (if the display symbols check box is not "
"checked) or type the symbol name (if the display symbols checkbox is "
"checked) over an existing variable number/name and press the Enter Key."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Symbol Window"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Symbol Names window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Default_Symbols_names.png"
msgstr ""

#. type: Plain text
msgid ""
"This is a list of 'symbol' names to use instead of variable names to be "
"displayed in the section window when the 'display symbols' check box is "
"checked. You add the variable name (remember the '%' symbol and capital "
"letters), symbol name . If the variable can have a HAL signal connected to "
"it (%I, %Q, and %W-if you have loaded s32 pin with the real time module) "
"then the comment section will show the current HAL signal name or lack "
"thereof. Symbol names should be kept short to display better. Keep in mind "
"that you can display the longer HAL signal names of %I, %Q and %W variable "
"by clicking on them in the section window. Between the two, one should be "
"able to keep track of what the ladder program is connected to!"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Editor window"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Editor Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Editor.png"
msgstr ""

#. type: Plain text
msgid "'Add' - adds a rung after the selected rung"
msgstr ""

#. type: Plain text
msgid "'Insert' - inserts a rung before the selected rung"
msgstr ""

#. type: Plain text
msgid "'Delete' - deletes the selected rung"
msgstr ""

#. type: Plain text
msgid "'Modify' - opens the selected rung for editing"
msgstr ""

#. type: Plain text
msgid "Starting from the top left image:"
msgstr ""

#. type: Plain text
msgid "Object Selector, Eraser"
msgstr ""

#. type: Plain text
msgid "N.O. Input, N.C. Input, Rising Edge Input , Falling Edge Input"
msgstr ""

#. type: Plain text
msgid "Horizontal Connection, Vertical Connection , Long Horizontal Connection"
msgstr ""

#. type: Plain text
msgid "Timer IEC Block, Counter Block, Compare Variable"
msgstr ""

#. type: Plain text
msgid "Old Timer Block, Old Monostable Block (These have been replaced by the"
msgstr ""

#. type: Plain text
msgid "IEC Timer)"
msgstr ""

#. type: Plain text
msgid "COILS - N.O. Output, N.C. Output, Set Output, Reset Output"
msgstr ""

#. type: Plain text
msgid "Jump Coil, Call Coil, Variable Assignment"
msgstr ""

#. type: Plain text
msgid "A short description of each of the buttons:"
msgstr ""

#. type: Plain text
msgid "'Selector' - allows you to select existing objects and"
msgstr ""

#. type: Plain text
msgid "modify the information."
msgstr ""

#. type: Plain text
msgid "'Eraser' - erases an object."
msgstr ""

#. type: Plain text
msgid "'N.O. Contact' - creates a normally open contact. It can be an external"
msgstr ""

#. type: Plain text
msgid ""
"HAL-pin (%I) input contact, an internal-bit coil (%B) contact or a external "
"coil (%Q) contact. The HAL-pin input contact is closed when the HAL-pin is "
"true. The coil contacts are closed when the corresponding coil is active "
"(%Q2 contact closes when %Q2 coil is active)."
msgstr ""

#. type: Plain text
msgid ""
"'N.C. Contact' - creates a normally closed contact. It is the same as the"
msgstr ""

#. type: Plain text
msgid ""
"N.O. contact except that the contact is open when the HAL-pin is true or the "
"coil is active."
msgstr ""

#. type: Plain text
msgid ""
"'Rising Edge Contact - creates a contact that is closed when the HAL-pin"
msgstr ""

#. type: Plain text
msgid "goes from False to true, or the coil from not-active to active."
msgstr ""

#. type: Plain text
msgid ""
"'Falling Edge Contact' - creates a contact that is closed when the HAL-pin"
msgstr ""

#. type: Plain text
msgid "goes from true to false or the coil from active to not."
msgstr ""

#. type: Plain text
msgid "'Horizontal Connection' - creates a horizontal connection to objects."
msgstr ""

#. type: Plain text
msgid ""
"'Vertical Connection' - creates a vertical connection to horizontal lines."
msgstr ""

#. type: Plain text
msgid ""
"'Horizontal Running Connection' - creates a horizontal connection between"
msgstr ""

#. type: Plain text
msgid ""
"two objects and is a quick way to connect objects that are more than one "
"block apart."
msgstr ""

#. type: Plain text
msgid "'IEC Timer' - creates a timer and replaces the 'Timer'."
msgstr ""

#. type: Plain text
msgid "'Timer' - creates a Timer Module (depreciated use IEC Timer instead)."
msgstr ""

#. type: Plain text
msgid "'Monostable' - creates a one-shot monostable module"
msgstr ""

#. type: Plain text
msgid "'Counter' - creates a counter module."
msgstr ""

#. type: Plain text
msgid ""
"'Compare' - creates a compare block to compare variable to values or other"
msgstr ""

#. type: Plain text
msgid ""
"variables. (eg %W1<=5 or %W1=%W2) Compare cannot be placed in the right most "
"side of the section display."
msgstr ""

#. type: Plain text
msgid ""
"'Variable Assignment' - creates an assignment block so you to assign values "
"to"
msgstr ""

#. type: Plain text
msgid ""
"variables. (eg %W2=7 or %W1=%W2) ASSIGNMENT functions can only be placed at "
"the right most side of the section display."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Config Window"
msgstr ""

#. type: Plain text
msgid ""
"The config window shows the current project status and has the Modbus setup "
"tabs."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Config.png"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Ladder objects"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "CONTACTS"
msgstr ""

#. type: Plain text
msgid ""
"Represent switches or relay contacts. They are controlled by the variable "
"letter and number assigned to them."
msgstr ""

#. type: Plain text
msgid ""
"The variable letter can be B, I, or Q and the number can be up to a three "
"digit number eg. %I2, %Q3, or %B123. Variable I is controlled by a HAL input "
"pin with a corresponding number. Variable B is for internal contacts, "
"controlled by a B coil with a corresponding number.  Variable Q is "
"controlled by a Q coil with a corresponding number. (like a relay with "
"multiple contacts). E.g. if HAL pin classicladder.0.in-00 is true then %I0 N."
"O. contact would be on (closed, true, whatever you like to call it). If %B7 "
"coil is 'energized' (on, true, etc) then %B7 N.O. contact would be on. If "
"%Q1 coil is 'energized' then %Q1 N.O.  contact would be on (and HAL pin "
"classicladder.0.out-01 would be true.)"
msgstr ""

#. type: Plain text
msgid ""
"'N.O. Contact' - image:images/ladder_action_load.png[alt=\"Normally Open "
"Contact\"] (Normally Open)"
msgstr ""

#. type: Plain text
msgid "When the variable is false the switch is off."
msgstr ""

#. type: Plain text
msgid ""
"'N.C. Contact' - image:images/ladder_action_loadbar.png[alt=\"Normally "
"Closed Contact\"] (Normally"
msgstr ""

#. type: Plain text
msgid "Closed) When the variable is false the switch is on."
msgstr ""

#. type: Plain text
msgid "'Rising Edge Contact' - When the variable changes from false to true,"
msgstr ""

#. type: Plain text
msgid "the switch is PULSED on."
msgstr ""

#. type: Plain text
msgid "'Falling Edge Contact' - When the variable changes from true to false,"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "IEC TIMERS"
msgstr ""

#. type: Plain text
msgid ""
"Represent new count down timers. IEC Timers replace Timers and Monostables."
msgstr ""

#. type: Plain text
msgid "IEC Timers have 2 contacts."
msgstr ""

#. type: Plain text
msgid "'I' - input contact"
msgstr ""

#. type: Plain text
msgid "'Q' - output contact"
msgstr ""

#. type: Plain text
msgid "There are three modes - TON, TOF, TP."
msgstr ""

#. type: Plain text
msgid "'TON' - When timer input is true countdown begins and continues as long"
msgstr ""

#. type: Plain text
msgid ""
"as input remains true. After countdown is done and as long as timer input is "
"still true the output will be true."
msgstr ""

#. type: Plain text
msgid "'TOF' - When timer input is true, sets output true. When the input is"
msgstr ""

#. type: Plain text
msgid "false the timer counts down then sets output false."
msgstr ""

#. type: Plain text
msgid "'TP' - When timer input is pulsed true or held true timer sets output"
msgstr ""

#. type: Plain text
msgid "true till timer counts down. (one-shot)"
msgstr ""

#. type: Plain text
msgid ""
"The time intervals can be set in multiples of 100ms, seconds, or minutes."
msgstr ""

#. type: Plain text
msgid ""
"There are also Variables for IEC timers that can be read and/or written to "
"in compare or operate blocks."
msgstr ""

#. type: Plain text
msgid "'%TMxxx.Q' - timer done (Boolean, read write)"
msgstr ""

#. type: Plain text
msgid "'%TMxxx.P' - timer preset (read write)"
msgstr ""

#. type: Plain text
msgid "'%TMxxx.V' - timer value (read write)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "TIMERS"
msgstr ""

#. type: Plain text
msgid ""
"Represent count down timers. This is deprecated and replaced by IEC Timers."
msgstr ""

#. type: Plain text
msgid "Timers have 4 contacts."
msgstr ""

#. type: Plain text
msgid "'E' - enable (input) starts timer when true, resets when goes false"
msgstr ""

#. type: Plain text
msgid ""
"'C' - control (input) must be on for the timer to run (usually connect to E)"
msgstr ""

#. type: Plain text
msgid ""
"'D' - done (output) true when timer times out and as long as E remains true"
msgstr ""

#. type: Plain text
msgid "'R' - running (output) true when timer is running"
msgstr ""

#. type: Plain text
msgid "The timer base can be multiples of milliseconds, seconds, or minutes."
msgstr ""

#. type: Plain text
msgid ""
"There are also Variables for timers that can be read and/or written to in "
"compare or operate blocks."
msgstr ""

#. type: Plain text
msgid "'%Txx.R' - Timer xx running (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.D' - Timer xx done (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.V' - Timer xx current value (integer, read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.P' - Timer xx preset (integer, read or write)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "MONOSTABLES"
msgstr ""

#. type: Plain text
msgid ""
"Represent the original one-shot timers. This is now deprecated and replaced "
"by IEC Timers."
msgstr ""

#. type: Plain text
msgid "Monostables have 2 contacts, I and R."
msgstr ""

#. type: Plain text
msgid "'I' - input (input) will start the mono timer running."
msgstr ""

#. type: Plain text
msgid "'R' - running (output) will be true while timer is running."
msgstr ""

#. type: Plain text
msgid ""
"The I contact is rising edge sensitive meaning it starts the timer only when "
"changing from false to true (or off to on). While the timer is running the I "
"contact can change with no effect to the running timer. R will be true and "
"stay true till the timer finishes counting to zero. The timer base can be "
"multiples of milliseconds, seconds, or minutes."
msgstr ""

#. type: Plain text
msgid ""
"There are also Variables for monostables that can be read and/or written to "
"in compare or operate blocks."
msgstr ""

#. type: Plain text
msgid "'%Mxx.R' - Monostable xx running (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Mxx.V' - Monostable xx current value (integer, read only)"
msgstr ""

#. type: Plain text
msgid "'%Mxx.P' - Monostable xx preset (integer, read or write)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "COUNTERS"
msgstr ""

#. type: Plain text
msgid "Represent up/down counters."
msgstr ""

#. type: Plain text
msgid "There are 7 contacts:"
msgstr ""

#. type: Plain text
msgid "'R' - reset (input) will reset the count to 0."
msgstr ""

#. type: Plain text
msgid "'P' - preset (input) will set the count to the preset number assigned"
msgstr ""

#. type: Plain text
msgid "from the edit menu."
msgstr ""

#. type: Plain text
msgid "'U' - up count (input) will add one to the count."
msgstr ""

#. type: Plain text
msgid "'D' - down count (input) will subtract one from the count."
msgstr ""

#. type: Plain text
msgid "'E' - under flow (output) will be true when the count rolls over from 0"
msgstr ""

#. type: Plain text
msgid "to 9999."
msgstr ""

#. type: Plain text
msgid "'D' - done (output) will be true when the count equals the preset."
msgstr ""

#. type: Plain text
msgid ""
"'F' - overflow (output) will be true when the count rolls over from 9999"
msgstr ""

#. type: Plain text
msgid "to 0."
msgstr ""

#. type: Plain text
msgid ""
"The up and down count contacts are edge sensitive meaning they only count "
"when the contact changes from false to true (or off to on if you prefer)."
msgstr ""

#. type: Plain text
msgid "The range is 0 to 9999."
msgstr ""

#. type: Plain text
msgid ""
"There are also Variables for counters that can be read and/or written to in "
"compare or operate blocks."
msgstr ""

#. type: Plain text
msgid "'%Cxx.D' - Counter xx done (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.E' - Counter xx empty overflow (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.F' - Counter xx full overflow (Boolean, read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.V' - Counter xx current value (integer, read or write)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.P' - Counter xx preset (integer, read or write)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "COMPARE"
msgstr ""

#. type: Plain text
msgid ""
"For arithmetic comparison. Is variable %XXX = to this number (or evaluated "
"number)"
msgstr ""

#. type: Plain text
msgid ""
"The compare block will be true when comparison is true. you can use most "
"math symbols:"
msgstr ""

#. type: Plain text
msgid "+, - ,* , /, = (standard math symbols)"
msgstr ""

#. type: Plain text
msgid ""
"< (less than), > (greater than), <= (less or equal), >= (greater or equal), "
"<> (not equal)"
msgstr ""

#. type: Plain text
msgid ""
"(, ) separate into groups example %IF1=2,&%IF2<5 in pseudo code translates "
"to if %IF1 is equal to 2 and %IF2 is less than 5 then the comparison is "
"true.  Note the comma separating the two groups of comparisons."
msgstr ""

#. type: Plain text
msgid "^ (exponent),% (modulus),& (and),| (or),. -"
msgstr ""

#. type: Plain text
msgid "ABS (absolute), MOY (French for average) ,AVG (average)"
msgstr ""

#. type: Plain text
msgid "For example ABS(%W2)=1, MOY(%W1,%W2)<3."
msgstr ""

#. type: Plain text
msgid ""
"No spaces are allowed in the comparison equation. For example %C0.V>%C0.P is "
"a valid comparison expression while %C0.V > %CO.P is not a valid expression."
msgstr ""

#. type: Plain text
msgid ""
"There is a list of Variables down the page that can be used for reading from "
"and writing to ladder objects. When a new compare block is opened be sure "
"and delete the # symbol when you enter a compare."
msgstr ""

#. type: Plain text
msgid ""
"To find out if word variable #1 is less than 2 times the current value of "
"counter #0 the syntax would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "%W1<2*%C0.V\n"
msgstr ""

#. type: Plain text
msgid "To find out if S32in bit 2 is equal to 10 the syntax would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "%IW2=10\n"
msgstr ""

#. type: Plain text
msgid ""
"Note: Compare uses the arithmetic equals not the double equals that "
"programmers are used to."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "VARIABLE ASSIGNMENT"
msgstr ""

#. type: Plain text
msgid ""
"For variable assignment, e.g. assign this number (or evaluated number)  to "
"this variable %xxx, there are two math functions MINI and MAXI that check a "
"variable for maximum (0x80000000) and minimum values (0x07FFFFFFF) (think "
"signed values) and keeps them from going beyond."
msgstr ""

#. type: Plain text
msgid ""
"When a new variable assignment block is opened be sure to delete the # "
"symbol when you enter an assignment."
msgstr ""

#. type: Plain text
msgid ""
"To assign a value of 10 to the timer preset of IEC Timer 0 the syntax would "
"be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "%TM0.P=10\n"
msgstr ""

#. type: Plain text
msgid "To assign the value of 12 to s32out bit 3 the syntax would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "%QW3=12\n"
msgstr ""

#. type: Plain text
msgid ""
"When you assign a value to a variable with the variable assignment block the "
"value is retained until you assign a new value using the variable assignment "
"block. The last value assigned will be restored when LinuxCNC is started."
msgstr ""

#. type: Plain text
msgid ""
"The following figure shows an Assignment and a Comparison Example.  %QW0 is "
"a S32out bit and %IW0 is a S32in bit. In this case the HAL pin "
"classicladder.0.s32out-00 will be set to a value of 5 and when the HAL pin "
"classicladder.0.s32in-00 is 0 the HAL pin classicladder.0.out-00 will be set "
"to True."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Assign/Compare Example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/AssignCompare-Ladder.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Assignment_Expression.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Comparison_Expression.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "COILS"
msgstr ""

#. type: Plain text
msgid ""
"Coils represent relay coils. They are controlled by the variable letter and "
"number assigned to them."
msgstr ""

#. type: Plain text
msgid ""
"The variable letter can be B or Q and the number can be up to a three digit "
"number eg. %Q3, or %B123. Q coils control HAL out pins, e.g. if %Q15 is "
"energized then HAL pin classicladder.0.out-15 will be true. B coils are "
"internal coils used to control program flow."
msgstr ""

#. type: Plain text
msgid "'N.O. COIL' - (a relay coil.) When coil is energized it's N.O. contact"
msgstr ""

#. type: Plain text
msgid "will be closed (on, true, etc)"
msgstr ""

#. type: Plain text
msgid "'N.C. COIL' - (a relay coil that inverses its contacts.) When coil is"
msgstr ""

#. type: Plain text
msgid "energized it\"s N.O. contact will be open (off, false, etc)"
msgstr ""

#. type: Plain text
msgid ""
"'SET COIL' - (a relay coil with latching contacts) When coil is energized"
msgstr ""

#. type: Plain text
msgid "it's N.O. contact will be latched closed."
msgstr ""

#. type: Plain text
msgid "'RESET COIL' - (a relay coil with latching contacts) When coil is"
msgstr ""

#. type: Plain text
msgid "energized It's N.0. contact will be latched open."
msgstr ""

#. type: Plain text
msgid ""
"'JUMP COIL' - (a 'goto' coil) when coil is energized ladder program jumps"
msgstr ""

#. type: Plain text
msgid ""
"to a rung (in the CURRENT section) -jump points are designated by a rung "
"label. (Add rung labels in the section display, top left label box)"
msgstr ""

#. type: Plain text
msgid ""
"'CALL COIL' - (a 'gosub' coil) when coil is energized program jumps to a"
msgstr ""

#. type: Plain text
msgid ""
"subroutine section designated by a subroutine number -subroutines are "
"designated SR0 to SR9 (designate them in the section manager)"
msgstr ""

#. type: Plain text
msgid ""
"If you use a N.C. contact with a N.C. coil the logic will work (when the "
"coil is energized the contact will be closed) but that is really hard to "
"follow!"
msgstr ""

#. type: Block title
#, no-wrap
msgid "JUMP COIL"
msgstr ""

#. type: Plain text
msgid ""
"A JUMP COIL is used to 'JUMP' to another section, like a goto in BASIC "
"programming language."
msgstr ""

#. type: Plain text
msgid ""
"If you look at the top left of the sections display window you will see a "
"small label box and a longer comment box beside it. Now go to EditorâModify "
"then go back to the little box, type in a name."
msgstr ""

#. type: Plain text
msgid ""
"Go ahead and add a comment in the comment section. This label name is the "
"name of this rung only and is used by the JUMP COIL to identify where to go."
msgstr ""

#. type: Plain text
msgid ""
"When placing a JUMP COIL, add it in the rightmost position and change the "
"label to the rung you want to JUMP to."
msgstr ""

#. type: Block title
#, no-wrap
msgid "CALL COIL"
msgstr ""

#. type: Plain text
msgid ""
"A CALL COIL is used to go to a subroutine section then return, like a gosub "
"in BASIC programming language."
msgstr ""

#. type: Plain text
msgid ""
"If you go to the sections manager window hit the add section button.  You "
"can name this section, select what language it will use (ladder or "
"sequential), and select what type (main or subroutine)."
msgstr ""

#. type: Plain text
msgid ""
"Select a subroutine number (SR0 for example). An empty section will be "
"displayed and you can build your subroutine."
msgstr ""

#. type: Plain text
msgid ""
"When you've done that, go back to the section manager and click on the your "
"main section (default name prog1)."
msgstr ""

#. type: Plain text
msgid ""
"Now you can add a CALL COIL to your program. CALL COILs are to be placed at "
"the rightmost position in the rung."
msgstr ""

#. type: Plain text
msgid "Remember to change the label to the subroutine number you chose before."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Classic Ladder Variables"
msgstr ""

#. type: Plain text
msgid ""
"These Variables are used in COMPARE or OPERATE to get information about, or "
"change specs of, ladder objects such as changing a counter preset, or seeing "
"if a timer is done running."
msgstr ""

#. type: Plain text
msgid "List of variables :"
msgstr ""

#. type: Plain text
msgid "'%Bxxx' - Bit memory xxx (Boolean)"
msgstr ""

#. type: Plain text
msgid "'%Wxxx' - Word memory xxx (32 bits signed integer)"
msgstr ""

#. type: Plain text
msgid "'%IWxxx' - Word memory xxx (S32 in pin)"
msgstr ""

#. type: Plain text
msgid "'%QWxxx' - Word memory xxx (S32 out pin)"
msgstr ""

#. type: Plain text
msgid "'%IFxx' - Word memory xx (Float in pin) (*converted to S32 in Classic"
msgstr ""

#. type: Plain text
msgid "Ladder*)"
msgstr ""

#. type: Plain text
msgid "'%QFxx' - Word memory xx (Float out pin) (*converted to S32 in Classic"
msgstr ""

#. type: Plain text
msgid "'%Txx.R' - Timer xx running (Boolean, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.D' - Timer xx done (Boolean, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.V' - Timer xx current value (integer, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Txx.P' - Timer xx preset (integer)"
msgstr ""

#. type: Plain text
msgid "'%TMxxx.Q' - Timer xxx done (Boolean, read write)"
msgstr ""

#. type: Plain text
msgid "'%TMxxx.P' - Timer xxx preset (integer, read write)"
msgstr ""

#. type: Plain text
msgid "'%TMxxx.V' - Timer xxx value (integer, read write)"
msgstr ""

#. type: Plain text
msgid "'%Mxx.R' - Monostable xx running (Boolean)"
msgstr ""

#. type: Plain text
msgid "'%Mxx.V' - Monostable xx current value (integer, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Mxx.P' - Monostable xx preset (integer)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.D' - Counter xx done (Boolean, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.E' - Counter xx empty overflow (Boolean, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.F' - Counter xx full overflow (Boolean, user read only)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.V' - Counter xx current value (integer)"
msgstr ""

#. type: Plain text
msgid "'%Cxx.P' - Counter xx preset (integer)"
msgstr ""

#. type: Plain text
msgid "'%Ixxx' - Physical input xxx (Boolean) (HAL input bit)"
msgstr ""

#. type: Plain text
msgid "'%Qxxx' - Physical output xxx (Boolean) (HAL output bit)"
msgstr ""

#. type: Plain text
msgid "'%Xxxx' - Activity of step xxx (sequential language)"
msgstr ""

#. type: Plain text
msgid ""
"'%Xxxx.V' - Time of activity in seconds of step xxx (sequential language)"
msgstr ""

#. type: Plain text
msgid "'%Exx' - Errors (Boolean, read write(will be overwritten))"
msgstr ""

#. type: Plain text
msgid ""
"'Indexed or vectored variables' - These are variables indexed by another"
msgstr ""

#. type: Plain text
msgid ""
"variable. Some might call this vectored variables. Example: %W0[%W4] => if "
"%W4 equals 23 it corresponds to %W23"
msgstr ""

#. type: Title =
#, no-wrap
msgid "GRAFCET (State Machine) Programming"
msgstr ""

#. type: Plain text
msgid ""
"This is probably the least used and most poorly understood feature of "
"Classic Ladder.  Sequential programming is used to make sure a series of "
"ladder events always happen in a prescribed order. Sequential programs do "
"not work alone. There is always a ladder program as well that controls the "
"variables. Here are the basic rules governing sequential programs:"
msgstr ""

#. type: Plain text
msgid "Rule 1 : Initial situation - The initial situation is characterized by"
msgstr ""

#. type: Plain text
msgid ""
"the initial steps which are by definition in the active state at the "
"beginning of the operation.There shall be at least one initial step."
msgstr ""

#. type: Plain text
msgid "Rule 2 : R2, Clearing of a transition - A transition is either enabled"
msgstr ""

#. type: Plain text
msgid ""
"or disabled. It is said to be enabled when all immediately preceding steps "
"linked to its corresponding transition symbol are active, otherwise it is "
"disabled. A transition cannot be cleared unless it is enabled, and its "
"associated transition condition is true."
msgstr ""

#. type: Plain text
msgid "Rule 3 : R3, Evolution of active steps - The clearing of a transition"
msgstr ""

#. type: Plain text
msgid ""
"simultaneously leads to the active state of the immediately following "
"step(s) and to the inactive state of the immediately preceding step(s)."
msgstr ""

#. type: Plain text
msgid "Rule 4 : R4, Simultaneous clearing of transitions - All simultaneous"
msgstr ""

#. type: Plain text
msgid "cleared transitions are simultaneously cleared."
msgstr ""

#. type: Plain text
msgid "Rule 5 : R5, Simultaneous activation and deactivation of a step - If"
msgstr ""

#. type: Plain text
msgid ""
"during operation, a step is simultaneously activated and deactivated, "
"priority is given to the activation."
msgstr ""

#. type: Plain text
msgid ""
"This is the SEQUENTIAL editor window Starting from the top left image: "
"Selector arrow , Eraser Ordinary step , Initial (Starting) step Transition , "
"Step and Transition Transition Link-Downside , Transition Link-Upside Pass-"
"through Link-Downside , Pass-through Link-Upside Jump Link Comment Box [show "
"sequential program]"
msgstr ""

#. type: Plain text
msgid "'ORDINARY STEP' - has a unique number for each one"
msgstr ""

#. type: Plain text
msgid "'STARTING STEP' - a sequential program must have one. This is where the"
msgstr ""

#. type: Plain text
msgid "program will start."
msgstr ""

#. type: Plain text
msgid "'TRANSITION' - This shows the variable that must be true for control to"
msgstr ""

#. type: Plain text
msgid "pass through to the next step."
msgstr ""

#. type: Plain text
msgid "'STEP AND TRANSITION' - Combined for convenience"
msgstr ""

#. type: Plain text
msgid ""
"'TRANSITION LINK-DOWNSIDE' - splits the logic flow to one of two possible"
msgstr ""

#. type: Plain text
msgid "lines based on which of the next steps is true first (Think OR logic)"
msgstr ""

#. type: Plain text
msgid "'TRANSITION LINK=UPSIDE' - combines two (OR) logic lines back in to one"
msgstr ""

#. type: Plain text
msgid "'PASS-THROUGH LINK-DOWNSIDE' - splits the logic flow to two lines that"
msgstr ""

#. type: Plain text
msgid "BOTH must be true to continue (Think AND logic)"
msgstr ""

#. type: Plain text
msgid "'PASS-THROUGH LINK-UPSIDE' - combines two concurrent (AND logic) logic"
msgstr ""

#. type: Plain text
msgid "lines back together"
msgstr ""

#. type: Plain text
msgid "'JUMP LINK' - connects steps that are not underneath each other such as"
msgstr ""

#. type: Plain text
msgid "connecting the last step to the first"
msgstr ""

#. type: Plain text
msgid "'COMMENT BOX' - used to add comments"
msgstr ""

#. type: Plain text
msgid ""
"To use links, you must have steps already placed. Select the type of link, "
"then select the two steps or transactions one at a time. It takes practice!"
msgstr ""

#. type: Plain text
msgid ""
"With sequential programming: The variable %Xxxx (eg. %X5) is used to see if "
"a step is active. The variable %Xxxx.V (eg. %X5.V) is used to see how long "
"the step has been active. The %X and %X.v variables are use in LADDER logic. "
"The variables assigned to the transitions (eg. %B)  control whether the "
"logic will pass to the next step. After a step has become active the "
"transition variable that caused it to become active has no control of it "
"anymore. The last step has to JUMP LINK back only to the beginning step."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Modbus"
msgstr ""

#. type: Plain text
msgid "Things to consider:"
msgstr ""

#. type: Plain text
msgid "Modbus is a userspace program so it might have latency issues on a"
msgstr ""

#. type: Plain text
msgid "heavily laden computer."
msgstr ""

#. type: Plain text
msgid "Modbus is not really suited to Hard real time events such as position"
msgstr ""

#. type: Plain text
msgid "control of motors or to control E-stop."
msgstr ""

#. type: Plain text
msgid "The Classic Ladder GUI must be running for Modbus to be running."
msgstr ""

#. type: Plain text
msgid "Modbus is not fully finished so it does not do all modbus functions."
msgstr ""

#. type: Plain text
msgid ""
"To get MODBUS to initialize you must specify that when loading the Classic "
"Ladder userspace program."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Loading Modbus"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -w classicladder --modmaster myprogram.clp \n"
msgstr ""

#. type: Plain text
msgid ""
"The -w makes HAL wait until you close Classic Ladder before closing realtime "
"session. Classic Ladder also loads a TCP modbus slave if you add '--"
"modserver' on command line."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Modbus Functions"
msgstr ""

#. type: Plain text
msgid "'1' - read coils"
msgstr ""

#. type: Plain text
msgid "'2' - read inputs"
msgstr ""

#. type: Plain text
msgid "'3' - read holding registers"
msgstr ""

#. type: Plain text
msgid "'4' - read input registers"
msgstr ""

#. type: Plain text
msgid "'5' - write single coils"
msgstr ""

#. type: Plain text
msgid "'6' - write single register"
msgstr ""

#. type: Plain text
msgid "'8' - echo test"
msgstr ""

#. type: Plain text
msgid "'15' - write multiple coils"
msgstr ""

#. type: Plain text
msgid "'16' - write multiple registers"
msgstr ""

#. type: Plain text
msgid ""
"If you do not specify a '-- modmaster' when loading the Classic Ladder user "
"program this page will not be displayed."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Config I/O"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Config-io.png"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Config Coms"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Config-com.png"
msgstr ""

#. type: Plain text
msgid ""
"'SERIAL PORT' - For IP blank. For serial the location/name of serial driver "
"eg."
msgstr ""

#. type: Plain text
msgid "/dev/ttyS0 ( or /dev/ttyUSB0 for a USB-to-serial converter)."
msgstr ""

#. type: Plain text
msgid ""
"'SERIAL SPEED' - Should be set to speed the slave is set for - 300, 600, "
"1200, 2400,"
msgstr ""

#. type: Plain text
msgid "4800, 9600, 19200, 38400, 57600, 115200 are supported."
msgstr ""

#. type: Plain text
msgid ""
"'PAUSE AFTER TRANSMIT' - Pause (milliseconds) after transmit and before "
"receiving answer,"
msgstr ""

#. type: Plain text
msgid "some devices need more time (e.g., USB-to-serial converters)."
msgstr ""

#. type: Plain text
msgid ""
"'PAUSE INTER-FRAME' - Pause (milliseconds) after receiving answer from "
"slave. This sets"
msgstr ""

#. type: Plain text
msgid "the duty cycle of requests (it's a pause for EACH request)."
msgstr ""

#. type: Plain text
msgid ""
"'REQUEST TIMEOUT LENGTH' - Length (milliseconds) of time before we decide "
"that the slave didn't"
msgstr ""

#. type: Plain text
msgid "answer."
msgstr ""

#. type: Plain text
msgid ""
"'MODBUS ELEMENT OFFSET' - used to offset the element numbers by 1 (for "
"manufacturers numbering"
msgstr ""

#. type: Plain text
msgid "differences)."
msgstr ""

#. type: Plain text
msgid ""
"'DEBUG LEVEL' - Set this to 0-3 (0 to stop printing debug info besides no-"
"response"
msgstr ""

#. type: Plain text
msgid "errors)."
msgstr ""

#. type: Plain text
msgid ""
"'READ COILS/INPUTS MAP TO' - Select what variables that read coils/inputs "
"will update. (B or Q)."
msgstr ""

#. type: Plain text
msgid ""
"'WRITE COILS MAP TO' - Select what variables that write coils will updated."
"from (B,Q,or I)."
msgstr ""

#. type: Plain text
msgid ""
"'READ REGISTERS/HOLDING' - Select what variables that read registers will "
"update. (W or QW)."
msgstr ""

#. type: Plain text
msgid ""
"'WRITE REGISTERS MAP TO' - Select what variables that read registers will "
"updated from. (W, QW,"
msgstr ""

#. type: Plain text
msgid "or IW)."
msgstr ""

#. type: Plain text
msgid ""
"'SLAVE ADDRESS' - For serial the slaves ID number usually settable on the "
"slave device"
msgstr ""

#. type: Plain text
msgid ""
"(usually 1-256) For IP the slave IP address plus optionally the port number."
msgstr ""

#. type: Plain text
msgid ""
"'TYPE ACCESS' - This selects the MODBUS function code to send to the slave "
"(eg what"
msgstr ""

#. type: Plain text
msgid "type of request)."
msgstr ""

#. type: Plain text
msgid ""
"'COILS / INPUTS' - Inputs and Coils (bits) are read from/written to I, B, or "
"Q variables (user selects)."
msgstr ""

#. type: Plain text
msgid ""
"'REGISTERS (WORDS)' - Registers (Words/Numbers) map to IW, W, or QW "
"variables (user selects)."
msgstr ""

#. type: Plain text
msgid ""
"'1st MODBUS ELEMENT' - The address (or register number) of the first element "
"in a group."
msgstr ""

#. type: Plain text
msgid "(remember to set MODBUS ELEMENT OFFSET properly)."
msgstr ""

#. type: Plain text
msgid "'NUMBER OF ELEMENTS' - The number of elements in this group."
msgstr ""

#. type: Plain text
msgid "'LOGIC' - You can invert the logic here."
msgstr ""

#. type: Plain text
msgid ""
"'1st%I%Q IQ WQ MAPPED' - This is the starting number of %B, %I, %Q, %W, %IW, "
"or %QW variables"
msgstr ""

#. type: Plain text
msgid ""
"that are mapped onto/from the modbus element group (starting at the first "
"modbus element number)."
msgstr ""

#. type: Plain text
msgid ""
"In the example above: Port number - for my computer /dev/ttyS0 was my serial "
"port."
msgstr ""

#. type: Plain text
msgid "The serial speed is set to 9600 baud."
msgstr ""

#. type: Plain text
msgid ""
"Slave address is set to 12 (on my VFD I can set this from 1-31, meaning I "
"can talk to 31 VFDs maximum on one system)."
msgstr ""

#. type: Plain text
msgid ""
"The first line is set up for 8 input bits starting at the first register "
"number (register 1). So register numbers 1-8 are mapped onto Classic "
"Ladder's %B variables starting at %B1 and ending at %B8."
msgstr ""

#. type: Plain text
msgid ""
"The second line is set for 2 output bits starting at the ninth register "
"number (register 9) so register numbers 9-10 are mapped onto Classic "
"Ladder's %Q variables starting at %Q9 ending at %Q10."
msgstr ""

#. type: Plain text
msgid ""
"The third line is set to write 2 registers (16 bits each) starting at the "
"0th register number (register 0) so register numbers 0-1 are mapped onto "
"Classic Ladder's %W variables starting at %W0 ending at %W1."
msgstr ""

#. type: Plain text
msgid ""
"It's easy to make an off-by-one error as sometimes the modbus elements are "
"referenced starting at one rather then 0 (actually by the standard that is "
"the way it's supposed to be!) You can use the modbus element offset radio "
"button to help with this."
msgstr ""

#. type: Plain text
msgid ""
"The documents for your modbus slave device will tell you how the registers "
"are set up- there is no standard way."
msgstr ""

#. type: Plain text
msgid ""
"The SERIAL PORT, PORT SPEED, PAUSE, and DEBUG level are editable for changes "
"(when you close the config window values are applied, though Radio buttons "
"apply immediately)."
msgstr ""

#. type: Plain text
msgid ""
"To use the echo function select the echo function and add the slave number "
"you wish to test. You don't need to specify any variables."
msgstr ""

#. type: Plain text
msgid ""
"The number 257 will be sent to the slave number you specified and the slave "
"should send it back. you will need to have Classic Ladder running in a "
"terminal to see the message."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "MODBUS Settings "
msgstr ""

#. type: Plain text
msgid "Serial:"
msgstr ""

#. type: Plain text
msgid "Classic Ladder uses RTU protocol (not ASCII)."
msgstr ""

#. type: Plain text
msgid "8 data bits, No parity is used, and 1 stop bit is also known as 8-N-1."
msgstr ""

#. type: Plain text
msgid "Baud rate must be the same for slave and master. Classic Ladder can"
msgstr ""

#. type: Plain text
msgid "only have one baud rate so all the slaves must be set to the same rate."
msgstr ""

#. type: Plain text
msgid "Pause inter frame is the time to pause after receiving an answer."
msgstr ""

#. type: Plain text
msgid "MODBUS_TIME_AFTER_TRANSMIT is the length of pause after sending a"
msgstr ""

#. type: Plain text
msgid ""
"request and before receiving an answer (this apparently helps with USB "
"converters which are slow)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "MODBUS Info"
msgstr ""

#. type: Plain text
msgid "Classic Ladder can use distributed inputs/outputs on modules using the"
msgstr ""

#. type: Plain text
msgid "modbus protocol (\"master\": polling slaves)."
msgstr ""

#. type: Plain text
msgid "The slaves and theirs I/O can be configured in the config window."
msgstr ""

#. type: Plain text
msgid "2 exclusive modes are available : ethernet using Modbus/TCP and serial"
msgstr ""

#. type: Plain text
msgid "using Modbus/RTU."
msgstr ""

#. type: Plain text
msgid "No parity is used."
msgstr ""

#. type: Plain text
msgid "If no port name for serial is set, TCP/IP mode will be used..."
msgstr ""

#. type: Plain text
msgid "The slave address is the slave address (Modbus/RTU) or the IP address."
msgstr ""

#. type: Plain text
msgid "The IP address can be followed per the port number to use"
msgstr ""

#. type: Plain text
msgid "(xx.xx.xx.xx:pppp) else the port 9502 will be used per default."
msgstr ""

#. type: Plain text
msgid "2 products have been used for tests: a Modbus/TCP one (Adam-6051,"
msgstr ""

#. type: Plain text
msgid ""
"http://www.advantech.com) and a serial Modbus/RTU one (http://www.ipac.ws)."
msgstr ""

#. type: Plain text
msgid "See examples: adam-6051 and modbus_rtu_serial."
msgstr ""

#. type: Plain text
msgid "Web links: http://www.modbus.org and this interesting one:"
msgstr ""

#. type: Plain text
msgid "http://www.iatips.com/modbus.html"
msgstr ""

#. type: Plain text
msgid "MODBUS TCP SERVER INCLUDED"
msgstr ""

#. type: Plain text
msgid ""
"Classic Ladder has a Modbus/TCP server integrated. Default port is 9502."
msgstr ""

#. type: Plain text
msgid ""
"(the previous standard 502 requires that the application must be launched "
"with root privileges)."
msgstr ""

#. type: Plain text
msgid ""
"List of Modbus functions code supported are: 1, 2, 3, 4, 5, 6, 15 and 16."
msgstr ""

#. type: Plain text
msgid "Modbus bits and words correspondence table is actually not parametric"
msgstr ""

#. type: Plain text
msgid "and correspond directly to the %B and %W variables."
msgstr ""

#. type: Plain text
msgid "More information on modbus protocol is available on the internet."
msgstr ""

#. type: Plain text
msgid "http://www.modbus.org/[http://www.modbus.org/]"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Communication Errors"
msgstr ""

#. type: Plain text
msgid ""
"If there is a communication error, a warning window will pop up (if the GUI "
"is running) and %E0 will be true. Modbus will continue to try to "
"communicate. The %E0 could be used to make a decision based on the error. A "
"timer could be used to stop the machine if timed out, etc."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Debugging modbus problems"
msgstr ""

#. type: Plain text
msgid ""
"A good reference for the protocol: + http://www.modbus.org/docs/"
"Modbus_Application_Protocol_V1_1b.pdf + If you run linuxcnc/classocladder "
"from a terminal, it will print the Modbus commands and slave responses. +"
msgstr ""

#. type: Plain text
msgid ""
"Here we set Classiclader to request slave 1, + to read holding registers "
"(function code 3) starting at address 8448 (0x2100) + We ask for 1 (2 byte "
"wide) data element to be returned + We map it to a Classicladder variable "
"starting at 2 +"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Config I/O Register Setting"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/modbus_register_setting.png"
msgstr ""

#. type: Plain text
msgid ""
"Note in this image we have set the debug level to 1 so modbus messages are "
"printed to the terminal + We have mapped our read and written holding "
"registers to classicladder's %W variables + so our returned data will be in "
"%W2 as in the other image we mapped the data starting at the 2nd element +"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Communication Setting"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/modbus_com_setting.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Request"
msgstr ""

#. type: Plain text
msgid ""
"Lets look at an example of reading one hold register at 8448 Decimal (0x2100 "
"Hex) +"
msgstr ""

#. type: Plain text
msgid "Looking in the Modbus protocol reference: +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Read holding register request"
msgstr ""

#. type: Table
#, no-wrap
msgid "Name"
msgstr ""

#. type: Table
#, no-wrap
msgid "number of bytes"
msgstr ""

#. type: Table
#, no-wrap
msgid "Value (hex)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Function code"
msgstr ""

#. type: Table
#, no-wrap
msgid "(1 Byte)"
msgstr ""

#. type: Table
#, no-wrap
msgid "3  (0x03)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Starting Address"
msgstr ""

#. type: Table
#, no-wrap
msgid "(2 Bytes)"
msgstr ""

#. type: Table
#, no-wrap
msgid "0 - 65535 (0x0000 to 0xFFFF)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Number of Registers"
msgstr ""

#. type: Table
#, no-wrap
msgid "1 to 125 (0x7D)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Checksum"
msgstr ""

#. type: Table
#, no-wrap
msgid "(2 bytes)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Calculated automatically"
msgstr ""

#. type: Plain text
msgid "Here is an example sent command as printed in the terminal (all Hex): +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "INFO CLASSICLADDER-   Modbus I/O module to send: Lgt=8 <-  Slave address-1  Function code-3  Data-21 0 0 1 8E 36\n"
msgstr ""

#. type: Plain text
msgid "meaning (Hex): +"
msgstr ""

#. type: Plain text
msgid ""
"Lgt = 8 = message is 8 bytes long including slave number and checksum number "
"+"
msgstr ""

#. type: Plain text
msgid "Slave number = 1 (0x1) = Slave address 1"
msgstr ""

#. type: Plain text
msgid "Function code = 3 (0x3) = read holding register"
msgstr ""

#. type: Plain text
msgid ""
"Start at address = highbyte 33 (0x21) lowbyte 0 (0x00) = combined address = "
"8448 (0x2100)"
msgstr ""

#. type: Plain text
msgid ""
"Number of Registers = 1 (0x1) = return 1 2-byte register (holding and "
"reading registers are always 2 bytes wide)"
msgstr ""

#. type: Plain text
msgid "Checksum = high byte 0x8E lowbyte 0x36 = (0x8E36)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Error response"
msgstr ""

#. type: Plain text
msgid ""
"If there is an error response, it sends the function code plus 0x80, an "
"error code, and a checksum. + Getting an error response means the slave is "
"seeing the request command but can not give valid data. + Looking in the "
"Modbus protocol reference: +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Error returned for function code 3 (read holding register)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Error code"
msgstr ""

#. type: Table
#, no-wrap
msgid "1 Byte"
msgstr ""

#. type: Table
#, no-wrap
msgid "131 (0x83)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Exception code"
msgstr ""

#. type: Table
#, no-wrap
msgid "1-4 (0x01 to 0x04)"
msgstr ""

#. type: Plain text
msgid "exception code meaning:"
msgstr ""

#. type: Plain text
msgid "1 - illegal Function"
msgstr ""

#. type: Plain text
msgid "2 - illegal data address"
msgstr ""

#. type: Plain text
msgid "3 - illegal data value"
msgstr ""

#. type: Plain text
msgid "4 - slave device failure"
msgstr ""

#. type: Plain text
msgid ""
"Here is an example received command as printed in the terminal (all Hex): +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "INFO CLASSICLADDER-   Modbus I/O module received: Lgt=5 ->   (Slave address-1  Function code-83 ) 2 C0 F1\n"
msgstr ""

#. type: Plain text
msgid "Function code = 131 (0x83) = error while reading holding register"
msgstr ""

#. type: Plain text
msgid "Error code = 2 (0x2) = illegal data address requested"
msgstr ""

#. type: Plain text
msgid "Checksum = (0x8E36)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Data response"
msgstr ""

#. type: Plain text
msgid "Looking in the Modbus protocol reference for Response: +"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Data response for function code 3 (read holding register)"
msgstr ""

#. type: Table
#, no-wrap
msgid "3 (0x03)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Byte count"
msgstr ""

#. type: Table
#, no-wrap
msgid "2 x N*"
msgstr ""

#. type: Table
#, no-wrap
msgid "Register value"
msgstr ""

#. type: Table
#, no-wrap
msgid "N* x 2 Bytes"
msgstr ""

#. type: Table
#, no-wrap
msgid "returned value of requested address"
msgstr ""

#. type: Table
#, no-wrap
msgid "( *N = Number of Registers )"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"Here is an example received command as printed in the terminal (all Hex): +\n"
"----\n"
"INFO CLASSICLADDER-   Modbus I/O module received: Lgt=7 ->   (Slave address-1  Function code-3 2 0 0 B8 44 \n"
"----\n"
"\n"
"meaning (Hex): +\n"
"\n"
" * Slave number = 1 (0x1) = Slave address 1\n"
" * Requested function code = 3 (0x3) = read holding register requested\n"
" * count of byte registers = 2 (0x1) = return 2 bytes (each register value is 2 bytes wide)\n"
" * value of highbyte = 0 (0x0) = high byte value of address 8448 (0x2100)\n"
" * value of lowbyte = 0 (0x0) = high byte value of address 8448 (0x2100)\n"
" * Checksum = (0xB844)\n"
"\n"
"(high and low bytes are combined to create a 16 bit value and then transferred to Classicladder's variable) +\n"
"Read Registers can be mapped to %W or %QW  (internal memory or HAL out pins) +\n"
"Write registers can be mapped from %W, %QW or %IW (internal memory, HAL out pins or HAL in pins) +\n"
"The variable number will start at the number entered in the modbus I/O registry setup page's column: 'First variable mapped' +\n"
"If multiple registers are requested in one read/write then the variable number are sequential after the first one. +\n"
"\n"
"== MODBUS Bugs\n"
"\n"
"* In compare blocks the function %W=ABS(%W1-%W2) is accepted but does\n"
"   not compute properly. only %W0=ABS(%W1) is currently legal. \n"
"* When loading a ladder program it will load Modbus info but will not\n"
"   tell Classic Ladder to initialize Modbus. You must initialize Modbus\n"
"   when you first load the GUI by adding '--modmaster'. \n"
"* If the section manager is placed on top of the section display, across\n"
"   the scroll bar and exit is clicked the user program crashes.\n"
"* When using '--modmaster' you must load the ladder program at the same\n"
"   time or else only TCP will work.\n"
"* reading/writing multiple registers in Modbus has checksum errors. \n"
"\n"
"= Setting up Classic Ladder\n"
"\n"
"In this section we will cover the steps needed to add Classic Ladder\n"
"to a Stepconf Wizard generated config. On the advanced Configuration\n"
"Options page of Stepconf Wizard check off \"Include Classic Ladder PLC\". \n"
"\n"
".Stepconf Classic Ladder\n"
"\n"
"image::images/stepconf_ladder.png[align=\"center\", alt=\"Stepconf Classic Ladder\"]\n"
"\n"
"== Add the Modules\n"
"\n"
"If you used the Stepconf Wizard to add Classic Ladder you can skip\n"
"this step.\n"
"\n"
"To manually add Classic Ladder you must first add the modules. This is\n"
"done by adding a couple of lines to the custom.hal file.\n"
"\n"
"This line loads the real time module:\n"
"\n"
"----\n"
"loadrt classicladder_rt\n"
"----\n"
"\n"
"This line adds the Classic Ladder function to the servo thread:\n"
"\n"
"----\n"
"addf classicladder.0.refresh servo-thread\n"
"----\n"
"\n"
"== Adding Ladder Logic\n"
"\n"
"Now start up your config and select \"File/Ladder Editor\" to open up\n"
"the Classic Ladder GUI. You should see a blank Section Display and\n"
"Sections Manager window as shown above. In the Section Display window\n"
"open the Editor. In the Editor window select Modify. Now a Properties\n"
"window pops up and the Section Display shows a grid. The grid is one\n"
"rung of ladder. The rung can contain branches. A simple rung has one\n"
"input, a connector line and one output. A rung can have up to six\n"
"horizontal branches. While it is possible to have more than one\n"
"circuit in a run the results are not predictable.\n"
"\n"
".Section Display with Grid\n"
"\n"
"image::images/Section_Display_Grid.png[align=\"center\", alt=\"Section Display with Grid\"]\n"
"\n"
"Now click on the N.O. Input in the Editor Window.\n"
"\n"
".Editor Window\n"
"\n"
"image::images/Editor_NO_Input.png[align=\"center\", alt=\"Editor Window\"]\n"
"\n"
"Now click in the upper left grid to place the N.O. Input into the\n"
"ladder.\n"
"\n"
".Section Display with Input\n"
"\n"
"image::images/Section_Display_Build01.png[align=\"center\", alt=\"Section Display with Input\"]\n"
"\n"
"Repeat the above steps to add a N.O. Output to the upper right grid\n"
"and use the Horizontal Connection to connect the two. It should look\n"
"like the following. If not, use the Eraser to remove unwanted sections.\n"
"\n"
".Section Display with Rung\n"
"\n"
"image::images/Section_Display_Build02.png[align=\"center\", alt=\"Section Display with Rung\"]\n"
"\n"
"Now click on the OK button in the Editor window. Now your Section\n"
"Display should look like this.\n"
"\n"
".Section Display Finished\n"
"\n"
"image::images/Section_Display_Build03.png[align=\"center\", alt=\"Section Display Finished\"]\n"
"\n"
"To save the new file select Save As and give it a name. The .clp\n"
"extension will be added automatically. It should default to the running\n"
"config directory as the place to save it.\n"
"\n"
".Save As Dialog\n"
"\n"
"image::images/SaveAs.png[align=\"center\", alt=\"Save As Dialog\"]\n"
"\n"
"Again if you used the Stepconf Wizard to add Classic Ladder you can\n"
"skip this step.\n"
"\n"
"To manually add a ladder you need to add add a line to your custom.hal\n"
"file that will load your ladder file. Close your LinuxCNC session and add\n"
"this line to your custom.hal file.\n"
"\n"
"----\n"
"loadusr -w classicladder --nogui MyLadder.clp\n"
"----\n"
"\n"
"Now if you start up your LinuxCNC config your ladder program will be\n"
"running as well. If you select \"File/Ladder Editor\", the program you\n"
"created will show up in the Section Display window.\n"
"\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Classicladder Examples"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Wrapping Counter"
msgstr ""

#. type: Plain text
msgid ""
"To have a counter that 'wraps around' you have to use the preset pin and the "
"reset pin. When you create the counter set the preset at the number you wish "
"to reach before wrapping around to 0. The logic is if the counter value is "
"over the preset then reset the counter and if the underflow is on then set "
"the counter value to the preset value. As you can see in the example when "
"the counter value is greater than the counter preset the counter reset is "
"triggered and the value is now 0.  The underflow output %Q2 will set the "
"counter value at the preset when counting backwards."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/wrapping-counter.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reject Extra Pulses"
msgstr ""

#. type: Plain text
msgid ""
"This example shows you how to reject extra pulses from an input.  Suppose "
"the input pulse %I0 has an annoying habit of giving an extra pulse that "
"spoils our logic. The TOF (Timer Off Delay) prevents the extra pulse from "
"reaching our cleaned up output %Q0. How this works is when the timer gets an "
"input the output of the timer is on for the duration of the time setting. "
"Using a normally closed contact %TM0.Q the output of the timer blocks any "
"further inputs from reaching our output until it times out."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Reject Extra Pulse"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/extra-pulse-reject.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "External E-Stop"
msgstr ""

#. type: Plain text
msgid ""
"The External E-Stop example is in the /config/classicladder/cl-estop folder. "
"It uses a pyVCP panel to simulate the external components."
msgstr ""

#. type: Plain text
msgid ""
"To interface an external E-Stop to LinuxCNC and have the external E-Stop "
"work together with the internal E-Stop requires a couple of connections "
"through Classic Ladder."
msgstr ""

#. type: Plain text
msgid ""
"First we have to open the E-Stop loop in the main HAL file by commenting out "
"by adding the pound sign as shown or removing the following lines."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# net estop-out <= iocontrol.0.user-enable-out \n"
"# net estop-out => iocontrol.0.emc-enable-in\n"
msgstr ""

#. type: Plain text
msgid ""
"Next we add Classic Ladder to our custom.hal file by adding these two lines:"
msgstr ""

#. type: Plain text
msgid "Next we run our config and build the ladder as shown here."
msgstr ""

#. type: Block title
#, no-wrap
msgid "E-Stop Section Display[[cap:E-Stop-Section-Display]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "E-Stop Section Display"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/EStop_Section_Display.png"
msgstr ""

#. type: Plain text
msgid ""
"After building the ladder select Save As and save the ladder as estop.clp"
msgstr ""

#. type: Plain text
msgid "Now add the following line to your custom.hal file."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Load the ladder \n"
"loadusr classicladder --nogui estop.clp\n"
msgstr ""

#. type: Plain text
msgid "I/O assignments"
msgstr ""

#. type: Plain text
msgid "%I0 = Input from the pyVCP panel simulated E-Stop (the checkbox)"
msgstr ""

#. type: Plain text
msgid "%I1 = Input from LinuxCNC's E-Stop"
msgstr ""

#. type: Plain text
msgid "%I2 = Input from LinuxCNC's E-Stop Reset Pulse"
msgstr ""

#. type: Plain text
msgid "%I3 = Input from the pyVCP panel reset button"
msgstr ""

#. type: Plain text
msgid "%Q0 = Output to LinuxCNC to enable"
msgstr ""

#. type: Plain text
msgid ""
"%Q1 = Output to external driver board enable pin (use a N/C output if your "
"board had a disable pin)"
msgstr ""

#. type: Plain text
msgid "Next we add the following lines to the custom_postgui.hal file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "# E-Stop example using pyVCP buttons to simulate external components\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# The pyVCP checkbutton simulates a normally closed external E-Stop \n"
"net ext-estop classicladder.0.in-00 <= pyvcp.py-estop\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Request E-Stop Enable from LinuxCNC \n"
"net estop-all-ok iocontrol.0.emc-enable-in <= classicladder.0.out-00\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# Request E-Stop Enable from pyVCP or external source \n"
"net ext-estop-reset classicladder.0.in-03 <= pyvcp.py-reset\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This line resets the E-Stop from LinuxCNC \n"
" net emc-reset-estop iocontrol.0.user-request-enable =>\n"
"classicladder.0.in-02\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This line enables LinuxCNC to unlatch the E-Stop in Classic Ladder \n"
"net emc-estop iocontrol.0.user-enable-out => classicladder.0.in-01\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# This line turns on the green indicator when out of E-Stop \n"
"net estop-all-ok => pyvcp.py-es-status\n"
msgstr ""

#. type: Plain text
msgid ""
"Next we add the following lines to the panel.xml file. Note you have to open "
"it with the text editor not the default html viewer."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp> \n"
"<vbox> \n"
"<label><text>\"E-Stop Demo\"</text></label> \n"
"<led> \n"
"<halpin>\"py-es-status\"</halpin> \n"
"<size>50</size> \n"
"<on_color>\"green\"</on_color> \n"
"<off_color>\"red\"</off_color> \n"
"</led> \n"
"<checkbutton> \n"
"<halpin>\"py-estop\"</halpin> \n"
"<text>\"E-Stop\"</text> \n"
"</checkbutton> \n"
"</vbox> \n"
"<button> \n"
"<halpin>\"py-reset\"</halpin> \n"
"<text>\"Reset\"</text> \n"
"</button> \n"
"</pyvcp>\n"
msgstr ""

#. type: Plain text
msgid "Now start up your config and it should look like this."
msgstr ""

#. type: Block title
#, no-wrap
msgid "AXIS E-Stop[[cap:AXIS-E-Stop]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "AXIS E-Stop"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/axis_cl-estop.png"
msgstr ""

#. type: Plain text
msgid ""
"Note that in this example like in real life you must clear the remote E-Stop "
"(simulated by the checkbox) before the AXIS E-Stop or the external Reset "
"will put you in OFF mode. If the E-Stop in the AXIS screen was pressed, you "
"must press it again to clear it. You cannot reset from the external after "
"you do an E-Stop in AXIS."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Timer/Operate Example"
msgstr ""

#. type: Plain text
msgid ""
"In this example we are using the Operate block to assign a value to the "
"timer preset based on if an input is on or off."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Timer/Operate Example[[cap:Timer/Operate-Example]]"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/Tmr_Section_Display.png"
msgstr ""

#. type: Plain text
msgid ""
"In this case %I0 is true so the timer preset value is 10. If %I0 was false "
"the timer preset would be 5."
msgstr ""

#
#
#
#
#
#
#. == Tool Turret
#.  - This Example is not complete yet.
#. This is a program for one type of tool turret. The turret has a home
#. switch at tool position 1 and another switch to tell you when the
#. turret is in a lockable position. To keep track of the actual tool
#. number one must count how many positions past home you are. We will use
#. Classic Ladder's counter block '$CO'.The counter is preset to 1 when
#. RESET is true. The counter is increased by one on the rising edge of
#. INDEX. We then 'COMPARE' the counter value (%C0.V) to the tool number
#. we want (in the example only checks for tool 1 and 2 are shown). We
#. also 'OPERATE' the counter value to a word variable (%W0) that (you can
#. assume) is mapped on to a s32 out HAL pin so you can let some other HAL
#. component know what the current tool number is. In the real world
#. another s32 (in) pin would be used to get the requested tool number
#. from LinuxCNC.You would have to load Classic Ladder's real time module
#. specifying that you want s32 in and out pins. See 'loading options'
#. above. [display turret sample]
#. == Sequential Example
#.  - This Example is not complete yet.
#. This is a sequential program.
#. When the program is first started step one is active.
#. Then when %B0 is true, steps 2 and 3 are then active
#. and step one is inactive.
#. Then when %B1 and/or %B2 are true, step 4 and/or 5
#. are active and step 2 and/or 3 are inactive.
#. Then when either %B3 OR %B4 are true, step 6 is true and
#. steps 4 and 5 are inactive.
#. Then when %B5 is true step 1 is active and step 6 is
#. inactive and it all starts again. 
#. As shown, the sequence has been:
#. %B0 was true making step 2 and 3 active, then %B1 became true
#. (and still is-see the pink line through %B1)
#. making step 4 active and step 2 inactive.
#. Step 3 is active and waiting for %B2 to be true.
#. Step 4 is active and is waiting for %B3 to be true.
#. WOW, that was quite a mouthful!!
#. type: Title =
#, no-wrap
msgid "HAL Introduction"
msgstr ""

#. type: Plain text
msgid ""
"HAL(((HAL))) stands for Hardware Abstraction Layer. At the highest level, it "
"is simply a way to allow a number of 'building blocks' to be loaded and "
"interconnected to assemble a complex system. The 'Hardware' part is because "
"HAL was originally designed to make it easier to configure LinuxCNC for a "
"wide variety of hardware devices. Many of the building blocks are drivers "
"for hardware devices. However, HAL can do more than just configure hardware "
"drivers."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL is based on traditional system design techniques"
msgstr ""

#. type: Plain text
msgid ""
"HAL is based on the same principles that are used to design hardware "
"circuits and systems, so it is useful to examine those principles first."
msgstr ""

#. type: Plain text
msgid ""
"Any system (including a CNC(((CNC))) machine), consists of interconnected "
"components. For the CNC machine, those components might be the main "
"controller, servo amps or stepper drives, motors, encoders, limit switches, "
"pushbutton pendants, perhaps a VFD for the spindle drive, a PLC to run a "
"toolchanger, etc. The machine builder must select, mount and wire these "
"pieces together to make a complete system."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL Concept - Connecting like elctrical circuits."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#, no-wrap
msgid "HAL Circuit Concept"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal_circuit_concept.png"
msgstr ""

#. type: Plain text
msgid "Figure one would be written in HAL code like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net signal-blue    component.0.pin1-in      component.1.pin1-out\n"
"net signal-red     component.0.pin3-out     component.1.pin3-in     component.1.pin4-in\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Part Selection"
msgstr ""

#. type: Plain text
msgid ""
"The machine builder does not need to worry about how each individual part "
"works. He treats them as black boxes. During the design stage, he decides "
"which parts he is going to use - steppers or servos, which brand of servo "
"amp, what kind of limit switches and how many, etc. The integrator's "
"decisions about which specific components to use is based on what that "
"component does and the specifications supplied by the manufacturer of the "
"device. The size of a motor and the load it must drive will affect the "
"choice of amplifier needed to run it. The choice of amplifier may affect the "
"kinds of feedback needed by the amp and the velocity or position signals "
"that must be sent to the amp from a control."
msgstr ""

#. type: Plain text
msgid ""
"In the HAL world, the integrator must decide what HAL components are needed. "
"Usually every interface card will require a driver. Additional components "
"may be needed for software generation of step pulses, PLC functionality, and "
"a wide variety of other tasks."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Interconnection Design"
msgstr ""

#. type: Plain text
msgid ""
"The designer of a hardware system not only selects the parts, he also "
"decides how those parts will be interconnected. Each black box has "
"terminals, perhaps only two for a simple switch, or dozens for a servo drive "
"or PLC. They need to be wired together. The motors connect to the servo "
"amps, the limit switches connect to the controller, and so on. As the "
"machine builder works on the design, he creates a large wiring diagram that "
"shows how all the parts should be interconnected."
msgstr ""

#. type: Plain text
msgid ""
"When using HAL, components are interconnected by signals. The designer must "
"decide which signals are needed, and what they should connect."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Implementation"
msgstr ""

#. type: Plain text
msgid ""
"Once the wiring diagram is complete it is time to build the machine.  The "
"pieces need to be acquired and mounted, and then they are interconnected "
"according to the wiring diagram. In a physical system, each interconnection "
"is a piece of wire that needs to be cut and connected to the appropriate "
"terminals."
msgstr ""

#. type: Plain text
msgid ""
"HAL provides a number of tools to help 'build' a HAL system. Some of the "
"tools allow you to 'connect' (or disconnect) a single 'wire'. Other tools "
"allow you to save a complete list of all the parts, wires, and other "
"information about the system, so that it can be 'rebuilt' with a single "
"command."
msgstr ""

#. type: Plain text
msgid ""
"Very few machines work right the first time. While testing, the builder may "
"use a meter to see whether a limit switch is working or to measure the DC "
"voltage going to a servo motor. He may hook up an oscilloscope to check the "
"tuning of a drive, or to look for electrical noise. He may find a problem "
"that requires the wiring diagram to be changed; perhaps a part needs to be "
"connected differently or replaced with something completely different."
msgstr ""

#. type: Plain text
msgid ""
"HAL provides the software equivalents of a voltmeter, oscilloscope, signal "
"generator, and other tools needed for testing and tuning a system. The same "
"commands used to build the system can be used to make changes as needed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
msgid ""
"This document is aimed at people who already know how to do this kind of "
"hardware system integration, but who do not know how to connect the hardware "
"to LinuxCNC. See the <<sec:halui-remote-start,Remote Start Example>> section "
"in the HAL UI Examples documentation."
msgstr ""

#. type: Plain text
msgid ""
"The traditional hardware design as described above ends at the edge of the "
"main control. Outside the control are a bunch of relatively simple boxes, "
"connected together to do whatever is needed. Inside, the control is a big "
"mystery -- one huge black box that we hope works."
msgstr ""

#. type: Plain text
msgid ""
"HAL extends this traditional hardware design method to the inside of the big "
"black box. It makes device drivers and even some internal parts of the "
"controller into smaller black boxes that can be interconnected and even "
"replaced just like the external hardware. It allows the 'system wiring "
"diagram' to show part of the internal controller, rather than just a big "
"black box. And most importantly, it allows the integrator to test and modify "
"the controller using the same methods he would use on the rest of the "
"hardware."
msgstr ""

#. type: Plain text
msgid ""
"Terms like motors, amps, and encoders are familiar to most machine "
"integrators. When we talk about using extra flexible eight conductor "
"shielded cable to connect an encoder to the servo input board in the "
"computer, the reader immediately understands what it is and is led to the "
"question, 'what kinds of connectors will I need to make up each end.' The "
"same sort of thinking is essential for the HAL but the specific train of "
"thought may take a bit to get on track. Using HAL words may seem a bit "
"strange at first, but the concept of working from one connection to the next "
"is the same."
msgstr ""

#. type: Plain text
msgid ""
"This idea of extending the wiring diagram to the inside of the controller is "
"what HAL is all about. If you are comfortable with the idea of "
"interconnecting hardware black boxes, you will probably have little trouble "
"using HAL to interconnect software black boxes."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Concepts"
msgstr ""

#. type: Plain text
msgid ""
"This section is a glossary that defines key HAL terms but it is a bit "
"different than a traditional glossary because these terms are not arranged "
"in alphabetical order. They are arranged by their relationship or flow in "
"the HAL way of things."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Component"
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Component)))When we talked about hardware design, we referred to the "
"individual pieces as 'parts', 'building blocks', 'black boxes', etc. The HAL "
"equivalent is a 'component' or 'HAL component'. (This document uses 'HAL "
"component' when there is likely to be confusion with other kinds of "
"components, but normally just uses 'component'.) A HAL component is a piece "
"of software with well-defined inputs, outputs, and behavior, that can be "
"installed and interconnected as needed."
msgstr ""

#. type: Table
#, no-wrap
msgid "Parameter"
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Parameter)))Many hardware components have adjustments that are not "
"connected to any other components but still need to be accessed. For "
"example, servo amps often have trim pots to allow for tuning adjustments, "
"and test points where a meter or scope can be attached to view the tuning "
"results. HAL components also can have such items, which are referred to as "
"'parameters'. There are two types of parameters: Input parameters are "
"equivalent to trim pots - they are values that can be adjusted by the user, "
"and remain fixed once they are set. Output parameters cannot be adjusted by "
"the user - they are equivalent to test points that allow internal signals to "
"be monitored."
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Pin)))Hardware components have terminals which are used to "
"interconnect them. The HAL equivalent is a 'pin' or 'HAL pin'. ('HAL pin' is "
"used when needed to avoid confusion.) All HAL pins are named, and the pin "
"names are used when interconnecting them. HAL pins are software entities "
"that exist only inside the computer."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Physical_Pin"
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Physical-Pin)))Many I/O devices have real physical pins or terminals "
"that connect to external hardware, for example the pins of a parallel port "
"connector. To avoid confusion, these are referred to as 'physical pins'. "
"These are the things that 'stick out' into the real world."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Signal"
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Signal)))In a physical machine, the terminals of real hardware "
"components are interconnected by wires. The HAL equivalent of a wire is a "
"'signal' or 'HAL signal'. HAL signals connect HAL pins together as required "
"by the machine builder. HAL signals can be disconnected and reconnected at "
"will (even while the machine is running)."
msgstr ""

#. type: Plain text
msgid ""
"(((HAL Type)))When using real hardware, you would not connect a 24 volt "
"relay output to the +/-10V analog input of a servo amp. HAL pins have the "
"same restrictions, which are based upon their type. Both pins and signals "
"have types, and signals can only be connected to pins of the same type. "
"Currently there are 4 types, as follows:"
msgstr ""

#. type: Plain text
msgid "bit - a single TRUE/FALSE or ON/OFF value"
msgstr ""

#. type: Plain text
msgid ""
"float - a 64 bit floating point value, with approximately 53 bits of "
"resolution and over 1000 bits of dynamic range."
msgstr ""

#. type: Plain text
msgid "u32 - a 32 bit unsigned integer, legal values are 0 to 4,294,967,295"
msgstr ""

#. type: Plain text
msgid ""
"s32 - a 32 bit signed integer, legal values are -2,147,483,647 to "
"+2,147,483,647"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Function"
msgstr ""

#. type: Plain text
msgid ""
"Real hardware components tend to act immediately on their inputs. For "
"example, if the input voltage to a servo amp changes, the output also "
"changes automatically. However software components cannot act "
"'automatically'. Each component has specific code that must be executed to "
"do whatever that component is supposed to do. In some cases, that code "
"simply runs as part of the component. However in most cases, especially in "
"realtime components, the code must run in a specific sequence and at "
"specific intervals. For example, inputs should be read before calculations "
"are performed on the input data, and outputs should not be written until the "
"calculations are done. In these cases, the code is made available to the "
"system in the form of one or more 'functions'. Each function is a block of "
"code that performs a specific action. The system integrator can use "
"'threads' to schedule a series of functions to be executed in a particular "
"order and at specific time intervals."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Thread"
msgstr ""

#. type: Plain text
msgid ""
"A 'thread' is a list of functions that runs at specific intervals as part of "
"a realtime task. When a thread is first created, it has a specific time "
"interval (period), but no functions. Functions can be added to the thread, "
"and will be executed in order every time the thread runs."
msgstr ""

#. type: Plain text
msgid ""
"As an example, suppose we have a parport component named hal_parport.  That "
"component defines one or more HAL pins for each physical pin. The pins are "
"described in that component's doc section: their names, how each pin relates "
"to the physical pin, are they inverted, can you change polarity, etc. But "
"that alone doesn't get the data from the HAL pins to the physical pins. It "
"takes code to do that, and that is where functions come into the picture. "
"The parport component needs at least two functions: one to read the physical "
"input pins and update the HAL pins, the other to take data from the HAL pins "
"and write it to the physical output pins. Both of these functions are part "
"of the parport driver."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL components"
msgstr ""

#. type: Plain text
msgid ""
"Each HAL component is a piece of software with well-defined inputs, outputs, "
"and behavior, that can be installed and interconnected as needed. This "
"section lists some of the available components and a brief description of "
"what each does. Complete details for each component are available later in "
"this document."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "External Programs with HAL hooks"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "motion"
msgstr ""

#. type: Plain text
msgid ""
"(((motion))) A realtime module that accepts NML footnote:[Neutral Message "
"Language provides a mechanism for handling multiple types of messages in the "
"same buffer as well as simplifying the interface for encoding and decoding "
"buffers in neutral format and the configuration mechanism.] motion commands "
"and interacts with HAL"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "iocontrol"
msgstr ""

#. type: Plain text
msgid ""
"(((iocontrol))) A user space module that accepts NML I/O commands and "
"interacts with HAL"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "classicladder"
msgstr ""

#. type: Plain text
msgid "(((ClassicLadder))) A PLC using HAL for all I/O"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halui"
msgstr ""

#. type: Plain text
msgid ""
"(((halui))) A user space program that interacts with HAL and sends NML "
"commands, it is intended to work as a full User Interface using external "
"knobs & switches"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Internal Components"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "stepgen"
msgstr ""

#. type: Plain text
msgid ""
"Software step pulse generator with position loop. See section <<sec:stepgen, "
"Stepgen>>(((stepgen)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "encoder"
msgstr ""

#. type: Plain text
msgid ""
"Software based encoder counter. See section <<sec:encoder, "
"Encoder>>(((encoder)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pid"
msgstr ""

#. type: Plain text
msgid ""
"Proportional/Integral/Derivative control loops. See section <<sec:pid, PID>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "siggen"
msgstr ""

#. type: Plain text
msgid ""
"A sine/cosine/triangle/square wave generator for testing.  See section <<sec:"
"siggen, Siggen>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "supply"
msgstr ""

#. type: Plain text
msgid "a simple source for testing(((supply)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware Drivers"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_ax5214h"
msgstr ""

#. type: Plain text
msgid ""
"(((hal-ax5214h))) A driver for the Axiom Measurement & Control AX5241H "
"digital I/O board"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_gm"
msgstr ""

#. type: Plain text
msgid "(((hal-gm))) General Mechatronics GM6-PCI board"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_m5i20"
msgstr ""

#. type: Plain text
msgid "(((hal-m5i20))) Mesa Electronics 5i20 board"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_motenc"
msgstr ""

#. type: Plain text
msgid "(((hal-motenc))) Vital Systems MOTENC-100 board"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_parport"
msgstr ""

#. type: Plain text
msgid "(((hal-parport))) PC parallel port."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_ppmc"
msgstr ""

#. type: Plain text
msgid "(((hal-ppmc))) Pico Systems family of controllers (PPMC, USC and UPC)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_stg"
msgstr ""

#. type: Plain text
msgid "(((hal-stg))) Servo To Go card (version 1 & 2)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_vti"
msgstr ""

#. type: Plain text
msgid "(((hal-vti))) Vigilant Technologies PCI ENCDAC-4 controller"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tools and Utilities"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halcmd"
msgstr ""

#. type: Plain text
msgid ""
"(((halcmd))) Command line tool for configuration and tuning. See section "
"<<sec:halcmd, Halcmd>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halmeter"
msgstr ""

#. type: Plain text
msgid ""
"(((halmeter))) A handy multimeter for HAL signals. See section <<sec:"
"halmeter, Halmeter>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halscope"
msgstr ""

#. type: Plain text
msgid ""
"(((halscope))) A full featured digital storage oscilloscope for HAL signals. "
"See the <<sec:halscope,Halscope>> section."
msgstr ""

#. type: Plain text
msgid "Each of these building blocks is described in detail in later chapters."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Timing Issues In HAL"
msgstr ""

#. type: Plain text
msgid ""
"Unlike the physical wiring models between black boxes that we have said that "
"HAL is based upon, simply connecting two pins with a hal-signal falls far "
"short of the action of the physical case."
msgstr ""

#. type: Plain text
msgid ""
"True relay logic consists of relays connected together, and when a contact "
"opens or closes, current flows (or stops) immediately. Other coils may "
"change state, etc, and it all just 'happens'. But in PLC style ladder logic, "
"it doesn't work that way. Usually in a single pass through the ladder, each "
"rung is evaluated in the order in which it appears, and only once per pass. "
"A perfect example is a single rung ladder, with a NC contact in series with "
"a coil. The contact and coil belong to the same relay."
msgstr ""

#. type: Plain text
msgid ""
"If this were a conventional relay, as soon as the coil is energized, the "
"contacts begin to open and de-energize it. That means the contacts close "
"again, etc, etc. The relay becomes a buzzer."
msgstr ""

#. type: Plain text
msgid ""
"With a PLC, if the coil is OFF and the contact is closed when the PLC begins "
"to evaluate the rung, then when it finishes that pass, the coil is ON. The "
"fact that turning on the coil opens the contact feeding it is ignored until "
"the next pass. On the next pass, the PLC sees that the contact is open, and "
"de-energizes the coil. So the relay still switches rapidly between on and "
"off, but at a rate determined by how often the PLC evaluates the rung."
msgstr ""

#. type: Plain text
msgid ""
"In HAL, the function is the code that evaluates the rung(s). In fact, the "
"HAL-aware realtime version of ClassicLadder exports a function to do exactly "
"that. Meanwhile, a thread is the thing that runs the function at specific "
"time intervals. Just like you can choose to have a PLC evaluate all its "
"rungs every 10 ms, or every second, you can define HAL threads with "
"different periods."
msgstr ""

#. type: Plain text
msgid ""
"What distinguishes one thread from another is 'not' what the thread does - "
"that is determined by which functions are connected to it. The real "
"distinction is simply how often a thread runs."
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC you might have a 50 us thread and a 1 ms thread.  These would be "
"created based on BASE_PERIOD and SERVO_PERIOD, the actual times depend on "
"the values in your ini file."
msgstr ""

#. type: Plain text
msgid ""
"The next step is to decide what each thread needs to do. Some of those "
"decisions are the same in (nearly) any LinuxCNC system--For instance, motion-"
"command-handler is always added to servo-thread."
msgstr ""

#. type: Plain text
msgid ""
"Other connections would be made by the integrator. These might include "
"hooking the STG driver's encoder read and DAC write functions to the servo "
"thread, or hooking stepgen's function to the base-thread, along with the "
"parport function(s) to write the steps to the port."
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Basics"
msgstr ""

#. type: Plain text
msgid "This document provides a reference to the basics of HAL."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Commands "
msgstr ""

#. type: Plain text
msgid ""
"More detailed information can be found in the man page for halcmd: run 'man "
"halcmd' in a terminal window."
msgstr ""

#. type: Plain text
msgid ""
"To see the HAL configuration and check the status of pins and parameters use "
"the HAL Configuration window on the Machine menu in AXIS. To watch a pin "
"status open the Watch tab and click on each pin you wish to watch and it "
"will be added to the watch window."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "HAL Configuration Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/HAL_Configuration.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "loadrt"
msgstr ""

#. type: Plain text
msgid ""
"The command 'loadrt' loads a real time HAL component. Real time component "
"functions need to be added to a thread to be updated at the rate of the "
"thread. You cannot load a user space component into the real time space."
msgstr ""

#. type: Plain text
msgid "The syntax and an example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt <component> <options>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt mux4 count=1\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "addf"
msgstr ""

#. type: Plain text
msgid ""
"Adds function 'functname' to thread 'threadname'. Default is to add the "
"function in the order they are in the file. If 'position' is specified, adds "
"the function to that spot in the thread. Negative 'position' means position "
"with respect to the end of the thread. For example '1' is start of thread, "
"'-1' is the end of the thread, '-3' is third from the end."
msgstr ""

#. type: Plain text
msgid ""
"Some functions it is important to load them in a certain order like the "
"parport read and write functions. The function name is usually the the "
"component name plus a number. In the following example the component 'or2' "
"is loaded and 'show function' shows the name of the or2 function"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ halrun\n"
"halcmd: loadrt or2\n"
"halcmd: show function\n"
"Exported Functions:\n"
"Owner   CodeAddr  Arg       FP   Users  Name\n"
" 00004  f8bc5000  f8f950c8  NO       0   or2.0\n"
msgstr ""

#. type: Plain text
msgid ""
"You have to add a function from a HAL real time component to a thread to get "
"the function to update at the rate of the thread."
msgstr ""

#. type: Plain text
msgid ""
"Usually there are two threads as shown in this example. Some components use "
"floating point math and must be added to a thread that supports floating "
"point math. The 'FP' indicates if floating point math is supported in that "
"thread."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ halrun\n"
"halcmd: loadrt motmod base_period_nsec=55555 servo_period_nsec=1000000 num_joints=3\n"
"halcmd: show thread\n"
"Realtime Threads:\n"
"     Period  FP     Name               (     Time, Max-Time )\n"
"     995976  YES          servo-thread (        0,        0 )\n"
"      55332  NO            base-thread (        0,        0 )\n"
msgstr ""

#. type: Plain text
msgid ""
"base-thread (the high-speed thread): this thread handles items that need a "
"fast response, like making step pulses, and reading and writing the parallel "
"port. Does not support floating point math."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"servo-thread (the slow-speed thread): this thread handles items that\n"
"can tolerate a slower response, like the motion controller,    ClassicLadder,\n"
"and the motion command handler and supports floating point math.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "addf <function> <thread>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "addf mux4.0 servo-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"If the component requires a floating point thread that is usually the slower "
"servo-thread."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "loadusr"
msgstr ""

#. type: Plain text
msgid ""
"The command 'loadusr' loads a user space HAL component. User space programs "
"are their own separate processes, which optionally talk to other HAL "
"components via pins and parameters. You cannot load real time components "
"into user space."
msgstr ""

#. type: Plain text
msgid "Flags may be one or more of the following:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-W"
msgstr ""

#. type: Plain text
msgid ""
"to wait for the component to become ready. The component is assumed to have "
"the same name as the first argument of the command."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-Wn <name>"
msgstr ""

#. type: Plain text
msgid ""
"to wait for the component, which will have the given <name>.  This only "
"applies if the component has a name option."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-w"
msgstr ""

#. type: Plain text
msgid "to wait for the program to exit"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-i"
msgstr ""

#. type: Plain text
msgid "to ignore the program return value (with -w)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "-n"
msgstr ""

#. type: Plain text
msgid "name a component when it is a valid option for that component."
msgstr ""

#. type: Plain text
msgid "The syntax and examples:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr <component> <options>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr halui\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -Wn spindle gs2_vfd -n spindle\n"
msgstr ""

#. type: Plain text
msgid ""
"In English it means 'loadusr wait for name spindle component gs2_vfd name "
"spindle'."
msgstr ""

#. type: Plain text
msgid "[[sub:net]] (((net)))"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "net"
msgstr ""

#. type: Plain text
msgid ""
"The command 'net' creates a 'connection' between a signal and one or more "
"pins. If the signal does not exist net creates the new signal.  This "
"replaces the need to use the command newsig. The optional direction arrows "
"'<=', '=>' and '<=>' make it easier to follow the logic when reading a 'net' "
"command line and are not used by the net command. The direction arrows must "
"be separated by a space from the pin names."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Syntax and Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net signal-name pin-name <optional arrow> <optional second pin-name>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net home-x joint.0.home-sw-in <= parport.0.pin-11-in\n"
msgstr ""

#. type: Plain text
msgid ""
"In the above example 'home-x' is the signal name, 'joint.0.home-sw-in' is a "
"'Direction IN' pin, '<=' is the optional direction arrow, and 'parport.0."
"pin-11-in' is a 'Direction OUT' pin. This may seem confusing but the in and "
"out labels for a parallel port pin indicates the physical way the pin works "
"not how it is handled in HAL."
msgstr ""

#. type: Plain text
msgid "A pin can be connected to a signal if it obeys the following rules:"
msgstr ""

#. type: Plain text
msgid "An IN pin can always be connected to a signal"
msgstr ""

#. type: Plain text
msgid "An IO pin can be connected unless there's an OUT pin on the signal"
msgstr ""

#. type: Plain text
msgid ""
"An OUT pin can be connected only if there are no other OUT or IO pins on the "
"signal"
msgstr ""

#. type: Plain text
msgid ""
"The same 'signal-name' can be used in multiple net commands to connect "
"additional pins, as long as the rules above are obeyed."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Signal Direction"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/signal-direction.png"
msgstr ""

#. type: Plain text
msgid ""
"This example shows the signal xStep with the source being stepgen.0.out and "
"with two readers, parport.0.pin-02-out and parport.0.pin-08-out. Basically "
"the value of stepgen.0.out is sent to the signal xStep and that value is "
"then sent to parport.0.pin-02-out and parport.0.pin-08-out."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#   signal    source            destination          destination\n"
"net xStep stepgen.0.out => parport.0.pin-02-out parport.0.pin-08-out\n"
msgstr ""

#. type: Plain text
msgid ""
"Since the signal xStep contains the value of stepgen.0.out (the source) you "
"can use the same signal again to send the value to another reader. To do "
"this just use the signal with the readers on another line."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net xStep => parport.0.pin-02-out\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "I/O pins"
msgstr ""

#. type: Plain text
msgid ""
"An I/O pin like encoder.N.index-enable can be read or set as allowed by the "
"component."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "setp"
msgstr ""

#. type: Plain text
msgid ""
"The command 'setp' sets the value of a pin or parameter. The valid values "
"will depend on the type of the pin or parameter. It is an error if the data "
"types do not match."
msgstr ""

#. type: Plain text
msgid ""
"Some components have parameters that need to be set before use.  Parameters "
"can be set before use or while running as needed. You cannot use setp on a "
"pin that is connected to a signal."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp <pin/parameter-name> <value>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp parport.0.pin-08-out TRUE\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "sets"
msgstr ""

#. type: Plain text
msgid "The command 'sets' sets the value of a signal."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sets <signal-name> <value>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net mysignal and2.0.in0 pyvcp.my-led\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sets mysignal 1\n"
msgstr ""

#. type: Plain text
msgid "The signal-name does not exist"
msgstr ""

#. type: Plain text
msgid "If the signal already has a writer"
msgstr ""

#. type: Plain text
msgid "If value is not the correct type for the signal"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "unlinkp"
msgstr ""

#. type: Plain text
msgid ""
"The command 'unlinkp' unlinks a pin from the connected signal. If no signal "
"was connected to the pin prior running the command, nothing happens. The "
"'unlinkp' command is useful for trouble shooting."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "unlinkp <pin-name>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "unlinkp parport.0.pin-02-out\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Obsolete Commands"
msgstr ""

#. type: Plain text
msgid ""
"The following commands are depreciated and may be removed from future "
"versions. Any new configuration should use the <<sub:net,'net'>> command.  "
"These commands are included so older configurations will still work."
msgstr ""

#. type: Block title
#, no-wrap
msgid "linksp"
msgstr ""

#. type: Plain text
msgid ""
"The command 'linksp' creates a 'connection' between a signal and one pin."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"linksp <signal-name> <pin-name>\n"
"linksp X-step parport.0.pin-02-out\n"
msgstr ""

#. type: Plain text
msgid "The 'linksp' command has been superseded by the 'net' command."
msgstr ""

#. type: Block title
#, no-wrap
msgid "linkps"
msgstr ""

#. type: Plain text
msgid ""
"The command 'linkps' creates a 'connection' between one pin and one signal. "
"It is the same as linksp but the arguments are reversed."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linkps <pin-name> <signal-name>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linkps parport.0.pin-02-out X-Step\n"
msgstr ""

#. type: Plain text
msgid "The 'linkps' command has been superseded by the 'net' command."
msgstr ""

#. type: Block title
#, no-wrap
msgid "newsig"
msgstr ""

#. type: Plain text
msgid ""
"the command 'newsig' creates a new HAL signal by the name <signame> and the "
"data type of <type>. Type must be 'bit', 's32', 'u32' or 'float'. Error if "
"<signame> all ready exists."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "newsig <signame> <type>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "newsig Xstep bit\n"
msgstr ""

#. type: Plain text
msgid ""
"More information can be found in the HAL manual or the man pages for halrun."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Data"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Bit (((Bit)))"
msgstr ""

#. type: Plain text
msgid "A bit value is an on or off."
msgstr ""

#. type: Plain text
msgid "bit values = true or 1 and false or 0 (True, TRUE, true are all valid)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Float (((Float)))"
msgstr ""

#. type: Plain text
msgid ""
"A 'float' is a floating point number. In other words the decimal point can "
"move as needed."
msgstr ""

#. type: Plain text
msgid ""
"float values = a 64 bit floating point value, with approximately 53 bits of "
"resolution and over 1000 bits of dynamic range."
msgstr ""

#. type: Plain text
msgid "For more information on floating point numbers see:"
msgstr ""

#. type: Plain text
msgid ""
"http://en.wikipedia.org/wiki/Floating_point[http://en.wikipedia.org/wiki/"
"Floating_point]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "s32 (((s32)))"
msgstr ""

#. type: Plain text
msgid ""
"An 's32' number is a whole number that can have a negative or positive value."
msgstr ""

#. type: Plain text
msgid "s32 values = integer numbers -2147483648 to 2147483647"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "u32 (((u32)))"
msgstr ""

#. type: Plain text
msgid "A 'u32' number is a whole number that is positive only."
msgstr ""

#. type: Plain text
msgid "u32 values = integer numbers 0 to 4294967295"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Files"
msgstr ""

#. type: Plain text
msgid ""
"If you used the Stepper Config Wizard to generate your config you will have "
"up to three HAL files in your config directory."
msgstr ""

#. type: Plain text
msgid "my-mill.hal (if your config is named 'my-mill') This file is loaded"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "first and should not be changed if you used the Stepper Config Wizard.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "custom.hal This file is loaded next and before the GUI loads. This is\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"where you put your custom HAL commands that you want loaded before the\n"
"GUI is loaded. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "custom_postgui.hal This file is loaded after the GUI loads. This is\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"where you put your custom HAL commands that you want loaded after the\n"
"GUI is loaded. Any HAL commands that use pyVCP widgets need to be\n"
"placed here.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Parameter"
msgstr ""

#. type: Plain text
msgid ""
"Two parameters are automatically added to each HAL component when it is "
"created. These parameters allow you to scope the execution time of a "
"component."
msgstr ""

#. type: Plain text
msgid "+.time+(((time)))"
msgstr ""

#. type: Plain text
msgid "+.tmax+(((tmax)))"
msgstr ""

#. type: Plain text
msgid "Time is the number of CPU cycles it took to execute the function."
msgstr ""

#. type: Plain text
msgid ""
"Tmax is the maximum number of CPU cycles it took to execute the function. "
"Tmax is a read/write parameter so the user can set it to 0 to get rid of the "
"first time initialization on the function's execution time."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic Logic Components"
msgstr ""

#. type: Plain text
msgid ""
"HAL contains several real time logic components. Logic components follow a "
"'Truth Table' that states what the output is for any given input. Typically "
"these are bit manipulators and follow electrical logic gate truth tables."
msgstr ""

#. type: Plain text
msgid ""
"For further components see <<sec:realtime-components, Realtime Components "
"List>> or the man pages."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "and2"
msgstr ""

#. type: Plain text
msgid ""
"The 'and2' component is a two input 'and' gate. The truth table below shows "
"the output based on each combination of input."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "and2 [count=N] | [names=name1[,name2...]]\n"
msgstr ""

#. type: Plain text
msgid "and2.n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    and2.N.in0 (bit, in)\n"
"    and2.N.in1 (bit, in)\n"
"    and2.N.out (bit, out)\n"
msgstr ""

#. type: Plain text
msgid "Truth Table"
msgstr ""

#. type: Table
#, no-wrap
msgid "in0"
msgstr ""

#. type: Table
#, no-wrap
msgid "in1"
msgstr ""

#. type: Table
#, no-wrap
msgid "False"
msgstr ""

#. type: Table
#, no-wrap
msgid "True"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "not"
msgstr ""

#. type: Plain text
msgid "The 'not' component is a bit inverter."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "not [count=n] | [names=name1[,name2...]]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    not.all\n"
"    not.n\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    not.n.in (bit, in)\n"
"    not.n.out (bit, out)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "or2"
msgstr ""

#. type: Plain text
msgid "The 'or2' component is a two input OR gate."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "or2[count=n] | [names=name1[,name2...]]\n"
msgstr ""

#. type: Plain text
msgid "+or2.n+"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    or2.n.in0 (bit, in)\n"
"    or2.n.in1 (bit, in)\n"
"    or2.n.out (bit, out)\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "xor2"
msgstr ""

#. type: Plain text
msgid "The 'xor2' component is a two input XOR (exclusive OR)gate."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "xor2[count=n] | [names=name1[,name2...]]\n"
msgstr ""

#. type: Plain text
msgid "+xor2.n+"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    xor2.n.in0 (bit, in)\n"
"    xor2.n.in1 (bit, in)\n"
"    xor2.n.out (bit, out)\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Logic Examples"
msgstr ""

#. type: Plain text
msgid "An 'and2' example connecting two inputs to one output."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt and2 count=1\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "addf and2.0 servo-thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net my-sigin1 and2.0.in0 <= parport.0.pin-11-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net my-sigin2 and2.0.in1 <= parport.0.pin-12-in\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net both-on parport.0.pin-14-out <= and2.0.out\n"
msgstr ""

#. type: Plain text
msgid ""
"In the above example one copy of and2 is loaded into real time space and "
"added to the servo thread. Next pin 11 of the parallel port is connected to "
"the in0 bit of the and gate. Next pin 12 is connected to the in1 bit of the "
"and gate. Last we connect the and2 out bit to the parallel port pin 14. So "
"following the truth table for and2 if pin 11 and pin 12 are on then the "
"output pin 14 will be on."
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL TWOPASS"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "TWOPASS"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC 2.5 supports TWOPASS processing of hal configuration files that can "
"help in the modularization and readability of hal files.  (Hal files are "
"specified in an LinuxCNC ini file in the HAL stanza as "
"[HAL]HALFILE=filename)."
msgstr ""

#. type: Plain text
msgid ""
"Normally, a set of one or more hal configuration files must use a single, "
"unique loadrt line to load a kernel module that may handle multiple "
"instances of a component.  For example, if you use a two input AND gate "
"component (and2) in three different places in your setup, you would need to "
"have a single line somewhere to specify:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "   loadrt and2 count=3\n"
msgstr ""

#. type: Plain text
msgid "resulting in components and2.0, and2.1, and2.2."
msgstr ""

#. type: Plain text
msgid ""
"Configurations are more readable if you specify with the names=option for "
"components where it is supported, e.g.,:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt and2 names=aa,ab,ac\n"
msgstr ""

#. type: Plain text
msgid "resulting in components aa,ab,ac."
msgstr ""

#. type: Plain text
msgid ""
"It can be a maintenance problem to keep track of the components and their "
"names since when you add (or remove) a component, you must find and update "
"the single loadrt directive applicable to the component."
msgstr ""

#. type: Plain text
msgid ""
"TWOPASS processing is enabled by including an ini file parameter in the "
"[HAL] section:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[HAL]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TWOPASS = anystring\n"
msgstr ""

#. type: Plain text
msgid ""
"Where \"anystring\" can be any non-null string.  With this setting, you can "
"have multiple specifications like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt and2 names=aa\n"
"...\n"
"loadrt and2 names=ab,ac\n"
"...\n"
"loadrt and2 names=ad\n"
msgstr ""

#. type: Plain text
msgid ""
"These commands can appear in different HALFILES.  The HALFILES are processed "
"in the order of their appearance in the ini file."
msgstr ""

#. type: Plain text
msgid ""
"The TWOPASS option can be specified with options to add output for debugging "
"(verbose) and to prevent deletion of temporary files (nodelete).  The "
"options are separated with commas."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "TWOPASS = on,verbose,nodelete\n"
msgstr ""

#. type: Plain text
msgid ""
"With TWOPASS processing, all [HAL]HALFILES are first read and multiple "
"appearances of loadrt directives for each module are accumulated.  User "
"components (loadusr) are loaded in order but no other hal commands are "
"executed in the initial pass."
msgstr ""

#. type: Plain text
msgid ""
"User components should use the wait (-W) option to ensure the component is "
"ready before other commands are executed."
msgstr ""

#. type: Plain text
msgid ""
"After the initial pass, the realtime modules are loaded (loadrt)  "
"automatically with a number equal to the total number when using the count= "
"option or with all of the individual names specified when using the names= "
"option."
msgstr ""

#. type: Plain text
msgid ""
"A second pass is then made to execute all of the other hal instructions "
"specified in the HALFILES.  The addf commands that associate a component's "
"functions with thread execution are executed in the order of appearance with "
"other commands during this second pass."
msgstr ""

#. type: Plain text
msgid ""
"While you can use either the count= or names= options, they are mutually "
"exclusive -- only one type can be specified for a given module."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"TWOPASS processing is most effective when using the names=\n"
"option.  This option allows you to provide unique names that\n"
"are mnemonic or otherwise relevant to the configuration.   For\n"
"example, if you use a derivative component to estimate the\n"
"velocities and accelerations on each (x,y,z) coordinate, using\n"
"the count= method will give arcane component names like ddt.0,\n"
"ddt.1, ddt.2, etc.\n"
msgstr ""

#. type: Plain text
msgid "Alternatively, using the names= option like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt ddt names=xvel,yvel,zvel\n"
"...\n"
"loadrt ddt names=xaccel,yaccel,zaccel\n"
msgstr ""

#. type: Plain text
msgid ""
"results in components sensibly named xvel,yvel,zvel, xaccel,yaccel,zaccel."
msgstr ""

#. type: Plain text
msgid ""
"Many comps supplied with the distribution are created with the halcompile "
"utility and support the names= option.  These include the common logic "
"components that are the glue of many hal configurations."
msgstr ""

#. type: Plain text
msgid ""
"User-created comps that use the halcompile utility automatically support the "
"names= option as well.  In addition to comps generated with the halcompile "
"utility, numerous other comps support the names=option.  Comps that support "
"names= option include: at_pid, encoder, encoder_ratio, pid, siggen, and "
"sim_encoder."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Post GUI"
msgstr ""

#. type: Plain text
msgid ""
"Some GUIs support halfiles that are processed after the GUI is started in "
"order to connect hal pins that are created by the GUI.  When using a postgui "
"halfile with TWOPASS processing, include all loadrt items for components "
"added by postgui halfiles in a separate halfile that is processed before the "
"GUI.  The addf commands can also be included in the file.  Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[HAL]\n"
"TWOPASS = on\n"
"HALFILE = file_1.hal\n"
"...\n"
"HALFILE = file_n.hal\n"
"HALFILE = file_with_all_loads_for_postgui.hal\n"
"...\n"
"POSTGUI_HALFILE = the_postgui_file.hal\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Excluding .hal files"
msgstr ""

#. type: Plain text
msgid ""
"TWOPASS processing converts '.hal' files to equivalent '.tcl' files and uses "
"haltcl to find loadrt and addf commands in order to accumulate and "
"consolidate their usage.  Loadrt parameters that conform to the simple "
"'names=' (or 'count=') parameters accepted by the HAL Component Generator "
"('halcompile') are expected.  More complex parameter items included in "
"specialized hal components may not be handled properly."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"A '.hal' file may be excluded from TWOPASS processing by including a magic\n"
"comment line anywhere in the '.hal' file.   The magic comment line must begin\n"
"with the string: '#NOTWOPASS'.  Files specified with this magic comment are\n"
"sourced by halcmd using the '-k' (keep going if failure) and '-v' (verbose)\n"
"options.\n"
msgstr ""

#. type: Plain text
msgid ""
"This exclusion provision can be used to isolate problems or for loading any "
"special hal component that does not require or benefit from TWOPASS "
"processing."
msgstr ""

#. type: Plain text
msgid ""
"Ordinarily, the loadrt ordering of realtime components is not critical, but "
"loadrt ordering for special components can be enforced by placing the such "
"loadrt directives in an excluded file."
msgstr ""

#. type: Plain text
msgid ""
"While the order of loadrt directives is not usually critical, ordering of "
"addf directives is often very important for proper operation of servo loop "
"components."
msgstr ""

#. type: Plain text
msgid "Excluded '.hal' file example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ cat twopass_excluded.hal\n"
"# The following magic comment causes this file to\n"
"# be excluded from twopass processing:\n"
"# NOTWOPASS\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# debugging component with complex options:\n"
"loadrt mycomponent parm1=\"abc def\" parm2=ghi\n"
"show pin mycomponent\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# ordering special components\n"
"loadrt component_1\n"
"loadrt component_2\n"
msgstr ""

#. type: Plain text
msgid ""
"Case and whitespace within the magic comment are ignored.  The loading of "
"components that use names= or count= parameters (typically built by "
"halcompile) should not be used in excluded files as that would eliminate the "
"benefits of TWOPASS processing.  The hal commands that create signals (net) "
"and commands that establish execution order (addf) should not be placed in "
"excluded files.  This is especially true for addf commands since their "
"ordering may be important."
msgstr ""

#. type: Plain text
msgid ""
"Examples of TWOPASS usage for a simulator are included in the directories:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   configs/sim/axis/twopass/\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   configs/sim/axis/simtcl/\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Tutorial"
msgstr ""

#. type: Plain text
msgid ""
"Configuration moves from theory to device -- HAL device that is. For those "
"who have had just a bit of computer programming, this section is the 'Hello "
"World' of the HAL. Halrun can be used to create a working system. It is a "
"command line or text file tool for configuration and tuning. The following "
"examples illustrate its setup and operation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Notation"
msgstr ""

#. type: Plain text
msgid ""
"Terminal commands are shown without the system prompt unless you are running "
"'HAL'. The terminal window is in 'Applications/Accessories' from the main "
"Ubuntu menu bar."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Terminal Command Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"me@computer:~linuxcnc$ halrun\n"
"(will be shown like the following line)\n"
"halrun\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"(the halcmd: prompt will be shown when running HAL)\n"
"halcmd: loadrt debounce\n"
"halcmd: show pin\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tab-completion"
msgstr ""

#. type: Plain text
msgid ""
"Your version of halcmd may include tab-completion. Instead of completing "
"file names as a shell does, it completes commands with HAL identifiers. You "
"will have to type enough letters for a unique match.  Try pressing tab after "
"starting a HAL command:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Tab Completion"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd: loa<TAB>\n"
"halcmd: load\n"
"halcmd: loadrt\n"
"halcmd: loadrt deb<TAB>\n"
"halcmd: loadrt debounce\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The RTAPI environment"
msgstr ""

#. type: Plain text
msgid ""
"RTAPI stands for Real Time Application Programming Interface. Many HAL "
"components work in realtime, and all HAL components store data in shared "
"memory so realtime components can access it. Normal Linux does not support "
"realtime programming or the type of shared memory that HAL needs. "
"Fortunately there are realtime operating systems (RTOS's) that provide the "
"necessary extensions to Linux. Unfortunately, each RTOS does things a little "
"differently."
msgstr ""

#. type: Plain text
msgid ""
"To address these differences, the LinuxCNC team came up with RTAPI, which "
"provides a consistent way for programs to talk to the RTOS. If you are a "
"programmer who wants to work on the internals of LinuxCNC, you may want to "
"study 'linuxcnc/src/rtapi/rtapi.h' to understand the API. But if you are a "
"normal person all you need to know about RTAPI is that it (and the RTOS) "
"needs to be loaded into the memory of your computer before you do anything "
"with HAL."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "A Simple Example"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Loading a component"
msgstr ""

#. type: Plain text
msgid ""
"For this tutorial, we are going to assume that you have successfully "
"installed the Live CD and, if using a RIP footnote:[Run In Place, when the "
"source files have been downloaded to a user directory.], invoked the 'rip-"
"environment' script to prepare your shell.  In that case, all you need to do "
"is load the required RTOS and RTAPI modules into memory. Just run the "
"following command from a terminal window:"
msgstr ""

#.  NOTE! add link to rip-environment explanation
#. type: Block title
#, no-wrap
msgid "Loading HAL"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"cd linuxcnc\n"
"halrun\n"
"halcmd:\n"
msgstr ""

#. type: Plain text
msgid ""
"With the realtime OS and RTAPI loaded, we can move into the first example. "
"Notice that the prompt is now shown as 'halcmd:'.  This is because "
"subsequent commands will be interpreted as HAL commands, not shell commands."
msgstr ""

#. type: Plain text
msgid ""
"For the first example, we will use a HAL component called 'siggen', which is "
"a simple signal generator. A complete description of the 'siggen' component "
"can be found in the <<sec:siggen,Siggen>> section of this Manual.  It is a "
"realtime component, implemented as a Linux kernel module. To load 'siggen' "
"use the HAL command 'loadrt'."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Loading siggen"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt siggen\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Examining the HAL"
msgstr ""

#. type: Plain text
msgid ""
"Now that the module is loaded, it is time to introduce 'halcmd' , the "
"command line tool used to configure the HAL. This tutorial will introduce "
"some halcmd features, for a more complete description try 'man halcmd', or "
"see the reference in <<sec:hal-commands,Hal Commands>> section of this "
"document. The first halcmd feature is the 'show' command. This command "
"displays information about the current state of the HAL. To show all "
"installed components:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Show Components"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show comp\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Loaded HAL Components:  \n"
"ID     Type  Name                                PID   State\n"
"    3  RT    siggen                                    ready\n"
"    2  User  halcmd2177                          2177  ready\n"
msgstr ""

#. type: Plain text
msgid ""
"Since 'halcmd' itself is a HAL component, it will always show up in the "
"list. The number after halcmd in the component list is the process ID.  It "
"is possible to run more than one copy of halcmd at the same time (in "
"different windows for example), so the PID is added to the end of the name "
"to make it unique. The list also shows the 'siggen' component that we "
"installed in the previous step. The 'RT' under 'Type' indicates that "
"'siggen' is a realtime component. The 'User' under 'Type' indicates it is a "
"user space component."
msgstr ""

#. type: Plain text
msgid "Next, let's see what pins 'siggen' makes available:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Show Pins"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show pin\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins: \n"
"Owner   Type   Dir        Value  Name \n"
"     3  float  IN             1  siggen.0.amplitude\n"
"     3  bit    OUT        FALSE  siggen.0.clock\n"
"     3  float  OUT            0  siggen.0.cosine\n"
"     3  float  IN             1  siggen.0.frequency\n"
"     3  float  IN             0  siggen.0.offset\n"
"     3  float  OUT            0  siggen.0.sawtooth\n"
"     3  float  OUT            0  siggen.0.sine\n"
"     3  float  OUT            0  siggen.0.square\n"
"     3  float  OUT            0  siggen.0.triangle\n"
msgstr ""

#. type: Plain text
msgid ""
"This command displays all of the pins in the current HAL. A complex system "
"could have dozens or hundreds of pins. But right now there are only nine "
"pins. Of these pins eight are floating point and one is bit (boolean).  Six "
"carry data out of the 'siggen' component and three are used to transfer "
"settings into the component. Since we have not yet executed the code "
"contained within the component, some the pins have a value of zero."
msgstr ""

#. type: Plain text
msgid "The next step is to look at parameters:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Show Parameters"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show param\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Parameters: \n"
"Owner   Type  Dir        Value   Name \n"
"     3  s32   RO             0   siggen.0.update.time\n"
"     3  s32   RW             0   siggen.0.update.tmax\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The 'show param' command shows all the parameters in the HAL. Right now\n"
"each parameter has the default value it was given when the component\n"
"was loaded. Note the column labeled 'Dir'. The parameters labeled '-W'\n"
"are writable ones that are never changed by the component itself,\n"
"instead they are meant to be changed by the user to control the\n"
" component. We will see how to do this later. Parameters labeled 'R-'\n"
"are read only parameters. They can be changed only by the component.\n"
" Finally, parameter labeled 'RW' are read-write parameters. That means\n"
"that they are changed by the\n"
" component, but can also be changed by the user. Note: the parameters\n"
"'siggen.0.update.time' and 'siggen.0.update.tmax' are for debugging\n"
"purposes, and won't be covered in this section.\n"
msgstr ""

#. type: Plain text
msgid ""
"Most realtime components export one or more functions to actually run the "
"realtime code they contain. Let's see what function(s) 'siggen' exported:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Show Functions"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show funct\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Exported Functions:\n"
"Owner   CodeAddr  Arg       FP   Users  Name \n"
" 00003  f801b000  fae820b8  YES      0   siggen.0.update\n"
msgstr ""

#. type: Plain text
msgid ""
"The siggen component exported a single function. It requires floating point. "
"It is not currently linked to any threads, so 'users' is zero."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Making realtime code run"
msgstr ""

#. type: Plain text
msgid ""
"To actually run the code contained in the function 'siggen.0.update', we "
"need a realtime thread. The component called 'threads' that is used to "
"create a new thread. Lets create a thread called 'test-thread' with a period "
"of 1 ms (1,000 us or 1,000,000 ns):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt threads name1=test-thread period1=1000000\n"
msgstr ""

#. type: Plain text
msgid "Let's see if that worked:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Show Threads"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show thread\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Realtime Threads: \n"
"     Period  FP     Name               (     Time, Max-Time )\n"
"     999855  YES           test-thread (        0,        0 )\n"
msgstr ""

#. type: Plain text
msgid ""
"It did. The period is not exactly 1,000,000 ns because of hardware "
"limitations, but we have a thread that runs at approximately the correct "
"rate, and which can handle floating point functions. The next step is to "
"connect the function to the thread:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Add Function"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: addf siggen.0.update test-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"Up till now, we've been using 'halcmd' only to look at the HAL.  However, "
"this time we used the 'addf' (add function) command to actually change "
"something in the HAL. We told 'halcmd' to add the function 'siggen.0.update' "
"to the thread 'test-thread', and if we look at the thread list again, we see "
"that it succeeded:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Realtime Threads: \n"
"     Period  FP     Name                (     Time, Max-Time )\n"
"     999855  YES          test-thread   (        0,        0 )\n"
"                  1 siggen.0.update\n"
msgstr ""

#. type: Plain text
msgid ""
"There is one more step needed before the 'siggen' component starts "
"generating signals. When the HAL is first started, the thread(s) are not "
"actually running. This is to allow you to completely configure the system "
"before the realtime code starts. Once you are happy with the configuration, "
"you can start the realtime code like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: start\n"
msgstr ""

#. type: Plain text
msgid "Now the signal generator is running. Let's look at its output pins:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins:\n"
"Owner   Type  Dir         Value  Name \n"
"     3  float IN              1  siggen.0.amplitude\n"
"     3  bit   OUT         FALSE  siggen.0.clock\n"
"     3  float OUT    -0.1640929  siggen.0.cosine\n"
"     3  float IN              1  siggen.0.frequency\n"
"     3  float IN              0  siggen.0.offset\n"
"     3  float OUT    -0.4475303  siggen.0.sawtooth\n"
"     3  float OUT     0.9864449  siggen.0.sine\n"
"     3  float OUT            -1  siggen.0.square\n"
"     3  float OUT    -0.1049393  siggen.0.triangle\n"
msgstr ""

#. type: Plain text
msgid "And let's look again:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins:\n"
"Owner   Type  Dir         Value  Name\n"
"     3  float IN              1  siggen.0.amplitude\n"
"     3  bit   OUT         FALSE  siggen.0.clock\n"
"     3  float OUT     0.0507619  siggen.0.cosine\n"
"     3  float IN              1  siggen.0.frequency\n"
"     3  float IN              0  siggen.0.offset\n"
"     3  float OUT     -0.516165  siggen.0.sawtooth\n"
"     3  float OUT     0.9987108  siggen.0.sine\n"
"     3  float OUT            -1  siggen.0.square\n"
"     3  float OUT    0.03232994  siggen.0.triangle\n"
msgstr ""

#. type: Plain text
msgid ""
"We did two 'show pin' commands in quick succession, and you can see that the "
"outputs are no longer zero.  The sine, cosine, sawtooth, and triangle "
"outputs are changing constantly. The square output is also working, however "
"it simply switches from +1.0 to -1.0 every cycle."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Changing Parameters"
msgstr ""

#. type: Plain text
msgid ""
"The real power of HAL is that you can change things. For example, we can use "
"the 'setp' command to set the value of a parameter. Let's change the "
"amplitude of the signal generator from 1.0 to 5.0:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Set Pin"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: setp siggen.0.amplitude 5\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Check the parameters and pins again"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Parameters: \n"
"Owner   Type  Dir         Value  Name\n"
"     3  s32   RO           1754  siggen.0.update.time\n"
"     3  s32   RW          16997  siggen.0.update.tmax\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins:\n"
"Owner   Type  Dir         Value  Name\n"
"     3  float IN              5  siggen.0.amplitude\n"
"     3  bit   OUT         FALSE  siggen.0.clock\n"
"     3  float OUT     0.8515425  siggen.0.cosine\n"
"     3  float IN              1  siggen.0.frequency\n"
"     3  float IN              0  siggen.0.offset\n"
"     3  float OUT      2.772382  siggen.0.sawtooth\n"
"     3  float OUT     -4.926954  siggen.0.sine\n"
"     3  float OUT             5  siggen.0.square\n"
"     3  float OUT      0.544764  siggen.0.triangle\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that the value of parameter 'siggen.0.amplitude' has changed to 5, and "
"that the pins now have larger values."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Saving the HAL configuration"
msgstr ""

#. type: Plain text
msgid ""
"Most of what we have done with 'halcmd' so far has simply been viewing "
"things with the 'show' command. However two of the commands actually changed "
"things. As we design more complex systems with HAL, we will use many "
"commands to configure things just the way we want them. HAL has the memory "
"of an elephant, and will retain that configuration until we shut it down. "
"But what about next time? We don't want to manually enter a bunch of "
"commands every time we want to use the system. We can save the configuration "
"of the entire HAL with a single command:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Save"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd: save\n"
"# components \n"
"loadrt threads name1=test-thread period1=1000000 \n"
"loadrt siggen \n"
"# pin aliases \n"
"# signals \n"
"# nets \n"
"# parameter values \n"
"setp siggen.0.update.tmax 14687 \n"
"# realtime thread/function links \n"
"addf siggen.0.update test-thread \n"
msgstr ""

#. type: Plain text
msgid ""
"The output of the 'save' command is a sequence of HAL commands. If you start "
"with an 'empty' HAL and run all these commands, you will get the "
"configuration that existed when the 'save' command was issued. To save these "
"commands for later use, we simply redirect the output to a file:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Save to a file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: save all saved.hal\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Exiting halrun"
msgstr ""

#. type: Plain text
msgid ""
"When you're finished with your HAL session type 'exit' at the 'halcmd:' "
"prompt. This will return you to the system prompt and close down the HAL "
"session. Do not simply close the terminal window without shutting down the "
"HAL session."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Exit HAL"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: exit\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Restoring the HAL configuration"
msgstr ""

#. type: Plain text
msgid ""
"To restore the HAL configuration stored in 'saved.hal', we need to execute "
"all of those HAL commands. To do that, we use '-f <file name>' which reads "
"commands from a file, and '-I' (upper case i) which shows the halcmd prompt "
"after executing the commands:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Run a Saved File"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halrun -I -f saved.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"Notice that there is not a 'start' command in saved.hal. It's necessary to "
"issue it again (or edit saved.hal to add it there)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Removing HAL from memory"
msgstr ""

#. type: Plain text
msgid ""
"If an unexpected shut down of a HAL session occurs you might have to unload "
"HAL before another session can begin. To do this type the following command "
"in a terminal window."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Removing HAL"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halrun -U\n"
msgstr ""

#. type: Plain text
msgid "[[sec:tutorial-halmeter]](((Halmeter,Tutorial Halmeter)))"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Halmeter"
msgstr ""

#. type: Plain text
msgid ""
"You can build very complex HAL systems without ever using a graphical "
"interface. However there is something satisfying about seeing the result of "
"your work. The first and simplest GUI tool for the HAL is halmeter. It is a "
"very simple program that is the HAL equivalent of the handy Fluke multimeter "
"(or Simpson analog meter for the old timers)."
msgstr ""

#. type: Plain text
msgid ""
"We will use the siggen component again to check out halmeter. If you just "
"finished the previous example, then you can load siggen using the saved "
"file. If not, we can load it just like we did before:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halrun\n"
"halcmd: loadrt siggen\n"
"halcmd: loadrt threads name1=test-thread period1=1000000\n"
"halcmd: addf siggen.0.update test-thread\n"
"halcmd: start\n"
"halcmd: setp siggen.0.amplitude 5\n"
msgstr ""

#. type: Plain text
msgid ""
"At this point we have the siggen component loaded and running. It's time to "
"start halmeter."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Starting Halmeter"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadusr halmeter\n"
msgstr ""

#. type: Plain text
msgid "The first window you will see is the 'Select Item to Probe' window."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Halmeter Select Window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halmeter-select.png"
msgstr ""

#. type: Plain text
msgid ""
"This dialog has three tabs. The first tab displays all of the HAL pins in "
"the system. The second one displays all the signals, and the third displays "
"all the parameters. We would like to look at the pin 'siggen.0.cosine' "
"first, so click on it then click the 'Close' button.  The probe selection "
"dialog will close, and the meter looks something like the following figure."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halmeter-1.png"
msgstr ""

#. type: Plain text
msgid ""
"To change what the meter displays press the 'Select' button which brings "
"back the 'Select Item to Probe' window."
msgstr ""

#. type: Plain text
msgid ""
"You should see the value changing as siggen generates its cosine wave.  "
"Halmeter refreshes its display about 5 times per second."
msgstr ""

#. type: Plain text
msgid "To shut down halmeter, just click the exit button."
msgstr ""

#. type: Plain text
msgid ""
"If you want to look at more than one pin, signal, or parameter at a time, "
"you can just start more halmeters. The halmeter window was intentionally "
"made very small so you could have a lot of them on the screen at once."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stepgen Example(((stepgen)))"
msgstr ""

#. type: Plain text
msgid ""
"Up till now we have only loaded one HAL component. But the whole idea behind "
"the HAL is to allow you to load and connect a number of simple components to "
"make up a complex system. The next example will use two components."
msgstr ""

#. type: Plain text
msgid ""
"Before we can begin building this new example, we want to start with a clean "
"slate. If you just finished one of the previous examples, we need to remove "
"the all components and reload the RTAPI and HAL libraries."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Installing the components"
msgstr ""

#. type: Plain text
msgid ""
"Now we are going to load the step pulse generator component. For a detailed "
"description of this component refer to the stepgen section of the Integrator "
"Manual. In this example we will use the 'velocity' control type of stepgen.  "
"For now, we can skip the details, and just run the following commands."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halrun \n"
"halcmd: loadrt stepgen step_type=0,0 ctrl_type=v,v\n"
"halcmd: loadrt siggen\n"
"halcmd: loadrt threads name1=fast fp1=0 period1=50000 name2=slow period2=1000000\n"
msgstr ""

#. type: Plain text
msgid ""
"The first command loads two step generators, both configured to generate "
"stepping type 0. The second command loads our old friend siggen, and the "
"third one creates two threads, a fast one with a period of 50 microseconds "
"and a slow one with a period of 1 millisecond. The fast thread doesn't "
"support floating point functions."
msgstr ""

#. type: Plain text
msgid ""
"As before, we can use 'halcmd show' to take a look at the HAL. This time we "
"have a lot more pins and parameters than before:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins:\n"
"Owner   Type  Dir         Value  Name\n"
"     4  float IN              1  siggen.0.amplitude\n"
"     4  bit   OUT         FALSE  siggen.0.clock\n"
"     4  float OUT             0  siggen.0.cosine\n"
"     4  float IN              1  siggen.0.frequency\n"
"     4  float IN              0  siggen.0.offset\n"
"     4  float OUT             0  siggen.0.sawtooth\n"
"     4  float OUT             0  siggen.0.sine\n"
"     4  float OUT             0  siggen.0.square\n"
"     4  float OUT             0  siggen.0.triangle\n"
"     3  s32   OUT             0  stepgen.0.counts\n"
"     3  bit   OUT         FALSE  stepgen.0.dir\n"
"     3  bit   IN          FALSE  stepgen.0.enable\n"
"     3  float OUT             0  stepgen.0.position-fb\n"
"     3  bit   OUT         FALSE  stepgen.0.step\n"
"     3  float IN              0  stepgen.0.velocity-cmd\n"
"     3  s32   OUT             0  stepgen.1.counts\n"
"     3  bit   OUT         FALSE  stepgen.1.dir\n"
"     3  bit   IN          FALSE  stepgen.1.enable\n"
"     3  float OUT             0  stepgen.1.position-fb\n"
"     3  bit   OUT         FALSE  stepgen.1.step\n"
"     3  float IN              0  stepgen.1.velocity-cmd\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Parameters:\n"
"Owner   Type  Dir         Value  Name\n"
"     4  s32   RO              0  siggen.0.update.time\n"
"     4  s32   RW              0  siggen.0.update.tmax\n"
"     3  u32   RW     0x00000001  stepgen.0.dirhold\n"
"     3  u32   RW     0x00000001  stepgen.0.dirsetup\n"
"     3  float RO              0  stepgen.0.frequency\n"
"     3  float RW              0  stepgen.0.maxaccel\n"
"     3  float RW              0  stepgen.0.maxvel\n"
"     3  float RW              1  stepgen.0.position-scale\n"
"     3  s32   RO              0  stepgen.0.rawcounts\n"
"     3  u32   RW     0x00000001  stepgen.0.steplen\n"
"     3  u32   RW     0x00000001  stepgen.0.stepspace\n"
"     3  u32   RW     0x00000001  stepgen.1.dirhold\n"
"     3  u32   RW     0x00000001  stepgen.1.dirsetup\n"
"     3  float RO              0  stepgen.1.frequency\n"
"     3  float RW              0  stepgen.1.maxaccel\n"
"     3  float RW              0  stepgen.1.maxvel\n"
"     3  float RW              1  stepgen.1.position-scale\n"
"     3  s32   RO              0  stepgen.1.rawcounts\n"
"     3  u32   RW     0x00000001  stepgen.1.steplen\n"
"     3  u32   RW     0x00000001  stepgen.1.stepspace\n"
"     3  s32   RO              0  stepgen.capture-position.time\n"
"     3  s32   RW              0  stepgen.capture-position.tmax\n"
"     3  s32   RO              0  stepgen.make-pulses.time\n"
"     3  s32   RW              0  stepgen.make-pulses.tmax\n"
"     3  s32   RO              0  stepgen.update-freq.time\n"
"     3  s32   RW              0  stepgen.update-freq.tmax\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Connecting pins with signals"
msgstr ""

#. type: Plain text
msgid ""
"What we have is two step pulse generators, and a signal generator. Now it is "
"time to create some HAL signals to connect the two components. We are going "
"to pretend that the two step pulse generators are driving the X and Y axis "
"of a machine. We want to move the table in circles. To do this, we will send "
"a cosine signal to the X axis, and a sine signal to the Y axis. The siggen "
"module creates the sine and cosine, but we need 'wires' to connect the "
"modules together. In the HAL, 'wires' are called signals. We need to create "
"two of them. We can call them anything we want, for this example they will "
"be 'X-vel' and 'Y-vel'. The signal 'X-vel' is intended to run from the "
"cosine output of the signal generator to the velocity input of the first "
"step pulse generator.  The first step is to connect the signal to the signal "
"generator output.  To connect a signal to a pin we use the net command."
msgstr ""

#. type: Block title
#, no-wrap
msgid "net command"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: net X-vel <= siggen.0.cosine\n"
msgstr ""

#. type: Plain text
msgid "To see the effect of the 'net' command, we show the signals again."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: show sig\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Signals:\n"
"Type          Value  Name     (linked to)\n"
"float             0  X-vel <== siggen.0.cosine\n"
msgstr ""

#. type: Plain text
msgid ""
"When a signal is connected to one or more pins, the show command lists the "
"pins immediately following the signal name. The 'arrow' shows the direction "
"of data flow - in this case, data flows from pin 'siggen.0.cosine' to signal "
"'X-vel'. Now let's connect the 'X-vel' to the velocity input of a step pulse "
"generator."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: net X-vel => stepgen.0.velocity-cmd\n"
msgstr ""

#. type: Plain text
msgid ""
"We can also connect up the Y axis signal 'Y-vel'. It is intended to run from "
"the sine output of the signal generator to the input of the second step "
"pulse generator. The following command accomplishes in one line what two "
"'net' commands accomplished for 'X-vel'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: net Y-vel siggen.0.sine => stepgen.1.velocity-cmd\n"
msgstr ""

#. type: Plain text
msgid ""
"Now let's take a final look at the signals and the pins connected to them."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Signals:\n"
"Type          Value  Name     (linked to)\n"
"float             0  X-vel <== siggen.0.cosine\n"
"                           ==> stepgen.0.velocity-cmd\n"
"float             0  Y-vel <== siggen.0.sine\n"
"                           ==> stepgen.1.velocity-cmd\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'show sig' command makes it clear exactly how data flows through the "
"HAL. For example, the 'X-vel' signal comes from pin 'siggen.0.cosine', and "
"goes to pin 'stepgen.0.velocity-cmd'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting up realtime execution - threads and functions"
msgstr ""

#. type: Plain text
msgid ""
"Thinking about data flowing through 'wires' makes pins and signals fairly "
"easy to understand. Threads and functions are a little more difficult. "
"Functions contain the computer instructions that actually get things done. "
"Thread are the method used to make those instructions run when they are "
"needed. First let's look at the functions available to us."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Exported Functions:\n"
"Owner   CodeAddr  Arg       FP   Users  Name\n"
" 00004  f9992000  fc731278  YES      0   siggen.0.update\n"
" 00003  f998b20f  fc7310b8  YES      0   stepgen.capture-position\n"
" 00003  f998b000  fc7310b8  NO       0   stepgen.make-pulses\n"
" 00003  f998b307  fc7310b8  YES      0   stepgen.update-freq\n"
msgstr ""

#. type: Plain text
msgid ""
"In general, you will have to refer to the documentation for each component "
"to see what its functions do. In this case, the function 'siggen.0.update' "
"is used to update the outputs of the signal generator. Every time it is "
"executed, it calculates the values of the sine, cosine, triangle, and square "
"outputs. To make smooth signals, it needs to run at specific intervals."
msgstr ""

#. type: Plain text
msgid "The other three functions are related to the step pulse generators."
msgstr ""

#. type: Plain text
msgid ""
"The first one, 'stepgen.capture_position', is used for position feedback. It "
"captures the value of an internal counter that counts the step pulses as "
"they are generated. Assuming no missed steps, this counter indicates the "
"position of the motor."
msgstr ""

#. type: Plain text
msgid ""
"The main function for the step pulse generator is 'stepgen.make_pulses'. "
"Every time 'make_pulses' runs it decides if it is time to take a step, and "
"if so sets the outputs accordingly. For smooth step pulses, it should run as "
"frequently as possible. Because it needs to run so fast, 'make_pulses' is "
"highly optimized and performs only a few calculations. Unlike the others, it "
"does not need floating point math."
msgstr ""

#. type: Plain text
msgid ""
"The last function, 'stepgen.update-freq', is responsible for doing scaling "
"and some other calculations that need to be performed only when the "
"frequency command changes."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"What this means for our example is that we want to run\n"
"'siggen.0.update' at a moderate rate to calculate the sine and cosine\n"
"values. Immediately after we run 'siggen.0.update', we want to run\n"
"'stepgen.update_freq' to load the new values into the step pulse\n"
"generator. Finally we need\n"
" to run 'stepgen.make_pulses' as fast as possible for smooth pulses.\n"
"Because we don't use position\n"
"feedback, we don't need to run 'stepgen.capture_position' at all.\n"
msgstr ""

#. type: Plain text
msgid ""
"We run functions by adding them to threads. Each thread runs at a specific "
"rate. Let's see what threads we have available."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Realtime Threads:\n"
"     Period  FP     Name               (     Time, Max-Time )\n"
"     996980  YES                  slow (        0,        0 )\n"
"      49849  NO                   fast (        0,        0 )\n"
msgstr ""

#. type: Plain text
msgid ""
"The two threads were created when we loaded 'threads'. The first one, "
"'slow', runs every millisecond, and is capable of running floating point "
"functions. We will use it for 'siggen.0.update' and 'stepgen.update_freq'. "
"The second thread is 'fast', which runs every 50 microseconds, and does not "
"support floating point.  We will use it for 'stepgen.make_pulses'. To "
"connect the functions to the proper thread, we use the 'addf' command.  We "
"specify the function first, followed by the thread."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd: addf siggen.0.update slow\n"
"halcmd: addf stepgen.update-freq slow\n"
"halcmd: addf stepgen.make-pulses fast\n"
msgstr ""

#. type: Plain text
msgid ""
"After we give these commands, we can run the 'show thread' command again to "
"see what happened."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Realtime Threads:\n"
"     Period  FP     Name               (     Time, Max-Time )\n"
"     996980  YES                  slow (        0,        0 )\n"
"                  1 siggen.0.update\n"
"                  2 stepgen.update-freq\n"
"      49849  NO                   fast (        0,        0 )\n"
"                  1 stepgen.make-pulses\n"
msgstr ""

#. type: Plain text
msgid ""
"Now each thread is followed by the names of the functions, in the order in "
"which the functions will run."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Setting parameters"
msgstr ""

#. type: Plain text
msgid ""
"We are almost ready to start our HAL system. However we still need to adjust "
"a few parameters. By default, the siggen component generates signals that "
"swing from +1 to -1. For our example that is fine, we want the table speed "
"to vary from +1 to -1 inches per second. However the scaling of the step "
"pulse generator isn't quite right. By default, it generates an output "
"frequency of 1 step per second with an input of 1.000. It is unlikely that "
"one step per second will give us one inch per second of table movement. "
"Let's assume instead that we have a 5 turn per inch leadscrew, connected to "
"a 200 step per rev stepper with 10x microstepping. So it takes 2000 steps "
"for one revolution of the screw, and 5 revolutions to travel one inch. that "
"means the overall scaling is 10000 steps per inch. We need to multiply the "
"velocity input to the step pulse generator by 10000 to get the proper "
"output. That is exactly what the parameter 'stepgen.n.velocity-scale' is "
"for. In this case, both the X and Y axis have the same scaling, so we set "
"the scaling parameters for both to 10000."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd: setp stepgen.0.position-scale 10000\n"
"halcmd: setp stepgen.1.position-scale 10000\n"
"halcmd: setp stepgen.0.enable 1\n"
"halcmd: setp stepgen.1.enable 1\n"
msgstr ""

#. type: Plain text
msgid ""
"This velocity scaling means that when the pin 'stepgen.0.velocity-cmd' is "
"1.000, the step generator will generate 10000 pulses per second (10KHz). "
"With the motor and leadscrew described above, that will result in the axis "
"moving at exactly 1.000 inches per second. This illustrates a key HAL "
"concept - things like scaling are done at the lowest possible level, in this "
"case in the step pulse generator. The internal signal 'X-vel' is the "
"velocity of the table in inches per second, and other components such as "
"'siggen' don't know (or care) about the scaling at all. If we changed the "
"leadscrew, or motor, we would change only the scaling parameter of the step "
"pulse generator."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Run it!"
msgstr ""

#. type: Plain text
msgid ""
"We now have everything configured and are ready to start it up. Just like in "
"the first example, we use the 'start' command."
msgstr ""

#. type: Plain text
msgid ""
"Although nothing appears to happen, inside the computer the step pulse "
"generator is cranking out step pulses, varying from 10KHz forward to 10KHz "
"reverse and back again every second. Later in this tutorial we'll see how to "
"bring those internal signals out to run motors in the real world, but first "
"we want to look at them and see what is happening."
msgstr ""

#. type: Plain text
msgid "[[sec:tutorial-halscope]](((Tutorial Halscope)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Halscope"
msgstr ""

#. type: Plain text
msgid ""
"The previous example generates some very interesting signals. But much of "
"what happens is far too fast to see with halmeter. To take a closer look at "
"what is going on inside the HAL, we want an oscilloscope.  Fortunately HAL "
"has one, called halscope."
msgstr ""

#. type: Plain text
msgid ""
"Halscope has two parts - a realtime part that is loaded as a kernel module, "
"and a user part that supplies the GUI and display. However, you don't need "
"to worry about this, because the userspace portion will automatically "
"request that the realtime part be loaded. With LinuxCNC running in a "
"terminal you can start halscope with the following command."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Starting Halscope"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd loadusr halscope\n"
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC is not running or the autosave.halscope file does not match the "
"pins avaiable in the current running LinuxCNC the scope GUI window will "
"open, immediately followed by a 'Realtime function not linked' dialog that "
"looks like the following figure. To change the sample rate left click on the "
"samples box."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Realtime function not linked dialog"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-01.png"
msgstr ""

#. type: Plain text
msgid ""
"This dialog is where you set the sampling rate for the oscilloscope.  For "
"now we want to sample once per millisecond, so click on the 989 us thread "
"'slow' and leave the multiplier at 1. We will also leave the record length "
"at 4000 samples, so that we can use up to four channels at one time. When "
"you select a thread and then click 'OK', the dialog disappears, and the "
"scope window looks something like the following figure."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Initial scope window"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-02.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hooking up the scope probes"
msgstr ""

#. type: Plain text
msgid ""
"At this point, Halscope is ready to use. We have already selected a sample "
"rate and record length, so the next step is to decide what to look at. This "
"is equivalent to hooking 'virtual scope probes' to the HAL. Halscope has 16 "
"channels, but the number you can use at any one time depends on the record "
"length - more channels means shorter records, since the memory available for "
"the record is fixed at approximately 16,000 samples."
msgstr ""

#. type: Plain text
msgid ""
"The channel buttons run across the bottom of the halscope screen.  Click "
"button '1', and you will see the 'Select Channel Source' dialog as shown in "
"the following figure. This dialog is very similar to the one used by "
"Halmeter. We would like to look at the signals we defined earlier, so we "
"click on the 'Signals' tab, and the dialog displays all of the signals in "
"the HAL (only two for this example)."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Select Channel Source"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-03.png"
msgstr ""

#. type: Plain text
msgid ""
"To choose a signal, just click on it. In this case, we want channel 1 to "
"display the signal 'X-vel'. Click on the Signals tab then click on 'X-vel' "
"and the dialog closes and the channel is now selected."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Select Signal"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-04.png"
msgstr ""

#. type: Plain text
msgid ""
"The channel 1 button is pressed in, and channel number 1 and the name 'X-"
"vel' appear below the row of buttons. That display always indicates the "
"selected channel - you can have many channels on the screen, but the "
"selected one is highlighted, and the various controls like vertical position "
"and scale always work on the selected one."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-05.png"
msgstr ""

#. type: Plain text
msgid ""
"To add a signal to channel 2, click the '2' button. When the dialog pops up, "
"click the 'Signals' tab, then click on 'Y-vel'. We also want to look at the "
"square and triangle wave outputs. There are no signals connected to those "
"pins, so we use the 'Pins' tab instead. For channel 3, select 'siggen.0."
"triangle' and for channel 4, select 'siggen.0.square'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Capturing our first waveforms"
msgstr ""

#. type: Plain text
msgid ""
"Now that we have several probes hooked to the HAL, it's time to capture some "
"waveforms. To start the scope, click the 'Normal' button in the 'Run Mode' "
"section of the screen (upper right). Since we have a 4000 sample record "
"length, and are acquiring 1000 samples per second, it will take halscope "
"about 2 seconds to fill half of its buffer.  During that time a progress bar "
"just above the main screen will show the buffer filling. Once the buffer is "
"half full, the scope waits for a trigger. Since we haven't configured one "
"yet, it will wait forever. To manually trigger it, click the 'Force' button "
"in the 'Trigger' section at the top right. You should see the remainder of "
"the buffer fill, then the screen will display the captured waveforms. The "
"result will look something like the following figure."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Captured Waveforms"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-06.png"
msgstr ""

#. type: Plain text
msgid ""
"The 'Selected Channel' box at the bottom tells you that the purple trace is "
"the currently selected one, channel 4, which is displaying the value of the "
"pin 'siggen.0.square'. Try clicking channel buttons 1 through 3 to highlight "
"the other three traces."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Vertical Adjustments"
msgstr ""

#. type: Plain text
msgid ""
"The traces are rather hard to distinguish since all four are on top of each "
"other. To fix this, we use the 'Vertical' controls in the box to the right "
"of the screen. These controls act on the currently selected channel. When "
"adjusting the gain, notice that it covers a huge range - unlike a real "
"scope, this one can display signals ranging from very tiny (pico-units) to "
"very large (Tera-units). The position control moves the displayed trace up "
"and down over the height of the screen only. For larger adjustments the "
"offset button should be used."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Vertical Adjustment"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-07.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Triggering"
msgstr ""

#. type: Plain text
msgid ""
"Using the 'Force' button is a rather unsatisfying way to trigger the scope. "
"To set up real triggering, click on the 'Source' button at the bottom right. "
"It will pop up the 'Trigger Source' dialog, which is simply a list of all "
"the probes that are currently connected. Select a probe to use for "
"triggering by clicking on it. For this example we will use channel 3, the "
"triangle wave as shown in the following figure."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Trigger Source Dialog"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-08.png"
msgstr ""

#. type: Plain text
msgid ""
"After setting the trigger source, you can adjust the trigger level and "
"trigger position using the sliders in the 'Trigger' box along the right "
"edge. The level can be adjusted from the top to the bottom of the screen, "
"and is displayed below the sliders. The position is the location of the "
"trigger point within the overall record. With the slider all the way down, "
"the trigger point is at the end of the record, and halscope displays what "
"happened before the trigger point. When the slider is all the way up, the "
"trigger point is at the beginning of the record, displaying what happened "
"after it was triggered. The trigger point is visible as a vertical line in "
"the progress box above the screen. The trigger polarity can be changed by "
"clicking the button just below the trigger level display."
msgstr ""

#. type: Plain text
msgid ""
"Now that we have adjusted the vertical controls and triggering, the scope "
"display looks something like the following figure."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Waveforms with Triggering"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-09.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Horizontal Adjustments"
msgstr ""

#. type: Plain text
msgid ""
"To look closely at part of a waveform, you can use the zoom slider at the "
"top of the screen to expand the waveforms horizontally, and the position "
"slider to determine which part of the zoomed waveform is visible. However, "
"sometimes simply expanding the waveforms isn't enough and you need to "
"increase the sampling rate. For example, we would like to look at the actual "
"step pulses that are being generated in our example. Since the step pulses "
"may be only 50 us long, sampling at 1KHz isn't fast enough. To change the "
"sample rate, click on the button that displays the number of samples and "
"sample rate to bring up the 'Select Sample Rate' dialog, figure . For this "
"example, we will click on the 50 us thread, 'fast', which gives us a sample "
"rate of about 20KHz. Now instead of displaying about 4 seconds worth of "
"data, one record is 4000 samples at 20KHz, or about 0.20 seconds."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Sample Rate Dialog"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-10.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "More Channels"
msgstr ""

#. type: Plain text
msgid ""
"Now let's look at the step pulses. Halscope has 16 channels, but for this "
"example we are using only 4 at a time. Before we select any more channels, "
"we need to turn off a couple. Click on the channel 2 button, then click the "
"'Chan Off' button at the bottom of the 'Vertical' box.  Then click on "
"channel 3, turn if off, and do the same for channel 4.  Even though the "
"channels are turned off, they still remember what they are connected to, and "
"in fact we will continue to use channel 3 as the trigger source. To add new "
"channels, select channel 5, and choose pin 'stepgen.0.dir', then channel 6, "
"and select 'stepgen.0.step'. Then click run mode 'Normal' to start the "
"scope, and adjust the horizontal zoom to 5 ms per division. You should see "
"the step pulses slow down as the velocity command (channel 1) approaches "
"zero, then the direction pin changes state and the step pulses speed up "
"again. You might want to increase the gain on channel 1 to about 20 milli "
"per division to better see the change in the velocity command. The result "
"should look like the following figure."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Step Pulses"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halscope-11.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "More samples"
msgstr ""

#. type: Plain text
msgid ""
"If you want to record more samples at once, restart realtime and load "
"halscope with a numeric argument which indicates the number of samples you "
"want to capture."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadusr halscope 80000\n"
msgstr ""

#. type: Plain text
msgid ""
"If the 'scope_rt' component was not already loaded, halscope will load it "
"and request 80000 total samples, so that when sampling 4 channels at a time "
"there will be 20000 samples per channel.  (If 'scope_rt' was already loaded, "
"the numeric argument to halscope will have no effect)."
msgstr ""

#. type: Title =
#, no-wrap
msgid "General Reference"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "General Naming Conventions"
msgstr ""

#. type: Plain text
msgid ""
"Consistent naming conventions would make HAL much easier to use. For "
"example, if every encoder driver provided the same set of pins and named "
"them the same way it would be easy to change from one type of encoder driver "
"to another. Unfortunately, like many open-source projects, HAL is a "
"combination of things that were designed, and things that simply evolved. As "
"a result, there are many inconsistencies. This section attempts to address "
"that problem by defining some conventions, but it will probably be a while "
"before all the modules are converted to follow them."
msgstr ""

#. type: Plain text
msgid ""
"Halcmd and other low-level HAL utilities treat HAL names as single entities, "
"with no internal structure. However, most modules do have some implicit "
"structure. For example, a board provides several functional blocks, each "
"block might have several channels, and each channel has one or more pins. "
"This results in a structure that resembles a directory tree. Even though "
"halcmd doesn't recognize the tree structure, proper choice of naming "
"conventions will let it group related items together (since it sorts the "
"names). In addition, higher level tools can be designed to recognize such "
"structure, if the names provide the necessary information. To do that, all "
"HAL components should follow these rules:"
msgstr ""

#. type: Plain text
msgid ""
"Dots (â.â) separate levels of the hierarchy.  This is analogous to the slash "
"(â/â) in a filename."
msgstr ""

#. type: Plain text
msgid ""
"Hyphens (â-â) separate words or fields in the same level of the hierarchy."
msgstr ""

#. type: Plain text
msgid "HAL components should not use underscores or âMixedCaseâ."
msgstr ""

#. type: Plain text
msgid "Use only lowercase letters and numbers in names."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hardware Driver Naming Conventions"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pin/Parameter names"
msgstr ""

#. type: Plain text
msgid ""
"Hardware drivers should use five fields (on three levels) to make up a pin "
"or parameter name, as follows:"
msgstr ""

#. type: Plain text
msgid "+*<device-name>.<device-num>.<io-type>.<chan-num>.<specific-name>*+"
msgstr ""

#. type: Plain text
msgid "The individual fields are:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<device-name>"
msgstr ""

#. type: Plain text
msgid ""
"The device that the driver is intended to work with. This is most often an "
"interface board of some type, but there are other possibilities."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<device-num>"
msgstr ""

#. type: Plain text
msgid ""
"It is possible to install more than one servo board, parallel port, or other "
"hardware device in a computer. The device number identifies a specific "
"device. Device numbers start at 0 and increment."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<io-type>"
msgstr ""

#. type: Plain text
msgid ""
"Most devices provide more than one type of I/O. Even the simple parallel "
"port has both digital inputs and digital outputs. More complex boards can "
"have digital inputs and outputs, encoder counters, pwm or step pulse "
"generators, analog-to-digital converters, digital-to-analog converters, or "
"other unique capabilities. The I/O type is used to identify the kind of I/O "
"that a pin or parameter is associated with.  Ideally, drivers that implement "
"the same I/O type, even if for very different devices, should provide a "
"consistent set of pins and parameters and identical behavior. For example, "
"all digital inputs should behave the same when seen from inside the HAL, "
"regardless of the device."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<chan-num>"
msgstr ""

#. type: Plain text
msgid ""
"Virtually every I/O device has multiple channels, and the channel number "
"identifies one of them. Like device numbers, channel numbers start at zero "
"and increment.footnote:[One exception to the âchannel numbers start at zeroâ "
"rule is the parallel port. Its HAL pins are numbered with the corresponding "
"pin number on the DB-25 connector. This is convenient for wiring, but "
"inconsistent with other drivers. There is some debate over whether this is a "
"bug or a feature.] If more than one device is installed, the channel numbers "
"on additional devices start over at zero. If it is possible to have a "
"channel number greater than 9, then channel numbers should be two digits, "
"with a leading zero on numbers less than 10 to preserve sort ordering. Some "
"modules have pins and/or parameters that affect more than one channel. For "
"example a PWM generator might have four channels with four independent âduty-"
"cycleâ inputs, but one âfrequencyâ parameter that controls all four channels "
"(due to hardware limitations). The frequency parameter should use â0-3â as "
"the channel number."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<specific-name>"
msgstr ""

#. type: Plain text
msgid ""
"An individual I/O channel might have just a single HAL pin associated with "
"it, but most have more than one. For example, a digital input has two pins, "
"one is the state of the physical pin, the other is the same thing inverted. "
"That allows the configurator to choose between active high and active low "
"inputs. For most io-types, there is a standard set of pins and parameters, "
"(referred to as the âcanonical interfaceâ) that the driver should implement. "
"The canonical interfaces are described in the <<cha:canonical-device-"
"interfaces,Canonical Device Interfaces>> chapter."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "motenc.0.encoder.2.position"
msgstr ""

#. type: Plain text
msgid "the position output of the third encoder channel on the first"
msgstr ""

#. type: Plain text
msgid "Motenc board."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "stg.0.din.03.in"
msgstr ""

#. type: Plain text
msgid "the state of the fourth digital input on the first Servo-to-Go"
msgstr ""

#. type: Plain text
msgid "board."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ppmc.0.pwm.00-03.frequency"
msgstr ""

#. type: Plain text
msgid ""
"the carrier frequency used for PWM channels 0 through 3 on the first Pico "
"Systems ppmc board."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Function Names"
msgstr ""

#. type: Plain text
msgid ""
"Hardware drivers usually only have two kinds of HAL functions, ones that "
"read the hardware and update HAL pins, and ones that write to the hardware "
"using data from HAL pins. They should be named as follows:"
msgstr ""

#. type: Plain text
msgid "+*<device-name>-<device-num>.<io-type>-<chan-num-range>.read|write*+"
msgstr ""

#. type: Plain text
msgid "The same as used for pins and parameters."
msgstr ""

#. type: Plain text
msgid "The specific device that the function will access."
msgstr ""

#. type: Plain text
msgid ""
"Optional. A function may access all of the I/O on a board, or it may access "
"only a certain type. For example, there may be independent functions for "
"reading encoder counters and reading digital I/O. If such independent "
"functions exist, the <io-type> field identifies the type of I/O they access. "
"If a single function reads all I/O provided by the board, <io-type> is not "
"used.  footnote:[Note to driver programmers: do NOT implement separate "
"functions for different I/O types unless they are interruptible and can work "
"in independent threads. If interrupting an encoder read, reading digital "
"inputs, and then resuming the encoder read will cause problems, then "
"implement a single function that does everything.]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "<chan-num-range>"
msgstr ""

#. type: Plain text
msgid ""
"Optional. Used only if the <io-type> I/O is broken into groups and accessed "
"by different functions."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "read|write"
msgstr ""

#. type: Plain text
msgid "Indicates whether the function reads the hardware or writes to it."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "motenc.0.encoder.read"
msgstr ""

#. type: Plain text
msgid "reads all encoders on the first motenc board."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "generic8255.0.din.09-15.read"
msgstr ""

#. type: Plain text
msgid "reads the second 8 bit port on the first generic 8255 based"
msgstr ""

#. type: Plain text
msgid "digital I/O board."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ppmc.0.write"
msgstr ""

#. type: Plain text
msgid "writes all outputs (step generators, pwm, DACs, and digital) on"
msgstr ""

#. type: Plain text
msgid "the first Pico Systems ppmc board."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Core Components"
msgstr ""

#. type: Plain text
msgid "See also the man pages 'motion(9)'."
msgstr ""

#. type: Plain text
msgid ""
"These pins and parameters are created by the realtime 'motmod' module.  This "
"module provides a HAL interface for LinuxCNCâs motion planner.  Basically "
"motmod takes in a list of waypoints and generates a nice blended and "
"constraint-limited stream of joint positions to be fed to the motor drives."
msgstr ""

#. type: Plain text
msgid ""
"Optionally the number of Digital I/O is set with num_dio.  The number of "
"Analog I/O is set with num_aio. The default is 4 each."
msgstr ""

#. type: Plain text
msgid ""
"Pin and parameter names starting with 'axis.L' and joint.N' are read and "
"updated by the motion-controller function."
msgstr ""

#. type: Plain text
msgid ""
"Motion is loaded with the motmod command. A kins should be loaded before "
"motion."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt motmod [base_period_nsec=period] [servo_period_nsec=period] \n"
"[traj_period_nsec=period] [num_joints=[0-9] ([num_dio=1-64] num_aio=1-16]) ([unlock_joints_mask=0xNN])\n"
msgstr ""

#. type: Plain text
msgid ""
"'base_period_nsec = 50000' - the 'Base' task period in nanoseconds.  This is "
"the fastest thread in the machine."
msgstr ""

#. type: Plain text
msgid ""
"On servo-based systems, there is generally no reason for 'base_period_nsec' "
"to be smaller than 'servo_period_nsec'.  On machines with software step "
"generation, the 'base_period_nsec' determines the maximum number of steps "
"per second. In the absence of long step length and step space requirements, "
"the absolute maximum step rate is one step per 'base_period_nsec'. Thus, the "
"'base_period_nsec' shown above gives an absolute maximum step rate of 20,000 "
"steps per second. 50,000 ns (50 us) is a fairly conservative value. The "
"smallest usable value is related to the Latency Test result, the necessary "
"step length, and the processor speed.  Choosing a 'base_period_nsec' that is "
"too low can lead to the \"Unexpected real time delay\" message, lockups, or "
"spontaneous reboots."
msgstr ""

#. type: Plain text
msgid ""
"'servo_period_nsec = 1000000' - This is the 'Servo' task period in "
"nanoseconds. This value will be rounded to an integer multiple of "
"'base_period_nsec'. This period is used even on systems based on stepper "
"motors."
msgstr ""

#. type: Plain text
msgid ""
"This is the rate at which new motor positions are computed, following error "
"is checked, PID output values are updated, and so on.  Most systems will not "
"need to change this value. It is the update rate of the low level motion "
"planner."
msgstr ""

#. type: Plain text
msgid ""
"'traj_period_nsec = 100000' - This is the 'Trajectory Planner' task period "
"in nanoseconds. This value will be rounded to an integer multiple of "
"'servo_period_nsec'. Except for machines with unusual kinematics (e.g., "
"hexapods) there is no reason to make this value larger than "
"'servo_period_nsec'."
msgstr ""

#. type: Plain text
msgid ""
"If the number of digital I/O needed is more than the default of 4 you can "
"add up to 64 digital I/O by using the num_dio option when loading motmod."
msgstr ""

#. type: Plain text
msgid ""
"If the number of analog I/O needed is more than the default of 4 you can add "
"up to 16 analog I/O by using the num_aio option when loading motmod."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The unlock_joints_mask parameter is used to create pins for a joint used\n"
"as a locking indexer (typically a rotary).  The mask bits select the\n"
"joint(s).  The LSB of the mask selects joint 0.  Example:\n"
"   unlock_joints_mask=0x38 selects joints 3,4,5\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pins (((motion (HAL pins))))"
msgstr ""

#. type: Plain text
msgid ""
"These pins, parameters, and functions are created by the realtime 'motmod' "
"module."
msgstr ""

#. type: Plain text
msgid "'motion.adaptive-feed' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, in) When adaptive feed is enabled with 'M52 P1' , the commanded "
"velocity is multiplied by this value. This effect is multiplicative with the "
"NML-level feed override value and 'motion.feed-hold'. As of version 2.9 of "
"LinuxCNC it is possible to use a negative adaptive feed value to run the G-"
"code path in reverse."
msgstr ""

#. type: Plain text
msgid "'motion.analog-in-00' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, in) These pins (00, 01, 02, 03 or more if configured) are controlled "
"by M66."
msgstr ""

#. type: Plain text
msgid "'motion.analog-out-00' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) These pins (00, 01, 02, 03 or more if configured) are "
"controlled by M67 or M68."
msgstr ""

#. type: Plain text
msgid "'motion.coord-error' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, out) TRUE when motion has encountered an error, such as exceeding a "
"soft limit"
msgstr ""

#. type: Plain text
msgid "'motion.coord-mode' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, out) TRUE when motion is in 'coordinated mode', as opposed to 'teleop "
"mode'"
msgstr ""

#. type: Plain text
msgid "'motion.current-vel' -"
msgstr ""

#. type: Plain text
msgid "(float, out) The current tool velocity in user units per second."
msgstr ""

#. type: Plain text
msgid "'motion.digital-in-00' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) These pins (00, 01, 02, 03 or more if configured) are controlled "
"by M62-65."
msgstr ""

#. type: Plain text
msgid "'motion.digital-out-00' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, out) These pins (00, 01, 02, 03 or more if configured) are controlled "
"by the 'M62-65'."
msgstr ""

#. type: Plain text
msgid "'motion.distance-to-go' -"
msgstr ""

#. type: Plain text
msgid "(float,out) The distance remaining in the current move."
msgstr ""

#. type: Plain text
msgid "'motion.enable' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) If this bit is driven FALSE, motion stops, the machine is placed "
"in the 'machine off' state, and a message is displayed for the operator. For "
"normal motion, drive this bit TRUE."
msgstr ""

#. type: Plain text
msgid "'motion.feed-hold' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) When Feed Stop Control is enabled with 'M53 P1', and this bit is "
"TRUE, the feed rate is set to 0."
msgstr ""

#. type: Plain text
msgid "'motion.feed-inhibit' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) When this bit is TRUE, the feed rate is set to 0.  This will be "
"delayed during spindle synch moves till the end of the move."
msgstr ""

#. type: Plain text
msgid "'motion.in-position' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE if the machine is in position."
msgstr ""

#. type: Plain text
msgid "'motion.motion-enabled' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when in 'machine on' state."
msgstr ""

#. type: Plain text
msgid "'motion.motion-type' -"
msgstr ""

#. type: Plain text
msgid "(s32, out) These values are from src/emc/nml_intf/motion_types.h"
msgstr ""

#. type: Plain text
msgid "0: Idle (no motion)"
msgstr ""

#. type: Plain text
msgid "1: Traverse"
msgstr ""

#. type: Plain text
msgid "2: Linear feed"
msgstr ""

#. type: Plain text
msgid "3: Arc feed"
msgstr ""

#. type: Plain text
msgid "4: Tool change"
msgstr ""

#. type: Plain text
msgid "5: Probing"
msgstr ""

#. type: Plain text
msgid "6: Rotary axis indexing"
msgstr ""

#. type: Plain text
msgid "'motion.on-soft-limit' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when the machine is on a soft limit."
msgstr ""

#. type: Plain text
msgid "'motion.probe-input' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) 'G38.n' uses the value on this pin to determine when the probe has "
"made contact.  TRUE for probe contact closed (touching), FALSE for probe "
"contact open."
msgstr ""

#. type: Plain text
msgid "'motion.program-line' -"
msgstr ""

#. type: Plain text
msgid ""
"(s32, out) The current program line while executing. Zero if not running or "
"between lines while single stepping."
msgstr ""

#. type: Plain text
msgid "'motion.requested-vel' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) The current requested velocity in user units per second.  This "
"value is the F-word setting from the G-code file, possibly reduced to "
"accommodate machine velocity and acceleration limits. The value on this pin "
"does not reflect the feed override or any other adjustments."
msgstr ""

#. type: Plain text
msgid "'spindle.0.at-speed' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) Motion will pause until this pin is TRUE, under the following "
"conditions: before the first feed move after each spindle start or speed "
"change; before the start of every chain of spindle-synchronized moves; and "
"if in CSS mode, at every rapid to feed transition. This input can be used to "
"ensure that the spindle is up to speed before starting a cut, or that a "
"lathe spindle in CSS mode has slowed down after a large to small facing pass "
"before starting the next pass at the large diameter. Many VFDs have an 'at "
"speed' output.  Otherwise, it is easy to generate this signal with the 'HAL "
"near' component, by comparing requested and actual spindle speeds."
msgstr ""

#. type: Plain text
msgid "'spindle.N.brake' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when the spindle brake should be applied."
msgstr ""

#. type: Plain text
msgid "'spindle.N.forward' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when the spindle should rotate forward."
msgstr ""

#. type: Plain text
msgid "'spindle.N.index-enable' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, I/O) For correct operation of spindle synchronized moves, this pin "
"must be hooked to the index-enable pin of the spindle encoder."
msgstr ""

#. type: Plain text
msgid "'spindle.N.inhibit' -"
msgstr ""

#. type: Plain text
msgid "(bit, in) When this bit is TRUE, the spindle speed is set to 0."
msgstr ""

#. type: Plain text
msgid "'spindle.N.on' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when spindle should rotate."
msgstr ""

#. type: Plain text
msgid "'spindle.N.reverse' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when the spindle should rotate backward"
msgstr ""

#. type: Plain text
msgid "'spindle.N.revs' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, in) For correct operation of spindle synchronized moves, this signal "
"must be hooked to the position pin of the spindle encoder. The spindle "
"encoder position should be scaled such that spindle-revs increases by 1.0 "
"for each rotation of the spindle in the clockwise ('M3') direction."
msgstr ""

#. type: Plain text
msgid "'spindle.N.speed-in' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, in) Feedback of actual spindle speed in rotations per second.  This "
"is used by feed-per-revolution motion ('G95'). If your spindle encoder "
"driver does not have a velocity output, you can generate a suitable one by "
"sending the spindle position through a 'ddt' component.  If you do not have "
"a spindle encoder, you can loop back 'spindle.N.speed-out-rps'."
msgstr ""

#. type: Plain text
msgid "'spindle.N.speed-out' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) Commanded spindle speed in rotations per minute. Positive for "
"spindle forward ('M3'), negative for spindle reverse ('M4')."
msgstr ""

#. type: Plain text
msgid "'spindle.N.speed-out-abs' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) Commanded spindle speed in rotations per minute. This will "
"always be a positive number."
msgstr ""

#. type: Plain text
msgid "'spindle.N.speed-out-rps' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) Commanded spindle speed in rotations per second. Positive for "
"spindle forward ('M3'), negative for spindle reverse ('M4')."
msgstr ""

#. type: Plain text
msgid "'spindle.N.speed-out-rps-abs' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out) Commanded spindle speed in rotations per second. This will "
"always be a positive number."
msgstr ""

#. type: Plain text
msgid "'motion.teleop-mode' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, out) TRUE when motion is in 'teleop mode', as opposed to 'coordinated "
"mode'"
msgstr ""

#. type: Plain text
msgid "'motion.tooloffset.x ... motion.tooloffset.w' -"
msgstr ""

#. type: Plain text
msgid ""
"(float, out, one per axis) shows the tool offset in effect; it could come "
"from the tool table ('G43' active), or it could come from the gcode ('G43.1' "
"active)"
msgstr ""

#. type: Plain text
msgid "`spindle.N.orient-angle` -"
msgstr ""

#. type: Plain text
msgid ""
"(float,out) Desired spindle orientation for M19. Value of the M19 R word "
"parameter plus the value of the [RS274NGC]ORIENT_OFFSET ini parameter."
msgstr ""

#. type: Plain text
msgid "`spindle.N.orient-mode` -"
msgstr ""

#. type: Plain text
msgid "(s32,out) Desired spindle rotation mode M19. Default 0."
msgstr ""

#. type: Plain text
msgid "`spindle.N.orient` -"
msgstr ""

#. type: Plain text
msgid ""
"(out,bit)  Indicates start of spindle orient cycle. Set by M19. Cleared by "
"any of M3,M4,M5.  If spindle-orient-fault is not zero during spindle-orient "
"true, the M19 command fails with an error message."
msgstr ""

#. type: Plain text
msgid "`spindle.N.is-oriented` -"
msgstr ""

#. type: Plain text
msgid ""
"(in, bit) Acknowledge pin for spindle-orient. Completes orient cycle. If "
"spindle-orient was true when spindle-is-oriented was asserted, the spindle-"
"orient pin is cleared and the spindle-locked pin is asserted. Also, the "
"spindle-brake pin is asserted."
msgstr ""

#. type: Plain text
msgid "`spindle.N.orient-fault` -"
msgstr ""

#. type: Plain text
msgid ""
"(s32, in) Fault code input for orient cycle. Any value other than zero will "
"cause the orient cycle to abort."
msgstr ""

#. type: Plain text
msgid "`spindle.N.lock` -"
msgstr ""

#. type: Plain text
msgid "(bit, out) Spindle orient complete pin. Cleared by any of M3,M4,M5."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL pin usage for M19 orient spindle"
msgstr ""

#. type: Plain text
msgid "Conceptually the spindle is in one of the following modes:"
msgstr ""

#. type: Plain text
msgid "rotation mode (the default)"
msgstr ""

#. type: Plain text
msgid "searching for desired orientation mode"
msgstr ""

#. type: Plain text
msgid "orientation complete mode."
msgstr ""

#. type: Plain text
msgid ""
"When an M19 is executed, the spindle changes to 'searching for desired "
"orientation' , and the `spindle.N.orient` HAL pin is asserted.  The desired "
"target position is specified by the `spindle.N.orient-angle` and `spindle.N."
"orient-fwd` pins and driven by the M19 R and P parameters."
msgstr ""

#. type: Plain text
msgid ""
"The HAL support logic is expected to react to `spindle.N.orient` by moving "
"the spindle to the desired position. When this is complete, the HAL logic is "
"expected to acknowledge this by asserting the `spindle.N.is-oriented` pin."
msgstr ""

#. type: Plain text
msgid ""
"Motion then acknowledges this by deasserting the `spindle.N.orient` pin and "
"asserts the `spindle.N.locked` pin to indicate 'orientation complete' mode. "
"It also raises the `spindle.N.brake` pin. The spindle now is in 'orientation "
"complete' mode."
msgstr ""

#. type: Plain text
msgid ""
"If, during `spindle.N.orient` being true, and `spindle.N.is-oriented` not "
"yet asserted the `spindle.N.orient-fault` pin has a value other than zero, "
"the M19 command is aborted, a message including the fault code is displayed, "
"and the motion queue is flushed. The spindle reverts to rotation mode."
msgstr ""

#. type: Plain text
msgid ""
"Also, any of the M3,M4 or M5 commands cancel either 'searching for desired "
"orientation' or 'orientation complete' mode. This is indicated by "
"deasserting both the `spindle-orient` and `spindle-locked` pins."
msgstr ""

#. type: Plain text
msgid ""
"The `spindle-orient-mode` pin reflects the M19 P word and shall be "
"interpreted as follows:"
msgstr ""

#. type: Plain text
msgid "0: rotate clockwise or counterclockwise for smallest angular movement"
msgstr ""

#. type: Plain text
msgid "1: always rotate clockwise"
msgstr ""

#. type: Plain text
msgid "2: always rotate counterclockwise"
msgstr ""

#. type: Plain text
msgid ""
"It can be used with the `orient` HAL component which provides a PID command "
"value based on spindle encoder position, `spindle-orient-angle` and `spindle-"
"orient-mode`."
msgstr ""

#. type: Plain text
msgid ""
"Many of these parameters serve as debugging aids, and are subject to change "
"or removal at any time."
msgstr ""

#. type: Plain text
msgid "'motion-command-handler.time' -"
msgstr ""

#. type: Plain text
msgid "(s32, RO)"
msgstr ""

#. type: Plain text
msgid "'motion-command-handler.tmax' -"
msgstr ""

#. type: Plain text
msgid "(s32, RW)"
msgstr ""

#. type: Plain text
msgid "'motion-controller.time' -"
msgstr ""

#. type: Plain text
msgid "'motion-controller.tmax' -"
msgstr ""

#. type: Plain text
msgid "'motion.debug-bit-0' -"
msgstr ""

#. type: Plain text
msgid "(bit, RO) This is used for debugging purposes."
msgstr ""

#. type: Plain text
msgid "'motion.debug-bit-1' -"
msgstr ""

#. type: Plain text
msgid "'motion.debug-float-0' -"
msgstr ""

#. type: Plain text
msgid "(float, RO) This is used for debugging purposes."
msgstr ""

#. type: Plain text
msgid "'motion.debug-float-1' -"
msgstr ""

#. type: Plain text
msgid "'motion.debug-float-2' -"
msgstr ""

#. type: Plain text
msgid "'motion.debug-float-3' -"
msgstr ""

#. type: Plain text
msgid "'motion.debug-s32-0' -"
msgstr ""

#. type: Plain text
msgid "(s32, RO) This is used for debugging purposes."
msgstr ""

#. type: Plain text
msgid "'motion.debug-s32-1' -"
msgstr ""

#. type: Plain text
msgid "'motion.servo.last-period' -"
msgstr ""

#. type: Plain text
msgid ""
"(u32, RO) The number of CPU cycles between invocations of the servo thread. "
"Typically, this number divided by the CPU speed gives the time in seconds, "
"and can be used to determine whether the realtime motion controller is "
"meeting its timing constraints"
msgstr ""

#. type: Plain text
msgid "'motion.servo.last-period-ns' -"
msgstr ""

#. type: Plain text
msgid "(float, RO)"
msgstr ""

#. type: Plain text
msgid ""
"Generally, these functions are both added to the servo-thread in the order "
"shown."
msgstr ""

#. type: Plain text
msgid "'motion-command-handler' -"
msgstr ""

#. type: Plain text
msgid "Processes motion commands coming from user space"
msgstr ""

#. type: Plain text
msgid "'motion-controller' -"
msgstr ""

#. type: Plain text
msgid "Runs the LinuxCNC motion controller"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Axis and Joint Pins and Parameters"
msgstr ""

#. type: Plain text
msgid ""
"These pins and parameters are created by the realtime 'motmod' module.  [In "
"'trivial kinematics' machines, there is a one-to-one correspondence between "
"joints and axes.] They are read and updated by the 'motion-controller' "
"function."
msgstr ""

#. type: Plain text
msgid ""
"See the motion man page 'motion(9)' for details on the pins and parameters."
msgstr ""

#. type: Plain text
msgid "iocontrol â accepts NML I/O commands, interacts with HAL in userspace."
msgstr ""

#. type: Plain text
msgid ""
"The signals are turned on and off in userspace - if you have strict timing "
"requirements or simply need more i/o, consider using the realtime "
"synchronized i/o provided by <<sec:motion,motion>> instead."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pins (((iocontrol (HAL pins))))"
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.coolant-flood' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when flood coolant is requested."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.coolant-mist' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when mist coolant is requested."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.emc-enable-in' -"
msgstr ""

#. type: Plain text
msgid ""
"(bit, in) Should be driven FALSE when an external E-Stop condition exists."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.lube' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when lube is commanded."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.lube_level' -"
msgstr ""

#. type: Plain text
msgid "(bit, in) Should be driven TRUE when lube level is high enough."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-change' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when a tool change is requested."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-changed' -"
msgstr ""

#. type: Plain text
msgid "(bit, in) Should be driven TRUE when a tool change is completed."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-number' -"
msgstr ""

#. type: Plain text
msgid "(s32, out) The current tool number."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-prep-number' -"
msgstr ""

#. type: Plain text
msgid "(s32, out) The number of the next tool, from the RS274NGC T-word."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-prepare' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when a tool prepare is requested."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.tool-prepared' -"
msgstr ""

#. type: Plain text
msgid "(bit, in) Should be driven TRUE when a tool prepare is completed."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.user-enable-out' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) FALSE when an internal E-Stop condition exists."
msgstr ""

#. type: Plain text
msgid "'iocontrol.0.user-request-enable' -"
msgstr ""

#. type: Plain text
msgid "(bit, out) TRUE when the user has requested that E-Stop be cleared."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "ini settings"
msgstr ""

#. type: Plain text
msgid "A number of ini settings are made available as hal input pins."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Pins (((ini settings (HAL pins))))"
msgstr ""

#. type: Plain text
msgid "N refers to a joint number, L refers to an axis letter"
msgstr ""

#. type: Plain text
msgid "'ini.N.ferror' - (float, in) [JOINT_N]FERROR"
msgstr ""

#. type: Plain text
msgid "'ini.N.min_ferror' - (float, in) [JOINT_N]MIN_FERROR"
msgstr ""

#. type: Plain text
msgid "'ini.N.backlash' - (float, in) [JOINT_N]BACKLASH"
msgstr ""

#. type: Plain text
msgid "'ini.N.min_limit' - (float, in) [JOINT_N]MIN_LIMIT"
msgstr ""

#. type: Plain text
msgid "'ini.N.max_limit' - (float, in) [JOINT_N]MAX_LIMIT"
msgstr ""

#. type: Plain text
msgid "'ini.N.max_velocity' - (float, in) [JOINT_N]MAX_VELOCITY"
msgstr ""

#. type: Plain text
msgid "'ini.N.max_acceleration' - (float, in) [JOINT_N]MAX_ACCELERATION"
msgstr ""

#. type: Plain text
msgid "'ini.N.home' - (float, in) [JOINT_N]HOME"
msgstr ""

#. type: Plain text
msgid "'ini.N.home_offset' - (float, in) [JOINT_N]HOME_OFFSET"
msgstr ""

#. type: Plain text
msgid "'ini.N.home_offset' - (s32, in) [JOINT_N]HOME_SEQUENCE"
msgstr ""

#. type: Plain text
msgid "'ini.L.min_limit' - (float, in) [AXIS_L]MIN_LIMIT"
msgstr ""

#. type: Plain text
msgid "'ini.L.max_limit' - (float, in) [AXIS_L]MAX_LIMIT"
msgstr ""

#. type: Plain text
msgid "'ini.L.max_velocity' - (float, in) [AXIS_L]MAX_VELOCITY"
msgstr ""

#. type: Plain text
msgid "'ini.L.max_acceleration' - (float, in) [AXIS_L]MAX_ACCELERATION"
msgstr ""

#. type: Plain text
msgid ""
"The per-axis min_limit and max_limit pins are honored continuously after "
"homing.  The per-axis ferror and min_ferror pins are honored when the "
"machine is on and not in position.  The per-axis max_velocity and "
"max_acceleration pins are sampled when the machine is on and the "
"motion_state is free (homing or jogging) but are not sampled when in a "
"program is running (auto mode) or in mdi mode.  Consequently, changing the "
"pin values when a program is running will not have effect until the program "
"is stopped and the motion_state is again free."
msgstr ""

#. type: Plain text
msgid "'ini.traj_arc_blend_enable' - (bit, in) [TRAJ]ARC_BLEND_ENABLE"
msgstr ""

#. type: Plain text
msgid ""
"'ini.traj_arc_blend_fallback_enable' - (bit, in) "
"[TRAJ]ARC_BLEND_FALLBACK_ENABLE"
msgstr ""

#. type: Plain text
msgid ""
"'ini.traj_arc_blend_gap_cycles' - (float, in) [TRAJ]ARC_BLEND_GAP_CYCLES"
msgstr ""

#. type: Plain text
msgid ""
"'ini.traj_arc_blend_optimization_depth' - (float, in) "
"[TRAJ]ARC_BLEND_OPTIMIZATION_DEPTH"
msgstr ""

#. type: Plain text
msgid "'ini.traj_arc_blend_ramp_freq' - (float, in) [TRAJ]ARC_BLEND_RAMP_FREQ"
msgstr ""

#. type: Plain text
msgid ""
"The traj_arc_blend pins are sampled continuously but changing pin values "
"while a program is running may not have immediate effect due to queueing of "
"commands."
msgstr ""

#. type: Plain text
msgid ""
"'ini.traj_default_acceleration' - (float, in) [TRAJ]DEFAULT_ACCELERATION"
msgstr ""

#. type: Plain text
msgid "'ini.traj_default_velocity' - (float, in) [TRAJ]DEFAULT_VELOCITY"
msgstr ""

#. type: Plain text
msgid "'ini.traj_max_acceleration' - (float, in) [TRAJ]MAX_ACCELERATION"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Canonical Device Interfaces"
msgstr ""

#. type: Plain text
msgid ""
"The following sections show the pins, parameters, and functions that are "
"supplied by âcanonical devicesâ. All HAL device drivers should supply the "
"same pins and parameters, and implement the same behavior."
msgstr ""

#. type: Plain text
msgid ""
"Note that the only the `<io-type>` and `<specific-name>` fields are defined "
"for a canonical device. The `<device-name>`, `<device-num>`, and `<chan-"
"num>` fields are set based on the characteristics of the real device."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Digital Input"
msgstr ""

#. type: Plain text
msgid "The canonical digital input (I/O type field: `digin`) is quite simple."
msgstr ""

#. type: Plain text
msgid "(bit) *in* -- State of the hardware input."
msgstr ""

#. type: Plain text
msgid "(bit) *in-not* -- Inverted state of the input."
msgstr ""

#. type: Plain text
msgid "None"
msgstr ""

#. type: Plain text
msgid "(funct) *read* -- Read hardware and set `in` and `in-not` HAL pins."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Digital Output"
msgstr ""

#. type: Plain text
msgid ""
"The canonical digital output (I/O type field: `digout`) is also very simple."
msgstr ""

#. type: Plain text
msgid "(bit) *out* -- Value to be written (possibly inverted) to the hardware"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "output.\n"
msgstr ""

#. type: Plain text
msgid "(bit) *invert* -- If TRUE, *out* is inverted before writing to the"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "hardware.\n"
msgstr ""

#. type: Plain text
msgid "(funct) *write* -- Read *out* and *invert*, and set hardware output"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "accordingly.\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Analog Input"
msgstr ""

#. type: Plain text
msgid ""
"The canonical analog input (I/O type: `adcin` ). This is expected to be used "
"for analog to digital converters, which convert e.g. voltage to a continuous "
"range of values."
msgstr ""

#. type: Plain text
msgid ""
"(float) *value* -- The hardware reading, scaled according to the *scale* and "
"*offset* parameters. *Value* = ((input reading, in hardware-dependent units) "
"* *scale*) - *offset*"
msgstr ""

#. type: Plain text
msgid ""
"(float) *scale* -- The input voltage (or current) will be multiplied by "
"*scale* before being output to *value*."
msgstr ""

#. type: Plain text
msgid ""
"(float) *offset* -- This will be subtracted from the hardware input voltage "
"(or current) after the scale multiplier has been applied."
msgstr ""

#. type: Plain text
msgid ""
"(float) *bit_weight* -- The value of one least significant bit (LSB).  This "
"is effectively the granularity of the input reading."
msgstr ""

#. type: Plain text
msgid ""
"(float) *hw_offset* -- The value present on the input when 0 volts is "
"applied to the input pin(s)."
msgstr ""

#. type: Plain text
msgid ""
"(funct) *read* -- Read the values of this analog input channel. This may be "
"used for individual channel reads, or it may cause all channels to be read"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Analog Output"
msgstr ""

#. type: Plain text
msgid ""
"The canonical analog output (I/O Type: *adcout*). This is intended for any "
"kind of hardware that can output a more-or-less continuous range of values. "
"Examples are digital to analog converters or PWM generators."
msgstr ""

#. type: Plain text
msgid ""
"(float) *value* -- The value to be written. The actual value output to the "
"hardware will depend on the scale and offset parameters."
msgstr ""

#. type: Plain text
msgid ""
"(bit) *enable* -- If false, then output 0 to the hardware, regardless of the "
"*value* pin."
msgstr ""

#. type: Plain text
msgid ""
"(float) *offset* -- This will be added to the *value* before the hardware is "
"updated"
msgstr ""

#. type: Plain text
msgid ""
"(float) *scale* -- This should be set so that an input of 1 on the *value* "
"pin will cause the analog output pin to read 1 volt."
msgstr ""

#. type: Plain text
msgid ""
"(float) *high_limit* (optional) -- When calculating the value to output to "
"the hardware, if *value* + *offset* is greater than *high_limit*, then "
"*high_limit* will be used instead."
msgstr ""

#. type: Plain text
msgid ""
"(float) *low_limit* (optional) -- When calculating the value to output to "
"the hardware, if *value* + *offset* is less than *low_limit*, then "
"*low_limit* will be used instead."
msgstr ""

#. type: Plain text
msgid ""
"(float) *bit_weight* (optional) -- The value of one least significant bit "
"(LSB), in volts (or mA, for current outputs)"
msgstr ""

#. type: Plain text
msgid ""
"(float) *hw_offset* (optional) -- The actual voltage (or current)  that will "
"be output if 0 is written to the hardware."
msgstr ""

#. type: Plain text
msgid ""
"(funct) *write* -- This causes the calculated value to be output to the "
"hardware. If enable is false, then the output will be 0, regardless of "
"*value*, *scale*, and *offset*.  The meaning of â0â is dependent on the "
"hardware. For example, a bipolar 12-bit A/D may need to write 0x1FF (mid "
"scale) to the D/A get 0 volts from the hardware pin. If enable is true, read "
"scale, offset and value and output to the adc (*scale* * *value*) + "
"*offset*. If enable is false, then output 0."
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Tools"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Halcmd"
msgstr ""

#. type: Plain text
msgid ""
"Halcmd is a command line tool for manipulating the HAL. There is a rather "
"complete man page for halcmd, which will be installed if you have installed "
"LinuxCNC from either source or a package. The manpage provides usage info:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man halcmd\n"
msgstr ""

#. type: Plain text
msgid ""
"If you have compiled LinuxCNC for ârun-in-placeâ, you must source the rip-"
"environment script to make the man page available:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"cd toplevel_directory_for_rip_build\n"
". scripts/rip-environment\n"
"man halcmd\n"
msgstr ""

#. type: Plain text
msgid ""
"The <<cha:hal-tutorial,HAL Tutorial>> has a number of examples of halcmd "
"usage, and is a good tutorial for halcmd."
msgstr ""

#. type: Plain text
msgid "[[sec:halmeter]](((Halmeter)))"
msgstr ""

#. type: Plain text
msgid ""
"Halmeter is a 'voltmeter' for the HAL. It lets you look at a pin, signal, or "
"parameter, and displays the current value of that item. It is pretty simple "
"to use. Start it by typing *halmeter* in an X windows shell. Halmeter is a "
"GUI application. It will pop up a small window, with two buttons labeled "
"'Select' and 'Exit'. Exit is easy - it shuts down the program. Select pops "
"up a larger window, with three tabs. One tab lists all the pins currently "
"defined in the HAL.  The next lists all the signals, and the last tab lists "
"all the parameters. Click on a tab, then click on a pin/signal/parameter. "
"Then click on 'OK'. The lists will disappear, and the small window will "
"display the name and value of the selected item. The display is updated "
"approximately 10 times per second. If you click 'Accept' instead of 'OK', "
"the small window will display the name and value of the selected item, but "
"the large window will remain on the screen. This is convenient if you want "
"to look at a number of different items quickly."
msgstr ""

#. type: Plain text
msgid ""
"You can have many halmeters running at the same time, if you want to monitor "
"several items. If you want to launch a halmeter without tying up a shell "
"window, type 'halmeter &' to run it in the background.  You can also make "
"halmeter start displaying a specific item immediately, by adding 'pin|sig|"
"par[am] <name>' to the command line. It will display the pin, signal, or "
"parameter <name> as soon as it starts. (If there is no such item, it will "
"simply start normally.) And finally, if you specify an item to display, you "
"can add '-s' before the pin|sig|param to tell halmeter to use a small "
"window. The item name will be displayed in the title bar instead of under "
"the value, and there will be no buttons. Useful when you want a lot of "
"meters in a small amount of screen space."
msgstr ""

#. type: Plain text
msgid ""
"Refer to <<sec:tutorial-halmeter,Halmeter Tutorial>> section for more "
"information."
msgstr ""

#. type: Plain text
msgid ""
"Halmeter can be loaded from a terminal or from Axis. Halmeter is faster than "
"Halshow at displaying values. Halmeter has two windows, one to pick the pin, "
"signal, or parameter to monitor and one that displays the value. Multiple "
"Halmeters can be open at the same time. If you use a script to open multiple "
"Halmeters you can set the position of each one with -g X Y relative to the "
"upper left corner of your screen.  For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr halmeter pin hm2.0.stepgen.00.velocity-fb -g 0 500\n"
msgstr ""

#. type: Plain text
msgid ""
"See the man page for more options. See section <<sec:halmeter,Halmeter>>."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal-meter01.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal-meter02.png"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Halshow"
msgstr ""

#. type: Plain text
msgid ""
"Halshow (<<cha:halshow,complete usage description>>)  can be started from "
"the command line to show details for selected components, pins, parameters, "
"signals, functions, and threads of a running HAL.  The WATCH tab provides a "
"continuous display of selected pin, parameters, and signal items.  The File "
"menu provides buttons to 1) save the watch items to a watch list and to load "
"and existing watch list.  The watch list items can also be loaded "
"automatically on startup.  For command line usage:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halshow --help\n"
"Usage:\n"
"  halshow [Options] [watchfile]\n"
"  Options:\n"
"           --help    (this help)\n"
"           --fformat format_string_for_float\n"
"           --iformat format_string_for_int\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Notes:\n"
"       Create watchfile in halshow using: 'File/Save Watch List'\n"
"       linuxcnc must be running for standalone usage\n"
msgstr ""

#. type: Plain text
msgid "LinuxCNC must be running for standalone usage"
msgstr ""

#. type: Plain text
msgid ""
"A watchfile created using the 'File/Save Watch List' menu item is formatted "
"as a single line with tokens \"pin+\", \"param+\", \"sig=+\" followed by the "
"appropriate pin, param, or signal name.  The token-name pairs are separated "
"by a space character."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Example:\n"
"   pin+joint.0.pos-hard-limit pin+joint.1.pos-hard-limit sig+estop-loop\n"
msgstr ""

#. type: Plain text
msgid ""
"A watchfile created using the 'File/Save Watch List (multiline)' menu item "
"is formatted with separate lines for each item identified with token-name "
"pairs as described above."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Example:\n"
"   pin+joint.0.pos-hard-limit\n"
"   pin+joint.1.pos-hard-limit\n"
"   sig+estop-loop\n"
msgstr ""

#. type: Plain text
msgid ""
"When loading a watchfile with the 'File/Load Watch List' menu item, the "
"token-name pairs may appear as single or multiple lines.  Blank lines and "
"lines beginning with a # character are ignored."
msgstr ""

#. type: Plain text
msgid ""
"Halscope is an 'oscilloscope' for the HAL. It lets you capture the value of "
"pins, signals, and parameters as a function of time. Complete operating "
"instructions should be located here eventually. For now, refer to section "
"<<sec:tutorial-halscope>> in the tutorial chapter, which explains the basics."
msgstr ""

#. type: Plain text
msgid ""
"The halscope File menu selector provides buttons to save a configuration or "
"open a previously saved configuration.  When halscope is terminated, the "
"last configuration is saved in a file named autosave.halscope."
msgstr ""

#. type: Plain text
msgid ""
"Configuration files may also be specified when starting halscope from the "
"commandline.  Commandline help (-h) usage:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halscope -h\n"
"Usage:\n"
"  halscope [-h] [-i infile] [-o outfile] [num_samples]\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Sim Pin"
msgstr ""

#. type: Plain text
msgid ""
"sim_pin is a command line utility to display and update any number of "
"writable pins, parameters or signals.  Usage:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  Usage:\n"
"         sim_pin [Options] name1 [name2 ...] &\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  Options:\n"
"         --help                (this text)\n"
"         --title title_string  (window title, default: sim_pin)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  Note:  LinuxCNC (or a standalone Hal application) must be running\n"
"         A named item can specify a pin, param, or signal\n"
"         The item must be writable, e.g.:\n"
"            pin:    IN or I/O (and not connected to a signal with a writer)\n"
"            param:  RW\n"
"            signal: connected to a writable pin\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "         Hal item types bit,s32,u32,float are supported\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"         When a bit item is specified, a pushbutton is created\n"
"         to manage the item in one of three manners specified\n"
"         by radio buttons:\n"
"             toggle: Toggle value when button pressed\n"
"             pulse:  Pulse item to 1 once when button pressed\n"
"             hold:   Set to 1 while button pressed\n"
"         The bit pushbutton mode can be specified on the command\n"
"         line by formatting the item name:\n"
"             namei/mode=[toggle | pulse | hold]\n"
"         If the mode begins with an uppercase letter, the radio\n"
"         buttons for selecting other modes are not shown\n"
msgstr ""

#. type: Plain text
msgid "For complete information, see the man page:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man sim_pin\n"
msgstr ""

#. type: Plain text
msgid "Example (with LinuxCNC running):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd loadrt mux2 names=example; halcmd net sig_example example.in0\n"
"sim_pin example.sel example.in1 sig_example &\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "sim_pin is a command line utility to display and update any number of writable pins, parameters or signals"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/sim_pin.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Simulate Probe"
msgstr ""

#. type: Plain text
msgid ""
"simulate_probe is a simple gui to simulate activation of the pin motion."
"probe-input.  Usage:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "simulate_probe &\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "simulate_probe is a simple gui to simulate activation of the pin motion.probe-input"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/simulate_probe.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hal Histogram"
msgstr ""

#. type: Plain text
msgid ""
"hal-histogram is a command line utility to display histograms for hal pins."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Usage:\n"
"   hal-histogram --help | -?\n"
"or\n"
"   hal-histogram [Options] [pinname]\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Options:\n"
"  --minvalue  minvalue (minimum bin, default: 0)\n"
"  --binsize   binsize  (binsize, default: 100)\n"
"  --nbins     nbins    (number of bins, default: 50)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  --logscale  0|1      (y axis log scale, default: 1)\n"
"  --text      note     (text display, default: \"\" )\n"
"  --show               (show count of undisplayed nbins, default off)\n"
"  --verbose            (progress and debug, default off)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Notes:\n"
"  1) LinuxCNC (or another Hal application) must be running\n"
"  2) If no pinname is specified, default is: motion-command-handler.time\n"
"  3) This app may be opened for 5 pins\n"
"  4) pintypes float, s32, u32, bit are supported\n"
"  5) The pin must be associated with a thread supporting floating point\n"
"     For a base thread, this may require using:\n"
"     loadrt motmod ... base_thread_fp=1\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "hal-histogram is a command line utility to display histograms for hal pins"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/hal-histogram.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Halreport"
msgstr ""

#. type: Plain text
msgid ""
"halreport is a command-line utility that generates a report about hal "
"connections for a running LinuxCNC (or other hal) application.  The report "
"shows all signal connections and flags potential problems.  Information "
"included:"
msgstr ""

#. type: Plain text
msgid "System description and kernel version."
msgstr ""

#. type: Plain text
msgid "Signals and all connected output, io, and input pins."
msgstr ""

#. type: Plain text
msgid "Each pin's component_function, thread, and addf-order."
msgstr ""

#. type: Plain text
msgid "Userspace component pins having non-ordered functions."
msgstr ""

#. type: Plain text
msgid "Identification of unknown functions for unhandled components."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Signals   with no output.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Signals   with no inputs.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Functions with no addf.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Warning tags for components marked as deprecated/obsolete in docs.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Real names for pins that use alias names.\n"
msgstr ""

#. type: Plain text
msgid ""
"The report can be generated from the command line and directed to an output "
"file (or stdout if no outfilename is specified):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Usage:\n"
"  halreport -h | --help (this help)\n"
"or\n"
"  halreport [outfilename]\n"
msgstr ""

#. type: Plain text
msgid ""
"To generate the report for every LinuxCNC startup, include halreport and an "
"output filename as an [APPLICATIONS]APP entry in the ini file.  Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[APPLICATIONS]\n"
"APP = halreport /tmp/halreport.txt\n"
msgstr ""

#. type: Plain text
msgid ""
"The function addf-ordering can be important for servo loops where the "
"sequence of the functions computed at each servo period is important.  "
"Typically, the order is: read input pins, do the motion command-handler and "
"motion-controller functions, perform pid calculations, and finally write "
"output pins."
msgstr ""

#. type: Plain text
msgid ""
"For each signal in a critical path, the addf-order of the output pin should "
"be numerically lower than the addf-order of the critical input pins that it "
"connects to."
msgstr ""

#. type: Plain text
msgid ""
"For routine signal paths that handle switch inputs, user-space pins, etc., "
"the addf-ordering is often not critical.  Moreover, the timing of user-space "
"pin value changes cannot be controlled or guaranteed at the intervals "
"typically employed for hal threads."
msgstr ""

#. type: Plain text
msgid ""
"Example report file excerpts showing a pid loop for a hostmot2 stepgen "
"operated in velocity mode on a trivkins machine with joint.0 corresponding "
"to the X axis coordinate:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"SIG:    pos-fb-0\n"
"  OUT:    h.00.position-fb                     hm2_7i92.0.read        servo-thread 001\n"
"          (=hm2_7i92.0.stepgen.00.position-fb)\n"
"    IN:     X_pid.feedback                     X_pid.do-pid-calcs     servo-thread 004\n"
"    IN:     joint.0.motor-pos-fb               motion-command-handler servo-thread 002\n"
"            ....................               motion-controller      servo-thread 003\n"
"...\n"
"SIG:    pos-cmd-0\n"
"  OUT:    joint.0.motor-pos-cmd                motion-command-handler servo-thread 002\n"
"          .....................                motion-controller      servo-thread 003\n"
"    IN:     X_pid.command                      X_pid.do-pid-calcs     servo-thread 004\n"
"...\n"
"SIG:    motor-cmd-0\n"
"  OUT:    X_pid.output                         X_pid.do-pid-calcs     servo-thread 004\n"
"    IN:     h.00.velocity-cmd                  hm2_7i92.0.write       servo-thread 008\n"
"            (=hm2_7i92.0.stepgen.00.velocity-cmd)\n"
msgstr ""

#. type: Plain text
msgid ""
"In the example above, the HALFILE uses halcmd aliases to simplify pin names "
"for an hostmot2 fpga board with commands like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "alias pin hm2_7i92.0.stepgen.00.position-fb h.00.position-fb\n"
msgstr ""

#. type: Plain text
msgid ""
"Questionable component function detection may occur for 1)  unsupported "
"(deprecated) components, 2) user-created components that use multiple "
"functions or unconventional function naming, or"
msgstr ""

#. type: Plain text
msgid ""
"gui-created userspace components that lack distinguishing characteristics "
"such as a prefix based on the gui program name.  Questionable functions are "
"tagged with a question mark \"?\"."
msgstr ""

#. type: Plain text
msgid ""
"Component pins that cannot be associated with a known thread function report "
"the function as \"Unknown\"."
msgstr ""

#. type: Plain text
msgid ""
"halreport generates a connections report for a running hal application to "
"aid in designing and verifying connections.  Pin types and current values "
"are not shown.  For this information use applications like halshow, "
"halmeter, halscope or the 'show' command available with command-line halcmd "
"program."
msgstr ""

#. type: Plain text
msgid ""
"The script halshow can help you find your way around a running HAL.  This is "
"a very specialized system and it must connect to a working HAL.  It cannot "
"run standalone because it relies on the ability of HAL to report what it "
"knows of itself through the halcmd interface library. It is discovery based. "
"Each time halshow runs with a different LinuxCNC configuration it will be "
"different."
msgstr ""

#. type: Plain text
msgid ""
"As we will soon see, this ability of HAL to document itself is one key to "
"making an effective CNC system."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Starting Halshow"
msgstr ""

#. type: Plain text
msgid "Halshow is in the AXIS menu under Machine/Show HAL Configuration."
msgstr ""

#. type: Plain text
msgid "Halshow is in the TkLinuxCNC menu under Scripts/HAL Show."
msgstr ""

#. type: Plain text
msgid ""
"Halshow can be started from a terminal command line and specify formats for "
"integer and float items (pins or signals) and identify a saved watchlist "
"file to use:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"$ halshow --help\n"
"Usage:\n"
"  halshow [Options] [watchfile]\n"
"  Options:\n"
"           --help    (this help)\n"
"           --fformat format_string_for_float\n"
"           --iformat format_string_for_int\n"
msgstr ""

#. type: Plain text
msgid ""
"Example to limit number of decimal points for floats and used a file named "
"my.halshow in the current directory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ halshow  --fformat \".5f\" ./my.halshow\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Tree Area"
msgstr ""

#. type: Plain text
msgid ""
"At the left of its display as shown in figure is a tree view, somewhat like "
"you might see with some file browsers. At the right is a tabbed notebook "
"with tabs for show and watch."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Halshow Layout"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halshow-1.png"
msgstr ""

#. type: Plain text
msgid ""
"The tree shows all of the major parts of a HAL. In front of each is a small "
"plus (+) or minus (-) sign in a box. Clicking the plus will expand that tree "
"node to display what is under it. If that box shows a minus sign, clicking "
"it will collapse that section of the tree."
msgstr ""

#. type: Plain text
msgid ""
"You can also expand or collapse the tree display using the Tree View menu at "
"the upper left edge of the display. Under Tree View you will find: Expand "
"Tree, Collapse Tree; Expand Pins, Expand Parameters, Expand Signals; and "
"Erase Watch. (Note that Erase Watch erases 'all' previously set watches, you "
"cannot erase just one watch.)"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Show Menu"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halshow-3.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL Show Area"
msgstr ""

#. type: Plain text
msgid ""
"Clicking on the node name, the word \"Components\" for example, will show "
"you (under the \"Show\" tab) all that HAL knows about the contents of that "
"node. Figure <<cap:halshow-layout>> shows a list exactly like you will see "
"if you click the \"Components\" name while you are running a standard m5i20 "
"servo card. The information display is exactly like those shown in "
"traditional text based HAL analysis tools. The advantage here is that we "
"have mouse click access, access that can be as broad or as focused as you "
"need."
msgstr ""

#. type: Plain text
msgid ""
"If we take a closer look at the tree display we can see that the six major "
"parts of a HAL can all be expanded at least one level. As these levels are "
"expanded you can get more focused with the reply when you click on the "
"rightmost tree node. You will find that there are some HAL pins and "
"parameters that show more than one reply. This is due to the nature of the "
"search routines in halcmd itself. If you search one pin you may get two, "
"like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins: \n"
"Owner  Type  Dir  Value  Name \n"
"06     bit    -W   TRUE  parport.0.pin-10-in \n"
"06     bit    -W  FALSE  parport.0.pin-10-in-not \n"
msgstr ""

#. type: Plain text
msgid "The second pin's name contains the complete name of the first."
msgstr ""

#. type: Plain text
msgid ""
"Below the show area on the right is a set of widgets that will allow you to "
"play with the running HAL. The commands you enter here and the effect that "
"they have on the running HAL are not saved. They will persist as long as "
"LinuxCNC remains up but are gone as soon as LinuxCNC is."
msgstr ""

#. type: Plain text
msgid ""
"The entry box labeled \"Test HAL Command:\" will accept any of the commands "
"listed for halcmd. These include:"
msgstr ""

#. type: Plain text
msgid "loadrt, unloadrt (load/unload real-time module)"
msgstr ""

#. type: Plain text
msgid "loadusr, unloadusr (load/unload user-space component)"
msgstr ""

#. type: Plain text
msgid "addf, delf (add/delete a function to/from a real-time thread)"
msgstr ""

#. type: Plain text
msgid "net (create a connection between two or more items)"
msgstr ""

#. type: Plain text
msgid "setp (set parameter (or pin) to a value)"
msgstr ""

#. type: Plain text
msgid ""
"This little editor will enter a command any time you press <enter> or push "
"the execute button. An error message from halcmd will show below this entry "
"widget when these commands are not properly formed. If you are not certain "
"how to set up a proper command you'll need to read again the documentation "
"on halcmd and the specific modules that you are working with."
msgstr ""

#. type: Plain text
msgid ""
"Let's use this editor to add a differential module to a HAL and connect it "
"to axis position so that we could see the rate of change in position, i.e., "
"acceleration. We first need to load a HAL component named ddt, add it to the "
"servo thread, then connect it to the position pin of a joint. Once that is "
"done we can find the output of the differentiator in halscope. So let's go. "
"(Yes, I looked this one up.)"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt ddt\n"
msgstr ""

#. type: Plain text
msgid ""
"Now look at the components node and you should see ddt in there someplace."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Loaded HAL Components:\n"
"ID Type        Name\n"
"10 User halcmd29800\n"
"09 User halcmd29374\n"
"08   RT         ddt\n"
"06   RT hal_parport\n"
"05   RT    scope_rt\n"
"04   RT     stepgen\n"
"03   RT      motmod\n"
"02 User   iocontrol\n"
msgstr ""

#. type: Plain text
msgid ""
"Sure enough there it is. Notice that its ID is 08. Next we need to find out "
"what functions are available with it so we look at functions:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Exported Functions: \n"
"Owner  CodeAddr      Arg  FP Users Name \n"
"  08   E0B97630 E0DC7674 YES     0 ddt.0 \n"
"  03   E0DEF83C 00000000 YES     1 motion-command-handler \n"
"  03   E0DF0BF3 00000000 YES     1 motion-controller \n"
"  06   E0B541FE E0DC75B8  NO     1 parport.0.read \n"
"  06   E0B54270 E0DC75B8  NO     1 parport.0.write \n"
"  06   E0B54309 E0DC75B8  NO     0 parport.read-all \n"
"  06   E0B5433A E0DC75B8  NO     0 parport.write-all \n"
"  05   E0AD712D 00000000  NO     0 scope.sample \n"
"  04   E0B618C1 E0DC7448 YES     1 stepgen.capture-position \n"
"  04   E0B612F5 E0DC7448  NO     1 stepgen.make-pulses \n"
"  04   E0B614AD E0DC7448 YES     1 stepgen.update-freq \n"
msgstr ""

#. type: Plain text
msgid ""
"Here we look for owner #08 and see a function named ddt.0. We should be able "
"to add ddt.0 to the servo thread and it will do its math each time the servo "
"thread is updated. Once again we look up the addf command and find that it "
"uses three arguments like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "addf <functname> <threadname> [<position>]\n"
msgstr ""

#. type: Plain text
msgid ""
"We already know the functname=ddt.0 so let's get the thread name right by "
"expanding the thread node in the tree. Here we see two threads, servo-thread "
"and base-thread. The position of ddt.0 in the thread is not critical. So we "
"add the function ddt.0 to the servo-thread:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "addf ddt.0 servo-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"This is just for viewing, so we leave position blank and get the last "
"position in the thread. The following figure shows the state of halshow "
"after this command has been issued."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Addf Command"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halshow-2.png"
msgstr ""

#. type: Plain text
msgid ""
"Next we need to connect ddt to something. But how do we know what pins are "
"available? The answer is to look under pins. There we find ddt and see this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins: \n"
"Owner Type  Dir Value       Name \n"
"08    float R-  0.00000e+00 ddt.0.in \n"
"08    float -W  0.00000e+00 ddt.0.out \n"
msgstr ""

#. type: Plain text
msgid ""
"That looks easy enough to understand, but what signal or pin do we want to "
"connect to it? It could be an axis pin, a stepgen pin, or a signal. We see "
"this when we look at joint.0:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Component Pins: \n"
"Owner Type  Dir Value       Name \n"
"03    float -W  0.00000e+00 joint.0.motor-pos-cmd ==> Xpos-cmd\n"
msgstr ""

#. type: Plain text
msgid ""
"So it looks like Xpos-cmd should be a good signal to use. Back to the editor "
"where we enter the following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "linksp Xpos-cmd ddt.0.in\n"
msgstr ""

#. type: Plain text
msgid ""
"Now if we look at the Xpos-cmd signal using the tree node we'll see what "
"we've done:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Signals: \n"
"Type Value Name \n"
"float 0.00000e+00 Xpos-cmd\n"
"<== joint.0.motor-pos-cmd\n"
"==> ddt.0.in \n"
"==> stepgen.0.position-cmd\n"
msgstr ""

#. type: Plain text
msgid ""
"We see that this signal comes from joint.o.motor-pos-cmd and goes to both "
"ddt.0.in and stepgen.0.position-cmd. By connecting our block to the signal "
"we have avoided any complications with the normal flow of this motion "
"command."
msgstr ""

#. type: Plain text
msgid ""
"The HAL Show Area uses halcmd to discover what is happening in a running "
"HAL. It gives you complete information about what it has discovered. It also "
"updates as you issue commands from the little editor panel to modify that "
"HAL. There are times when you want a different set of things displayed "
"without all of the information available in this area. That is where the HAL "
"Watch Area is of value."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Watch Tab"
msgstr ""

#. type: Plain text
msgid ""
"Clicking the watch tab produces a blank canvas. You can add signals and pins "
"to this canvas and watch their values.footnote:[The refresh rate of the "
"watch display is much lower than Halmeter or Halscope. If you need good "
"resolution of the timing of signals those tools are much more effective.] "
"You can add signals or pins when the watch tab is displayed by clicking on "
"the name of it.  The following figure shows this canvas with several \"bit\" "
"type signals. These signals include enable-out for the first three axes and "
"two of the three iocontrol \"estop\" signals. Notice that the axes are not "
"enabled even though the estop signals say that LinuxCNC is not in estop. A "
"quick look at TkLinuxCNC shows that the condition of LinuxCNC is ESTOP "
"RESET. The amp enables do not turn true until the machine has been turned on."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/halshow-4.png"
msgstr ""

#. type: Plain text
msgid ""
"Watch displays bit type (binary) values using colored circles representing "
"LEDs. They show as dark brown when a bit signal or pin is false, and as "
"light yellow whenever that signal is true. If you select a pin or signal "
"that is not a bit type (binary) signal, watch will show it as a numerical "
"value."
msgstr ""

#. type: Plain text
msgid ""
"Watch will quickly allow you to test switches or see the effect of changes "
"that you make to LinuxCNC while using the graphical interface.  Watch's "
"refresh rate is a bit slow to see stepper pulses, but you can use it for "
"these if you move an axis very slowly or in very small increments of "
"distance. If you've used IO_Show in LinuxCNC, the watch page in halshow can "
"be set up to watch a parport much as IO_Show did."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Commands and Userspace Components"
msgstr ""

#. type: Plain text
msgid ""
"All of the commands in the following list have man pages.  Some will have "
"expanded descriptions, some will have limited descriptions.  Also, all of "
"the components listed below have man pages.  From this list you know what "
"components exist, and you can use 'man n name' to get additional "
"information.  To view the information in the man page, in a terminal window "
"type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man axis (or perhaps 'man 1 axis' if your system requires it.)\n"
msgstr ""

#. type: Plain text
msgid ""
"AXIS LinuxCNC (The Enhanced Machine Controller) Graphical User Interface."
msgstr ""

#. type: Plain text
msgid "AXIS Remote Interface."
msgstr "Interface remota AXIS."

#. type: Labeled list
#, no-wrap
msgid "comp"
msgstr ""

#. type: Plain text
msgid "Build, compile and install LinuxCNC HAL components."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "gladevcp"
msgstr ""

#. type: Plain text
msgid "Virtual Control Panel for LinuxCNC based on Glade, Gtk and HAL widgets."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "gs2"
msgstr ""

#. type: Plain text
msgid "HAL userspace component for Automation Direct GS2 VFD's."
msgstr ""

#. type: Plain text
msgid "Manipulate the Enhanced Machine Controller HAL from the command line."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hal_input"
msgstr ""

#. type: Plain text
msgid ""
"Control HAL pins with any Linux input device, including USB HID devices."
msgstr ""

#. type: Plain text
msgid "Observe HAL pins, signals, and parameters."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halrun"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halsampler"
msgstr ""

#. type: Plain text
msgid "Sample data from HAL in realtime."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "halstreamer"
msgstr ""

#. type: Plain text
msgid "Stream file data into HAL in real time."
msgstr ""

#. type: Plain text
msgid "Observe HAL pins and command LinuxCNC through NML."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "io"
msgstr ""

#. type: Plain text
msgid "Accepts NML I/O commands, interacts with HAL in userspace."
msgstr ""

#. type: Plain text
msgid "LinuxCNC (The Enhanced Machine Controller)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pyvcp"
msgstr ""

#. type: Plain text
msgid "Virtual Control Panel for LinuxCNC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "shuttle"
msgstr ""

#. type: Plain text
msgid ""
"control HAL pins with the ShuttleXpress and ShuttlePRO devices made by "
"Contour Design."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Realtime Components List"
msgstr ""

#. type: Plain text
msgid ""
"Some of these will have expanded descriptions from the man pages. Some will "
"have limited descriptions. All of the components have man pages.  From this "
"list you know what components exist and can use 'man n name' to get "
"additional information. To view the information in the man page, in a "
"terminal window type:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man motion (or perhaps 'man 9 motion' if your system requires it.)\n"
msgstr ""

#. type: Plain text
msgid ""
"See also the 'Man Pages' section of the link:../index.html[docs main page] "
"or the link:../man/man9/[directory listing of man9]."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Core LinuxCNC components"
msgstr ""

#. type: Plain text
msgid ""
"(((motion)))Accepts NML motion commands, interacts with HAL in realtime."
msgstr ""

#. type: Plain text
msgid "(((axis)))Accepts NML motion commands, interacts with HAL in realtime."
msgstr ""

#. type: Plain text
msgid ""
"(((classicladder)))Realtime software PLC based on ladder logic.  See <<cha:"
"classicladder,ClassicLadder>> chapter for more information."
msgstr ""

#. type: Plain text
msgid "(((gladevcp)))Displays Virtual Control Panels built with GTK/Glade."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "threads"
msgstr ""

#. type: Plain text
msgid "(((threads)))Creates hard realtime HAL threads."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Logic and Bitwise components"
msgstr ""

#. type: Plain text
msgid ""
"(((and2)))Two-input AND gate. For out to be true both inputs must be true. "
"link:../man/man9/and2.9.html[Details]"
msgstr ""

#. type: Plain text
msgid "(((not)))Inverter. link:../man/man9/not.9.html[Details]"
msgstr ""

#. type: Plain text
msgid "(((or2)))Two-input OR gate. link:../man/man9/or2.9.html[Details]"
msgstr ""

#. type: Plain text
msgid ""
"(((xor2)))Two-input XOR (exclusive OR) gate. link:../man/man9/xor2.9."
"html[Details]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "dbounce"
msgstr ""

#. type: Plain text
msgid ""
"(((dbounce)))Filter noisy digital inputs. link:../man/man9/dbounce.9."
"html[Details]."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "debounce"
msgstr ""

#. type: Plain text
msgid ""
"(((debounce)))Filter noisy digital inputs. link:../man/man9/debounce.9."
"html[Details]. <<sec:debounce, Description>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "edge"
msgstr ""

#. type: Plain text
msgid "(((edge)))Edge detector."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "flipflop"
msgstr ""

#. type: Plain text
msgid "(((flipflop)))D type flip-flop."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "oneshot"
msgstr ""

#. type: Plain text
msgid "(((oneshot)))One-shot pulse generator."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "logic"
msgstr ""

#. type: Plain text
msgid "(((logic)))General logic function component."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "lut5"
msgstr ""

#. type: Plain text
msgid ""
"(((lut5)))A 5-input logic function based on a look-up table. <<sec:lut5,"
"Description>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "match8"
msgstr ""

#. type: Plain text
msgid "(((match8)))8-bit binary match detector."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "select8"
msgstr ""

#. type: Plain text
msgid "(((select8)))8-bit binary match detector."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Arithmetic and float-components"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "abs"
msgstr ""

#. type: Plain text
msgid ""
"[[sub:abs]](((abs)))Compute the absolute value and sign of the input signal."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "blend"
msgstr ""

#. type: Plain text
msgid "(((blend)))Perform linear interpolation between two values."
msgstr ""

#. type: Plain text
msgid "(((comp)))Two input comparator with hysteresis."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "constant"
msgstr ""

#. type: Plain text
msgid "(((constant)))Use a parameter to set the value of a pin."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sum2"
msgstr ""

#. type: Plain text
msgid "(((sum2)))Sum of two inputs (each with a gain) and an offset."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "counter"
msgstr ""

#. type: Plain text
msgid ""
"(((counter)))Counts input pulses (deprecated).  Use the <<sec:encoder, "
"encoder>> component."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "updown"
msgstr ""

#. type: Plain text
msgid ""
"(((updown)))Counts up or down, with optional limits and wraparound behavior."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ddt"
msgstr ""

#. type: Plain text
msgid "(((ddt)))Compute the derivative of the input function."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "deadzone"
msgstr ""

#. type: Plain text
msgid "(((deadzone)))Return the center if within the threshold."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hypot"
msgstr ""

#. type: Plain text
msgid "(((hypot)))Three-input hypotenuse (Euclidean distance) calculator."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mult2"
msgstr ""

#. type: Plain text
msgid "(((mult2)))Product of two inputs."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mux16"
msgstr ""

#. type: Plain text
msgid "(((mux16)))Select from one of sixteen input values."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mux2"
msgstr ""

#. type: Plain text
msgid "(((mux2)))Select from one of two input values."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mux4"
msgstr ""

#. type: Plain text
msgid "(((mux4)))Select from one of four input values."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mux8"
msgstr ""

#. type: Plain text
msgid "(((mux8)))Select from one of eight input values."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "near"
msgstr ""

#. type: Plain text
msgid "(((near)))Determine whether two values are roughly equal."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "offset"
msgstr ""

#. type: Plain text
msgid ""
"(((offset)))Adds an offset to an input, and subtracts it from the feedback "
"value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "integ"
msgstr ""

#. type: Plain text
msgid "(((integ)))Integrator."
msgstr ""

#. type: Plain text
msgid "(((invert)))Compute the inverse of the input signal."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "wcomp"
msgstr ""

#. type: Plain text
msgid "(((wcomp)))Window comparator."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "weighted_sum"
msgstr ""

#. type: Plain text
msgid "(((weighted_sum)))Convert a group of bits to an integer."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "biquad"
msgstr ""

#. type: Plain text
msgid "(((biquad)))Biquad IIR filter"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "lowpass"
msgstr ""

#. type: Plain text
msgid "(((lowpass)))Low-pass filter"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "limit1"
msgstr ""

#. type: Plain text
msgid ""
"(((limit1)))Limit the output signal to fall between min and max. footnote:"
"[When the input is a position, this means that the 'position' is limited.]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "limit2"
msgstr ""

#. type: Plain text
msgid ""
"(((limit2)))Limit the output signal to fall between min and max.  Limit its "
"slew rate to less than maxv per second. footnote:[When the input is a "
"position, this means that 'position' and 'velocity' are limited.]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "limit3"
msgstr ""

#. type: Plain text
msgid ""
"(((limit3)))Limit the output signal to fall between min and max.  Limit its "
"slew rate to less than maxv per second.  Limit its second derivative to less "
"than MaxA per second squared. footnote:[When the input is a position, this "
"means that the 'position', 'velocity', and 'acceleration' are limited.]"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "maj3"
msgstr ""

#. type: Plain text
msgid "(((maj3)))Compute the majority of 3 inputs."
msgstr ""

#. type: Plain text
msgid "(((scale)))Applies a scale and offset to its input."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Type conversion"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_bit_s32"
msgstr ""

#. type: Plain text
msgid "(((conv_bit_s32)))Convert a value from bit to s32."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_bit_u32"
msgstr ""

#. type: Plain text
msgid "(((conv_bit_u32)))Convert a value from bit to u32."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_float_s32"
msgstr ""

#. type: Plain text
msgid "(((conv_float_s32)))Convert a value from float to s32."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_float_u32"
msgstr ""

#. type: Plain text
msgid "(((conv_float_u32)))Convert a value from float to u32."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_s32_bit"
msgstr ""

#. type: Plain text
msgid "(((conv_s32_bit)))Convert a value from s32 to bit."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_s32_float"
msgstr ""

#. type: Plain text
msgid "(((conv_s32_float)))Convert a value from s32 to float."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_s32_u32"
msgstr ""

#. type: Plain text
msgid "(((conv_s32_u32)))Convert a value from s32 to u32."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_u32_bit"
msgstr ""

#. type: Plain text
msgid "(((conv_u32_bit)))Convert a value from u32 to bit."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_u32_float"
msgstr ""

#. type: Plain text
msgid "(((conv_u32_float)))Convert a value from u32 to float."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "conv_u32_s32"
msgstr ""

#. type: Plain text
msgid "(((conv_u32_s32)))Convert a value from u32 to s32."
msgstr ""

#. type: Plain text
msgid "(((hal_ppmc)))"
msgstr ""

#. type: Plain text
msgid ""
"Pico Systems <<cha:pico-drivers,driver>> for analog servo, PWM and Stepper "
"controller."
msgstr ""

#. type: Plain text
msgid "(((hm2_7i43)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hm2_7i43"
msgstr ""

#. type: Plain text
msgid ""
"Mesa Electronics driver for the 7i43 EPP Anything IO board with HostMot2. "
"(See the man page for more information)"
msgstr ""

#. type: Plain text
msgid "(((hm2_pci)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hm2_pci"
msgstr ""

#. type: Plain text
msgid ""
"Mesa Electronics driver for the 5i20, 5i22, 5i23, 4i65, and 4i68 Anything I/"
"O boards, with HostMot2 firmware. (See the man page for more information)"
msgstr ""

#. type: Plain text
msgid "(((hostmot2)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "hostmot2"
msgstr ""

#. type: Plain text
msgid ""
"Mesa Electronics <<cha:mesa-hostmot2-driver,driver>> for the HostMot2 "
"firmware."
msgstr ""

#. type: Plain text
msgid "(((7i65)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "mesa_7i65"
msgstr ""

#. type: Plain text
msgid ""
"Mesa Electronics driver for the 7i65 eight-axis servo card. (See the man "
"page for more information)"
msgstr ""

#. type: Plain text
msgid "(((pluto_servo)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pluto_servo"
msgstr ""

#. type: Plain text
msgid ""
"Pluto-P <<cha:pluto-p-driver,driver>> and firmware for the parallel port "
"FPGA, for servos."
msgstr ""

#. type: Plain text
msgid "(((pluto_step)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pluto_step"
msgstr ""

#. type: Plain text
msgid ""
"Pluto-P <<cha:pluto-p-driver,driver>> for the parallel port FPGA, for "
"steppers."
msgstr ""

#. type: Plain text
msgid "(((torch height control)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "thc"
msgstr ""

#. type: Plain text
msgid ""
"Torch Height Control using a Mesa THC card or any analog to velocity input"
msgstr ""

#. type: Plain text
msgid "(((serport)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "serport"
msgstr ""

#. type: Plain text
msgid ""
"Hardware driver for the digital I/O bits of the 8250 and 16550 serial port."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "kins"
msgstr ""

#. type: Plain text
msgid "(((kins)))kinematics definitions for LinuxCNC."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "gantrykins"
msgstr ""

#. type: Plain text
msgid ""
"(((gantrykins)))A kinematics module that maps one axis to multiple joints."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "genhexkins"
msgstr ""

#. type: Plain text
msgid ""
"(((genhexkins)))Gives six degrees of freedom in position and orientation "
"(XYZABC).  The location of the motors is defined at compile time."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "genserkins"
msgstr ""

#. type: Plain text
msgid ""
"(((genserkins)))Kinematics that can model a general serial-link manipulator "
"with up to 6 angular joints."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "maxkins"
msgstr ""

#. type: Plain text
msgid ""
"(((maxkins)))Kinematics for a tabletop 5 axis mill named 'max' with tilting "
"head (B axis) and horizontal rotary mounted to the table (C axis).  Provides "
"UVW motion in the rotated coordinate system.  The source file, maxkins.c, "
"may be a useful starting point for other 5-axis systems."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "tripodkins"
msgstr ""

#. type: Plain text
msgid ""
"(((tripodkins)))The joints represent the distance of the controlled point "
"from three predefined locations (the motors), giving three degrees of "
"freedom in position (XYZ)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "trivkins"
msgstr ""

#. type: Plain text
msgid ""
"(((trivkins)))There is a 1:1 correspondence between joints and axes. Most "
"standard milling machines and lathes use the trivial kinematics module."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pumakins"
msgstr ""

#. type: Plain text
msgid "(((pumakins)))Kinematics for PUMA-style robots."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "rotatekins"
msgstr ""

#. type: Plain text
msgid ""
"(((rotatekins)))The X and Y axes are rotated 45 degrees compared to the "
"joints 0 and 1."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "scarakins"
msgstr ""

#. type: Plain text
msgid "(((scarakins)))Kinematics for SCARA-type robots."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Motor control"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "at_pid"
msgstr ""

#. type: Plain text
msgid ""
"(((at_pid)))Proportional/integral/derivative controller with auto tuning."
msgstr ""

#. type: Plain text
msgid "Proportional/integral/derivative controller. <<sec:pid,Description>>"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pwmgen"
msgstr ""

#. type: Plain text
msgid "(((pwmgen)))Software PWM/PDM generation. <<sec:pwmgen,Description>>"
msgstr ""

#. type: Plain text
msgid ""
"(((encoder)))Software counting of quadrature encoder signals. <<sec:encoder,"
"Description>>."
msgstr ""

#. type: Plain text
msgid ""
"(((stepgen)))Software step pulse generation. <<sec:stepgen,Description>>."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "BLDC and 3-phase motor control"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "bldc_hall3"
msgstr ""

#. type: Plain text
msgid ""
"(((bldc_hall3)))3-wire Bipolar trapezoidal commutation BLDC motor driver "
"using Hall sensors."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "clarke2"
msgstr ""

#. type: Plain text
msgid "(((clarke2)))Two input version of Clarke transform."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "clarke3"
msgstr ""

#. type: Plain text
msgid "(((clarke3)))Clarke (3 phase to cartesian) transform."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "clarkeinv"
msgstr ""

#. type: Plain text
msgid "(((clarkeinv)))Inverse Clarke transform."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "charge_pump"
msgstr ""

#. type: Plain text
msgid ""
"(((charge_pump)))Creates a square-wave for the 'charge pump' input of some "
"controller boards.  The 'Charge Pump' should be added to the base thread "
"function. When enabled the output is on for one period and off for one "
"period. To calculate the frequency of the output 1/(period time in seconds x "
"2) = hz. For example if you have a base period of 100,000ns that is 0.0001 "
"seconds and the formula would be 1/(0.0001 x 2) = 5,000 hz or 5 Khz."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "encoder_ratio"
msgstr ""

#. type: Plain text
msgid "(((encoder_ratio)))An electronic gear to synchronize two axes."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "estop_latch"
msgstr ""

#. type: Plain text
msgid "(((estop_latch)))ESTOP latch."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "feedcomp"
msgstr ""

#. type: Plain text
msgid ""
"(((feedcomp)))Multiply the input by the ratio of current velocity to the "
"feed rate."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "gearchange"
msgstr ""

#. type: Plain text
msgid "(((gearchange)))Select from one of two speed ranges."
msgstr ""

#. type: Plain text
msgid "[[sec:ilowpass]] (((ilowpass)))"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "ilowpass"
msgstr ""

#. type: Plain text
msgid ""
"While it may find other applications, this component was written to create "
"smoother motion while jogging with an MPG."
msgstr ""

#. type: Plain text
msgid ""
"In a machine with high acceleration, a short jog can behave almost like a "
"step function. By putting the ilowpass component between the MPG encoder "
"counts output and the axis jog-counts input, this can be smoothed."
msgstr ""

#. type: Plain text
msgid ""
"Choose scale conservatively so that during a single session there will never "
"be more than about 2e9/scale pulses seen on the MPG. Choose gain according "
"to the smoothing level desired. Divide the axis.N.jog-scale values by scale."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "joyhandle"
msgstr ""

#. type: Plain text
msgid "(((joyhandle)))Sets nonlinear joypad movements, deadbands and scales."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "knob2float"
msgstr ""

#. type: Plain text
msgid ""
"(((knob2float)))Convert counts (probably from an encoder) to a float value."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "minmax"
msgstr ""

#. type: Plain text
msgid ""
"(((minmax)))Track the minimum and maximum values of the input to the outputs."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sample_hold"
msgstr ""

#. type: Plain text
msgid "(((sample_hold)))Sample and Hold."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sampler"
msgstr ""

#. type: Plain text
msgid "(((sampler)))Sample data from HAL in real time."
msgstr ""

#. type: Plain text
msgid "Signal generator. <<sec:siggen,Description>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sim_encoder"
msgstr ""

#. type: Plain text
msgid ""
"(((sim_encoder)))Simulated quadrature encoder. <<sec:simulated-encoder,"
"Description>>."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "sphereprobe"
msgstr ""

#. type: Plain text
msgid "(((sphereprobe)))Probe a pretend hemisphere."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "steptest"
msgstr ""

#. type: Plain text
msgid ""
"(((steptest)))Used by Stepconf to allow testing of acceleration and velocity "
"values for an axis."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "streamer"
msgstr ""

#. type: Plain text
msgid "(((streamer)))Stream file data into HAL in real time."
msgstr ""

#. type: Plain text
msgid "(((supply)))Set output pins with values from parameters (deprecated)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "threadtest"
msgstr ""

#. type: Plain text
msgid "(((threadtest)))Component for testing thread behavior."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "time"
msgstr ""

#. type: Plain text
msgid "(((time)))Accumulated run-time timer counts HH:MM:SS of 'active' input."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "timedelay"
msgstr ""

#. type: Plain text
msgid "(((timedelay)))The equivalent of a time-delay relay."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "timedelta"
msgstr ""

#. type: Plain text
msgid ""
"(((timedelta)))Component that measures thread scheduling timing behavior."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "toggle2nist"
msgstr ""

#. type: Plain text
msgid "(((toggle2nist)))Toggle button to nist logic."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "toggle"
msgstr ""

#. type: Plain text
msgid "(((toggle)))Push-on, push-off from momentary pushbuttons."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "tristate_bit"
msgstr ""

#. type: Plain text
msgid ""
"(((tristate_bit)))Place a signal on an I/O pin only when enabled, similar to "
"a tristate buffer in electronics."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "tristate_float"
msgstr ""

#. type: Plain text
msgid ""
"(((tristate_float)))Place a signal on an I/O pin only when enabled, similar "
"to a tristate buffer in electronics."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "watchdog"
msgstr ""

#. type: Plain text
msgid "(((watchdog)))Monitor one to thirty-two inputs for a 'heartbeat'."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "HAL API calls"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"hal_add_funct_to_thread.3hal\n"
"hal_bit_t.3hal\n"
"hal_create_thread.3hal\n"
"hal_del_funct_from_thread.3hal\n"
"hal_exit.3hal\n"
"hal_export_funct.3hal\n"
"hal_float_t.3hal\n"
"hal_get_lock.3hal\n"
"hal_init.3hal\n"
"hal_link.3hal\n"
"hal_malloc.3hal\n"
"hal_param_bit_new.3hal\n"
"hal_param_bit_newf.3hal\n"
"hal_param_float_new.3hal\n"
"hal_param_float_newf.3hal\n"
"hal_param_new.3hal\n"
"hal_param_s32_new.3hal\n"
"hal_param_s32_newf.3hal\n"
"hal_param_u32_new.3hal\n"
"hal_param_u32_newf.3hal\n"
"hal_parport.3hal\n"
"hal_pin_bit_new.3hal\n"
"hal_pin_bit_newf.3hal\n"
"hal_pin_float_new.3hal\n"
"hal_pin_float_newf.3hal\n"
"hal_pin_new.3hal\n"
"hal_pin_s32_new.3hal\n"
"hal_pin_s32_newf.3hal\n"
"hal_pin_u32_new.3hal\n"
"hal_pin_u32_newf.3hal\n"
"hal_ready.3hal\n"
"hal_s32_t.3hal\n"
"hal_set_constructor.3hal\n"
"hal_set_lock.3hal\n"
"hal_signal_delete.3hal\n"
"hal_signal_new.3hal\n"
"hal_start_threads.3hal\n"
"hal_type_t.3hal\n"
"hal_u32_t.3hal\n"
"hal_unlink.3hal\n"
"intro.3hal\n"
"undocumented.3hal\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "RTAPI calls"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid ""
"EXPORT_FUNCTION.3rtapi\n"
"MODULE_AUTHOR.3rtapi\n"
"MODULE_DESCRIPTION.3rtapi\n"
"MODULE_LICENSE.3rtapi\n"
"RTAPI_MP_ARRAY_INT.3rtapi\n"
"RTAPI_MP_ARRAY_LONG.3rtapi\n"
"RTAPI_MP_ARRAY_STRING.3rtapi\n"
"RTAPI_MP_INT.3rtapi\n"
"RTAPI_MP_LONG.3rtapi\n"
"RTAPI_MP_STRING.3rtapi\n"
"intro.3rtapi\n"
"rtapi_app_exit.3rtapi\n"
"rtapi_app_main.3rtapi\n"
"rtapi_clock_set_period.3rtapi\n"
"rtapi_delay.3rtapi\n"
"rtapi_delay_max.3rtapi\n"
"rtapi_exit.3rtapi\n"
"rtapi_get_clocks.3rtapi\n"
"rtapi_get_msg_level.3rtapi\n"
"rtapi_get_time.3rtapi\n"
"rtapi_inb.3rtapi\n"
"rtapi_init.3rtapi\n"
"rtapi_module_param.3rtapi\n"
"RTAPI_MP_ARRAY_INT.3rtapi\n"
"RTAPI_MP_ARRAY_LONG.3rtapi\n"
"RTAPI_MP_ARRAY_STRING.3rtapi\n"
"RTAPI_MP_INT.3rtapi\n"
"RTAPI_MP_LONG.3rtapi\n"
"RTAPI_MP_STRING.3rtapi\n"
"rtapi_mutex.3rtapi\n"
"rtapi_outb.3rtapi\n"
"rtapi_print.3rtap\n"
"rtapi_prio.3rtapi\n"
"rtapi_prio_highest.3rtapi\n"
"rtapi_prio_lowest.3rtapi\n"
"rtapi_prio_next_higher.3rtapi\n"
"rtapi_prio_next_lower.3rtapi\n"
"rtapi_region.3rtapi\n"
"rtapi_release_region.3rtapi\n"
"rtapi_request_region.3rtapi\n"
"rtapi_set_msg_level.3rtapi\n"
"rtapi_shmem.3rtapi\n"
"rtapi_shmem_delete.3rtapi\n"
"rtapi_shmem_getptr.3rtapi\n"
"rtapi_shmem_new.3rtapi\n"
"rtapi_snprintf.3rtapi\n"
"rtapi_task_delete.3rtpi\n"
"rtapi_task_new.3rtapi\n"
"rtapi_task_pause.3rtapi\n"
"rtapi_task_resume.3rtapi\n"
"rtapi_task_start.3rtapi\n"
"rtapi_task_wait.3rtapi\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Component Descriptions"
msgstr ""

#. type: Plain text
msgid "[[sec:stepgen]] (((stepgen)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stepgen"
msgstr ""

#. type: Plain text
msgid ""
"This component provides software based generation of step pulses in response "
"to position or velocity commands. In position mode, it has a built in pre-"
"tuned position loop, so PID tuning is not required. In velocity mode, it "
"drives a motor at the commanded speed, while obeying velocity and "
"acceleration limits. It is a realtime component only, and depending on CPU "
"speed, etc, is capable of maximum step rates of 10kHz to perhaps 50kHz. The "
"step pulse generator block diagram shows three block diagrams, each is a "
"single step pulse generator. The first diagram is for step type '0', (step "
"and direction). The second is for step type '1' (up/down, or pseudo-PWM), "
"and the third is for step types 2 through 14 (various stepping patterns). "
"The first two diagrams show position mode control, and the third one shows "
"velocity mode. Control mode and step type are set independently, and any "
"combination can be selected."
msgstr ""

#. type: Plain text
msgid "(((Stepgen Block Diagram)))"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step Pulse Generator Block Diagram position mode"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepgen-block-diag.png"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt stepgen step_type=<type-array> [ctrl_type=<ctrl_array>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'<type-array>' is a series of comma separated decimal integers. Each\n"
"number causes a\n"
"single step pulse generator to be loaded, the value of the number\n"
" determines the stepping type. '<ctrl_array>' is a comma separated\n"
"series of 'p' or 'v' characters, to specify position or velocity\n"
"mode. 'ctrl_type' is optional, if omitted, all of the step generators\n"
"will be position\n"
"mode. \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt stepgen step_type=0,0,2 ctrl_type=p,p,v\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"will install three step generators. The first two use step type '0'\n"
"(step and direction) and run in position mode. The last one uses step\n"
"type '2' (quadrature) and runs in velocity mode. The default value for\n"
"'<config-array>' is '0,0,0' which will install three type '0'\n"
"(step/dir) generators. The maximum\n"
"number of step generators is 8 (as defined by MAX_CHAN in stepgen.c).\n"
"Each generator is independent, but all are updated by the same\n"
" function(s) at the same time. In the following descriptions, '<chan>'\n"
"is the number of a specific generator. The first generator is number 0.\n"
"(((Stepgen Block Diagram)))\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Removing"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt stepgen\n"
msgstr ""

#. type: Plain text
msgid ""
"Each step pulse generator will have only some of these pins, depending on "
"the step type and control type selected."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.position-cmd' - Desired motor position, in"
msgstr ""

#. type: Plain text
msgid "position units (position mode only)."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.velocity-cmd' - Desired motor velocity, in"
msgstr ""

#. type: Plain text
msgid "position units per second (velocity mode only)."
msgstr ""

#. type: Plain text
msgid "'(s32) stepgen.<chan>.counts' - Feedback position in counts,"
msgstr ""

#. type: Plain text
msgid "updated by 'capture_position()'."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.position-fb' - Feedback position in"
msgstr ""

#. type: Plain text
msgid "position units, updated by 'capture_position()'."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.enable' - Enables output steps - when false,"
msgstr ""

#. type: Plain text
msgid "no steps are generated."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.step' - Step pulse output (step type 0 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.dir' - Direction output (step type 0 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.up' - UP pseudo-PWM output (step type 1 only)."
msgstr ""

#. type: Plain text
msgid ""
"'(bit) stepgen.<chan>.down' - DOWN pseudo-PWM output (step type 1 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.phase-A' - Phase A output (step types 2-14 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.phase-B' - Phase B output (step types 2-14 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.phase-C' - Phase C output (step types 3-14 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) stepgen.<chan>.phase-D' - Phase D output (step types 5-14 only)."
msgstr ""

#. type: Plain text
msgid ""
"'(bit) stepgen.<chan>.phase-E' - Phase E output (step types 11-14 only)."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Parameters[[sub:stepgen-parameters]]"
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.position-scale' - Steps per position unit."
msgstr ""

#. type: Plain text
msgid "This parameter is used for both output and feedback."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.maxvel' - Maximum velocity, in position"
msgstr ""

#. type: Plain text
msgid "units per second. If 0.0, has no effect."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.maxaccel' - Maximum accel/decel rate, in"
msgstr ""

#. type: Plain text
msgid "positions units per second squared.  If 0.0, has no effect."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.frequency' - The current step rate, in"
msgstr ""

#. type: Plain text
msgid "steps per second."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.steplen' - Length of a step pulse (step"
msgstr ""

#. type: Plain text
msgid ""
"type 0 and 1) or minimum time in a given state (step types 2-14), in nano-"
"seconds."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.stepspace' - Minimum spacing between two"
msgstr ""

#. type: Plain text
msgid ""
"step pulses (step types 0 and 1 only), in nano-seconds. Set to 0 to enable "
"the stepgen 'doublefreq' function. To use 'doublefreq' the <<sub:parport-"
"functions,parport reset function>> must be enabled."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.dirsetup' - Minimum time from a direction"
msgstr ""

#. type: Plain text
msgid ""
"change to the beginning of the next step pulse (step type 0 only), in "
"nanoseconds."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.dirhold' - Minimum time from the end of a"
msgstr ""

#. type: Plain text
msgid "step pulse to a direction change (step type 0 only), in nanoseconds."
msgstr ""

#. type: Plain text
msgid "'(float) stepgen.<chan>.dirdelay' - Minimum time any step to a step"
msgstr ""

#. type: Plain text
msgid "in the opposite direction (step types 1-14 only), in nano-seconds."
msgstr ""

#. type: Plain text
msgid "'(s32) stepgen.<chan>.rawcounts' - The raw feedback count, updated"
msgstr ""

#. type: Plain text
msgid "by 'make_pulses()'."
msgstr ""

#. type: Plain text
msgid ""
"In position mode, the values of maxvel and maxaccel are used by the internal "
"position loop to avoid generating step pulse trains that the motor cannot "
"follow. When set to values that are appropriate for the motor, even a large "
"instantaneous change in commanded position will result in a smooth "
"trapezoidal move to the new location. The algorithm works by measuring both "
"position error and velocity error, and calculating an acceleration that "
"attempts to reduce both to zero at the same time. For more details, "
"including the contents of the 'control equation' box, consult the code."
msgstr ""

#. type: Plain text
msgid ""
"In velocity mode, maxvel is a simple limit that is applied to the commanded "
"velocity, and maxaccel is used to ramp the actual frequency if the commanded "
"velocity changes abruptly. As in position mode, proper values for these "
"parameters ensure that the motor can follow the generated pulse train."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step Types"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step Type 0"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Step type 0 is the standard step and direction type. When configured for\n"
"step type 0, there are four extra parameters that determine the exact\n"
"timing of the step and direction signals. In the following figure \n"
"the meaning of these parameters is shown. The\n"
"parameters are in nanoseconds, but will be rounded up to an integer\n"
"multiple of the thread period for the threaed that calls\n"
"'make_pulses()'. For example, if 'make_pulses()' is called every 16 us,\n"
"and steplen is 20000, then the step pulses will\n"
"be 2 x 16 = 32 us long. The default value for all four of the parameters\n"
"is 1ns, but the automatic rounding takes effect the first time the code\n"
" runs. Since one step requires 'steplen' ns high and 'stepspace' ns\n"
"low, the maximum frequency is 1,000,000,000 divided by\n"
"'(steplen+stepspace)'. If 'maxfreq' is set higher than that limit, it\n"
"will be lowered automatically. If\n"
"maxfreq is zero, it will remain zero, but the output frequency will\n"
"still be limited.\n"
msgstr ""

#. type: Plain text
msgid ""
"When using the parallel port driver the step frequency can be doubled using "
"the <<sub:parport-functions,parport reset>> function together with stepgen's "
"'doublefreq' setting."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step and Direction Timing"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepgen-type0.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step Type 1"
msgstr ""

#. type: Plain text
msgid ""
"Step type 1 has two outputs, up and down. Pulses appear on one or the other, "
"depending on the direction of travel. Each pulse is 'steplen' ns long, and "
"the pulses are separated by at least 'stepspace' ns. The maximum frequency "
"is the same as for step type 0. If 'maxfreq' is set higher than the limit it "
"will be lowered. If 'maxfreq' is zero, it will remain zero but the output "
"frequency will still be limited."
msgstr ""

#. type: Plain text
msgid ""
"Do not use the parport reset function with step types 2 - 14. Unexpected "
"results can happen."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Step Type 2 - 14"
msgstr ""

#. type: Plain text
msgid ""
"Step types 2 through 14 are state based, and have from two to five outputs. "
"On each step, a state counter is incremented or decremented.  The Two-and-"
"Three-Phase, Four-Phase, and Five-Phase show the output patterns as a "
"function of the state counter. The maximum frequency is 1,000,000,000 "
"divided by 'steplen', and as in the other modes, 'maxfreq' will be lowered "
"if it is above the limit."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Two-and-Three-Phase Step Types"
msgstr ""

#. type: Plain text
msgid "(((Two and Three Phase)))"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepgen-type2-4.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Four-Phase Step Types"
msgstr ""

#. type: Plain text
msgid "(((Four Phase)))"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepgen-type5-10.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Five-Phase Step Types"
msgstr ""

#. type: Plain text
msgid "(((Five Phase)))"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/stepgen-type11-14.png"
msgstr ""

#. type: Plain text
msgid ""
"The component exports three functions. Each function acts on all of the step "
"pulse generators - running different generators in different threads is not "
"supported."
msgstr ""

#. type: Plain text
msgid "'(funct) stepgen.make-pulses' - High speed function to generate"
msgstr ""

#. type: Plain text
msgid "and count pulses (no floating point)."
msgstr ""

#. type: Plain text
msgid "'(funct) stepgen.update-freq' - Low speed function does position"
msgstr ""

#. type: Plain text
msgid "to velocity conversion, scaling and limiting."
msgstr ""

#. type: Plain text
msgid "'(funct) stepgen.capture-position' - Low speed function for"
msgstr ""

#. type: Plain text
msgid "feedback, updates latches and scales position."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The high speed function 'stepgen.make-pulses' should be run in a very\n"
"fast thread, from 10 to 50 us depending on the\n"
"capabilities of the computer. That thread's period determines the\n"
" maximum step frequency, since 'steplen', 'stepspace', 'dirsetup',\n"
"'dirhold', and 'dirdelay' are all rounded up to a integer multiple of\n"
"the thread periond in\n"
"nanoseconds. The other two functions can be called at a much lower\n"
"rate.\n"
msgstr ""

#. type: Plain text
msgid "[[sec:pwmgen]] (((PWMgen)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PWMgen"
msgstr ""

#. type: Plain text
msgid ""
"This component provides software based generation of PWM (Pulse Width "
"Modulation) and PDM (Pulse Density Modulation) waveforms. It is a realtime "
"component only, and depending on CPU speed, etc, is capable of PWM "
"frequencies from a few hundred Hertz at pretty good resolution, to perhaps "
"10KHz with limited resolution."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt pwmgen output_type=<config-array>\n"
msgstr ""

#. type: Plain text
msgid ""
"The '<config-array>' is a series of comma separated decimal integers. Each "
"number causes a single PWM generator to be loaded, the value of the number "
"determines the output type. The following example will install three PWM "
"generators. There is no default value, if '<config-array>' is not specified, "
"no PWM generators will be installed. The maximum number of frequency "
"generators is 8 (as defined by MAX_CHAN in pwmgen.c). Each generator is "
"independent, but all are updated by the same function(s) at the same time. "
"In the following descriptions, '<chan>' is the number of a specific "
"generator. The first generator is number 0."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt pwmgen output_type=0,1,2\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "unloadrt pwmgen\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Output Types"
msgstr ""

#. type: Plain text
msgid "The PWM generator supports three different 'output types'."
msgstr ""

#. type: Plain text
msgid ""
"'Output type 0' - PWM output pin only. Only positive commands are accepted,"
msgstr ""

#. type: Plain text
msgid ""
"negative values are treated as zero (and will be affected by the parameter "
"'min-dc' if it is non-zero)."
msgstr ""

#. type: Plain text
msgid ""
"'Output type 1' - PWM/PDM and direction pins. Positive and negative inputs"
msgstr ""

#. type: Plain text
msgid ""
"will be output as positive and negative PWM. The direction pin is false for "
"positive commands, and true for negative commands. If your control needs "
"positive PWM for both CW and CCW use the <<sub:abs,abs>> component to "
"convert your PWM signal to positive value when a negative input is input."
msgstr ""

#. type: Plain text
msgid ""
"'Output type 2' - UP and DOWN pins. For positive commands, the PWM signal"
msgstr ""

#. type: Plain text
msgid ""
"appears on the up output, and the down output remains false. For negative "
"commands, the PWM signal appears on the down output, and the up output "
"remains false. Output type 2 is suitable for driving most H-bridges."
msgstr ""

#. type: Plain text
msgid "Each PWM generator will have the following pins:"
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.value' - Command value, in arbitrary units."
msgstr ""

#. type: Plain text
msgid "Will be scaled by the 'scale' parameter (see below)."
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.enable' - Enables or disables the PWM"
msgstr ""

#. type: Plain text
msgid "generator outputs."
msgstr ""

#. type: Plain text
msgid ""
"Each PWM generator will also have some of these pins, depending on the "
"output type selected:"
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.pwm' - PWM (or PDM) output, (output types 0"
msgstr ""

#. type: Plain text
msgid "and 1 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.dir' - Direction output (output type 1 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.up' - PWM/PDM output for positive input value"
msgstr ""

#. type: Plain text
msgid "(output type 2 only)."
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.down' - PWM/PDM output for negative input"
msgstr ""

#. type: Plain text
msgid "value (output type 2 only)."
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.scale' - Scaling factor to convert 'value'"
msgstr ""

#. type: Plain text
msgid ""
"from arbitrary units to duty cycle. For example if scale is set to 4000 and "
"the input value passed to the pwmgen.<chan>.value is 4000 then it will be "
"100% duty-cycle (always on). If the value is 2000 then it will be a 50% 25Hz "
"square wave."
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.pwm-freq' - Desired PWM frequency, in Hz."
msgstr ""

#. type: Plain text
msgid ""
"If 0.0, generates PDM instead of PWM. If set higher than internal limits, "
"next call of 'update_freq()' will set it to the internal limit. If non-zero, "
"and 'dither' is false, next call of 'update_freq()' will set it to the "
"nearest integer multiple of the 'make_pulses()' function period."
msgstr ""

#. type: Plain text
msgid "'(bit) pwmgen.<chan>.dither-pwm' - If true, enables dithering to"
msgstr ""

#. type: Plain text
msgid ""
"achieve average PWM frequencies or duty cycles that are unobtainable with "
"pure PWM. If false, both the PWM frequency and the duty cycle will be "
"rounded to values that can be achieved exactly."
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.min-dc' - Minimum duty cycle, between 0.0"
msgstr ""

#. type: Plain text
msgid ""
"and 1.0 (duty cycle will go to zero when disabled, regardless of this "
"setting)."
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.max-dc' - Maximum duty cycle, between 0.0"
msgstr ""

#. type: Plain text
msgid "and 1.0."
msgstr ""

#. type: Plain text
msgid "'(float) pwmgen.<chan>.curr-dc' - Current duty cycle - after all"
msgstr ""

#. type: Plain text
msgid "limiting and rounding (read only)."
msgstr ""

#. type: Plain text
msgid ""
"The component exports two functions. Each function acts on all of the PWM "
"generators - running different generators in different threads is not "
"supported."
msgstr ""

#. type: Plain text
msgid ""
"'(funct) pwmgen.make-pulses' - High speed function to generate PWM waveforms "
"(no floating point). The high speed function 'pwmgen.make-pulses' should be "
"run in the base (fastest) thread, from 10 to 50 us depending on the "
"capabilities of the computer. That thread's period determines the maximum "
"PWM carrier frequency, as well as the resolution of the PWM or PDM signals. "
"If the base thread is 50,000nS then every 50uS the module decides if it is "
"time to change the state of the output. At 50% duty cycle and 25Hz PWM "
"frequency this means that the output changes state every (1 / 25) seconds / "
"50uS * 50% = 400 iterations. This also means that you have a 800 possible "
"duty cycle values (without dithering)"
msgstr ""

#. type: Plain text
msgid ""
"'(funct) pwmgen.update' - Low speed function to scale and limit value and "
"handle other parameters. This is the function of the module that does the "
"more complicated mathematics to work out how many base-periods the output "
"should be high for, and how many it should be low for."
msgstr ""

#. type: Plain text
msgid "[[sec:encoder]](((encoder)))"
msgstr ""

#. type: Plain text
msgid ""
"This component provides software based counting of signals from quadrature "
"(or single-pulse) encoders. It is a realtime component only, and depending "
"on CPU speed, latency, etc, is capable of maximum count rates of 10kHz to "
"perhaps up to 50kHz."
msgstr ""

#. type: Plain text
msgid ""
"The base thread should be 1/2 count speed to allow for noise and timing "
"variation. For example if you have a 100 pulse per revolution encoder on the "
"spindle and your maximnum RPM is 3000 the maximum base thread should be 25 "
"us.  A 100 pulse per revolution encoder will have 400 counts. The spindle "
"speed of 3000 RPM = 50 RPS (revolutions per second). 400 * 50 = 20,000 "
"counts per second or 50 us between counts."
msgstr ""

#. type: Plain text
msgid ""
"The Encoder Counter Block Diagram is a block diagram of one channel of an "
"encoder counter."
msgstr ""

#. type: Plain text
msgid "(((Encoder Block Diagram)))"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Encoder Counter Block Diagram"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/encoder-block-diag.png"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt encoder [num_chan=<counters>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'<counters>' is the number of encoder counters that you want to\n"
"install. If 'numchan' is not specified, three counters will be\n"
"installed. The maximum \n"
"number of counters is 8 (as defined by MAX_CHAN in encoder.c). Each\n"
"counter is independent, but all are updated by the same function(s) at\n"
" the same time. In the following descriptions, '<chan>' is the number\n"
"of a specific counter. The first counter is number 0.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt encoder\n"
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.counter-mode' (bit, I/O) (default: FALSE) - Enables"
msgstr ""

#. type: Plain text
msgid ""
"counter mode. When true, the counter counts each rising edge of the phase-A "
"input, ignoring the value on phase-B. This is useful for counting the output "
"of a single channel (non-quadrature) sensor. When false, it counts in "
"quadrature mode."
msgstr ""

#. type: Plain text
msgid ""
"'encoder.<chan>.missing-teeth' (s32, In) (default: 0) - ~Enables the use"
msgstr ""

#. type: Plain text
msgid ""
"of missing-tooth index. This allows a single IO pin to provide both position "
"and index information. If the encoder wheel has 58 teeth with two missing, "
"spaced as if there were 60(common for automotive crank sensors) then the "
"position-scale should be set to 60 and missing-teeth to 2. To use this mode "
"counter-mode should be set true. This mode will work for lathe threading but "
"not for rigid tapping."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.counts' (s32, Out) - Position in encoder counts."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.counts-latched' (s32, Out) - Not used at this time."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.index-enable' (bit, I/O) - When True, 'counts' and"
msgstr ""

#. type: Plain text
msgid ""
"'position are' reset to zero on next rising edge of Phase Z. At the same "
"time, 'index-enable' is reset to zero to indicate that the rising edge has "
"occurred. The 'index-enable' pin is bi-directional. If 'index-enable' is "
"False, the Phase Z channel of the encoder will be ignored, and the counter "
"will count normally. The encoder driver will never set 'index-enable' True. "
"However, some other component may do so."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.latch-falling' (bit, In) (default: TRUE) - Not used"
msgstr ""

#. type: Plain text
msgid "at this time."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.latch-input' (bit, In) (default: TRUE) - Not used at"
msgstr ""

#. type: Plain text
msgid "this time."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.latch-rising' (bit, In) - Not used at this time."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.min-speed-estimate' (float, in) - Determine the"
msgstr ""

#. type: Plain text
msgid ""
"minimum true velocity magnitude at which velocity will be estimated as "
"nonzero and postition-interpolated will be interpolated. The units of 'min-"
"speed-estimate' are the same as the units of 'velocity' . Scale factor, in "
"counts per length unit. Setting this parameter too low will cause it to take "
"a long time for velocity to go to 0 after encoder pulses have stopped "
"arriving."
msgstr ""

#. type: Plain text
msgid ""
"'encoder.<chan>.phase-A' (bit, In) - Phase A of the quadrature encoder "
"signal."
msgstr ""

#. type: Plain text
msgid ""
"'encoder.<chan>.phase-B' (bit, In) - Phase B of the quadrature encoder "
"signal."
msgstr ""

#. type: Plain text
msgid ""
"'encoder.<chan>.phase-Z' (bit, In) - Phase Z (index pulse) of the quadrature "
"encoder signal."
msgstr ""

#. type: Plain text
msgid ""
"'encoder.<chan>.position' (float, Out) - Position in scaled units (see "
"'position-scale')."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.position-interpolated' (float, Out) - Position in"
msgstr ""

#. type: Plain text
msgid ""
"scaled units, interpolated between encoder counts. The 'position-"
"interpolated' attempts to interpolate between encoder counts, based on the "
"most recently measured velocity. Only valid when velocity is approximately "
"constant and above 'min-speed-estimate'. Do not use for position control, "
"since its value is incorrect at low speeds, during direction reversals, and "
"during speed changes.  However, it allows a low ppr encoder (including a one "
"pulse per revolution 'encoder') to be used for lathe threading, and may have "
"other uses as well."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.position-latched (float, Out)' - Not used at this time."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.position-scale (float, I/O)' - Scale factor, in"
msgstr ""

#. type: Plain text
msgid ""
"counts per length unit. For example, if position-scale is 500, then 1000 "
"counts of the encoder will be reported as a position of 2.0 units."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.rawcounts (s32, In)' - The raw count, as determined"
msgstr ""

#. type: Plain text
msgid ""
"by update-counters. This value is updated more frequently than counts and "
"position. It is also unaffected by reset or the index pulse."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.reset' (bit, In) - When True, force 'counts' and"
msgstr ""

#. type: Plain text
msgid "'position' to zero immediately."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.velocity' (float, Out) - Velocity in scaled units per"
msgstr ""

#. type: Plain text
msgid ""
"second. 'encoder' uses an algorithm that greatly reduces quantization noise "
"as compared to simply differentiating the 'position' output. When the "
"magnitude of the true velocity is below min-speed-estimate, the velocity "
"output is 0."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.x4-mode (bit, I/O) (default: TRUE)' - Enables"
msgstr ""

#. type: Plain text
msgid ""
"times-4 mode. When true, the counter counts each edge of the quadrature "
"waveform (four counts per full cycle). When false, it only counts once per "
"full cycle. In counter-mode, this parameter is ignored. The 1x mode is "
"useful for some jogwheels."
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.capture-position.time (s32, RO)'"
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.capture-position.tmax (s32, RW)'"
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.update-counters.time (s32, RO)'"
msgstr ""

#. type: Plain text
msgid "'encoder.<chan>.update-counter.tmax (s32, RW)'"
msgstr ""

#. type: Plain text
msgid ""
"The component exports two functions. Each function acts on all of the "
"encoder counters - running different counters in different threads is not "
"supported."
msgstr ""

#. type: Plain text
msgid "'(funct) encoder.update-counters' - High speed function to count"
msgstr ""

#. type: Plain text
msgid "pulses (no floating point)."
msgstr ""

#. type: Plain text
msgid "'(funct) encoder.capture-position' - Low speed function to update"
msgstr ""

#. type: Plain text
msgid "latches and scale position."
msgstr ""

#. type: Plain text
msgid "[[sec:pid]](((PID)))"
msgstr ""

#. type: Table
#, no-wrap
msgid "PID"
msgstr ""

#. type: Plain text
msgid ""
"This component provides Proportional/Integral/Derivative control loops. It "
"is a realtime component only. For simplicity, this discussion assumes that "
"we are talking about position loops, however this component can be used to "
"implement other feedback loops such as speed, torch height, temperature, "
"etc. The PID Loop Block Diagram is a block diagram of a single PID loop."
msgstr ""

#. type: Plain text
msgid "[[fig:pid-block-diag]] (((PID Block Diagram)))"
msgstr ""

#. type: Block title
#, no-wrap
msgid "PID Loop Block Diagram"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/pid-block-diag.png"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt pid [num_chan=<loops>] [debug=1]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'<loops>' is the number of PID loops that you want to install. If\n"
"'numchan' is not specified, one loop will be installed. The maximum\n"
"number of\n"
"loops is 16 (as defined by MAX_CHAN in pid.c). Each loop is completely\n"
" independent. In the following descriptions, '<loopnum>' is the loop\n"
"number of a specific loop. The first loop is number 0.\n"
msgstr ""

#. type: Plain text
msgid ""
"If 'debug=1' is specified, the component will export a few extra pins that "
"may be useful during debugging and tuning. By default, the extra pins are "
"not exported, to save shared memory space and avoid cluttering the pin list."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt pid\n"
msgstr ""

#. type: Plain text
msgid "The three most important pins are"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.command' - The desired position, as"
msgstr ""

#. type: Plain text
msgid "commanded by another system component."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.feedback' - The present position, as"
msgstr ""

#. type: Plain text
msgid "measured by a feedback device such as an encoder."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.output' - A velocity command that attempts"
msgstr ""

#. type: Plain text
msgid "to move from the present position to the desired position."
msgstr ""

#. type: Plain text
msgid ""
"For a position loop, 'command' and 'feedback' are in position units.  For a "
"linear axis, this could be inches, mm, meters, or whatever is relevant. "
"Likewise, for an angular axis, it could be degrees, radians, etc. The units "
"of the 'output' pin represent the change needed to make the feedback match "
"the command. As such, for a position loop 'Output' is a velocity, in inches/"
"sec, mm/sec, degrees/sec, etc. Time units are always seconds, and the "
"velocity units match the position units. If command and feedback are in "
"meters, then output is in meters per second."
msgstr ""

#. type: Plain text
msgid ""
"Each loop has two pins which are used to monitor or control the general "
"operation of the component."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.error' - Equals '.command' minus '.feedback'."
msgstr ""

#. type: Plain text
msgid "'(bit) pid.<loopnum>.enable' - A bit that enables the loop. If"
msgstr ""

#. type: Plain text
msgid ""
"'.enable' is false, all integrators are reset, and the output is forced to "
"zero. If '.enable' is true, the loop operates normally."
msgstr ""

#. type: Plain text
msgid ""
"Pins used to report saturation. Saturation occurs when the output of the PID "
"block is at its maximum or minimum limit."
msgstr ""

#. type: Plain text
msgid "'(bit) pid.<loopnum>.saturated' - True when output is saturated."
msgstr ""

#. type: Plain text
msgid ""
"'(float) pid.<loopnum>.saturated_s' - The time the output has been saturated."
msgstr ""

#. type: Plain text
msgid ""
"'(s32) pid.<loopnum>.saturated_count' - The time the output has been "
"saturated."
msgstr ""

#. type: Plain text
msgid ""
"The PID gains, limits, and other 'tunable' features of the loop are "
"available as pins so that they can be adjusted dynamically for more advanced "
"tuning possibilities."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.Pgain' - Proportional gain"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.Igain' - Integral gain"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.Dgain' - Derivative gain"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.bias' - Constant offset on output"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.FF0' - Zeroth order feedforward - output"
msgstr ""

#. type: Plain text
msgid "proportional to command (position)."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.FF1' - First order feedforward - output"
msgstr ""

#. type: Plain text
msgid "proportional to derivative of command (velocity)."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.FF2' - Second order feedforward - output"
msgstr ""

#. type: Plain text
msgid "proportional to 2nd derivative of command (acceleration)."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.deadband' - Amount of error that will be ignored"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxerror' - Limit on error"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxerrorI' - Limit on error integrator"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxerrorD' - Limit on error derivative"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxcmdD' - Limit on command derivative"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxcmdDD' - Limit on command 2nd derivative"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.maxoutput' - Limit on output value"
msgstr ""

#. type: Plain text
msgid ""
"If 'debug=1' was specified when the component was installed, four additional "
"pins will be exported:"
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.errorI' - Integral of error."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.errorD' - Derivative of error."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.commandD' - Derivative of the command."
msgstr ""

#. type: Plain text
msgid "'(float) pid.<loopnum>.commandDD' - 2nd derivative of the command."
msgstr ""

#. type: Plain text
msgid ""
"The component exports one function for each PID loop. This function performs "
"all the calculations needed for the loop. Since each loop has its own "
"function, individual loops can be included in different threads and execute "
"at different rates."
msgstr ""

#. type: Plain text
msgid ""
"'(funct) pid.<loopnum>.do_pid_calcs' - Performs all calculations for a "
"single PID loop."
msgstr ""

#. type: Plain text
msgid ""
"If you want to understand the exact algorithm used to compute the output of "
"the PID loop, refer to figure <<fig:pid-block-diag,PID Loop Block Diagram>>, "
"the comments at the beginning of 'emc2/src/hal/components/pid.c' , and of "
"course to the code itself. The loop calculations are in the C function "
"'calc_pid()'."
msgstr ""

#. type: Plain text
msgid "[[sec:simulated-encoder]](((Simulated Encoder)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Simulated Encoder"
msgstr ""

#. type: Plain text
msgid ""
"The simulated encoder is exactly that. It produces quadrature pulses with an "
"index pulse, at a speed controlled by a HAL pin. Mostly useful for testing."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt sim-encoder num_chan=<number>\n"
msgstr ""

#. type: Plain text
msgid ""
"'<number>' is the number of encoders that you want to simulate. If not "
"specified, one encoder will be installed. The maximum number is 8 (as "
"defined by MAX_CHAN in sim_encoder.c)."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt sim-encoder\n"
msgstr ""

#. type: Plain text
msgid "'(float) sim-encoder.<chan-num>.speed' - The speed command for the"
msgstr ""

#. type: Plain text
msgid "simulated shaft."
msgstr ""

#. type: Plain text
msgid "'(bit) sim-encoder.<chan-num>.phase-A' - Quadrature output."
msgstr ""

#. type: Plain text
msgid "'(bit) sim-encoder.<chan-num>.phase-B' - Quadrature output."
msgstr ""

#. type: Plain text
msgid "'(bit) sim-encoder.<chan-num>.phase-Z' - Index pulse output."
msgstr ""

#. type: Plain text
msgid "When '.speed' is positive, '.phase-A' leads '.phase-B'."
msgstr ""

#. type: Plain text
msgid "'(u32) sim-encoder.<chan-num>.ppr' - Pulses Per Revolution."
msgstr ""

#. type: Plain text
msgid "'(float) sim-encoder.<chan-num>.scale' - Scale Factor for 'speed'."
msgstr ""

#. type: Plain text
msgid ""
"The default is 1.0, which means that 'speed' is in revolutions per second. "
"Change to 60 for RPM, to 360 for degrees per second, 6.283185 for radians "
"per seconed, etc."
msgstr ""

#. type: Plain text
msgid ""
"Note that pulses per revolution is not the same as counts per revolution. A "
"pulse is a complete quadrature cycle. Most encoder counters will count four "
"times during one complete cycle."
msgstr ""

#. type: Plain text
msgid ""
"The component exports two functions. Each function affects all simulated "
"encoders."
msgstr ""

#. type: Plain text
msgid "'(funct) sim-encoder.make-pulses' - High speed function to"
msgstr ""

#. type: Plain text
msgid "generate quadrature pulses (no floating point)."
msgstr ""

#. type: Plain text
msgid "'(funct) sim-encoder.update-speed' - Low speed function to read"
msgstr ""

#. type: Plain text
msgid "'speed', do scaling, and set up 'make-pulses'."
msgstr ""

#. type: Plain text
msgid "[[sec:debounce]] (((debounce)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Debounce"
msgstr ""

#. type: Plain text
msgid ""
"Debounce is a realtime component that can filter the glitches created by "
"mechanical switch contacts. It may also be useful in other applications "
"where short pulses are to be rejected."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt debounce cfg=<config-string>\n"
msgstr ""

#. type: Plain text
msgid ""
"'<config-string>' is a series of comma separated decimal integers.  Each "
"number installs a group of identical debounce filters, the number determines "
"how many filters are in the group."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt debounce cfg=1,4,2\n"
msgstr ""

#. type: Plain text
msgid ""
"will install three groups of filters. Group 0 contains one filter, group 1 "
"contains four, and group 2 contains two filters. The default value for "
"'<config-string>' is '\"1\"' which will install a single group containing a "
"single filter. The maximum number of groups 8 (as defined by MAX_GROUPS in "
"debounce.c).  The maximum number of filters in a group is limited only by "
"shared memory space. Each group is completely independent. All filters in a "
"single group are identical, and they are all updated by the same function at "
"the same time. In the following descriptions, '<G>' is the group number and "
"'<F>' is the filter number within the group. The first filter is group 0, "
"filter 0."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt debounce\n"
msgstr ""

#. type: Plain text
msgid "Each individual filter has two pins."
msgstr ""

#. type: Plain text
msgid "'(bit) debounce.<G>.<F>.in' - Input of filter '<F>' in group '<G>'."
msgstr ""

#. type: Plain text
msgid "'(bit) debounce.<G>.<F>.out' - Output of filter '<F>' in group '<G>'."
msgstr ""

#. type: Plain text
msgid ""
"Each group of filters has one parameterfootnote:[Each individual filter also "
"has an internal state variable. There is a compile time switch that can "
"export that variable as a parameter. This is intended for testing, and "
"simply wastes shared memory under normal circumstances.]."
msgstr ""

#. type: Plain text
msgid ""
"'(s32) debounce.<G>.delay' - Filter delay for all filters in group '<G>'."
msgstr ""

#. type: Plain text
msgid ""
"The filter delay is in units of thread periods. The minimum delay is zero. "
"The output of a zero delay filter exactly follows its input - it doesn't "
"filter anything. As 'delay' increases, longer and longer glitches are "
"rejected. If 'delay' is 4, all glitches less than or equal to four thread "
"periods will be rejected."
msgstr ""

#. type: Plain text
msgid ""
"Each group of filters has one function, which updates all the filters in "
"that group 'simultaneously'. Different groups of filters can be updated from "
"different threads at different periods."
msgstr ""

#. type: Plain text
msgid "'(funct) debounce.<G>' - Updates all filters in group '<G>'."
msgstr ""

#. type: Plain text
msgid "[[sec:siggen]](((Siggen)))"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Siggen"
msgstr ""

#. type: Plain text
msgid ""
"Siggen is a realtime component that generates square, triangle, and sine "
"waves. It is primarily used for testing."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadrt siggen [num_chan=<chans>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"'<chans>' is the number of signal generators that you want to install.\n"
"If 'numchan' is not specified, one signal generator will be installed.\n"
"The maximum\n"
"number of generators is 16 (as defined by MAX_CHAN in siggen.c). Each\n"
" generator is completely independent. In the following descriptions,\n"
"'<chan>' is the number of a specific signal generator (the numbers\n"
"start at 0).\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: unloadrt siggen\n"
msgstr ""

#. type: Plain text
msgid "Each generator has five output pins."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.sine' - Sine wave output."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.cosine' - Cosine output."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.sawtooth' - Sawtooth output."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.triangle' - Triangle wave output."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.square' - Square wave output."
msgstr ""

#. type: Plain text
msgid "All five outputs have the same frequency, amplitude, and offset."
msgstr ""

#. type: Plain text
msgid "In addition to the output pins, there are three control pins:"
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.frequency' - Sets the frequency in Hertz,"
msgstr ""

#. type: Plain text
msgid "default value is 1 Hz."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.amplitude' - Sets the peak amplitude of the"
msgstr ""

#. type: Plain text
msgid "output waveforms, default is 1."
msgstr ""

#. type: Plain text
msgid "'(float) siggen.<chan>.offset' - Sets DC offset of the output"
msgstr ""

#. type: Plain text
msgid "waveforms, default is 0."
msgstr ""

#. type: Plain text
msgid ""
"For example, if 'siggen.0.amplitude' is 1.0 and 'siggen.0.offset' is 0.0, "
"the outputs will swing from -1.0 to +1.0. If 'siggen.0.amplitude' is 2.5 and "
"'siggen.0.offset' is 10.0, then the outputs will swing from 7.5 to 12.5."
msgstr ""

#. type: Plain text
msgid ""
"None. footnote:[Prior to version 2.1, frequency, amplitude, and offset were "
"parameters. They were changed to pins to allow control by other components.]"
msgstr ""

#. type: Plain text
msgid ""
"'(funct) siggen.<chan>.update' - Calculates new values for all five outputs."
msgstr ""

#. type: Plain text
msgid "[[sec:lut5]](((lut5)))"
msgstr ""

#. type: Plain text
msgid ""
"The lut5 component is a 5 input logic component based on a look up table."
msgstr ""

#. type: Plain text
msgid "'lut5' does not require a floating point thread."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt lut5 [count=N|names=name1[,name2...]]\n"
"addf lut5.N servo-thread | base-thread\n"
"setp lut5.N.function 0xN\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Computing Function"
msgstr ""

#. type: Plain text
msgid ""
"To compute the hexadecimal number for the function starting from the top put "
"a 1 or 0 to indicate if that row would be true or false. Next write down "
"every number in the output column starting from the top and writing them "
"from right to left. This will be the binary number. Using a calculator with "
"a program view like the one in Ubuntu enter the binary number and then "
"convert it to hexadecimal and that will be the value for function."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Look Up Table"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit 4"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit 3"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit 2"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit 1"
msgstr ""

#. type: Table
#, no-wrap
msgid "Bit 0"
msgstr ""

#. type: Table
#, no-wrap
msgid "Output"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
".Two Input Example\n"
"\n"
"In the following table we have selected the output state for each line\n"
"that we wish to be true.\n"
"\n"
".Look Up Table\n"
"[width=\"50%\",cols=\"6*^\",options=\"header\"]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Bit 4|Bit 3|Bit 2|Bit 1|Bit 0|Output\n"
"|0|0|0|0|0|0\n"
"|0|0|0|0|1|1\n"
"|0|0|0|1|0|0\n"
"|0|0|0|1|1|1"
msgstr ""

#. type: Plain text
msgid ""
"Looking at the output column of our example we want the output to be on when "
"Bit 0 or Bit 0 and Bit1 is on and nothing else. The binary number is "
"'b1010' (rotate the output 90 degrees CW). Enter this number into the "
"calculator then change the display to hexadecimal and the number needed for "
"function is '0xa'. The hexadecimal prefix is '0x'."
msgstr ""

#. type: Title =
#, no-wrap
msgid "HAL Examples"
msgstr ""

#. type: Plain text
msgid ""
"All of these examples assume you are starting with a stepconf based "
"configuration and have two threads 'base-thread' and 'servo-thread'. The "
"stepconf wizard will create an empty custom.hal and a custom_postgui.hal "
"file. The custom.hal file will be loaded after the configuration HAL file "
"and the custom_postgui.hal file is loaded after the GUI has been loaded."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Connecting Two Outputs"
msgstr ""

#. type: Plain text
msgid ""
"To connect two outputs to an input you can use the or2 component. The or2 "
"works like this, if either input to or2 is on then the or2 output is on. If "
"neither input to or2 is on the or2 output is off."
msgstr ""

#. type: Plain text
msgid "For example to have two pyvcp buttons both connected to one led."
msgstr ""

#. type: Block title
#, no-wrap
msgid "The .xml file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<pyvcp>\n"
"  <button>\n"
"    <halpin>\"button-1\"</halpin>\n"
"    <text>\"Button 1\"</text>\n"
"  </button>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <button>\n"
"    <halpin>\"button-2\"</halpin>\n"
"    <text>\"Button 2\"</text>\n"
"  </button>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <led>\n"
"    <halpin>\"led-1\"</halpin>\n"
"    <size>50</size>\n"
"    <on_color>\"green\"</on_color>\n"
"    <off_color>\"red\"</off_color>\n"
"  </led>\n"
"</pyvcp>\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "The postgui.hal file"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt or2\n"
"addf or2.0 servo-thread\n"
"net button-1 or2.0.in0 <= pyvcp.button-1\n"
"net button-2 or2.0.in1 <= pyvcp.button-2\n"
"net led-1 pyvcp.led-1 <= or2.0.out\n"
msgstr ""

#. type: Plain text
msgid ""
"When you run this example in an Axis simulator created with the Stepconf "
"Wizard you can open a terminal and see the pins created with 'loadrt or2' by "
"typing in 'halcmd show pin or2' in the terminal"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcmd show pin or2\n"
"Component Pins:\n"
"Owner   Type  Dir         Value  Name\n"
"    22  bit   IN          FALSE  or2.0.in0 <== button-1\n"
"    22  bit   IN          FALSE  or2.0.in1 <== button-2\n"
"    22  bit   OUT         FALSE  or2.0.out ==> led-1\n"
msgstr ""

#. type: Plain text
msgid ""
"You can see from the hal command 'show pin or2' that the 'button-1' pin is "
"connected to the 'or2.0.in0' pin and from the direction arrow you can see "
"that the button is and output and the 'or2.0.in0' is an input. The output "
"from or2 goes to the input of the led."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Manual Toolchange"
msgstr ""

#. type: Plain text
msgid ""
"In this example it is assumed that you're 'rolling your own' configuration "
"and wish to add the HAL Manual Toolchange window. The HAL Manual Toolchange "
"is primarily useful if you have presettable tools and you store the offsets "
"in the tool table. If you need to touch off for each tool change then it is "
"best just to split up your g code. To use the HAL Manual Toolchange window "
"you basically have to load the hal_manualtoolchange component then send the "
"iocontrol 'tool change' to the hal_manualtoolchange 'change' and send the "
"hal_manualtoolchange 'changed' back to the iocontrol 'tool changed'. A pin "
"is provided for an external input to indicate the tool change is complete."
msgstr ""

#. type: Plain text
msgid ""
"This is an example of manual toolchange 'with' the HAL Manual Toolchange "
"component:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadusr -W hal_manualtoolchange \n"
"net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change\n"
"net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed\n"
"net external-tool-changed hal_manualtoolchange.change_button <= parport.0.pin-12-in\n"
"net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number\n"
"net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared\n"
msgstr ""

#. type: Plain text
msgid ""
"This is an example of manual toolchange 'without' the HAL Manual Toolchange "
"component:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net tool-number <= iocontrol.0.tool-prep-number \n"
"net tool-change-loopback iocontrol.0.tool-change => iocontrol.0.tool-changed \n"
"net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared \n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Compute Velocity"
msgstr ""

#. type: Plain text
msgid ""
"This example uses 'ddt', 'mult2' and 'abs' to compute the velocity of a "
"single axis. For more information on the real time components see the man "
"pages or the Realtime Components section (<<sec:realtime-components>>)."
msgstr ""

#. type: Plain text
msgid ""
"The first thing is to check your configuration to make sure you are not "
"using any of the real time components all ready. You can do this by opening "
"up the HAL Configuration window and look for the components in the pin "
"section. If you are then find the .hal file that they are being loaded in "
"and increase the counts and adjust the instance to the correct value. Add "
"the following to your custom.hal file."
msgstr ""

#. type: Plain text
msgid "Load the realtime components."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt ddt count=1 \n"
"loadrt mult2 count=1 \n"
"loadrt abs count=1 \n"
msgstr ""

#. type: Plain text
msgid "Add the functions to a thread so it will get updated."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"addf ddt.0 servo-thread \n"
"addf mult2.0 servo-thread \n"
"addf abs.0 servo-thread \n"
msgstr ""

#. type: Plain text
msgid "Make the connections."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"setp mult2.in1 60 \n"
"net xpos-cmd ddt.0.in \n"
"net X-IPS mult2.0.in0 <= ddt.0.out \n"
"net X-ABS abs.0.in <= mult2.0.out \n"
"net X-IPM abs.0.out \n"
msgstr ""

#. type: Plain text
msgid ""
"In this last section we are setting the mult2.0.in1 to 60 to convert the "
"inch per second to inch per minute that we get from the ddt.0.out."
msgstr ""

#. type: Plain text
msgid ""
"The xpos-cmd sends the commanded position to the ddt.0.in. The ddt computes "
"the derivative of the change of the input."
msgstr ""

#. type: Plain text
msgid "The ddt2.0.out is multiplied by 60 to give IPM."
msgstr ""

#. type: Plain text
msgid "The mult2.0.out is sent to the abs to get the absolute value."
msgstr ""

#. type: Plain text
msgid ""
"The following figure shows the result when the X axis is moving at 15 IPM in "
"the minus direction. Notice that we can get the absolute value from either "
"the abs.0.out pin or the X-IPM signal."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Velocity Example[[cap:Velocity-Example]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Velocity Example"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/velocity-01.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Soft Start"
msgstr ""

#. type: Plain text
msgid ""
"This example shows how the HAL components 'lowpass', 'limit2' or 'limit3' "
"can be used to limit how fast a signal changes."
msgstr ""

#. type: Plain text
msgid ""
"In this example we have a servo motor driving a lathe spindle. If we just "
"used the commanded spindle speeds on the servo it will try to go from "
"present speed to commanded speed as fast as it can. This could cause a "
"problem or damage the drive. To slow the rate of change we can send the "
"spindle.N.speed-out through a limiter before the PID, so that the PID "
"command value changes to new settings more slowly."
msgstr ""

#. type: Plain text
msgid "Three built-in components that limit a signal are:"
msgstr ""

#. type: Plain text
msgid "'limit2' limits the range and first derivative of a signal."
msgstr ""

#. type: Plain text
msgid "'limit3' limits the range, first and second derivatives of a signal."
msgstr ""

#. type: Plain text
msgid ""
"'lowpass' uses an exponentially-weighted moving average to track an input "
"signal."
msgstr ""

#. type: Plain text
msgid "To find more information on these HAL components check the man pages."
msgstr ""

#. type: Plain text
msgid ""
"Place the following in a text file called softstart.hal. If you're not "
"familiar with Linux place the file in your home directory."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt threads period1=1000000 name1=thread  \n"
"loadrt siggen  \n"
"loadrt lowpass  \n"
"loadrt limit2  \n"
"loadrt limit3  \n"
"net square siggen.0.square => lowpass.0.in limit2.0.in limit3.0.in  \n"
"net lowpass <= lowpass.0.out  \n"
"net limit2 <= limit2.0.out  \n"
"net limit3 <= limit3.0.out  \n"
"setp siggen.0.frequency .1  \n"
"setp lowpass.0.gain .01  \n"
"setp limit2.0.maxv 2  \n"
"setp limit3.0.maxv 2  \n"
"setp limit3.0.maxa 10  \n"
"addf siggen.0.update thread  \n"
"addf lowpass.0 thread  \n"
"addf limit2.0 thread  \n"
"addf limit3.0 thread  \n"
"start  \n"
"loadusr halscope \n"
msgstr ""

#. type: Plain text
msgid "Open a terminal window and run the file with the following command."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halrun -I softstart.hal\n"
msgstr ""

#. type: Plain text
msgid ""
"When the HAL Oscilloscope first starts up click 'OK' to accept the default "
"thread."
msgstr ""

#. type: Plain text
msgid ""
"Next you have to add the signals to the channels. Click on channel 1 then "
"select 'square' from the Signals tab. Repeat for channels 2-4 and add "
"lowpass, limit2, and limit3."
msgstr ""

#. type: Plain text
msgid ""
"Next to set up a trigger signal click on the Source None button and select "
"square. The button will change to Source Chan 1."
msgstr ""

#. type: Plain text
msgid ""
"Next click on Single in the Run Mode radio buttons box. This will start a "
"run and when it finishes you will see your traces."
msgstr ""

#. type: Plain text
msgid ""
"To separate the signals so you can see them better click on a channel then "
"use the Pos slider in the Vertical box to set the positions."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Softstart[[cap:Softstart]]"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Softstart"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/softstart-scope.png"
msgstr ""

#. type: Plain text
msgid ""
"To see the effect of changing the set point values of any of the components "
"you can change them in the terminal window. To see what different gain "
"settings do for lowpass just type the following in the terminal window and "
"try different settings."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "setp lowpass.0.gain *.01\n"
msgstr ""

#. type: Plain text
msgid "After changing a setting run the oscilloscope again to see the change."
msgstr ""

#. type: Plain text
msgid ""
"When you're finished type 'exit' in the terminal window to shut down halrun "
"and close the halscope. Don't close the terminal window with halrun running "
"as it might leave some things in memory that could prevent EMC from loading."
msgstr ""

#. type: Plain text
msgid "For more information on Halscope see the HAL manual."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stand Alone HAL"
msgstr ""

#. type: Plain text
msgid ""
"In some cases you might want to run a GladeVCP screen with just HAL. For "
"example say you had a stepper driven device that all you need is to run a "
"stepper motor. A simple 'Start/Stop' interface is all you need for your "
"application so no need to load up and configure a full blown CNC application."
msgstr ""

#. type: Plain text
msgid ""
"In the following example we have created a simple GladeVCP panel with one"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Basic Syntax"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load the winder.glade GUI and name it winder\n"
"loadusr -Wn winder gladevcp -c winder -u handler.py winder.glade\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# load realtime components\n"
"loadrt threads name1=fast period1=50000 fp1=0 name2=slow period2=1000000\n"
"loadrt stepgen step_type=0 ctrl_type=v\n"
"loadrt hal_parport cfg=\"0x378 out\"\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# add functions to threads\n"
"addf stepgen.make-pulses fast\n"
"addf stepgen.update-freq slow\n"
"addf stepgen.capture-position slow\n"
"addf parport.0.read fast\n"
"addf parport.0.write fast\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# make hal connections\n"
"net winder-step parport.0.pin-02-out <= stepgen.0.step\n"
"net winder-dir parport.0.pin-03-out <= stepgen.0.dir\n"
"net run-stepgen stepgen.0.enable <= winder.start_button\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# start the threads\n"
"start\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# comment out the following lines while testing and use the interactive\n"
"# option halrun -I -f start.hal to be able to show pins etc.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# wait until the gladevcp GUI named winder terminates\n"
"waitusr winder\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# stop HAL threads\n"
"stop\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# unload HAL all components before exiting\n"
"unloadrt all\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "The HAL Component Generator"
msgstr ""

#. type: Plain text
msgid ""
"Writing a HAL component can be a tedious process, most of it in setup calls "
"to 'rtapi_' and 'hal_' functions and associated error checking.  "
"'halcompile' will write all this code for you, automatically."
msgstr ""

#. type: Plain text
msgid ""
"Compiling a HAL component is also much easier when using 'halcompile', "
"whether the component is part of the LinuxCNC source tree, or outside it."
msgstr ""

#. type: Plain text
msgid ""
"For instance, when coded in C, a simple component such as \"ddt\" is around "
"80 lines of code. The equivalent component is very short when written using "
"the 'halcompile' preprocessor:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Simple Component Example"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component ddt \"Compute the derivative of the input function\";\n"
"pin in float in;\n"
"pin out float out;\n"
"variable double old;\n"
"function _;\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"float tmp = in;\n"
"out = (tmp - old) / fperiod;\n"
"old = tmp;\n"
msgstr ""

#. type: Plain text
msgid "To compile a component you need to install dev."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"sudo apt install linuxcnc-dev\n"
"or\n"
"sudo apt install linuxcnc-uspace-dev\n"
msgstr ""

#. type: Plain text
msgid ""
"Another method is to use the Synaptic Package Manager to install linuxcnc-"
"dev or linuxcnc-uspace-dev."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Using a Component"
msgstr ""

#. type: Plain text
msgid ""
"Components need to be loaded and added to a thread before it can be used."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"loadrt threads name1=servo-thread period1=1000000\n"
"loadrt ddt\n"
"addf ddt.0 servo-thread\n"
msgstr ""

#. type: Plain text
msgid ""
"More information on 'loadrt' and 'addf' can be found in the <<cha:basic-hal-"
"reference,Hal Basics>>."
msgstr ""

#. type: Plain text
msgid ""
"To test your component you can follow the examples in the <<cha:hal-tutorial,"
"HAL Tutorial>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Definitions"
msgstr ""

#. type: Plain text
msgid ""
"'component' - A component is a single real-time module, which is loaded with"
msgstr ""

#. type: Plain text
msgid ""
"'halcmd loadrt'. One '.comp' file specifies one component. The component "
"name and file name must match."
msgstr ""

#. type: Plain text
msgid ""
"'instance' - A component can have zero or more instances. Each instance of a"
msgstr ""

#. type: Plain text
msgid ""
"component is created equal (they all have the same pins, parameters, "
"functions, and data) but behave independently when their pins, parameters, "
"and data have different values."
msgstr ""

#. type: Plain text
msgid ""
"'singleton' - It is possible for a component to be a \"singleton\", in which "
"case"
msgstr ""

#. type: Plain text
msgid ""
"exactly one instance is created. It seldom makes sense to write a "
"'singleton' component, unless there can literally only be a single object of "
"that kind in the system (for instance, a component whose purpose is to "
"provide a pin with the current UNIX time, or a hardware driver for the "
"internal PC speaker)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Instance creation"
msgstr ""

#. type: Plain text
msgid ""
"For a singleton, the one instance is created when the component is loaded."
msgstr ""

#. type: Plain text
msgid ""
"For a non-singleton, the 'count' module parameter determines how many "
"numbered instances are created.  If 'count' is not specified, the 'names' "
"module parameter determines how many named instances are created.  If "
"neither 'count' nor 'names' is specified, a single numbered instance is "
"created."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Implicit Parameters"
msgstr ""

#. type: Plain text
msgid ""
"Functions are implicitly passed the 'period' parameter which is the time in "
"nanoseconds of the last period to execute the component.  Functions which "
"use floating-point can also refer to 'fperiod' which is the floating-point "
"time in seconds, or (period*1e-9).  This can be useful in components that "
"need the timing information."
msgstr ""

#. type: Plain text
msgid ""
"A '.comp' file consists of a number of declarations, followed by ';;' on a "
"line of its own, followed by C code implementing the module's functions."
msgstr ""

#. type: Plain text
msgid "Declarations include:"
msgstr ""

#. type: Plain text
msgid "'component HALNAME (DOC);'"
msgstr ""

#. type: Plain text
msgid ""
"'pin PINDIRECTION TYPE HALNAME ([SIZE]|[MAXSIZE: CONDSIZE]) (if CONDITION) "
"(= STARTVALUE) (DOC) ;'"
msgstr ""

#. type: Plain text
msgid ""
"'param PARAMDIRECTION TYPE HALNAME ([SIZE]|[MAXSIZE: CONDSIZE]) (if "
"CONDITION) (= STARTVALUE) (DOC) ;'"
msgstr ""

#. type: Plain text
msgid "'function HALNAME (fp | nofp) (DOC);'"
msgstr ""

#. type: Plain text
msgid "'option OPT (VALUE);'"
msgstr ""

#. type: Plain text
msgid "'variable CTYPE STARREDNAME ([SIZE]);'"
msgstr ""

#. type: Plain text
msgid "'description DOC;'"
msgstr ""

#. type: Plain text
msgid "'notes DOC;'"
msgstr ""

#. type: Plain text
msgid "'see_also DOC;'"
msgstr ""

#. type: Plain text
msgid "'license LICENSE;'"
msgstr ""

#. type: Plain text
msgid "'author AUTHOR;'"
msgstr ""

#. type: Plain text
msgid "'include HEADERFILE;'"
msgstr ""

#. type: Plain text
msgid ""
"Parentheses indicate optional items. A vertical bar indicates alternatives. "
"Words in 'CAPITALS' indicate variable text, as follows:"
msgstr ""

#. type: Plain text
msgid "'NAME' - A standard C identifier"
msgstr ""

#. type: Plain text
msgid ""
"'STARREDNAME' - A C identifier with zero or more * before it.  This syntax "
"can be used"
msgstr ""

#. type: Plain text
msgid ""
"to declare instance variables that are pointers.  Note that because of the "
"grammar, there may not be whitespace between the * and the variable name."
msgstr ""

#. type: Plain text
msgid "'HALNAME' - An extended identifier."
msgstr ""

#. type: Plain text
msgid ""
"When used to create a HAL identifier, any underscores are replaced with "
"dashes, and any trailing dash or period is removed, so that \"this_name_\" "
"will be turned into \"this-name\", and if the name is \"_\", then a trailing "
"period is removed as well, so that \"function _\" gives a HAL function name "
"like \"component.<num>\" instead of \"component.<num>.\""
msgstr ""

#. type: Plain text
msgid ""
"  If present, the prefix 'hal_' is removed from the beginning of the "
"component name when creating pins, parameters and functions."
msgstr ""

#. type: Plain text
msgid ""
"  In the HAL identifier for a pin or parameter, # denotes an array item, and "
"must be used in conjunction with a '[SIZE]' declaration. The hash marks are "
"replaced with a 0-padded number with the same length as the number of # "
"characters."
msgstr ""

#. type: Plain text
msgid ""
"  When used to create a C identifier, the following changes are applied to "
"the HALNAME:"
msgstr ""

#. type: Plain text
msgid ""
"Any \"#\" characters, and any \".\", \"_\" or \"-\" characters immediately "
"before them, are removed."
msgstr ""

#. type: Plain text
msgid "Any remaining \".\" and \"-\" characters are replaced with \"_\"."
msgstr ""

#. type: Plain text
msgid "Repeated \"\\_\" characters are changed to a single \"\\_\" character."
msgstr ""

#. type: Plain text
msgid ""
"A trailing \"_\" is retained, so that HAL identifiers which would otherwise "
"collide with reserved names or keywords (e.g., 'min') can be used."
msgstr ""

#. type: Table
#, no-wrap
msgid "HALNAME"
msgstr ""

#. type: Table
#, no-wrap
msgid "C Identifier"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL Identifier"
msgstr ""

#. type: Table
#, no-wrap
msgid "x_y_z"
msgstr ""

#. type: Table
#, no-wrap
msgid "x-y-z"
msgstr ""

#. type: Table
#, no-wrap
msgid "x-y.z"
msgstr ""

#. type: Table
#, no-wrap
msgid "x_y_z_"
msgstr ""

#. type: Table
#, no-wrap
msgid "x.##.y"
msgstr ""

#. type: Table
#, no-wrap
msgid "x_y(MM)"
msgstr ""

#. type: Table
#, no-wrap
msgid "x.MM.z"
msgstr ""

#. type: Table
#, no-wrap
msgid "x.##"
msgstr ""

#. type: Table
#, no-wrap
msgid "x(MM)"
msgstr ""

#. type: Table
#, no-wrap
msgid "x.MM"
msgstr ""

#. type: Plain text
msgid ""
"'if CONDITION' - An expression involving the variable 'personality' which is "
"nonzero"
msgstr ""

#. type: Plain text
msgid "when the pin or parameter should be created"
msgstr ""

#. type: Plain text
msgid ""
"'SIZE' - A number that gives the size of an array. The array items are "
"numbered"
msgstr ""

#. type: Plain text
msgid "from 0 to 'SIZE'-1."
msgstr ""

#. type: Plain text
msgid ""
"'MAXSIZE : CONDSIZE' - A number that gives the maximum size of the array "
"followed by an"
msgstr ""

#. type: Plain text
msgid ""
"expression involving the variable 'personality' and which always evaluates "
"to less than 'MAXSIZE'. When the array is created its size will be "
"'CONDSIZE'."
msgstr ""

#. type: Plain text
msgid ""
"'DOC' - A string that documents the item. String can be a C-style \"double"
msgstr ""

#. type: Plain text
msgid "quoted\" string, like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "\"Selects the desired edge: TRUE means falling, FALSE means rising\"\n"
msgstr ""

#. type: Plain text
msgid ""
"or a Python-style \"triple quoted\" string, which may include embedded "
"newlines and quote characters, such as:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"\"\"\"The effect of this parameter, also known as \"the orb of zot\",\n"
"will require at least two paragraphs to explain.\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Hopefully these paragraphs have allowed you to understand \"zot\"\n"
"better.\"\"\"\n"
msgstr ""

#. type: Plain text
msgid ""
"Or a string may be preceded by the literal character 'r', in which case the "
"string is interpreted like a Python raw-string."
msgstr ""

#. type: Plain text
msgid ""
"The documentation string is in \"groff -man\" format. For more information "
"on this markup format, see 'groff_man(7)'. Remember that 'halcompile' "
"interprets backslash escapes in strings, so for instance to set the italic "
"font for the word 'example', write:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "\"\\\\fIexample\\\\fB\"\n"
msgstr ""

#. type: Plain text
msgid ""
"In this case, r-strings are particularly useful, because the backslashes in "
"an r-string need not be doubled:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "r\"\\fIexample\\fB\"\n"
msgstr ""

#. type: Plain text
msgid ""
"'TYPE' - One of the HAL types: 'bit', 'signed', 'unsigned', or 'float'. The "
"old"
msgstr ""

#. type: Plain text
msgid ""
"names 's32' and 'u32' may also be used, but 'signed' and 'unsigned' are "
"preferred."
msgstr ""

#. type: Plain text
msgid ""
"'PINDIRECTION' - One of the following: 'in', 'out', or 'io'. A component "
"sets a value"
msgstr ""

#. type: Plain text
msgid ""
"for an 'out' pin, it reads a value from an 'in' pin, and it may read or set "
"the value of an 'io' pin."
msgstr ""

#. type: Plain text
msgid ""
"'PARAMDIRECTION' - One of the following: 'r' or 'rw'. A component sets a "
"value for a 'r'"
msgstr ""

#. type: Plain text
msgid "parameter, and it may read or set the value of a 'rw' parameter."
msgstr ""

#. type: Plain text
msgid ""
"'STARTVALUE' - Specifies the initial value of a pin or parameter. If it is "
"not"
msgstr ""

#. type: Plain text
msgid ""
"specified, then the default is '0' or 'FALSE', depending on the type of the "
"item."
msgstr ""

#. type: Plain text
msgid "'HEADERFILE' - The name of a header file, either in double-quotes"
msgstr ""

#. type: Plain text
msgid ""
"(`include \"myfile.h\";`) or in angle brackets (`include <systemfile.h>;`).  "
"The header file will be included (using C's #include) at the top of the "
"file, before pin and parameter declarations."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HAL functions"
msgstr ""

#. type: Plain text
msgid ""
"'fp' - Indicates that the function performs floating-point calculations."
msgstr ""

#. type: Plain text
msgid ""
"'nofp' - Indicates that it only performs integer calculations. If neither is"
msgstr ""

#. type: Plain text
msgid ""
"specified, 'fp' is assumed. Neither 'halcompile' nor gcc can detect the use "
"of floating-point calculations in functions that are tagged 'nofp', but use "
"of such operations results in undefined behavior."
msgstr ""

#. type: Plain text
msgid "The currently defined options are:"
msgstr ""

#. type: Plain text
msgid "'option singleton yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"Do not create a 'count' module parameter, and always create a single "
"instance. With 'singleton', items are named 'component-name.item-name' and "
"without 'singleton', items for numbered instances are named 'component-name."
"<num>.item-name'."
msgstr ""

#. type: Plain text
msgid "'option default_count number' - (default: 1)"
msgstr ""

#. type: Plain text
msgid ""
"Normally, the module parameter 'count' defaults to 1. If specified, the "
"'count' will default to this value instead."
msgstr ""

#. type: Plain text
msgid "'option count_function yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"Normally, the number of instances to create is specified in the module "
"parameter 'count'; if 'count_function' is specified, the value returned by "
"the function 'int get_count(void)' is used instead, and the 'count' module "
"parameter is not defined."
msgstr ""

#. type: Plain text
msgid "'option rtapi_app no' - (default: yes)"
msgstr ""

#. type: Plain text
msgid ""
"Normally, the functions `rtapi_app_main()` and `rtapi_app_exit()` are "
"automatically defined. With 'option rtapi_app no', they are not, and must be "
"provided in the C code.  Use the following prototypes: + `int "
"rtapi_app_main(void);` + `void rtapi_app_exit(void);` + When implementing "
"your own `rtapi_app_main()`, call the function `int export(char *prefix, "
"long extra_arg)` to register the pins, parameters, and functions for "
"`prefix`."
msgstr ""

#. type: Plain text
msgid "'option data TYPE' - (default: none) *deprecated*"
msgstr ""

#. type: Plain text
msgid ""
"If specified, each instance of the component will have an associated data "
"block of type 'TYPE' (which can be a simple type like 'float' or the name of "
"a type created with 'typedef').  In new components, 'variable' should be "
"used instead."
msgstr ""

#. type: Plain text
msgid "'option extra_setup yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"If specified, call the function defined by 'EXTRA_SETUP' for each instance. "
"If using the automatically defined 'rtapi_app_main', 'extra_arg' is the "
"number of this instance."
msgstr ""

#. type: Plain text
msgid "'option extra_cleanup yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"If specified, call the function defined by 'EXTRA_CLEANUP' from the "
"automatically defined 'rtapi_app_exit', or if an error is detected in the "
"automatically defined 'rtapi_app_main'."
msgstr ""

#. type: Plain text
msgid "'option userspace yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"If specified, this file describes a userspace (ie, non-realtime) component, "
"rather than a regular (ie, realtime) one. A userspace component may not have "
"functions defined by the 'function' directive. Instead, after all the "
"instances are constructed, the C function `void user_mainloop(void);` is "
"called. When this function returns, the component exits.  Typically, "
"'user_mainloop()' will use 'FOR_ALL_INSTS()' to perform the update action "
"for each instance, then sleep for a short time. Another common action in "
"'user_mainloop()' may be to call the event handler loop of a GUI toolkit."
msgstr ""

#. type: Plain text
msgid "'option userinit yes' - (default: no)"
msgstr ""

#. type: Plain text
msgid ""
"This option is ignored if the option 'userspace' (see above) is set to "
"'no'.  If 'userinit' is specified, the function 'userinit(argc,argv)' is "
"called before 'rtapi_app_main()' (and thus before the call to "
"'hal_init()' ). This function may process the commandline arguments or take "
"other actions. Its return type is 'void'; it may call 'exit()' if it wishes "
"to terminate rather than create a HAL component (for instance, because the "
"commandline arguments were invalid)."
msgstr ""

#. type: Plain text
msgid "'option extra_link_args \"...\"' - (default: \"\")"
msgstr ""

#. type: Plain text
msgid ""
"This option is ignored if the option 'userspace' (see above) is set to "
"'no'.  When linking a userspace component, the arguments given are inserted "
"in the link line.  Note that because compilation takes place in a temporary "
"directory, \"-L.\" refers to the temporary directory and not the directory "
"where the .comp source file resides."
msgstr ""

#. type: Plain text
msgid "'option extra_compile_args \"...\"' - (default: \"\")"
msgstr ""

#. type: Plain text
msgid ""
"This option is ignored if the option 'userspace' (see above) is set to "
"'no'.  When compiling a userspace component, the arguments given are "
"inserted in the compiler command line."
msgstr ""

#. type: Plain text
msgid ""
"If an option's VALUE is not specified, then it is equivalent to specifying "
"'option â¦ yes'.  The result of assigning an inappropriate value to an "
"option is undefined.  The result of using any other option is undefined."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "License and Authorship"
msgstr ""

#. type: Plain text
msgid ""
"'LICENSE' - Specify the license of the module for the documentation and for "
"the"
msgstr ""

#. type: Plain text
msgid ""
"MODULE_LICENSE() module declaration. For example, to specify that the "
"module's license is GPL v2 or later,"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "license \"GPL\"; // indicates GPL v2 or later\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"\n"
"For additional information on the meaning of MODULE_LICENSE() and\n"
"additional license identifiers, see '<linux/module.h>'. or the manual page\n"
"'rtapi_module_param(3)'\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"\n"
"This declaration is required.\n"
msgstr ""

#. type: Plain text
msgid "'AUTHOR' - Specify the author of the module for the documentation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Per-instance data storage"
msgstr ""

#. type: Plain text
msgid "'variable CTYPE STARREDNAME;'"
msgstr ""

#. type: Plain text
msgid "'variable CTYPE STARREDNAME[SIZE];'"
msgstr ""

#. type: Plain text
msgid "'variable CTYPE STARREDNAME = DEFAULT;'"
msgstr ""

#. type: Plain text
msgid "'variable CTYPE STARREDNAME[SIZE] = DEFAULT;'"
msgstr ""

#. type: Plain text
msgid ""
"Declare a per-instance variable 'STARREDNAME' of type 'CTYPE', optionally as "
"an array of 'SIZE' items, and optionally with a default value 'DEFAULT'. "
"Items with no 'DEFAULT' are initialized to all-bits-zero.  'CTYPE' is a "
"simple one-word C type, such as 'float', 'u32', 's32', int, etc. Access to "
"array variables uses square brackets."
msgstr ""

#. type: Plain text
msgid ""
"If a variable is to be of a pointer type, there may not be any space between "
"the \"*\" and the variable name.  Therefore, the following is acceptable:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "variable int *example;\n"
msgstr ""

#. type: Plain text
msgid "but the following are not:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"variable int* badexample;\n"
"variable int * badexample;\n"
msgstr ""

#. type: Plain text
msgid "C++-style one-line comments (//... ) and"
msgstr ""

#. type: Plain text
msgid ""
"C-style multi-line comments (/* ... */) are both supported in the "
"declaration section."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Restrictions"
msgstr ""

#. type: Plain text
msgid ""
"Though HAL permits a pin, a parameter, and a function to have the same name, "
"'halcompile' does not."
msgstr ""

#. type: Plain text
msgid ""
"Variable and function names that can not be used or are likely to cause "
"problems include:"
msgstr ""

#. type: Plain text
msgid "Anything beginning with '__comp_'."
msgstr ""

#. type: Plain text
msgid "'comp_id'"
msgstr ""

#. type: Plain text
msgid "'fperiod'"
msgstr ""

#. type: Plain text
msgid "'rtapi_app_main'"
msgstr ""

#. type: Plain text
msgid "'rtapi_app_exit'"
msgstr ""

#. type: Plain text
msgid "'extra_setup'"
msgstr ""

#. type: Plain text
msgid "'extra_cleanup'"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Convenience Macros"
msgstr ""

#. type: Plain text
msgid ""
"Based on the items in the declaration section, 'halcompile' creates a C "
"structure called `struct __comp_state`. However, instead of referring to the "
"members of this structure (e.g., `*(inst->name)`), they will generally be "
"referred to using the macros below. The details of `struct __comp_state` and "
"these macros may change from one version of 'halcompile' to the next."
msgstr ""

#. type: Plain text
msgid ""
"'FUNCTION(name)' - Use this macro to begin the definition of a realtime "
"function which"
msgstr ""

#. type: Plain text
msgid ""
"was previously declared with 'function NAME'. The function includes a "
"parameter 'period' which is the integer number of nanoseconds between calls "
"to the function."
msgstr ""

#. type: Plain text
msgid ""
"'EXTRA_SETUP()' - Use this macro to begin the definition of the function "
"called to"
msgstr ""

#. type: Plain text
msgid ""
"perform extra setup of this instance. Return a negative Unix 'errno' value "
"to indicate failure (e.g., 'return -EBUSY' on failure to reserve an I/O "
"port), or 0 to indicate success."
msgstr ""

#. type: Plain text
msgid ""
"'EXTRA_CLEANUP()' - Use this macro to begin the definition of the function "
"called to"
msgstr ""

#. type: Plain text
msgid ""
"perform extra cleanup of the component. Note that this function must clean "
"up all instances of the component, not just one. The \"pin_name\", "
"\"parameter_name\", and \"data\" macros may not be used here."
msgstr ""

#. type: Plain text
msgid ""
"'pin_name' or 'parameter_name' - For each pin 'pin_name' or param "
"'parameter_name'"
msgstr ""

#. type: Plain text
msgid ""
"there is a macro which allows the name to be used on its own to refer to the "
"pin or parameter.  When 'pin_name' or 'parameter_name' is an array, the "
"macro is of the form 'pin_name(idx)' or 'param_name(idx)' where 'idx' is the "
"index into the pin array. When the array is a variable-sized array, it is "
"only legal to refer to items up to its 'condsize'."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"When the item is a conditional item, it is only legal to refer to it\n"
"    when its 'condition' evaluated to a nonzero value.\n"
msgstr ""

#. type: Plain text
msgid ""
"'variable_name' - For each variable 'variable_name' there is a macro which "
"allows the"
msgstr ""

#. type: Plain text
msgid ""
"name to be used on its own to refer to the variable. When 'variable_name' is "
"an array, the normal C-style subscript is used: 'variable_name[idx]'"
msgstr ""

#. type: Plain text
msgid ""
"'data' - If \"option data\" is specified, this macro allows access to the"
msgstr ""

#. type: Plain text
msgid "instance data."
msgstr ""

#. type: Plain text
msgid ""
"'fperiod' - The floating-point number of seconds between calls to this "
"realtime"
msgstr ""

#. type: Plain text
msgid "function."
msgstr ""

#. type: Plain text
msgid "'FOR_ALL_INSTS() {...}' - For userspace components. This macro"
msgstr ""

#. type: Plain text
msgid ""
"iterates over all the defined instances. Inside the body of the loop, the "
"'pin_name', 'parameter_name', and 'data' macros work as they do in realtime "
"functions."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Components with one function"
msgstr ""

#. type: Plain text
msgid ""
"If a component has only one function and the string \"FUNCTION\" does not "
"appear anywhere after ';;', then the portion after ';;' is all taken to be "
"the body of the component's single function. See the <<code:simple-comp-"
"example,Simple Comp>> for and example of this."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Component Personality"
msgstr ""

#. type: Plain text
msgid ""
"If a component has any pins or parameters with an \"if condition\" or "
"\"[maxsize : condsize]\", it is called a component with 'personality'.  The "
"'personality' of each instance is specified when the module is loaded. "
"'Personality' can be used to create pins only when needed.  For instance, "
"personality is used in the 'logic' component, to allow for a variable number "
"of input pins to each logic gate and to allow for a selection of any of the "
"basic boolean logic functions 'and', 'or', and 'xor'."
msgstr ""

#. type: Plain text
msgid ""
"The default number of allowed 'personality' items is a compile-time setting "
"(64).  The default applies to numerous components included in the "
"distribution that are built using halcompile."
msgstr ""

#. type: Plain text
msgid ""
"To alter the allowed number of personality items for user-built components, "
"use the '--personality' option with halcompile.  For example, to allow up to "
"128 personality times:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "  [sudo] halcompile --personality=128 --install ...\n"
msgstr ""

#. type: Plain text
msgid ""
"When using components with personality, normal usage is to specify a "
"personality item for *each* specified component instance.  Example for 3 "
"instances of the logic component:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt logic names=and4,or3,nand5, personality=0x104,0x203,0x805\n"
msgstr ""

#. type: Plain text
msgid ""
"If a loadrt line specifies more instances than personalities, the instances "
"with unspecified personalities are assigned a personality of 0.  If the "
"requested number of instances exceeds the number of allowed personalities, "
"personalities are assigned by indexing modulo the number of allowed "
"personalities.  A message is printed denoting such assignments."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Compiling"
msgstr ""

#. type: Plain text
msgid ""
"Place the '.comp' file in the source directory 'linuxcnc/src/hal/components' "
"and re-run 'make'.  'Comp' files are automatically detected by the build "
"system."
msgstr ""

#. type: Plain text
msgid ""
"If a '.comp' file is a driver for hardware, it may be placed in 'linuxcnc/"
"src/hal/drivers' and will be built unless LinuxCNC is configured as a "
"userspace simulator."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Compiling realtime components outside the source tree"
msgstr ""

#. type: Plain text
msgid ""
"'halcompile' can process, compile, and install a realtime component in a "
"single step, placing 'rtexample.ko' in the LinuxCNC realtime module "
"directory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[sudo] halcompile --install rtexample.comp\n"
msgstr ""

#. type: Plain text
msgid ""
"sudo (for root permission) is needed when using LinuxCNC from a deb package "
"install.  When using a Run-In-Place (RIP) build, root privileges should not "
"be needed."
msgstr ""

#. type: Plain text
msgid ""
"Or, it can process and compile in one step, leaving 'example.ko' (or "
"'example.so' for the simulator) in the current directory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcompile --compile rtexample.comp\n"
msgstr ""

#. type: Plain text
msgid "Or it can simply process, leaving 'example.c' in the current directory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcompile rtexample.comp\n"
msgstr ""

#. type: Plain text
msgid ""
"'halcompile' can also compile and install a component written in C, using "
"the '--install' and '--compile' options shown above:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[sudo] halcompile --install rtexample2.c\n"
msgstr ""

#. type: Plain text
msgid ""
"man-format documentation can also be created from the information in the "
"declaration section:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcompile --document rtexample.comp\n"
msgstr ""

#. type: Plain text
msgid "The resulting manpage, 'example.9' can be viewed with"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "man ./example.9\n"
msgstr ""

#. type: Plain text
msgid "or copied to a standard location for manual pages."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Compiling userspace components outside the source tree"
msgstr ""

#. type: Plain text
msgid ""
"'halcompile' can process, compile, install, and document userspace "
"components:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"halcompile usrexample.comp\n"
"halcompile --compile usrexample.comp\n"
"[sudo] halcompile --install usrexample.comp\n"
"halcompile --document usrexample.comp\n"
msgstr ""

#. type: Plain text
msgid "This only works for '.comp' files, not for '.c' files."
msgstr ""

#. type: Plain text
msgid ""
"Note that the declaration \"function _\" creates functions named "
"\"constant.0\" , etc. The file name must match the component name."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component constant;\n"
"pin out float out;\n"
"param r float value = 1.0;\n"
"function _;\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"FUNCTION(_) { out = value; }\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "sincos"
msgstr ""

#. type: Plain text
msgid ""
"This component computes the sine and cosine of an input angle in radians. It "
"has different capabilities than the \"sine\" and \"cosine\" outputs of "
"siggen, because the input is an angle, rather than running freely based on a "
"\"frequency\" parameter."
msgstr ""

#. type: Plain text
msgid ""
"The pins are declared with the names 'sin_' and 'cos_' in the source code so "
"that they do not interfere with the functions 'sin()' and 'cos()'. The HAL "
"pins are still called 'sincos.<num>.sin'."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component sincos;\n"
"pin out float sin_;\n"
"pin out float cos_;\n"
"pin in float theta;\n"
"function _;\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"#include <rtapi_math.h>\n"
"FUNCTION(_) { sin_ = sin(theta); cos_ = cos(theta); }\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "out8"
msgstr ""

#. type: Plain text
msgid ""
"This component is a driver for a 'fictional' card called \"out8\", which has "
"8 pins of digital output which are treated as a single 8-bit value. There "
"can be a varying number of such cards in the system, and they can be at "
"various addresses. The pin is called 'out_' because 'out' is an identifier "
"used in '<asm/io.h>'. It illustrates the use of 'EXTRA_SETUP' and "
"'EXTRA_CLEANUP' to request an I/O region and then free it in case of error "
"or when the module is unloaded."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component out8;\n"
"pin out unsigned out_ \"Output value; only low 8 bits are used\";\n"
"param r unsigned ioaddr;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "function _;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"option count_function;\n"
"option extra_setup;\n"
"option extra_cleanup;\n"
"option constructable no;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"#include <asm/io.h>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#define MAX 8\n"
"int io[MAX] = {0,};\n"
"RTAPI_MP_ARRAY_INT(io, MAX, \"I/O addresses of out8 boards\");\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int get_count(void) {\n"
"    int i = 0;\n"
"    for(i=0; i<MAX && io[i]; i++) { /* Nothing */ }\n"
"    return i;\n"
"}\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"EXTRA_SETUP() {\n"
"    if(!rtapi_request_region(io[extra_arg], 1, \"out8\")) {\n"
"        // set this I/O port to 0 so that EXTRA_CLEANUP does not release the IO\n"
"        // ports that were never requested.\n"
"        io[extra_arg] = 0;\n"
"        return -EBUSY;\n"
"    }\n"
"    ioaddr = io[extra_arg];\n"
"    return 0; }\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"EXTRA_CLEANUP() {\n"
"    int i;\n"
"    for(i=0; i < MAX && io[i]; i++) {\n"
"        rtapi_release_region(io[i], 1);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "FUNCTION(_) { outb(out_, ioaddr); }\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "hal_loop"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component hal_loop;\n"
"pin out float example;\n"
msgstr ""

#. type: Plain text
msgid ""
"This fragment of a component illustrates the use of the 'hal_' prefix in a "
"component name. 'loop' is the name of a standard Linux kernel module, so a "
"'loop' component might not successfully load if the Linux 'loop' module was "
"also present on the system."
msgstr ""

#. type: Plain text
msgid ""
"When loaded, 'halcmd show comp' will show a component called 'hal_loop'. "
"However, the pin shown by 'halcmd show pin' will be 'loop.0.example', not "
"'hal-loop.0.example'."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "arraydemo"
msgstr ""

#. type: Plain text
msgid "This realtime component illustrates use of fixed-size arrays:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component arraydemo \"4-bit Shift register\";\n"
"pin in bit in;\n"
"pin out bit out-# [4];\n"
"function _ nofp;\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"int i;\n"
"for(i=3; i>0; i--) out(i) = out(i-1);\n"
"out(0) = in;\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "rand"
msgstr ""

#. type: Plain text
msgid ""
"This userspace component changes the value on its output pin to a new random "
"value in the range (0,1) about once every 1ms."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component rand;\n"
"option userspace;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pin out float out;\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"#include <unistd.h>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"void user_mainloop(void) {\n"
"    while(1) {\n"
"        usleep(1000);\n"
"        FOR_ALL_INSTS() out = drand48();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
msgid ""
"This realtime component shows how to use \"personality\" to create variable-"
"size arrays and optional pins."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component logic \"LinuxCNC HAL component providing experimental logic functions\";\n"
"pin in bit in-##[16 : personality & 0xff];\n"
"pin out bit and if personality & 0x100;\n"
"pin out bit or if personality & 0x200;\n"
"pin out bit xor if personality & 0x400;\n"
"function _ nofp;\n"
"description \"\"\"\n"
"Experimental general 'logic function' component.  Can perform 'and', 'or'\n"
"and 'xor' of up to 16 inputs.  Determine the proper value for 'personality'\n"
"by adding:\n"
".IP \\\\(bu 4\n"
"The number of input pins, usually from 2 to 16\n"
".IP \\\\(bu\n"
"256 (0x100)  if the 'and' output is desired\n"
".IP \\\\(bu\n"
"512 (0x200)  if the 'or' output is desired\n"
".IP \\\\(bu\n"
"1024 (0x400)  if the 'xor' (exclusive or) output is desired\"\"\";\n"
"license \"GPL\"; // indicates GPL v2 or later\n"
";;\n"
"FUNCTION(_) {\n"
"    int i, a=1, o=0, x=0;\n"
"    for(i=0; i < (personality & 0xff); i++) {\n"
"        if(in(i)) { o = 1; x = !x; }\n"
"        else { a = 0; }\n"
"    }\n"
"    if(personality & 0x100) and = a;\n"
"    if(personality & 0x200) or = o;\n"
"    if(personality & 0x400) xor = x;\n"
"}\n"
msgstr ""

#. type: Plain text
msgid "A typical load line for this component might be"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadrt logic count=3 personality=0x102,0x305,0x503\n"
msgstr ""

#. type: Plain text
msgid "which creates the following pins:"
msgstr ""

#. type: Plain text
msgid "A 2-input AND gate: logic.0.and, logic.0.in-00, logic.0.in-01"
msgstr ""

#. type: Plain text
msgid ""
"5-input AND and OR gates: logic.1.and, logic.1.or, logic.1.in-00, logic.1."
"in-01, logic.1.in-02, logic.1.in-03, logic.1.in-04,"
msgstr ""

#. type: Plain text
msgid ""
"3-input AND and XOR gates: logic.2.and, logic.2.xor, logic.2.in-00, logic.2."
"in-01, logic.2.in-02"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "general functions"
msgstr ""

#. type: Plain text
msgid ""
"This example shows how to call functions from the main function. + it also "
"shows how to pass reference of HAL pins to those functions. +"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"component example;\n"
"pin in s32 in;\n"
"pin out bit out1;\n"
"pin out bit out2;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"function _;\n"
"license \"GPL\";\n"
";;\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"// general pin set true function\n"
"void set(hal_bit_t *p){\n"
"    *p = 1;\n"
"}\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"// general pin set false function\n"
"void unset(hal_bit_t *p){\n"
"    *p = 0;\n"
"}\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"//main function\n"
"FUNCTION(_) {\n"
"    if (in < 0){\n"
"        set(&out1);\n"
"        unset(&out2);\n"
"    }else if (in >0){\n"
"        unset(&out2);\n"
"        set(&out2);\n"
"    }else{\n"
"        unset(&out1);\n"
"        unset(&out2);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
msgid ""
"This component uses two general function to manipulate a HAL bit pin "
"referenced to it. +"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Command Line Usage"
msgstr ""

#. type: Plain text
msgid "The halcompile man page gives details for invoking halcompile."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ man halcompile\n"
msgstr ""

#. type: Plain text
msgid "A brief summary of halcompile usage is given by:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ halcompile --help\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Creating Userspace Python Components"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Basic usage"
msgstr ""

#. type: Plain text
msgid ""
"A userspace component begins by creating its pins and parameters, then "
"enters a loop which will periodically drive all the outputs from the inputs. "
"The following component copies the value seen on its input pin ('passthrough."
"in') to its output pin ('passthrough.out') approximately once per second."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"import hal, time\n"
"h = hal.component(\"passthrough\")\n"
"h.newpin(\"in\", hal.HAL_FLOAT, hal.HAL_IN)\n"
"h.newpin(\"out\", hal.HAL_FLOAT, hal.HAL_OUT)\n"
"h.ready()\n"
"try:\n"
"    while 1:\n"
"        time.sleep(1)\n"
"        h['out'] = h['in']\n"
"except KeyboardInterrupt:\n"
"    raise SystemExit\n"
msgstr ""

#. type: Plain text
msgid ""
"Copy the above listing into a file named \"passthrough\", make it executable "
"('chmod +x'), and place it on your '$PATH'. Then try it out:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halrun\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: loadusr passthrough\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    Component Pins: \n"
"    Owner Type  Dir     Value  Name \n"
"     03   float IN          0  passthrough.in \n"
"     03   float OUT         0  passthrough.out \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "halcmd: setp passthrough.in 3.14 \n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    Component Pins: \n"
"    Owner Type  Dir     Value  Name \n"
"     03   float IN       3.14  passthrough.in \n"
"     03   float OUT      3.14  passthrough.out \n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Userspace components and delays"
msgstr ""

#. type: Plain text
msgid ""
"If you typed âshow pinâ quickly, you may see that 'passthrough.out' still "
"had its old value of 0. This is because of the call to 'time.sleep(1)', "
"which makes the assignment to the output pin occur at most once per second. "
"Because this is a userspace component, the actual delay between assignments "
"can be much longer if the memory used by the passthrough component is "
"swapped to disk, the assignment could be delayed until that memory is "
"swapped back in."
msgstr ""

#. type: Plain text
msgid ""
"Thus, userspace components are suitable for user-interactive elements such "
"as control panels (delays in the range of milliseconds are not noticed, and "
"longer delays are acceptable), but not for sending step pulses to a stepper "
"driver board (delays must always be in the range of microseconds, no matter "
"what)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Create pins and parameters"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "h = hal.component(\"passthrough\")\n"
msgstr ""

#. type: Plain text
msgid ""
"The component itself is created by a call to the constructor 'hal."
"component'. The arguments are the HAL component name and (optionally) the "
"prefix used for pin and parameter names. If the prefix is not specified, the "
"component name is used."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "h.newpin(\"in\", hal.HAL_FLOAT, hal.HAL_IN)\n"
msgstr ""

#. type: Plain text
msgid ""
"Then pins are created by calls to methods on the component object. The "
"arguments are: pin name suffix, pin type, and pin direction. For parameters, "
"the arguments are: parameter name suffix, parameter type, and parameter "
"direction."
msgstr ""

#. type: Block title
#, no-wrap
msgid "HAL Option Names"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pin and Parameter Types:"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_BIT"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_FLOAT"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_S32"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_U32"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pin Directions:"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_IN"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_OUT"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_IO"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parameter Directions:"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_RO"
msgstr ""

#. type: Table
#, no-wrap
msgid "HAL_RW"
msgstr ""

#. type: Table
#, no-wrap
msgid ""
"The full pin or parameter name is formed by joining the prefix and the\n"
"suffix with a \".\", so in the example the pin created is called\n"
"'passthrough.in'.\n"
"\n"
"----\n"
"h.ready()\n"
"----\n"
"\n"
"Once all the pins and parameters have been created, call the\n"
"'.ready()' method.\n"
"\n"
"=== Changing the prefix\n"
"\n"
"The prefix can be changed by calling the '.setprefix()' method. The\n"
"current prefix can be retrieved by calling the '.getprefix()' method.\n"
"\n"
"== Reading and writing pins and parameters\n"
"\n"
"For pins and parameters which are also proper Python identifiers, the\n"
"value may be accessed or set using the attribute syntax:\n"
"\n"
"----\n"
"h.out = h.in\n"
"----\n"
"\n"
"For all pins, whether or not they are also proper Python identifiers,\n"
"the value may be accessed or set using the subscript syntax:\n"
"\n"
"----\n"
"h['out'] = h['in']\n"
"----\n"
"\n"
"To see all pins with their values, getpins returns all values in a dictionary\n"
"of that component.\n"
"\n"
"----\n"
"h.getpins()\n"
">>>{'in': 0.0, 'out': 0.0}\n"
"----\n"
"\n"
"=== Driving output (HAL_OUT) pins\n"
"\n"
"Periodically, usually in response to a timer, all HAL_OUT pins should\n"
"be \"driven\" by assigning them a new value. This should be done whether\n"
"or not the value is different than the last one assigned. When a pin is\n"
"connected to a signal, its old output value is not copied into the\n"
"signal, so the proper value will only appear on the signal once the\n"
"component assigns a new value.\n"
"\n"
"=== Driving bidirectional (HAL_IO) pins\n"
"\n"
"The above rule does not apply to bidirectional pins. Instead, a\n"
"bidirectional pin should only be driven by the component when the\n"
"component wishes to change the value. For instance, in the canonical\n"
"encoder interface, the encoder component only sets the 'index-enable'\n"
"pin to *FALSE* (when an index pulse is seen and the old value is\n"
"*TRUE*), but never sets it to *TRUE*. Repeatedly driving the pin\n"
"*FALSE*  might cause the other connected component to act as though\n"
"another index pulse had been seen. \n"
"\n"
"== Exiting\n"
"\n"
"A 'halcmd unload' request for the component is delivered as a \n"
"'KeyboardInterrupt' exception. When an unload request arrives, the \n"
"process should either \n"
"exit in a short time, or call the '.exit()' method on the component \n"
"if substantial work (such as reading or \n"
"writing files) must be done to complete the shutdown process.\n"
"\n"
"== Helpful Functions\n"
"\n"
"=== component_exists\n"
"\n"
"Does the specified component exist at this time. +\n"
"Example: +\n"
"hal.component_exists(\"testpanel\") +\n"
"\n"
"=== component_is_ready\n"
"Is the specified component ready at this time. +\n"
"Example: +\n"
"hal.component_is_ready(\"testpanel\") +\n"
"\n"
"=== get_msg_level\n"
"\n"
"Get the current Realtime msg level. +\n"
"\n"
"=== set_msg_level\n"
"\n"
"set the current Realtime msg level. +\n"
"used for debugging information. +\n"
"\n"
"=== connect\n"
"\n"
"Connect a pin to a signal. +\n"
"example: +\n"
"hal.connect(\"pinname\",\"signal_name\")\n"
"\n"
"=== get_value\n"
"\n"
"read a pin, param or signal directly. +\n"
"example: +\n"
"value = hal.get_value(\"iocontrol.0.emc-enable-in\") +\n"
"\n"
"=== get_info_pins()\n"
"\n"
"returns a list of dicts of all system pins. +\n"
"[source,python]\n"
"----\n"
"listOfDicts = hal.get_info_pins()\n"
"pinName1 = listOfDicts[0].get('NAME')\n"
"pinValue1 = listOfDicts[0].get('VALUE')\n"
"pinDirection1 = listOfDicts[0].get('DIRECTION')\n"
"----\n"
"\n"
"=== get_info_signals()\n"
"returns a list of dicts of all system signals. +\n"
"[source,python]\n"
"----\n"
"listOfDicts = hal.get_info_signals()\n"
"signalName1 = listOfDicts[0].get('NAME')\n"
"signalValue1 = listOfDicts[0].get('VALUE')\n"
"driverPin1 = listOfDicts[0].get('DRIVER')\n"
"----\n"
"=== get_info_params()\n"
"\n"
"returns a list of dicts of all system parameters. +\n"
"[source,python]\n"
"----\n"
"listOfDicts = hal.get_info_params()\n"
"paramName1 = listOfDicts[0].get('NAME')\n"
"paramValue1 = listOfDicts[0].get('VALUE')\n"
"----\n"
"\n"
"=== new_signal\n"
"Create a New signal of the type specified. +\n"
"example\" +\n"
"hal.new_sig(\"signalname\",hal.HAL_BIT)\n"
"\n"
"=== pin_has_writer\n"
"\n"
"Does the specified pin have a driving pin connected. +\n"
"Returns True or False. +\n"
"h.in.pin_has_writer()\n"
"\n"
"=== get_name\n"
"Get the HAL object name +\n"
"h.in.get_name() +\n"
"return a string\n"
"\n"
"=== get_type\n"
"Get the HAL object's type +\n"
"h.in.get_type() +\n"
"returns an integer\n"
"\n"
"=== get_dir\n"
"Get the HAL object direction type +\n"
"h.in.get_dir() +\n"
"returns an integer\n"
"\n"
"=== get\n"
"get the HAL object value +\n"
"h.in.get()\n"
"\n"
"=== set\n"
"set the HAL object value +\n"
"h.out.set(10)\n"
"\n"
"=== is_pin\n"
"Is the object a pin or parameter? +\n"
"h.in.is_pin() +\n"
"returns bool\n"
"\n"
"=== sampler_base\n"
"\n"
"TODO +\n"
"\n"
"=== stream_base\n"
"\n"
"TODO +\n"
"\n"
"=== stream\n"
"\n"
"TODO +\n"
"\n"
"=== set_p\n"
"\n"
"Set a pin value of any pin in the HAL system. +\n"
"example: +\n"
"hal.set_p(\"pinname\",\"10\") +\n"
"\n"
"== Constants\n"
"\n"
"Use These To specify details rather then the value they hold.\n"
"\n"
"* HAL_BIT\n"
"\n"
"* HAL_FLOAT\n"
"\n"
"* HAL_S32\n"
"\n"
"* HAL_U32\n"
"\n"
"* HAL_IN\n"
"\n"
"* HAL_OUT\n"
"\n"
"* HAL_RO\n"
"\n"
"* HAL_RW\n"
"\n"
"* MSG_NONE\n"
"\n"
"* MSG_ALL\n"
"\n"
"* MSG_DBG\n"
"\n"
"* MSG_ERR\n"
"\n"
"* MSG_INFO\n"
"\n"
"* MSG_WARN\n"
"\n"
"== System Information\n"
"\n"
"Read these to acquire information about the realtime system.\n"
"\n"
"* is_kernelspace\n"
"\n"
"* is_rt\n"
"\n"
"* is_sim\n"
"\n"
"* is_userspace\n"
"\n"
"== Use with hal_glib in GladeVCP Handler\n"
"GladeVCP uses the hal_glib library, which can be used to connect a \"watcher\" signal on a HAL input pin. +\n"
"This signal can be used to register a function to call when the HAL pin changes state. +\n"
"\n"
"One must import the module and the hal module:\n"
"\n"
"[source,python]\n"
"----\n"
"import hal_glib\n"
"import hal\n"
"----\n"
"\n"
"Then make a pin and connect a 'value-changed' (the watcher) signal to a function call:\n"
"[source,python]\n"
"----\n"
"class HandlerClass:\n"
"    def __init__(self, halcomp,builder,useropts):\n"
"        self.example_trigger = hal_glib.GPin(halcomp.newpin('example-trigger', hal.HAL_BIT, hal.HAL_IN))\n"
"        self.example_trigger.connect('value-changed', self._on_example_trigger_change)\n"
"----\n"
"\n"
"And have a function to be called:\n"
"[source,python]\n"
"----\n"
"    def _on_example_trigger_change(self,pin,userdata=None):\n"
"        print \"pin value changed to:\" % (pin.get())\n"
"        print \"pin name= %s\" % (pin.get_name())\n"
"        print \"pin type= %d\" % (pin.get_type())\n"
"\n"
"        # this can be called outside the function\n"
"        self.example_trigger.get()\n"
"----\n"
"\n"
"== Use with hal_glib in QtVCP Handler\n"
"QtVCP uses the hal_glib library, which can be used to connect a \"watcher\" signal on a HAL input pin. +\n"
"This signal can be used to register a function to call when the HAL pin changes state. +\n"
"\n"
"One must import the hal module:\n"
"\n"
"[source,python]\n"
"----\n"
"import hal\n"
"----\n"
"\n"
"Then make a pin and connect a 'value_changed' (the watcher) signal to a function call:\n"
"[source,python]\n"
"----\n"
"    ########################\n"
"    # **** INITIALIZE **** #\n"
"    ########################\n"
"    # widgets allows access to  widgets from the qtvcp files\n"
"    # at this point the widgets and hal pins are not instantiated\n"
"    def __init__(self, halcomp,widgets,paths):\n"
"        self.hal = halcomp\n"
"        self.testPin = self.hal.newpin('test-pin', hal.HAL_BIT, hal.HAL_IN)\n"
"        self.testPin.value_changed.connect(lambda s: self.setTestPin(s))\n"
"----\n"
"\n"
"And have a function to be called. +\n"
"This shows ways to get the pin value and information. +\n"
"[source,python]\n"
"----\n"
"    #####################\n"
"    # general functions #\n"
"    #####################\n"
"    def setTestPin(self, data):\n"
"        print \"Test pin value changed to:\" % (data)\n"
"        print 'halpin object =', self.w.sender()\n"
"        print 'Halpin name: ',self.sender().text()\n"
"        print 'Halpin type: ',self.sender().get_type()\n"
"\n"
"        # this can be called outside the function\n"
"        print self.testPin.get()\n"
"----\n"
"\n"
"\n"
"== Project ideas\n"
"\n"
"* Create an external control panel with buttons, switches, and\n"
"   indicators. Connect everything to a microcontroller, and connect the\n"
"   microcontroller to the PC using a serial interface. Python has a very\n"
"   capable serial interface module called\n"
"   http://pyserial.sourceforge.net/[pyserial] \n"
"   (Ubuntu package name âpython-serialâ, in the universe repository)\n"
"* Attach a http://lcdproc.omnipotent.net/[LCDProc]-compatible LCD module\n"
"   and use it to display a digital readout with information of your choice\n"
"   (Ubuntu package name âlcdprocâ, in the universe repository)\n"
"* Create a virtual control panel using any GUI library supported by\n"
"   Python (gtk, qt, wxwindows, etc)\n"
"\n"
msgstr ""

#. type: Plain text
msgid ""
"When we talk about CNC machines, we usually think about machines that are "
"commanded to move to certain locations and perform various tasks.  In order "
"to have an unified view of the machine space, and to make it fit the human "
"point of view over 3D space, most of the machines (if not all) use a common "
"coordinate system called the Cartesian Coordinate System."
msgstr ""

#. type: Plain text
msgid ""
"The Cartesian Coordinate system is composed of three axes (X, Y, Z) each "
"perpendicular to the other two. footnote:[The word âaxesâ is also commonly "
"(and wrongly) used when talking about CNC machines, and referring to the "
"moving directions of the machine.]"
msgstr ""

#. type: Plain text
msgid ""
"When we talk about a G-code program (RS274/NGC) we talk about a number of "
"commands (G0, G1, etc.) which have positions as parameters (X- Y- Z-). These "
"positions refer exactly to Cartesian positions. Part of the LinuxCNC motion "
"controller is responsible for translating those positions into positions "
"which correspond to the machine (((kinematics)))kinematics. footnote:"
"[Kinematics: a two way function to transform from Cartesian space to joint "
"space]"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Joints vs. Axes"
msgstr ""

#. type: Plain text
msgid ""
"A joint of a CNC machine is a one of the physical degrees of freedom of the "
"machine. This might be linear (leadscrews) or rotary (rotary tables, robot "
"arm joints). There can be any number of joints on a given machine. For "
"example, one popular robot has 6 joints, and a typical simple milling "
"machine has only 3."
msgstr ""

#. type: Plain text
msgid ""
"There are certain machines where the joints are laid out to match kinematics "
"axes (joint 0 along axis X, joint 1 along axis Y, joint 2 along axis Z), and "
"these machines are called (((Cartesian machines)))Cartesian machines (or "
"machines with (((Trivial Kinematics)))Trivial Kinematics). These are the "
"most common machines used in milling, but are not very common in other "
"domains of machine control (e.g. welding: puma-typed robots)."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC supports axes with names: X Y Z A B C U V W.  The X Y Z axes "
"typically refer to the usual Cartesian coordinates. The A B C axes refer to "
"rotational coordinates about the X Y Z axes respectively.  The U V W axes "
"refer to additional coordinates that are commonly made colinear to the X Y Z "
"axes respectively."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Trivial Kinematics"
msgstr ""

#. type: Plain text
msgid ""
"The simplest machines are those in which which each joint is placed along "
"one of the Cartesian axes. On these machines the mapping from Cartesian "
"space (the G-code program) to the joint space (the actual actuators of the "
"machine) is trivial. It is a simple 1:1 mapping:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pos->tran.x = joints[0];\n"
"pos->tran.y = joints[1];\n"
"pos->tran.z = joints[2];\n"
msgstr ""

#. type: Plain text
msgid ""
"In the above code snippet one can see how the mapping is done: the X "
"position is identical with the joint 0, the Y position with joint 1, etc. "
"The above refers to the direct kinematics (one direction of the "
"transformation).  The next code snippet refers to the inverse kinematics (or "
"the inverse direction of the transformation):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"joints[0] = pos->tran.x;\n"
"joints[1] = pos->tran.y;\n"
"joints[2] = pos->tran.z;\n"
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC, the identity kinematics are implemented with the 'trivkins' "
"kinematics module and extended to 9 axes.  The default relationships between "
"axis coordinates and joint numbers are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pos->tran.x = joints[0];\n"
"pos->tran.y = joints[1];\n"
"pos->tran.z = joints[2];\n"
"pos->a      = joints[3];\n"
"pos->b      = joints[4];\n"
"pos->c      = joints[5];\n"
"pos->u      = joints[6];\n"
"pos->v      = joints[7];\n"
"pos->w      = joints[8];\n"
msgstr ""

#. type: Plain text
msgid ""
"Similarly, the default relationships for inverse kinematics for trivkins are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"joints[0] = pos->tran.x;\n"
"joints[1] = pos->tran.y;\n"
"joints[2] = pos->tran.z;\n"
"joints[3] = pos->a;\n"
"joints[4] = pos->b;\n"
"joints[5] = pos->c;\n"
"joints[6] = pos->u;\n"
"joints[7] = pos->v;\n"
"joints[8] = pos->w;\n"
msgstr ""

#. type: Plain text
msgid ""
"It is straightforward to do the transformation for a trivial \"kins"
"\" ('trivkins' kinematics) or Cartesian machine provided that there are no "
"omissions in the axis letters used."
msgstr ""

#. type: Plain text
msgid ""
"It gets a bit more complicated if the machine is missing one or more of the "
"axis letters.  The problems of omitted axis letters is addressed by using "
"the 'coordinates=' module parameter with the trivkins module.  Joint numbers "
"are assigned consecutively to each coordinate specified.  A lathe can be "
"described with 'coordinates=xz' The joint assignments will then be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"joints[0] = pos->tran.x\n"
"joints[1] = pos->tran.z\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Use of the 'coordinates=' parameter is recommended for configurations that omit\n"
"axis letters. footnote:[ Historically, the trivkins module did not support the\n"
"'coordinates=' parameter so lathe configs were often configured as XYZ\n"
"machines.  The unused Y axis was configured to 1) home immediately, 2) use a\n"
"simple loopback to connect its position command hal pin to its position\n"
"feedback hal pin, and 3) hidden in gui displays.   Numerous sim configs use\n"
"these methods in order to share common hal files.]\n"
msgstr ""

#. type: Plain text
msgid ""
"The 'trivkins' kinematics module also allows the same coordinate to be "
"specified for more than one joint.  This feature can be useful on machines "
"like a gantry having two independent motors for the y coordinate.  Such a "
"machine could use 'coordinates=xyyz' resulting in joint assignments:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"joints[0] = pos->tran.x\n"
"joints[1] = pos->tran.y\n"
"joints[2] = pos->tran.y\n"
"joints[3] = pos->tran.z\n"
msgstr ""

#. type: Plain text
msgid "See the trivkins man pages for more information."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Non-trivial kinematics"
msgstr ""

#. type: Plain text
msgid ""
"There can be quite a few types of machine setups (robots: puma, scara; "
"hexapods etc.). Each of them is set up using linear and rotary joints.  "
"These joints don't usually match with the Cartesian coordinates, therefore "
"we need a kinematics function which does the conversion (actually 2 "
"functions: forward and inverse kinematics function)."
msgstr ""

#. type: Plain text
msgid ""
"To illustrate the above, we will analyze a simple kinematics called bipod (a "
"simplified version of the tripod, which is a simplified version of the "
"hexapod)."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#, no-wrap
msgid "Bipod setup"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/bipod.png"
msgstr ""

#. type: Plain text
msgid ""
"The Bipod we are talking about is a device that consists of 2 motors placed "
"on a wall, from which a device is hung using some wire. The joints in this "
"case are the distances from the motors to the device (named AD and BD in the "
"figure)."
msgstr ""

#. type: Plain text
msgid ""
"The position of the motors is fixed by convention. Motor A is in (0,0), "
"which means that its X coordinate is 0, and its Y coordinate is also 0. "
"Motor B is placed in (Bx, 0), which means that its X coordinate is Bx."
msgstr ""

#. type: Plain text
msgid ""
"Our tooltip will be in point D which gets defined by the distances AD and "
"BD, and by the Cartesian coordinates Dx, Dy."
msgstr ""

#. type: Plain text
msgid ""
"The job of the kinematics is to transform from joint lengths (AD, BD)  to "
"Cartesian coordinates (Dx, Dy) and vice-versa."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Forward transformation"
msgstr ""

#. type: Plain text
msgid ""
"To transform from joint space into Cartesian space we will use some "
"trigonometry rules (the right triangles determined by the points (0,0), "
"(Dx,0), (Dx,Dy) and the triangle (Dx,0), (Bx,0) and (Dx,Dy)."
msgstr ""

#. type: Plain text
msgid ""
"We can easily see that: image:images/kinematics-math-01.png[align=\"center"
"\"], likewise: image:images/kinematics-math-02.png[align=\"center\"]"
msgstr ""

#. type: Plain text
msgid "If we subtract one from the other we will get:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/kinematics-math-03.png"
msgstr ""

#. type: Plain text
msgid "and therefore:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/kinematics-math-04.png"
msgstr ""

#. type: Plain text
msgid "From there we calculate:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/kinematics-math-05.png"
msgstr ""

#
#
#
#
#
#
#. we can easily see that latexmath:[$AD^{2}=x^{2}+y^{2}$], likewise
#. latexmath:[$BD^{2}=(Bx-x)^{2}+y^{2}$].
#. If we subtract one from the other we will get:
#. latexmath::[\[AD^{2}-BD^{2}=x^{2}+y^{2}-x^{2}+2*x*Bx-Bx^{2}-y^{2}\]]
#. and therefore:
#. latexmath::[\[x=\frac{AD^{2}-BD^{2}+Bx^{2}}{2*Bx}\]]
#. From there we calculate:
#. latexmath::[\[y=\sqrt{AD^{2}-x^{2}}\]]
#. type: Plain text
msgid ""
"Note that the calculation for y involves the square root of a difference, "
"which may not result in a real number. If there is no single Cartesian "
"coordinate for this joint position, then the position is said to be a "
"singularity. In this case, the forward kinematics return -1."
msgstr ""

#. type: Plain text
msgid "Translated to actual code:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"double AD2 = joints[0] * joints[0];\n"
"double BD2 = joints[1] * joints[1];\n"
"double x = (AD2 - BD2 + Bx * Bx) / (2 * Bx);\n"
"double y2 = AD2 - x * x;\n"
"if(y2 < 0) return -1;\n"
"pos->tran.x = x;\n"
"pos->tran.y = sqrt(y2);\n"
"return 0;\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Inverse transformation"
msgstr ""

#. type: Plain text
msgid ""
"The inverse kinematics is lots easier in our example, as we can write it "
"directly:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/kinematics-math-06.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/kinematics-math-07.png"
msgstr ""

#
#. latexmath::[\[AD=\sqrt{x^{2}+y^{2}}\]]
#. latexmath::[\[BD=\sqrt{(Bx-x)^{2}+y^{2}}\]]
#. type: Plain text
msgid "or translated to actual code:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"double x2 = pos->tran.x * pos->tran.x;\n"
"double y2 = pos->tran.y * pos->tran.y;\n"
"joints[0] = sqrt(x2 + y2);\n"
"joints[1] = sqrt((Bx - pos->tran.x)*(Bx - pos->tran.x) + y2);\n"
"return 0;\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Implementation details"
msgstr ""

#. type: Plain text
msgid ""
"A kinematics module is implemented as a HAL component, and is permitted to "
"export pins and parameters. It consists of several âCâ functions (as opposed "
"to HAL functions):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int kinematicsForward(const double *joint, EmcPose *world,\n"
"const KINEMATICS_FORWARD_FLAGS *fflags,\n"
"KINEMATICS_INVERSE_FLAGS *iflags)\n"
msgstr ""

#. type: Plain text
msgid "Implements the forward kinematics function."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int kinematicsInverse(const EmcPose * world, double *joints,\n"
"const KINEMATICS_INVERSE_FLAGS *iflags,\n"
"KINEMATICS_FORWARD_FLAGS *fflags)\n"
msgstr ""

#. type: Plain text
msgid "Implements the inverse kinematics function."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "KINEMATICS_TYPE kinematicsType(void)\n"
msgstr ""

#. type: Plain text
msgid "Returns the kinematics type identifier:"
msgstr ""

#. type: Plain text
msgid "KINEMATICS_IDENTITY (each joint number corresponds to an axis letter)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "KINEMATICS_BOTH      (forward and inverse kinematics functions are provided)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "KINEMATICS_FORWARD_ONLY\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "KINEMATICS_INVERSE_ONLY\n"
msgstr ""

#. type: Plain text
msgid ""
"Guis may interpret KINEMATICS_IDENTITY to hide the distinctions between "
"joint numbers and axis letters when in joint mode (typically prior to "
"homing)."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int kinematicsSwitchable(void)\n"
"int kinematicsSwitch(int switchkins_type)\n"
"KINS_NOT_SWITCHABLE\n"
msgstr ""

#. type: Plain text
msgid ""
"The function kinematicsSwitchable() returns 1 if multiple kinematics types "
"are supported.  The function kinematicsSwitch()  selects the kinematics "
"type.  See <<cha:switchable-kinematics,Switchable Kinematitcs>>."
msgstr ""

#. type: Plain text
msgid ""
"The majority of provided kinematics modules support a single kinematics type "
"and use the directive \"*KINS_NOT_SWITCHABLE*\" to supply defaults for the "
"required kinematicsSwitchable() and kinematicsSwitch() functions."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int kinematicsHome(EmcPose *world, double *joint,\n"
"KINEMATICS_FORWARD_FLAGS *fflags,\n"
"KINEMATICS_INVERSE_FLAGS *iflags)\n"
msgstr ""

#. type: Plain text
msgid ""
"The home kinematics function sets all its arguments to their proper values "
"at the known home position. When called, these should be set, when known, to "
"initial values, e.g., from an INI file. If the home kinematics can accept "
"arbitrary starting points, these initial values should be used."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"int rtapi_app_main(void)\n"
"void rtapi_app_exit(void)\n"
msgstr ""

#. type: Plain text
msgid "These are the standard setup and tear-down functions of RTAPI modules."
msgstr ""

#. type: Plain text
msgid ""
"When they are contained in a single source file, kinematics modules may be "
"compiled and installed by 'halcompile'. See the 'halcompile(1)' manpage or "
"the HAL manual for more information."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Kinematics module using the userkins.comp template"
msgstr ""

#. type: Plain text
msgid ""
"Another way to create a custom kinematics module is to adapt the hal "
"component 'userkins'. This template component can be modified locally by a "
"user and can be built using halcompile."
msgstr ""

#. type: Plain text
msgid "See the userkins man pages for more information."
msgstr ""

#. type: Plain text
msgid ""
"Note that to create switchable kinematic modules the required modifications "
"are somewhat more complicated."
msgstr ""

#. type: Plain text
msgid ""
"See 'millturn.comp' as an example of a switchable kinematic module that was "
"created using the 'userkins.comp' template."
msgstr ""

#. type: Plain text
msgid "[[cha:dh-parameters]] (((DH parameters Examples)))"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Setting up \"modified\" Denavit-Hartenberg (DH) parameters for"
msgstr ""

#. type: Plain text
msgid "'genserkins'"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Prelude"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC supports a number of kinematics modules including one that supports "
"a generalized set of serial kinematics commonly specified via Denavit-"
"Hartenberg parameters."
msgstr ""

#. type: Plain text
msgid ""
"This document illustrates a method to set up the DH-parameters for a "
"Mitsubishi RV-6SDL in LinuxCNC using 'genserkins' kinematics."
msgstr ""

#. type: Plain text
msgid ""
"This document does not cover the creation of a 'vismach' model which, while "
"certainly very useful, requires just as much careful modeling if it is to "
"match the 'genserkins' model derived in this document."
msgstr ""

#. type: Plain text
msgid "There may be errors and/or shortcomings -- use at your own risk!"
msgstr ""

#. type: Plain text
msgid ""
"With the proliferation of industrial robots comes an increased interest to "
"control used robots with LinuxCNC.  A common type of robot used in industry "
"and manufacturing is the \"serial manipulator\" designed as a series of "
"motorized joints connected by rigid links.  Serial robots often have six "
"joints as required for the six degrees of freedom needed to both position "
"(XYZ) and orient (ABC or pitch, roll, yaw) an object in space.  Often these "
"robots have an arm structure that extends from a base to an end-effector."
msgstr ""

#. type: Plain text
msgid ""
"Control of such a serial robot requires the calculation of the end-"
"effector's position and orientation in relation to a reference coordinate "
"system when the joint angles are known (*forward kinematics*) and also the "
"more complex reverse calculation of the required joint angles for a given "
"end-effector position and orientation in relation to the reference "
"coordinate system (*inverse kinematics*).  The standard mathematical tools "
"used for these calculations are matrices which are basically tables of "
"parameters and formulas that make it easier to handle the rotations and "
"translations involved in forward and inverse kinematics calculations."
msgstr ""

#. type: Plain text
msgid ""
"Detailed familiarity with the math is not required for a serial robot since "
"LinuxCNC provides a kinematics module that implements an algorithm called "
"'genserkins' to calculate the forward and inverse kinematics for a generic "
"serial robot.  In order to control a specific serial robot, 'genserkins' "
"must be provided with data so that it can build a mathematical model of the "
"robot's mechanical structure and thus do the math."
msgstr ""

#. type: Plain text
msgid ""
"The required data needs to be in a standardized form that has been "
"introduced by Jacques Denavit and Richard Hartenberg back in the fifties and "
"are called the DH-Parameters.  Denavit and Hartenberg used four parameters "
"to describe how one joint is linked to the next.  These parameters describe "
"basically two rotations ('alpha' and 'theta') and two translations ('a' and "
"'d')."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modified DH-Parameters"
msgstr ""

#. type: Plain text
msgid ""
"As is often the case, this \"standard\" has been modified by other authors "
"who have introduced \"modified DH-parameters\" and one must be very careful "
"because 'genserkins' uses \"modified DH-parameters\" as described in the "
"publication \"Introduction to Robotics, Mechanics and Control\" by John J. "
"Craig.  Beware there is a lot of information to be found on 'DH-parameters' "
"but rarely does the author define which convention is actually used.  In "
"addition, some people have found it necessary to change the parameter named "
"'a' to 'r' and have thus added to the confusion.  This document adheres to "
"the convention in the above mentioned publication by Craig with the "
"difference that joint and parameter enumeration begins with the number '0' "
"in order to be consistent with 'genserkins' and its HAL pins."
msgstr ""

#. type: Plain text
msgid ""
"Standard and Modified DH-Parameters consist of four numeric values for each "
"joint ('a', 'd', 'alpha' and 'theta') that describe how the coordinate "
"system (CS) sitting in one joint has to be moved and rotated to be aligned "
"with the next joint.  Aligned means that the Z-axis of our CS coincides with "
"the axis of rotation of the joint and points in the positive direction such "
"that, using the right hand rule with the thumb pointing in the positive "
"direction of the Z-axis, the fingers point in the positive direction of "
"rotation of the joint.  It becomes clear that in order to do this, one must "
"decide on the positive directions of all joints before starting to derive "
"the parameters!"
msgstr ""

#. type: Plain text
msgid ""
"The difference between \"standard\" and \"modified\" notations is in how the "
"parameters are allocated to the links.  Using the \"standard\" DH-Parameters "
"in 'genserkins' will *not* give the correct mathematical model."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Modified DH-Parameters as used in 'genserkins'"
msgstr ""

#. type: Plain text
msgid ""
"Note that 'genserkins' does not handle offsets to theta-values -- theta is "
"the joint variable that is *controlled* by LinuxCNC.  With the CS aligned "
"with the joint, a rotation around its Z-Axis is identical to the rotation "
"commanded to that joint by LinuxCNC. This makes it impossible to define the "
"0Â° position of our robots joints arbitrarily."
msgstr ""

#. type: Plain text
msgid "The three configurable parameters are:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*alpha* : positive or negative rotation (in radians) around the X-axis\n"
"of the \"current coordinate system\"\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*a* : positive distance, along X, between two joint axes specified in\n"
"'machine units' (mm or inch) defined in the system's ini file.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*d* : positive or negative length along Z (also in 'machine units')\n"
msgstr ""

#. type: Plain text
msgid ""
"The parameter sets are always derived in the same order and a set is "
"completed by setting the d-parameter.  This does not leave the Z-axis of our "
"CS aligned with the next joint! This may seem confusing but sticking to this "
"rule will yield a working set of parameters.  Once the *d*-parameter is set, "
"the X-axis of our-CS needs to point to the axis of the next joint."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Numbering of joints and parameters"
msgstr ""

#. type: Plain text
msgid ""
"The first joint in LinuxCNC is joint-0 (because in software counting starts "
"with 0) while most publications start with the number '1'.  That goes for "
"all the parameters as well.  That is, numbering starts with a-0, alpha-0, "
"d-0 and ends with a-5, alpha-5 and d-5.  Keep this in mind when following a "
"publication to set up 'genserkins' parameters."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "How to start"
msgstr ""

#. type: Plain text
msgid ""
"Convention is to start by placing the reference-CS in the base of the robot "
"with it's Z-axis coinciding with the axis of the first joint and its X-axis "
"pointing toward the next joint's axis."
msgstr ""

#. type: Plain text
msgid ""
"This will also result in the DRO values in LinuxCNC being referenced to that "
"point.  Having done so sets a-0 and alpha-0 to 0.  The above mentioned "
"publication (Craig) also sets d-0 to 0, which is confusing when a "
"displacement offset is needed in order to have the reference-CS at the "
"bottom of the base.  Setting d-0 = to the displacement gives correct "
"results.  In this manner, the first set of parameters are alpha-0 = 0, a-0 = "
"0, d0 = displacement, and the X-axis of the CS points to the axis of the "
"next joint (joint-1)."
msgstr ""

#. type: Plain text
msgid ""
"Derivation of the net set (alpha-1, a-1, d-1) follows -- always using the "
"same sequence all the way to the sixth set (alpha-5, a-5, d-5)."
msgstr ""

#. type: Plain text
msgid ""
"And thus, the TCP-CS of the end-effector is sitting in the center of the "
"hand flange."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Special cases"
msgstr ""

#. type: Plain text
msgid ""
"If the next joint-axis is parallel to the last then one could arbitrarily "
"choose a value for the d-parameter but there is no point in setting it other "
"than 0."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Detailed Example (RV-6SL)"
msgstr ""

#. type: Plain text
msgid ""
"Described below is a method to derive the required \"modified DH-parameters"
"\" for a Mitsubishi RV-6SDL and how to set the parameters in the HAL file to "
"be used with the 'genserkins' kinematics in LinuxCNC.  The necessary "
"dimensions are best taken from a dimensional drawing provided by the "
"manufacturer of the robot."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-001.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-002.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-003.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-004.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-005.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-006.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-007.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-008.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-009.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-010.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-011.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-012.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-013.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-014.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-015.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-016.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-017.jpg"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "rv-6sl/rv-6sl-018.jpg"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Credits"
msgstr ""

#. type: Plain text
msgid ""
"Thanks to user Aciera for all text and the graphics for the RV-6SL robot!"
msgstr ""

#. useimage:: for equation png files -- no latexmath
#. type: Plain text
msgid "[[cha:5-axis-kinematics]] (((5-Axis Kinematics)))"
msgstr ""

#. type: Title =
#, no-wrap
msgid "5-Axis Kinematics"
msgstr ""

#. type: Plain text
msgid ""
"Coordinated multi-axis CNC machine tools controlled with LinuxCNC, require a "
"special kinematics component for each type of machine. This chapter "
"describes some of the most popular 5-axis machine configurations and then "
"develops the forward (from work to joint coordinates) and inverse (from "
"joint to work) transformations in a general mathematical process for two "
"types of machine."
msgstr ""

#. type: Plain text
msgid ""
"The kinematics components are given as well as vismach simulation models to "
"demonstrate their behaviour on a computer screen. Examples of HAL file data "
"are also given."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "5-Axis Machine Tool Configurations"
msgstr ""

#. type: Plain text
msgid ""
"In this section we deal with the typical 5-axis milling or router machines "
"with five joints or degrees-of-freedom which are controlled in coordinated "
"moves."
msgstr ""

#. type: Plain text
msgid ""
"3-axis machine tools cannot change the tool orientation, so 5-axis machine "
"tools use two extra axes to set the cutting tool in an appropriate "
"orientation for efficient machining of freeform surfaces."
msgstr ""

#. type: Plain text
msgid ""
"Typical 5-axis machine tool configurations are shown in Figs. 3, 5, 7 and "
"9-11 [1,2] in section Figures."
msgstr ""

#. type: Plain text
msgid ""
"The kinematics of 5-axes machine tools are much simpler than that of 6-axis "
"serial arm robots, since 3 of the axes are normally linear axes and only two "
"are rotational axes."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tool Orientation and Location"
msgstr ""

#. type: Plain text
msgid ""
"CAD/CAM systems are typically used to generate the 3D CAD models of the "
"workpiece as well as the CAM data for input to the CNC 5-axis machine. The "
"tool or cutter location (CL) data, is composed of the cutter tip position "
"and the cutter orientation relative to the workpiece coordinate system. Two "
"vectors, as generated by most CAM systems and shown in Fig. 1, contain this "
"information:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__1.png"
msgstr ""

#. type: Plain text
msgid ""
"The K vector is equivalent to the 3rd vector from the pose matrix E~6~ that "
"was used in the 6-axis robot kinematics [3] and the Q vector is equivalent "
"to the 4th vector of E~6~. In MASTERCAM for example this information is "
"contained in the intermediate output \".nci\" file."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Cutter location data"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-1.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Translation and Rotation Matrices"
msgstr ""

#. type: Plain text
msgid ""
"Homogeneous transformations provide a simple way to describe the mathematics "
"of multi-axis machine kinematics. A transformation of the space H is a 4x4 "
"matrix and can represent translation and rotation transformations. Given a "
"point x,y,x described by a vector u = {x,y,z,1}^T^, then its transformation "
"v is represented by the matrix product"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__2.png"
msgstr ""

#. type: Plain text
msgid ""
"There are four fundamental transformation matrices on which 5-axis "
"kinematics can be based:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__3.png"
msgstr ""

#. type: Plain text
msgid ""
"The matrix T(a,b,c) implies a translation in the X, Y, Z coordinate "
"directions by the amounts a, b, c respectively. The R matrices imply "
"rotations of the angle theta about the X, Y and Z coordinate axes "
"respectively. The 'C' and 'S' symbols refer to cosine and sine functions "
"respectively."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Table Rotary/Tilting 5-Axis Configurations"
msgstr ""

#. type: Plain text
msgid ""
"In these machine tools the two rotational axes mount on the work table of "
"the machine. Two forms are typically used:"
msgstr ""

#. type: Plain text
msgid ""
"A rotary table which rotates about the vertical Z-axes (C-rotation, "
"secondary) mounted on a tilting table which rotates about the X- or Y-axis "
"(A- or B-rotation, primary). The workpiece is mounted on the rotary table."
msgstr ""

#. type: Plain text
msgid ""
"A tilting table which rotates about the X- or Y-axis (A- or B-rotation, "
"secondary) is mounted on a rotary table which rotates about the Z-axis (C-"
"rotation, primary), with the workpiece on the tilting table."
msgstr ""

#. type: Block title
#, no-wrap
msgid "General configuration and coordinate systems"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-2.png"
msgstr ""

#. type: Plain text
msgid ""
"A multi-axis machine can be considered to consist of a series of links "
"connected by joints. By embedding a coordinate frame in each link of the "
"machine and using homogeneous transformations, we can describe the relative "
"position and orientation between these coordinate frames"
msgstr ""

#. type: Plain text
msgid ""
"We need to describe a relationship between the workpiece coordinate system "
"and the tool coordinate system. This can be defined by a transformation "
"matrix '^w^A~t~', which can be found by subsequent transformations between "
"the different structural elements or links of the machine, each with its own "
"defined coordinate system. In general such a transformation may look as "
"follows:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__4.png"
msgstr ""

#. type: Plain text
msgid ""
"where each matrix '^i-1^A~j~' is a translation matrix 'T' or a rotation "
"matrix 'R' of the form (2,3)."
msgstr ""

#. type: Plain text
msgid ""
"Matrix multiplication is a simple process in which the elements of each row "
"of the lefthand matrix A is multiplied by the elements of each column of the "
"righthand matrix B and summed to obtain an element in the result matrix C, "
"ie."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__5.png"
msgstr ""

#. type: Plain text
msgid ""
"In Fig. 2 a generic configuration with coordinate systems is shown [4]. It "
"includes table rotary/tilting axes as well as spindle rotary/tilting axes. "
"Only two of the rotary axes are actually used in a machine tool."
msgstr ""

#. type: Plain text
msgid ""
"First we will develop the transformations for the first type of "
"configuration mentioned above, ie. a table tilting/rotary (trt) type with no "
"rotating axis offsets. We may give it the name xyzac-trt configuration."
msgstr ""

#. type: Plain text
msgid ""
"We also develop the transformations for the same type (xyzac-trt), but with "
"rotating axis offsets."
msgstr ""

#. type: Plain text
msgid ""
"Then we develop the transformations for a xyzbc-trt configuration with "
"rotating axis offsets."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Transformations for a xyzac-trt machine tool with work offsets"
msgstr ""

#. type: Block title
#, no-wrap
msgid "vismach model of xyzac-trt with coincident rotation axes"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-3.png"
msgstr ""

#. type: Plain text
msgid ""
"We deal here with a simplified configuration in which the tilting axis and "
"rotary axis intersects at a point called the pivot point as shown in Fig. 4. "
"therefore the two coordinate systems 'O~ws~' and 'O~wp~' of Fig. 2 are "
"coincident."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table tilting/rotary configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-4.png"
msgstr ""

#. type: Plain text
msgid ""
"The transformation can be defined by the sequential multiplication of the "
"matrices:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__6.png"
msgstr ""

#. type: Plain text
msgid "with the matrices built up as follows:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__7.png"
msgstr ""

#. type: Plain text
msgid ""
"In these equations L~x~, L~y~, L~z~ defines the offsets of the pivot point "
"of the two rotary axes A and C relative to the workpiece coordinate system "
"origin. Furthermore, P~x~, P~y~, P~z~ are the relative distances of the "
"pivot point to the cutter tip position, which can also be called the \"joint "
"coordinates\" of the pivot point. The pivot point is at the intersection of "
"the two rotary axes. The signs of the S~A~ and S~C~ terms are different to "
"those in [2,3] since there the table rotations are negative relative to the "
"workpiece coordinate axes (note that sin(-theta) = -sin(theta), cos(-theta) "
"= cos(theta))."
msgstr ""

#. type: Plain text
msgid "When multiplied in accordance with (5), we obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__8.png"
msgstr ""

#. type: Plain text
msgid ""
"We can now equate the third column of this matrix with our given tool "
"orientation vector K, ie.:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__9.png"
msgstr ""

#. type: Plain text
msgid ""
"From these equations we can solve for the rotation angles theta~A~, "
"theta~C~. From the third row we find:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__10.png"
msgstr ""

#. type: Plain text
msgid "and by dividing the first row by the second row we find:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__11.png"
msgstr ""

#. type: Plain text
msgid ""
"These relationships are typically used in the CAM post-processor to convert "
"the tool orientation vectors to rotation angles."
msgstr ""

#. type: Plain text
msgid ""
"Equating the last column of (8) with the tool position vector Q, we can "
"write:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__12.png"
msgstr ""

#. type: Plain text
msgid ""
"The vector on the right hand side can also be written as the product of a "
"matrix and a vector resulting in:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__13.png"
msgstr ""

#. type: Plain text
msgid "This can be expanded to give"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__14.png"
msgstr ""

#. type: Plain text
msgid "which is the 'forward transformation' of the kinematics."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Inverse Transformation"
msgstr ""

#. type: Plain text
msgid ""
"We can solve for P from equation (13) as 'P = (^Q^A~P~)^-1^ * Q'. Noting "
"that the square matrix is a homogeneous 4x4 matrix containing a rotation "
"matrix R and translation vector q, for which the inverse can be written as:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__15.png"
msgstr ""

#. type: Plain text
msgid ""
"where R^T is the transpose of R (rows and columns swappped). We therefore "
"obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__16.png"
msgstr ""

#. type: Plain text
msgid ""
"The desired equations for the 'inverse transformation' of the kinematics "
"thus can be written as:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__17.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Transformations for a xyzac-trt machine  with rotary axis offsets"
msgstr ""

#. type: Block title
#, no-wrap
msgid "vismach model of xyzac-trt with rotational axis offsets (positive)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-5.png"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"We deal here with a extended configuration in which the tilting axis and rotary axis do not intersect at a point but have an offset D~y~. Furthermore, there is also an z-offset between the two coordinate systems 'O~ws~' and 'O~wp~' of Fig. 2, called D~z~. A vismach model is shown in Fig. 5 and the offsets are shown in Fig. 6 (positive offsets in this example). To simplify the configuration, the offsets L~x~, L~y~, L~z~ of the previous case\n"
" are not included. They are probably not necessary if one uses the G54 offsets in LinuxCNC by means of the \"touch of\" facility.\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table tilting/rotary xyzac-trt configuration, with axis offsets"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-6.png"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Forward Transformation"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__18.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__19.png"
msgstr ""

#. type: Plain text
msgid ""
"In these equations D~y~, D~z~ defines the offsets of the pivot point of the "
"rotary axes A relative to the workpiece coordinate system origin. "
"Furthermore, P~x~, P~y~, P~z~ are the relative distances of the pivot point "
"to the cutter tip position, which can also be called the \"joint coordinates"
"\" of the pivot point. The pivot point is on the A rotary axis."
msgstr ""

#. type: Plain text
msgid "When multiplied in accordance with (18), we obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__20.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__21.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__22.png"
msgstr ""

#. type: Plain text
msgid "and by dividing the second row by the first row we find:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__23.png"
msgstr ""

#. type: Plain text
msgid ""
"Equating the last column of (21) with the tool position vector Q, we can "
"write:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__24.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__25.png"
msgstr ""

#. type: Plain text
msgid ""
"We can solve for P from equation (25) as 'P = (^Q^A~P~)^-1^ * Q' using (15) "
"as before.  We thereby obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__26.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__27.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Transformations for a xyzbc-trt machine  with rotary axis offsets"
msgstr ""

#. type: Block title
#, no-wrap
msgid "vismach model of xyzbc-trt with rotational axis offsets (negative)"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-7.png"
msgstr ""

#. type: Plain text
msgid ""
"We deal here again with a extended configuration in which the tilting axis "
"(about the y-axis) and rotary axis do not intersect at a point but have an "
"offset D~x~. Furthermore, there is also an z-offset between the two "
"coordinate systems 'O~ws~' and 'O~wp~' of Fig. 2, called D~z~. A vismach "
"model is shown in Fig. 7 (negative offsets in this example) and the positive "
"offsets are shown in Fig. 8."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table tilting/rotary xyzbc-trt configuration, with axis offsets"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-8.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__28.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__29.png"
msgstr ""

#. type: Plain text
msgid ""
"In these equations D~x~, D~z~ defines the offsets of the pivot point of the "
"rotary axes B relative to the workpiece coordinate system origin. "
"Furthermore, P~x~, P~y~, P~z~ are the relative distances of the pivot point "
"to the cutter tip position, which can also be called the \"joint coordinates"
"\" of the pivot point. The pivot point is on the B rotary axis."
msgstr ""

#. type: Plain text
msgid "When multiplied in accordance with (29), we obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__30.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__31.png"
msgstr ""

#. type: Plain text
msgid ""
"From these equations we can solve for the rotation angles theta~B~, "
"theta~C~. From the third row we find:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__32.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__33.png"
msgstr ""

#. type: Plain text
msgid ""
"Equating the last column of (32) with the tool position vector Q, we can "
"write:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__34.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__35.png"
msgstr ""

#. type: Plain text
msgid ""
"We can solve for P from equation (37) as 'P = (^Q^A~P~)^-1^ * Q'.  With the "
"same approach as before, we obtain:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__36.png"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__37.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Table Rotary/Tilting Examples"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC includes kinematics modules for the 'xyzac-trt' and 'xyzbc-trt' "
"topologies described in the mathematics detailed above.  For interested "
"users, the source code is available in the git tree in the 'src/emc/"
"kinematics/' directory."
msgstr ""

#. type: Plain text
msgid ""
"Example xyzac-trt and xyzbc-trt simulation configurations are located in the "
"Sample Configurations ('configs/sim/axis/vismach/5axis/table-rotary-"
"tilting/')  directory."
msgstr ""

#. type: Plain text
msgid ""
"The example configurations include the required ini files and an examples "
"subdirectory with gode (.ngc) files. These sim configurations invoke a "
"realistic 3-dimensional model using the LinuxCNC vismach facility."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Vismach Simulation Models"
msgstr ""

#. type: Plain text
msgid ""
"Vismach is a library of python routines to display a dynamic simulation of a "
"CNC machine on the PC screen. The python script for a particular machine is "
"loaded in HAL and data passed by HAL pin connections.  The user-space "
"vismach model is loaded by a hal command like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "loadusr -W xyzac-trt-gui\n"
msgstr ""

#. type: Plain text
msgid "and connections are made using HAL commands like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net  :table-x   joint.0.pos-fb xyzac-trt-gui.table-x\n"
"net  :saddle-y  joint.1.pos-fb xyzac-trt-gui.saddle-y\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"See the simulation ini files for details of the HAL connections used for the "
"vismach model."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Tool-Length Compensation"
msgstr ""

#. type: Plain text
msgid ""
"In order to use tools from a tool table sequentially with tool-length "
"compensation applied automatically, a further Z-offset is required. For a "
"tool that is longer than the \"master\" tool, which typically has a tool "
"length of zero, LinuxCNC has a variable called \"motion.tooloffset.z\". If "
"this variable is passed on to the kinematic component (and vismach python "
"script), then the necessary additional Z-offset for a new tool can be "
"accounted for by adding the component statement, for example:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/equation__38.png"
msgstr ""

#. type: Plain text
msgid "The required HAL connection (for xyzac-trt) is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "net :tool-offset motion.tooloffset.z xyzac-trt-kins.tool-offset\n"
msgstr ""

#. type: Plain text
msgid "where:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
":tool-offset ---------------- signal name\n"
"motion.tooloffset.z --------- output HAL pin from LinuxCNC motion module\n"
"xyzac-trt-kins.tool-offset -- input  HAL pin to xyzac-trt-kins\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Custom Kinematics Components"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC implements kinematics using a HAL component that is loaded at "
"startup of LinuxCNC.  The most common kinematics module, 'trivkins', "
"implements identity (trivial) kinematics where there is a one-to-one "
"correspondence between an axis coordinate letter and a motor joint.  "
"Additional kinematics modules for more complex systems (including 'xyzac-"
"trt' and 'xyzbc-trt' described above) are available."
msgstr ""

#. type: Plain text
msgid ""
"See the kins manpage (*\\$ man kins*) for brief descriptions of the "
"available kinematics modules."
msgstr ""

#. type: Plain text
msgid ""
"The kinematics modules provided by LinuxCNC are typically written in the C-"
"language.  Since a standard structure is used, creation of a custom "
"kinematics module is facilitated by copying an existing source file to a "
"user file with a new name, modifying it, and then installing."
msgstr ""

#. type: Plain text
msgid "Installation is done using halcompile:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "sudo halcompile --install kinsname.c\n"
msgstr ""

#. type: Plain text
msgid ""
"where \"kinsname\" is the name you give to your component. The sudo prefix "
"is required to install it and you will be asked for your root password.  See "
"the halcompile man page for more information (*\\$ man halcompile*)"
msgstr ""

#. type: Plain text
msgid ""
"Once it is compiled and installed you can reference it in your config setup "
"of your machine. This is done in the ini file of your config directory. For "
"example, the common ini specificaion:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = trivkins\n"
msgstr ""

#. type: Plain text
msgid "is replaced by"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = kinsname\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"where \"kinsname\" is the name of your kins program.  Additional HAL pins may\n"
"be created by the module for variable configuration items such as\n"
"the D~x~, D~y~, D~z~, tool-offset used in the xyzac-trt kinematics\n"
"module.   These pins can be connected to a signal for dynamic control\n"
"or set once with HAL connections like:\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# set offset parameters\n"
"net :tool-offset motion.tooloffset.z xyzac-trt-kins.tool-offset\n"
"setp xyzac-trt-kins.y-offset 0\n"
"setp xyzac-trt-kins.z-offset 20\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Figures"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Table tilting/rotating configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-9.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Spindle/table tilting configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-10.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Spindle tilting/rotary configuration"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "5-axis-figures/Figure-11.png"
msgstr ""

#. == References  nope nope nope pdf nope
#. type: Title ==
#, no-wrap
msgid "REFERENCES"
msgstr ""

#. type: Plain text
msgid ""
"A Postprocessor Based on the Kinematics Model for General Five-Axis machine "
"Tools: C-H She, R-S Lee, J Manufacturing Processes, V2 N2, 2000."
msgstr ""

#. type: Plain text
msgid ""
"NC Post-processor for 5-axis milling of table-rotating/tilting type: YH "
"Jung, DW Lee, JS Kim, HS Mok, J Materials Processing Technology,130-131 "
"(2002)  641-646."
msgstr ""

#. type: Plain text
msgid ""
"3D 6-DOF Serial Arm Robot Kinematics, RJ du Preez, SA-CNC-CLUB, Dec.  5, "
"2013."
msgstr ""

#. type: Plain text
msgid ""
"Design of a generic five-axis postprocessor based on generalized kinematics "
"model of machine tool: C-H She, C-C Chang, Int. J Machine Tools & "
"Manufacture, 47 (2007) 537-545."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Switchable Kinematics (switchkins)"
msgstr ""

#. type: Plain text
msgid ""
"A number of kinematics modules support the switching of kinematics "
"calculations.  These modules support a default kinematics method (type0), a "
"second built-in method (type1), and (optionally) a user-provided kinematics "
"method (type2).  Identity kinematics are typically used for the type1 method."
msgstr ""

#. type: Plain text
msgid ""
"The switchkins functionality can be used for machines where post-homing "
"joint control is needed during setup or to avoid movement near singularities "
"from gcode.  Such machines use specific kinematics calculations for most "
"operations but can be switched to identity kinematics for control of "
"individual joints after homing."
msgstr ""

#. type: Plain text
msgid ""
"The kinematics type is selected by a motion module hal pin that can be "
"updated from a gcode program or by interactive MDI commands.  The halui "
"provisions for activating MDI commands can be used to allow buttons to "
"select the kinematics type using hardware controls or a virtual panel (pyvcp,"
"gladevcp, etc.)."
msgstr ""

#. type: Plain text
msgid ""
"When a kinematics type is changed, the gcode must also issue commands to "
"*force synchronization* of the interpreter and motion parts of LinuxCNC.  "
"Typically, a hal pin 'read' command (M66 E0 L0) is used immediately after "
"altering the controlling hal pin to force synchronization."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Switchable Kinematic Modules"
msgstr ""

#. type: Plain text
msgid "The following kinematics modules support switchable kinematics:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*xyzac-trt-kins* (type0:xyzac-trt-kins type1:identity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*xyzbc-trt-kins* (type0:xyzbc-trt-kins type1:identity\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*genhexkins*     (type0:genhexkins     type1:identity)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*genserkins*     (type0:genserkins     type1:identity) (puma560 example)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*pumakins*       (type0:pumakins       type1:identity)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*scarakins*      (type0:scarakins      type1:identity)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*5axiskins*      (type0:5axiskins      type1:identity) (bridgemill)\n"
msgstr ""

#. type: Plain text
msgid ""
"The xyz[ab]c-trt-kins modules by default use type0==xyz[ab]c-trt-kins for "
"backwards compatibility.  The provided sim configs alter the type0/type1 "
"convention by forcing type0==identity kinematics using the module string "
"parameter 'sparm' with an inifile setting like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"KINEMATICS = xyzac-trt-kins sparm=identityfirst\n"
"...\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Identity letter assignments"
msgstr ""

#. type: Plain text
msgid ""
"When using an *identity* kinematics type, the module parameter 'coordinates' "
"can be used to assign letters to joints in arbitrary order from the set of "
"allowed coordinate letters.  Examples:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[KINS]\n"
"JOINTS = 6\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# conventional identity ordering: joint0==x, joint1==y, ...\n"
"KINEMATICS = genhexkins coordinates=xyzabc\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# custom identity ordering: joint0==c, joint1==b, ...\n"
"# KINEMATICS = genhexkins coordinates=cbazyx\n"
msgstr ""

#. type: Plain text
msgid ""
"If the coordinates= parameter is omitted, the default joint-letter identity "
"assignments are joint0==x,joint1=y,..."
msgstr ""

#. type: Plain text
msgid ""
"The joint assignments provided for *identity* kinematics when using the "
"coordinates parameter are identical to those provided for the trivkins "
"module.  However, duplication of axis letters to assign multiple joints for "
"a coordinate letter is not generally applicable for serial or parallel "
"kinematics (like genserkins, pumakins, genhexkins, etc.)  where there is no "
"simple relationship between joints and coordinates."
msgstr ""

#. type: Plain text
msgid ""
"Duplication of axis coordinate letters is supported in the kinematics "
"modules xyzac-trt-kins, xyzbc-trt-kins, and 5axiskins (bridgemill).  Typical "
"applications for duplicate coordinates are gantry machines where two motors "
"(joints)  are used for the transverse axis."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Backwards compatibility"
msgstr ""

#. type: Plain text
msgid ""
"Switchable kinematics initalize with motion.switchkins-type==0 implementing "
"their eponymous kinematics method.  If the the motion.switchkins-type pin is "
"not connected -- as in legacy configurations -- only the default kinematics "
"type is available."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Hal Pins"
msgstr ""

#. type: Plain text
msgid ""
"Kinematics switching is controlled by the motion module input hal pin "
"*motion.switchkins-type*.  The floating point pin value is truncated to "
"integer and used to select one of the provided kinematics types.  The zero "
"startup value selects the type0 default kinematics type."
msgstr ""

#. type: Plain text
msgid ""
"The motion.switchkins-type input pin is floating point in order to "
"facilitate connections to motion module output pins like motion.analog-"
"out-0n that are controllable by standard Mcodes (typically M68EnL0)."
msgstr ""

#. type: Plain text
msgid ""
"Output hal pins are provided to inform guis of the current kinematics type.  "
"These pins can also be connected to digital inputs that are read by gcode "
"programs to enable or disable program behavior in accordance with the active "
"kinematics type."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal Pin Summary"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*motion.switchkins-type*  Input  (float)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*kinstype.is-0*           Output (bit)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*kinstype.is-1*           Output (bit)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*kinstype.is-2*           Output (bit)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hal Connections"
msgstr ""

#. type: Plain text
msgid ""
"Switchkins functionality is enabled by the pin *motion.switchkins-type*.  "
"Typically, this pin is sourced by an analog output pin like motion.analog-"
"out-03 so that it can be set by M68 commands.  Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"net :kinstype-select <= motion.analog-out-03\n"
"net :kinstype-select => motion.switchkins-type\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Gcode/Mcode commands"
msgstr ""

#. type: Plain text
msgid "Kinstype selection is managed using gcode sequences like:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"...\n"
"M68 E3 Q1 ;update analog-out-03 to select kinstype 1\n"
"M66 E0 L0 ;sync interp-motion\n"
"...\n"
"...       ;user gcode\n"
"...\n"
"M68 E3 Q0 ;update analog-out-03 to select kinstype 0\n"
"M66 E0 L0 ;sync interp-motion\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"An M66 'wait-on-input' command updates the #5399 variable.  If the current "
"value of this variable is needed for subsequent purposes, it should be "
"copied to an additional variable before invoking M66."
msgstr ""

#. type: Plain text
msgid ""
"These gcode command sequences are typically implemented in gcode subroutines "
"as remapped Mcodes or with conventional Mcode scripts."
msgstr ""

#. type: Plain text
msgid "Suggested codes (as used in sim configs) are:"
msgstr ""

#. type: Plain text
msgid "Conventional User Mcodes:"
msgstr ""

#. type: Plain text
msgid "M128 Select kinstype 0 (startup default kinematics)"
msgstr ""

#. type: Plain text
msgid "M129 Select kinstype 1 (typically identity kinematics)"
msgstr ""

#. type: Plain text
msgid "M130 Select kinstype 2 (user-provided kinematics)"
msgstr ""

#. type: Plain text
msgid "Remapped Mcodes:"
msgstr ""

#. type: Plain text
msgid "M428 Select kinstype 0 (startup default kinematics)"
msgstr ""

#. type: Plain text
msgid "M429 Select kinstype 1 (typically identity kinematics)"
msgstr ""

#. type: Plain text
msgid "M430 Select kinstype 2 (user-provided kinematics)"
msgstr ""

#. type: Plain text
msgid ""
"Conventional user Mcodes (in the range M100-M199) are in modal group 10.  "
"Remapped Mcodes (in the range M200 to M999) can specify a modalgroup.  See "
"the remap documentation for additional information."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Inifile Limit settings"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC trajectory planning uses limits for position (min,max), velocity, "
"and acceleration for each applicable coordinate letter specified in the "
"configuration ini file.  Example for letter L (in the set 'XYZABCUVW'):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[AXIS_L]\n"
"MIN_LIMIT =\n"
"MAX_LIMIT =\n"
"MAX_VELOCITY =\n"
"MIN_ACCELERATION =\n"
msgstr ""

#. type: Plain text
msgid ""
"The inifile limits specified apply to the type 0 default kinematics type "
"that is activated at startup.  These limits may *not* be applicable when "
"switching to alternative kinematics.  However, since an interpreter-motion "
"synchronization is required when switching kinematics, ini-hal pins can be "
"used to setup limits for a pending kinematics type."
msgstr ""

#. type: Plain text
msgid ""
"Ini-hal pins are typically not recognized during a gcode program unless a "
"synchronization (queue-buster) command is issued.  See the milltask manpage "
"for more information ($ man milltask)"
msgstr ""

#. type: Plain text
msgid "The relevant ini-hal pins for a joint number (N) are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"ini.N.min_limit\n"
"ini.N.max_limit\n"
"ini.N.max_acceleration\n"
"ini.N.max_velocity\n"
msgstr ""

#. type: Plain text
msgid "The relevant ini-hal pins for an axis coordinate (L) are:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"ini.L.min_limit\n"
"ini.L.max_limit\n"
"ini.L.max_velocity\n"
"ini.L.max_acceleration\n"
msgstr ""

#. type: Plain text
msgid ""
"In general, there are no fixed mappings between joint numbers and axis "
"coordinate letters.  There may be specific mappings for some kinematics "
"modules especially those that implement identity kinematics (trivkins).  See "
"the kins man page for more information ($ man kins)"
msgstr ""

#. type: Plain text
msgid ""
"A user-provided Mcode can alter any or all of the axis coordinate limits "
"prior to changing the motion.switchkins-type pin and synchronizing the "
"interpreter and motionparts of LinuxCNC.  As an example, a bash script "
"invoking halcmd can be 'hardcoded' to set any number of hal pins:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/bin/bash\n"
"halcmd -f <<EOF\n"
"setp ini.x.min_limit -100\n"
"setp ini.x.max_limit  100\n"
"# ... repeat for other limit parameters\n"
"EOF\n"
msgstr ""

#. type: Plain text
msgid ""
"Scripts like this can be invoked as a user Mcode and used *prior* to the "
"kins switching Mcode that updates the motion.switchkins-type hal pin and "
"forces an interp-motion sync.  Typically, separate scripts would be used for "
"each kinstype (0,1,2)."
msgstr ""

#. type: Plain text
msgid ""
"When identity kinematics are provided as a means to control individual "
"joints, it may be convenient to set or restore limits as specified in the "
"system ini file.  For example, a robot starts with a complex (non-identity) "
"kinematics (type0) after homing.  The system is configured so that it can be "
"switched to identity kinematics (type1) in order to manipulate individual "
"joints using the conventional letters from the set 'XYZABCUVW'.  The ini "
"file settings ([AXIS_L]) are *not* applicable when operating with identity "
"(type1) kinematics.  To address this use case, the user Mcode scripts can be "
"designed as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M129* (Switch to identity type1)\n"
msgstr ""

#. type: Plain text
msgid "read and parse ini file"
msgstr ""

#. type: Plain text
msgid ""
"hal: setp the ini-hal limit pins for each axis letter ([AXIS_L])  according "
"to the 'identity-referenced' joint number ini file setting ([JOINT_N])"
msgstr ""

#. type: Plain text
msgid "hal: setp motion.switchkins-type 1"
msgstr ""

#. type: Plain text
msgid "mdi: execute a synching gcode (M66E0L0)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*M128* (restore robot default kinematics type 0)\n"
msgstr ""

#. type: Plain text
msgid ""
"hal: setp the ini-hal limit pins for each axis letter ([AXIS_L])  according "
"to the appropriate inifile setting ([AXIS_L])"
msgstr ""

#. type: Plain text
msgid "hal: setp motion.switchkins-type 0"
msgstr ""

#. type: Plain text
msgid ""
"The vismach simulation configurations for a puma robot demonstrate Mcode "
"scripts (M128,M129,M130) for this example use case."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Offset considerations"
msgstr ""

#. type: Plain text
msgid ""
"Like inifile limit settings, coordinate system offsets (G92, G10L2, G10L20, "
"G43, etc) are generally applicable only for the type 0 default startup "
"kinematics type.  When switching kinematics types, it may be *important* to "
"either reset all offsets prior to switching or update offsets based on "
"system-specific requirements."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Simulation configs"
msgstr ""

#. type: Plain text
msgid ""
"Simulation configs (requiring no hardware) are provided with illustrative "
"vismach displays in subdirectories of configs/sim/axis/vismach/"
msgstr ""

#. type: Plain text
msgid "5axis/table-rotary-tilting/xyzac-trt.ini (xyzac-trt-kins)"
msgstr ""

#. type: Plain text
msgid "5axis/table-rotary-tilting/xyzbc-trt.ini (xyzac-trt-kins)"
msgstr ""

#. type: Plain text
msgid "5axis/bridgemill/5axis.ini (5axiskins)"
msgstr ""

#. type: Plain text
msgid "scara/scara.ini (scarakins)"
msgstr ""

#. type: Plain text
msgid "puma/puma560.ini (genserkins)"
msgstr ""

#. type: Plain text
msgid "puma/puma.ini (pumakins)"
msgstr ""

#. type: Plain text
msgid "hexapod-sim/hexapod.ini (genhexkins)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "User kinematics provisions"
msgstr ""

#. type: Plain text
msgid ""
"Custom kinematics can be coded and tested on Run-In-Place ('RIP')  builds.  "
"A template file src/emc/kinematics/userkfuncs.c is provided in the "
"distribution.  This file can be copied/renamed to a user directory and "
"edited to supply custom kinematics with kinstype==2."
msgstr ""

#. type: Plain text
msgid ""
"The user custom kinematics file can be compiled from out-of-tree source "
"locations for rt-preempt implementations or by replacing the in-tree "
"template file (src/emc/kinematics/userkfuncs.c) for rtai systems."
msgstr ""

#. type: Plain text
msgid "Preempt-rt make example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ userkfuncs=/home/myname/kins/mykins.c make && sudo make setuid\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Warnings"
msgstr ""

#. type: Plain text
msgid ""
"Unexpected behavior can result if a gcode program is inadvertently started "
"with an incompatible kinematics type.  Unwanted behavior can be circumvented "
"in gcode programs by:"
msgstr ""

#. type: Plain text
msgid ""
"Connecting appropriate kinstype.is.N hal pins to digital input pins (like "
"motion.digital-in-0m)."
msgstr ""

#. type: Plain text
msgid ""
"Reading the digital input pin (M66 E0 Pm) at the start of the gcode program"
msgstr ""

#. type: Plain text
msgid ""
"Aborting (M2) the gcode program with a message (DEBUG, problem_message)  if "
"the kinstype is not suitable."
msgstr ""

#. type: Plain text
msgid ""
"When using jogging facilities or MDI commands interactively, operator "
"caution is required.  Guis should include indicators to display the current "
"kinematics type."
msgstr ""

#. type: Plain text
msgid ""
"Switching kinematics can cause substantial operational changes requiring "
"careful design, testing, and training for deployment.  The management of "
"coordinate offsets, tool compensation, and inifile limits may require "
"complicated and non-standard operating protocols."
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Code Notes"
msgstr ""

#. type: Plain text
msgid ""
"Kinematic modules providing switchkins functionality are linked to the "
"switchkins.o object (switchkins.c) that provides the module 'main' program "
"(rtapi_app_main()) and related functions.  This 'main' program reads "
"(optional) module command-line parameters (coordinates, sparm) and passes "
"them to the module-provided function switchkinsSetup()."
msgstr ""

#. type: Plain text
msgid ""
"The switchkinsSetup() function identifies kinstype-specific setup routines "
"and the functions for forward an inverse calculation for each kinstype "
"(0,1,2) and sets a number of configuration settings."
msgstr ""

#. type: Plain text
msgid ""
"After calling switchkinsSetup(), rtapi_app_main() checks the supplied "
"parameters, creates a hal component, and then invokes the setup routine "
"identified for each kinstype (0,1,2)."
msgstr ""

#. type: Plain text
msgid ""
"Each kinstype (0,1,2) setup routine can (optionally) create hal pins and set "
"them to default values.  When all setup routines finish, rtapi_app_main() "
"issues hal_ready() for the component to complete creation of the module."
msgstr ""

#. type: Title =
#, no-wrap
msgid "PID Tuning"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "PID Controller"
msgstr ""

#. type: Plain text
msgid ""
"A proportional-integral-derivative controller (PID controller) is a common "
"feedback loop component in industrial control systems.footnote:[This "
"Subsection is taken from an much more extensive article found at http://en."
"wikipedia.org/wiki/PID_controller]"
msgstr ""

#. type: Plain text
msgid ""
"The Controller compares a measured value from a process (typically an "
"industrial process) with a reference set point value. The difference (or "
"'error' signal) is then used to calculate a new value for a manipulable "
"input to the process that brings the process measured value back to its "
"desired set point."
msgstr ""

#. type: Plain text
msgid ""
"Unlike simpler control algorithms, the PID controller can adjust process "
"outputs based on the history and rate of change of the error signal, which "
"gives more accurate and stable control. (It can be shown mathematically that "
"a PID loop will produce accurate, stable control in cases where a simple "
"proportional control would either have a steady-state error or would cause "
"the process to oscillate)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Control loop basics"
msgstr ""

#. type: Plain text
msgid ""
"Intuitively, the PID loop tries to automate what an intelligent operator "
"with a gauge and a control knob would do. The operator would read a gauge "
"showing the output measurement of a process, and use the knob to adjust the "
"input of the process (the 'action') until the process's output measurement "
"stabilizes at the desired value on the gauge."
msgstr ""

#. type: Plain text
msgid ""
"In older control literature this adjustment process is called a 'reset' "
"action. The position of the needle on the gauge is a 'measurement', 'process "
"value' or 'process variable'. The desired value on the gauge is called a "
"'set point' (also called 'set value'). The difference between the gauge's "
"needle and the set point is the 'error'."
msgstr ""

#. type: Plain text
msgid "A control loop consists of three parts:"
msgstr ""

#. type: Plain text
msgid "Measurement by a sensor connected to the process (e.g. encoder),"
msgstr ""

#. type: Plain text
msgid "Decision in a controller element,"
msgstr ""

#. type: Plain text
msgid "Action through an output device such as an motor."
msgstr ""

#. type: Plain text
msgid ""
"As the controller reads a sensor, it subtracts this measurement from the "
"'set point' to determine the 'error'. It then uses the error to calculate a "
"correction to the process's input variable (the 'action')  so that this "
"correction will remove the error from the process's output measurement."
msgstr ""

#. type: Plain text
msgid ""
"In a PID loop, correction is calculated from the error in three ways: cancel "
"out the current error directly (Proportional), the amount of time the error "
"has continued uncorrected (Integral), and anticipate the future error from "
"the rate of change of the error over time (Derivative)."
msgstr ""

#. type: Plain text
msgid ""
"A PID controller can be used to control any measurable variable which can be "
"affected by manipulating some other process variable. For example, it can be "
"used to control temperature, pressure, flow rate, chemical composition, "
"speed, or other variables. Automobile cruise control is an example of a "
"process outside of industry which utilizes crude PID control."
msgstr ""

#. type: Plain text
msgid ""
"Some control systems arrange PID controllers in cascades or networks.  That "
"is, a 'master' control produces signals used by 'slave' controllers. One "
"common situation is motor controls: one often wants the motor to have a "
"controlled speed, with the 'slave' controller (often built into a variable "
"frequency drive) directly managing the speed based on a proportional input. "
"This 'slave' input is fed by the 'master' controller's output, which is "
"controlling based upon a related variable."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Theory"
msgstr ""

#. type: Plain text
msgid ""
"'PID' is named after its three correcting calculations, which all add to and "
"adjust the controlled quantity. These additions are actually 'subtractions' "
"of error, because the proportions are usually negative:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Proportional"
msgstr ""

#. type: Plain text
msgid ""
"To handle the present, the error is multiplied by a (negative)  constant P "
"(for 'proportional'), and added to (subtracting error from)  the controlled "
"quantity. P is only valid in the band over which a controller's output is "
"proportional to the error of the system. Note that when the error is zero, a "
"proportional controller's output is zero."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Integral"
msgstr ""

#. type: Plain text
msgid ""
"To learn from the past, the error is integrated (added up) over a period of "
"time, and then multiplied by a (negative) constant I (making an average), "
"and added to (subtracting error from) the controlled quantity. I averages "
"the measured error to find the process output's average error from the set "
"point. A simple proportional system either oscillates, moving back and forth "
"around the set point because there's nothing to remove the error when it "
"overshoots, or oscillates and/or stabilizes at a too low or too high value. "
"By adding a negative proportion of (i.e. subtracting part of) the average "
"error from the process input, the average difference between the process "
"output and the set point is always being reduced. Therefore, eventually, a "
"well-tuned PID loop's process output will settle down at the set point."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Derivative"
msgstr ""

#. type: Plain text
msgid ""
"To handle the future, the first derivative (the slope of the error)  over "
"time is calculated, and multiplied by another (negative) constant D, and "
"also added to (subtracting error from) the controlled quantity.  The "
"derivative term controls the response to a change in the system.  The larger "
"the derivative term, the more rapidly the controller responds to changes in "
"the process's output."
msgstr ""

#. type: Plain text
msgid ""
"More technically, a PID loop can be characterized as a filter applied to a "
"complex frequency-domain system. This is useful in order to calculate "
"whether it will actually reach a stable value. If the values are chosen "
"incorrectly, the controlled process input can oscillate, and the process "
"output may never stay at the set point."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Loop Tuning"
msgstr ""

#. type: Plain text
msgid ""
"'Tuning' a control loop is the adjustment of its control parameters (gain/"
"proportional band, integral gain/reset, derivative gain/rate) to the optimum "
"values for the desired control response. The optimum behavior on a process "
"change or set point change varies depending on the application. Some "
"processes must not allow an overshoot of the process variable from the set "
"point. Other processes must minimize the energy expended in reaching a new "
"set point. Generally stability of response is required and the process must "
"not oscillate for any combination of process conditions and set points."
msgstr ""

#. type: Plain text
msgid ""
"Tuning of loops is made more complicated by the response time of the "
"process; it may take minutes or hours for a set point change to produce a "
"stable effect. Some processes have a degree of non-linearity and so "
"parameters that work well at full-load conditions don't work when the "
"process is starting up from no-load. This section describes some traditional "
"manual methods for loop tuning."
msgstr ""

#. type: Plain text
msgid ""
"There are several methods for tuning a PID loop. The choice of method will "
"depend largely on whether or not the loop can be taken 'offline' for tuning, "
"and the response speed of the system. If the system can be taken offline, "
"the best tuning method often involves subjecting the system to a step change "
"in input, measuring the output as a function of time, and using this "
"response to determine the control parameters."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Simple method"
msgstr ""

#. type: Plain text
msgid ""
"If the system must remain on line, one tuning method is to first set the I "
"and D values to zero. Increase the P until the output of the loop "
"oscillates. Then increase I until oscillation stops. Finally, increase D "
"until the loop is acceptably quick to reach its reference. A fast PID loop "
"tuning usually overshoots slightly to reach the set point more quickly; "
"however, some systems cannot accept overshoot."
msgstr ""

#. type: Table
#, no-wrap
msgid "Rise Time"
msgstr ""

#. type: Table
#, no-wrap
msgid "Overshoot"
msgstr ""

#. type: Table
#, no-wrap
msgid "Settling Time"
msgstr ""

#. type: Table
#, no-wrap
msgid "Steady State Error"
msgstr ""

#. type: Table
#, no-wrap
msgid "Decrease"
msgstr ""

#. type: Table
#, no-wrap
msgid "Increase"
msgstr ""

#. type: Table
#, no-wrap
msgid "Small Change"
msgstr ""

#. type: Table
#, no-wrap
msgid "Eliminate"
msgstr ""

#. type: Plain text
msgid "Effects of increasing parameters"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Ziegler-Nichols method"
msgstr ""

#. type: Plain text
msgid ""
"Another tuning method is formally known as the 'Ziegler-Nichols method', "
"introduced by John G. Ziegler and Nathaniel B. Nichols. It starts in the "
"same way as the method described before: first set the I and D gains to zero "
"and then increase the P gain and expose the loop to external interference "
"for example knocking the motor axis to cause it to move out of equilibrium "
"in order to determine critical gain and period of oscillation until the "
"output of the loop starts to oscillate.  Write down the critical gain (K~c~) "
"and the oscillation period of the output (P~c~). Then adjust the P, I and D "
"controls as the table shows:"
msgstr ""

#. type: Table
#, no-wrap
msgid "Control type"
msgstr ""

#. type: Table
#, no-wrap
msgid ".5K~c~"
msgstr ""

#. type: Table
#, no-wrap
msgid "PI"
msgstr ""

#. type: Table
#, no-wrap
msgid ".45K~c~"
msgstr ""

#. type: Table
#, no-wrap
msgid "P~c~/1.2"
msgstr ""

#. type: Table
#, no-wrap
msgid ".6K~c~"
msgstr ""

#. type: Table
#, no-wrap
msgid "P~c~/2"
msgstr ""

#. type: Table
#, no-wrap
msgid "P~c~/8"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Final Steps"
msgstr ""

#. type: Plain text
msgid ""
"After tuning the axis check the following error with Halscope to make sure "
"it is within your machine requirements. More information on Halscope is in "
"the HAL User manual."
msgstr ""

#. type: Title =
#, no-wrap
msgid "External Axis Offsets"
msgstr ""

#. type: Plain text
msgid ""
"External axis offsets are supported during teleop (world) jogs and "
"coordinated (gcode) motion.  External axis offsets are enabled on a per-axis "
"basis by ini file settings and controlled dynamically by hal input pins.  "
"The hal interface is similar to that used for wheel jogging.  This type of "
"interface is typically implemented with a manual-pulse-generator (mpg)  "
"connected to an encoder hal component that counts pulses."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Ini file Settings"
msgstr ""

#. type: Plain text
msgid "For each axis letter (*L* in xyzabcuvw):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "[AXIS_L]OFFSET_AV_RATIO = value (controls accel/vel for external offsets)\n"
msgstr ""

#. type: Plain text
msgid "Allowed values: 0 <= value <= 0.9"
msgstr ""

#. type: Plain text
msgid "Disallowed values are replaced with 0.1 with message to stdout"
msgstr ""

#. type: Plain text
msgid ""
"Default value: 0 (disables external offset).  Consequence: omitted "
"[AXIS_L]OFFSET_AV_RATIO disables external offset for the axis."
msgstr ""

#. type: Plain text
msgid ""
"If nonzero, the OFFSET_AV_RATIO (*r*), adjusts the conventional (planning) "
"max"
msgstr ""

#. type: Plain text
msgid "velocity and acceleration to preserve [AXIS_L] constraints:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"planning max velocity        = (1-r) * MAX_VELOCITY\n"
"external offset velocity     = (  r) * MAX_VELOCITY\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"planning max acceleration    = (1-r) * MAX_ACCELERATIOIN\n"
"external offset acceleration = (  r) * MAX_ACCELERATION\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Per-Axis Motion Hal Pins"
msgstr ""

#. type: Plain text
msgid "For each axis letter (*L* in xyzabcuvw)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset-enable*  Input(bit): enable\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset-scale*   Input(float): scale factor\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset-counts*  Input(s32): input to counts register\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset-clear*   Input(bit): clear requested offset\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset*         Output(float): current external offset\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*axis.L.eoffset-request* Output(float): requested external offset\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Other Motion Hal Pins"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*motion.eoffset-active*   Output(bit): non-zero external offsets applied\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*motion.eoffset-limited*  Output(bit): motion inhibited due to soft limit\n"
msgstr ""

#. type: Plain text
msgid ""
"The axis input hal pins (enable,scale,counts) are similar to the pins used "
"for wheel jogging."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Offset Computation"
msgstr ""

#. type: Plain text
msgid ""
"At each servo period, the 'axis.L.eoffset-counts' pin is compared to its "
"value in the prior period.  The increase or decrease (positive or negative "
"delta) of the 'axis.L.eoffset-counts' pin is multiplied by the current 'axis."
"L.eoffset-scale' pin value.  This product is accumulated in an internal "
"register and exported to the 'axis.L.eoffset-request' hal pin.  The "
"accumulation register is reset to zero at each machine-on."
msgstr ""

#. type: Plain text
msgid ""
"The requested offset value is used to plan the movement for the offset that "
"is applied to the 'L' coordinate and represented by the 'axis.L.eoffset' hal "
"pin.  The planned motion respects the allocated velocity and acceleration "
"constraints and may be limited if the net motion (offset plus teleop jogging "
"or coordinated motion)  reaches a soft limit for the 'L' coordinate."
msgstr ""

#. type: Plain text
msgid ""
"For many applications, the 'axis.L.eoffset-scale' pin is constant and the "
"net 'axis.L.eoffset-request' response to 'axis.L.eoffset-counts' is "
"equivalent to the product of the accumulated value of 'axis.L.eoffset-"
"counts' and the (constant)  'axis.L.eoffset-scale' pin values."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Machine-off/Machine-on"
msgstr ""

#. type: Plain text
msgid ""
"When the machine is turned off, the *current position with external offsets "
"is maintained* so that there is no unexpected motion at turn off or turn on."
msgstr ""

#. type: Plain text
msgid ""
"At each startup (machine-on), the internal counts register for each hal pin "
"'axis.L.eoffset-counts' is zeroed and the corresponding hal output pin 'axis."
"L.eoffset' is reset to zero."
msgstr ""

#. type: Plain text
msgid ""
"In other words, external offsets are *defined as ZERO at each startup* "
"(machine-on) regardless of the value of the 'axis.L.eoffset-counts' pins.  "
"To avoid confusion, it is recommended that all 'axis.L.eoffset-counts' pins "
"are set to zero when the machine is off."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Soft Limits"
msgstr ""

#. type: Plain text
msgid ""
"External axis offset movements are independently planned with velocity and "
"acceleration settings specified by the '[AXIS_L]OFFSET_AV_RATIO'.  The "
"offsetting motion is not coordinated with teleop jogs nor with coordinated "
"(gcode)  motion.  During teleop jogging and coordinated (gcode) motion, axis "
"soft limits ('[AXIS_L]MIN_LIMIT,MAX_LIMIT') restrict movement of the axis."
msgstr ""

#. type: Plain text
msgid ""
"When external offsets are applied and motion reaches a soft limit (by "
"external offset increases or teleop jogging or coordinated motion), the hal "
"pin 'motion.eoffset-limited' is asserted and the axis value is held "
"nominally to the soft limit.  This hal pin can be used by associated hal "
"logic to truncate additional eoffset counts or to stop the machine (connect "
"to 'halui.machine.off' for instance).  If the axis is moved within the soft "
"limit, the 'motion.eoffset-limited' pin is reset."
msgstr ""

#. type: Plain text
msgid ""
"When operating at a soft limit during coordinated motion that continues to "
"change the planned axis value, the hal output pin 'axis.L.eoffset' will "
"indicate the current offset -- the distance needed to reach the limit "
"instead of the computed offset request.  This indicated value will change as "
"the planned axis value changes."
msgstr ""

#. type: Plain text
msgid ""
"The hal pin 'axis.L.eoffset-request' indicates the current requested offset "
"that is the product of the internal counts register and the eoffset-scale.  "
"In general, the 'axis.L.eoffset' pin value lags the 'axis.L.eoffset-request' "
"value since the external offset is subject to an acceleration limit.  When "
"operating at a soft limit, additional updates to the 'axis.L.eoffset-counts' "
"will continue to affect the requested external offset as reflected in the "
"'axis.L.eoffset-request' hal pin."
msgstr ""

#. type: Plain text
msgid ""
"When teleop jogging with external offsets enabled *and* non-zero values "
"applied, encountering a soft limit will stop motion in the offending axis "
"*without a deacceleration interval*.  Similarly, during coordinated motion "
"with external offsets enabled, reaching a soft limit will stop motion with "
"no deacceleration phase.  For this case, it does not matter if the offsets "
"are zero."
msgstr ""

#. type: Plain text
msgid ""
"When motion is stopped with no deacceleration phase, system *acceleration "
"limits may be violated* and lead to: 1) a following error (and/or a thump) "
"for a servo motor system, 2) a loss of steps for a stepper motor system.  In "
"general, it is recommended that external offsets are applied in a manner to "
"avoid approaching soft limits."
msgstr ""

#. type: Plain text
msgid ""
"External offsets apply to axis coordinate letters (xyzabcuvw).  All joints "
"must be homed before external axis offsets are honored."
msgstr ""

#. type: Plain text
msgid ""
"If an 'axis.L.eoffset-enable' hal pin is reset when its offset is non-zero, "
"the offset is maintained.  The offset may be cleared by:"
msgstr ""

#. type: Plain text
msgid "a 'Machine-off/Machine on' toggle"
msgstr ""

#. type: Plain text
msgid ""
"reactivating the enable pin and incrementing/decrementing the 'axis.L."
"eoffset-counts' hal pin to return the offset to zero."
msgstr ""

#. type: Plain text
msgid "pulsing the 'axis.L.eoffset-clear' hal pin"
msgstr ""

#. type: Plain text
msgid ""
"External-offsets are intended for use with 'small' offsets that are applied "
"within the soft-limit bounds."
msgstr ""

#. type: Plain text
msgid ""
"Soft limits are respected for both teleop jogging and coordinated motion "
"when external offsets are applied.  However, when a soft limit is reached "
"during coordinated motion, reducing the offending external offset *may not "
"move away* from the soft limit *if planned motion continues in the same "
"direction*.  This circumstance can occur since the rate of correcting offset "
"removal (as set by '[AXIS_L]OFFSET_AV_RATIO') may be less than the opposing "
"planned rate of motion.  In such cases, *pausing* (or stopping) the planned, "
"coordinated motion will allow movement away from the soft limit when "
"correcting changes are made in the offending external offset."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Warning"
msgstr ""

#. type: Plain text
msgid ""
"The use of external offsets can alter machine motion in a significant "
"manner.  The control of external offsets with hal components and connections "
"and any associated user interfaces should be carefully designed and tested "
"before deployment."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Related Hal Components"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "eoffset_per_angle.comp"
msgstr ""

#. type: Plain text
msgid ""
"Component to compute an external offset from a function based on a measured "
"angle (rotary coordinate or spindle).  See the man page for details (*$ man "
"eoffset_per_angle*)."
msgstr ""

#. type: Plain text
msgid ""
"The external axis offset capability is enabled by adding an '[AXIS_L]' "
"setting for each candidate axis.  For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[AXIS_Z]\n"
"OFFSET_AV_RATIO = 0.2\n"
msgstr ""

#. type: Plain text
msgid ""
"For testing, it is convenient to simulate a jog wheel interface using the "
"*sim_pin* gui.  For example, in a terminal:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ sim_pin axis.z.eoffset-enable axis.z.eoffset-scale axis.z.eoffset-counts\n"
msgstr ""

#. type: Plain text
msgid ""
"The use of external offsets is aided by displaying information related to "
"the current offsets: the current eoffset value and the requested eoffset "
"value, the axis pos-cmd, and (for an identity kinematics machine) the "
"corresponding joint motor pos-cmd and motor-offset.  The provided sim "
"configuration (see below)  demonstrates an example pyvcp panel for the axis "
"gui."
msgstr ""

#. type: Plain text
msgid ""
"In the absence of a custom display, *halshow* can be started as an auxiliary "
"application with a custom watch list."
msgstr ""

#. type: Plain text
msgid ""
"Example ini file settings to simulate the hal pin eoffset connections and "
"display eoffset information for the z axis (for identity kinematics with "
"z==joint2):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[APPLICATIONS]\n"
"APP = sim_pin \\\n"
"      axis.z.eoffset-enable \\\n"
"      axis.z.eoffset-scale \\\n"
"      axis.z.eoffset-counts \\\n"
"      axis.z.eoffset-clear\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "APP = halshow --fformat \"%0.5f\" ./z.halshow\n"
msgstr ""

#. type: Plain text
msgid "Where the file z.halshow (in the configuration directory) is:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"pin+joint.2.motor-pos-cmd\n"
"pin+joint.2.motor-offset\n"
"pin+axis.z.pos-cmd\n"
"pin+axis.z.eoffset\n"
"pin+axis.z.eoffset-request\n"
"pin+motion.eoffset-limited\n"
msgstr ""

#. type: Plain text
msgid ""
"Provided simulation configurations demonstrate the use of external offsets "
"in order to provide a starting point for user customization for real hardware"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The sim configurations utilize the ini setting '[HAL]HALFILE =\n"
"LIB:basic_sim.tcl' to configure all routine hal connections for\n"
"the axes specified in the ini file '[TRAJ]COORDINATES=' setting.\n"
"The hal logic needed to demonstrate external offset functionality\n"
"and the gui hal pin connections for a pyvcp panel are made in\n"
"separate hal files.   A non-simulation configuration should\n"
"replace the 'LIB:basic_sim.tcl' item HALFILEs appropriate to the\n"
"machine.  The provided pyvcp files (.hal and .xml) could be a\n"
"starting point for application-specific gui interfaces.\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "eoffsets.ini"
msgstr ""

#. type: Plain text
msgid ""
"The sim config 'sim/configs/axis/external_offsets/eoffsets.ini' demonstrates "
"a cartesian XYZ machine with controls to enable external offsets on any axis."
msgstr ""

#. type: Plain text
msgid "Displays are provided to show all important position and offset values."
msgstr ""

#. type: Plain text
msgid ""
"A sim_pin gui provides controls for the axis offset pins: eoffset-scale & "
"eoffset-counts (via signal e:<L>counts), eoffset-clear (via signal e:"
"clearall)"
msgstr ""

#. type: Plain text
msgid ""
"A script (eoffsets_monitor.tcl) is used to set 'axis.L.counts' pins to zero "
"at Machine-off"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "jwp_z.ini"
msgstr ""

#. type: Plain text
msgid ""
"The sim config 'sim/configs/axis/external_offsets/jwp_z.ini' demonstrates a "
"jog-while-pause capability for a single (Z) coordinate:"
msgstr ""

#. type: Plain text
msgid "Panel LEDs are provided to show important status items."
msgstr ""

#. type: Plain text
msgid ""
"Controls are provided to set the eoffset scale factor and to increment/"
"decrement/clear the eoffset counts."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "dynamic_offsets.ini"
msgstr ""

#. type: Plain text
msgid ""
"This sim config 'sim/configs/axis/external_offsets/dynamic_offsets.ini' "
"demonstrates dynamically applied offsets by connecting a sinusoidal waveform "
"to the z coordinate external offset inputs."
msgstr ""

#. type: Plain text
msgid ""
"Controls are provided to alter ini file settings for the Z axis max velocity "
"and max acceleration."
msgstr ""

#. type: Plain text
msgid "Controls are provided to set the waveform generator parameters"
msgstr ""

#. type: Plain text
msgid ""
"A halscope app is started to show the applied waveform, the offset response, "
"and the motor cmd response."
msgstr ""

#. type: Plain text
msgid ""
"Note: changes to the z coordinate max-acceleration and max-velocity are not "
"acknowledged while a program is running."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "opa.ini (eoffset_per_angle)"
msgstr ""

#. type: Plain text
msgid ""
"The opa.ini configuration uses the hal component eoffset_per_angle (*$ man "
"eoffset_per_angle*) to demonstrate an XZC machine with functional offsets "
"computed from the C coordinate (angle) and applied to the transvers (X) "
"coordinate.  Offset computations are based on a specified reference radius "
"typically set by a program (or MDI)  M68 command to control a *motion.analog-"
"out-NN* pin."
msgstr ""

#. type: Plain text
msgid ""
"Functions are provided for inside and outside polygons (nsides >= 3), sine "
"waves and square waves.  The functions can be multiplied in frequency using "
"the fmul pin and modified in amplitude using the rfrac pin (fraction of "
"reference radius)."
msgstr ""

#. type: Plain text
msgid ""
"Controls are provided to start/stop offset waveforms and to set the function "
"type and its parameters."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Tool Database Interface"
msgstr ""

#. type: Plain text
msgid ""
"Tool data is conventionally described by a tool table file specified by an "
"inifile setting: [EMCIO]TOOL_TABLE=tooltable_filename.  A tool table file "
"consists of a text line for each available tool describing the tool's "
"parameters."
msgstr ""

#. type: Plain text
msgid "See: <<sec:tool-table,Tool Table Format>>"
msgstr ""

#. type: Plain text
msgid ""
"The tool database interface provides an alternative method for obtaining "
"tool data via a separate program that manages a database of tools."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Interface"
msgstr ""

#. type: Plain text
msgid ""
"Ini file settings enable the (optional) operation of a user-provided tool "
"database program:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"[EMCIO]\n"
"DB_PROGRAM = db_program\n"
msgstr ""

#. type: Plain text
msgid ""
"The optional *db_program* specifies the path to a user-provided executable "
"program that provides tool data."
msgstr ""

#. type: Plain text
msgid ""
"Ini file settings for [EMCIO]TOOL_TABLE are ignored when a *db_program* is "
"specified."
msgstr ""

#. type: Plain text
msgid ""
"The *db_program* may be implemented in any language currently supported in "
"LinuxCNC (e.g., bash scripts, python or tcl scripts, c/c++ programs) as long "
"as it conforms to the interface messages received on stdin and replied on "
"stdout.  A *db_program* could manage data from a flat file, a relational "
"database (sqlite for example), or other data sources."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "*db_program* operation"
msgstr ""

#. type: Plain text
msgid "When a *db_progam* is specified, operation is as follows:"
msgstr ""

#. type: Plain text
msgid ""
"At startup, LinuxCNC starts the *db_program* and connects to its stdin and "
"stdout."
msgstr ""

#. type: Plain text
msgid ""
"The *db_program* must respond by writing a single line acknowledgement "
"consisting of a version string.  No tools will be available if the version "
"is not compatible with the LinuxCNC database interface version."
msgstr ""

#. type: Plain text
msgid ""
"Upon a successful acknowledgement, LinuxCNC issues a 'g' (*get*)  command to "
"request all tools.  The *db_program* must respond with a sequence of replies "
"to identify each available tool.  The textual reply format is identical to "
"the line format used in conventional tool table files.  A final response of "
"\"FINI\" terminates the response."
msgstr ""

#. type: Plain text
msgid ""
"The *db_program* then enters an event wait loop to receive commands that "
"indicate that tool data has been changed by LinuxCNC.  Tool data changes "
"include:"
msgstr ""

#. type: Plain text
msgid "a) spindle loading(Tn M6)/unloading(T0 M6)"
msgstr ""

#. type: Plain text
msgid "b) tool parameter changes (G10L1Pn for example)"
msgstr ""

#. type: Plain text
msgid "c) tool substitutions (M61Qn)."
msgstr ""

#. type: Plain text
msgid ""
"When a tool data change occurs, LinuxCNC sends a 'p' (*put*) command to the "
"*db_program* which must respond with a reply to confirm receipt.  If the "
"reply includes the text \"'NAK'\", a message is printed to stdout but "
"execution continues."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"When changes are received, the *db_program* must update its database\n"
"to maintain consistency with LinuxCNC.   In addition to the required\n"
"synchronization, the *db_program* may compute and save data on tool\n"
"loads/unloads, tool hours, etc.\n"
msgstr ""

#. type: Plain text
msgid ""
"Using a *db_program* does not change the way LinuxCNC operates but provides "
"support for new database functionality for tool management."
msgstr ""

#. type: Plain text
msgid ""
"For example, a *db_program* database application could maintain the "
"operating hours for all tools by tracking each load/unload of a tool.  A "
"machine could then have three 6mm endmills in pockets 111,112, and 113 with "
"the database application programmed to assign tool number 110 to the 6mm "
"endmill with the fewest operating hours.  Then, when a LinuxCNC program "
"requests tool 110, the database would specify the appropriate pocket based "
"on tool usage history.  Identifying the correct pocket for a machine using a "
"nonrandom toolchanger is straightforward; using a random toolchanger "
"requires database logic to synchronize tool data when changes are made by "
"LinuxCNC and reported to the *db_program* with \"'p'\" (put) commands."
msgstr ""

#. type: Plain text
msgid ""
"By default, requests for tooldata are made at startup only.  A database may "
"update tool data on a continuous basis so long-lived LinuxCNC applications "
"may benefit by refreshing the tool data.  A reload operation is typically "
"provided by the gui but on-demand reloads can be done with a USER_M command. "
"Example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#!/usr/bin/env python3\n"
"from  linuxcnc import command\n"
"command().load_tool_table()\n"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Debug Environmental Variables"
msgstr ""

#. type: Plain text
msgid ""
"Setting the environmental variable DB_SHOW enables LinuxCNC prints (to "
"stdout) that show tool data retrieved from the *db_program* at startup and "
"at subsequent reloading of tool data."
msgstr ""

#. type: Plain text
msgid ""
"Setting the environmental variable DB_DEBUG enables LinuxCNC prints (to "
"stdout) for additional debugging information about interface activity."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Example program"
msgstr ""

#. type: Plain text
msgid ""
"An example *db_program* (implemented as a python script) is provided with "
"the simulation examples.  The program does *not* implement a database but "
"illustrates the required operations to:"
msgstr ""

#. type: Plain text
msgid "acknowledge startup version"
msgstr ""

#. type: Plain text
msgid "receive tool data requests: 'g' (*get* command)"
msgstr ""

#. type: Plain text
msgid "receive tool data updates: 'p' (*put* command)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Python tooldb module"
msgstr ""

#. type: Plain text
msgid ""
"The example program uses a LinuxCNC provided python module ('tooldb')  that "
"manages the low-level details for communication and version verification.  "
"This module uses callback functions provided by the *db_program* to respond "
"to the 'g' (get) and 'p' (put) commands."
msgstr ""

#. type: Plain text
msgid ""
"The *db_program* uses the 'tooldb' module by implementing the following "
"python code:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "user_tools = list(...)   # list of available tool numbers\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"def user_get_tool(toolno):\n"
"    # function to respond to 'g' (get) commands \n"
"    # called once for each toolno in user_tools\n"
"    ...\n"
"def user_put_tool(toolno,params):\n"
"    # function to respond to 'p' (put) commands\n"
"    ...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"#------------------------------------------------------------\n"
"# Begin:\n"
"from tooldb import tooldb_tools     # identify known tools\n"
"from tooldb import tooldb_callbacks # identify functions\n"
"from tooldb import tooldb_loop      # main loop\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"tooldb_tools(user_tools)\n"
"tooldb_callbacks(user_get_tool, user_put_tool)\n"
"tooldb_loop()\n"
msgstr ""

#. type: Plain text
msgid ""
"Use of 'tooldb' is not required -- it is provided as a demonstration of the "
"required interface and as a convenience for implementing python-based "
"applications that interface with an external database."
msgstr ""

#. type: Plain text
msgid "Simulation configs using the axis gui:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "configs/sim/axis/db_demo/*db_ran*.ini    (   random_toolchanger)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "configs/sim/axis/db_demo/*db_nonran*.ini (nonrandom_toolchanger)\n"
msgstr ""

#. type: Plain text
msgid ""
"Each sim config simulates a *db_program* implementing a database with 10 "
"tools numbered 10--19."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The *db_program* is provided by a single script (db.py) and symbolic\n"
"links to it for alternative uses: db_ran.py and db_nonran.py.   (By\n"
"default, the script implements random_toolchanger functionality.\n"
"Nonrandom toolchanger functions are substituted if the link name\n"
"includes the text \"'nonran'\").\n"
msgstr ""

#. type: Plain text
msgid ""
"When a *db_program* is used in conjunction with a random tool changer "
"([EMCIO]RANDOM_TOOLCHANGER), LinuxCNC maintains a file ('db_spindle.tbl' in "
"the configuration directory) that consists of a single tool table line "
"identifying the current tool in the spindle."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Stand Alone Interpreter"
msgstr ""

#. type: Plain text
msgid ""
"The rs274 stand alone interpreter is available for use via the command line."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Usage: rs274 [-p interp.so] [-t tool.tbl] [-v var-file.var] [-n 0|1|2]\n"
"          [-b] [-s] [-g] [input file [output file]]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    -p: Specify the pluggable interpreter to use\n"
"    -t: Specify the .tbl (tool table) file to use\n"
"    -v: Specify the .var (parameter) file to use\n"
"    -n: Specify the continue mode:\n"
"           0: continue\n"
"           1: enter MDI mode\n"
"           2: stop (default)\n"
"    -b: Toggle the 'block delete' flag (default: OFF)\n"
"    -s: Toggle the 'print stack' flag (default: OFF)\n"
"    -g: Toggle the 'go (batch mode)' flag (default: OFF)\n"
"    -i: specify the .ini file (default: no ini file)\n"
"    -T: call task_init()\n"
"    -l: specify the log_level (default: -1)\n"
msgstr ""

#. type: Plain text
msgid ""
"To see the output of a loop for example we can run rs274 on the following "
"file and see that the loop never ends. To break out of the loop use Ctrl Z. "
"The following two files are needed to run the example."
msgstr ""

#. type: Block title
#, no-wrap
msgid "test.ngc"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "#<test> = 123.352\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"o101 while [[#<test> MOD 60 ] NE 0]\n"
"(debug,#<test>)\n"
"    #<test> = [#<test> + 1]\n"
"o101 endwhile\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "test.tbl"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"T1 P1 Z0.511 D0.125 ;1/8 end mill\n"
"T2 P2 Z0.1 D0.0625 ;1/16 end mill\n"
"T3 P3 Z1.273 D0.201 ;#7 tap drill\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "command"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "rs274 -g test.ngc -t test.tbl\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Developer Manual V{lversion}, {date}"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Intended audience"
msgstr ""

#. type: Plain text
msgid ""
"This document is a collection of notes about the internals of LinuxCNC. It "
"is primarily of interest to developers, however much of the information here "
"may also be of interest to system integrators and others who are simply "
"curious about how LinuxCNC works. Much of this information is now outdated "
"and has never been reviewed for accuracy."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Organization"
msgstr ""

#. type: Plain text
msgid ""
"There will be a chapter for each of the major components of LinuxCNC, as "
"well as chapter(s) covering how they work together. This document is very "
"much a work in progress, and its layout may change in the future."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Terms and definitions"
msgstr ""

#. type: Plain text
msgid ""
"'AXIS' - An axis is one of the nine degrees of freedom that define a tool"
msgstr ""

#. type: Plain text
msgid ""
"position in three-dimensional Cartesian space. Those nine axes are referred "
"to as X, Y, Z, A, B, C, U, V, and W. The linear orthogonal coordinates X, Y, "
"and Z determine where the tip of the tool is positioned. The angular "
"coordinates A, B, and C determine the tool orientation. A second set of "
"linear orthogonal coordinates U, V, and W allows tool motion (typically for "
"cutting actions) relative to the previously offset and rotated axes.  "
"Unfortunately âaxisâ is also sometimes used to mean a degree of freedom of "
"the machine itself, such as the saddle, table, or quill of a Bridgeport type "
"milling machine. On a Bridgeport this causes no confusion, since movement of "
"the table directly corresponds to movement along the X axis. However, the "
"shoulder and elbow joints of a robot arm and the linear actuators of a "
"hexapod do not correspond to movement along any Cartesian axis, and in "
"general it is important to make the distinction between the Cartesian axes "
"and the machine degrees of freedom. In this document, the latter will be "
"called 'joints', not axes. (The GUIs and some other parts of the code may "
"not always follow this distinction, but the internals of the motion "
"controller do.)"
msgstr ""

#. type: Plain text
msgid ""
"'JOINT' - A joint is one of the movable parts of the machine. Joints are"
msgstr ""

#. type: Plain text
msgid ""
"distinct from axes, although the two terms are sometimes (mis)used to mean "
"the same thing. In LinuxCNC, a joint is a physical thing that can be moved, "
"not a coordinate in space. For example, the quill, knee, saddle, and table "
"of a Bridgeport mill are all joints. The shoulder, elbow, and wrist of a "
"robot arm are joints, as are the linear actuators of a hexapod. Every joint "
"has a motor or actuator of some type associated with it. Joints do not "
"necessarily correspond to the X, Y, and Z axes, although for machines with "
"trivial kinematics that may be the case.  Even on those machines, joint "
"position and axis position are fundamentally different things. In this "
"document, the terms 'joint' and 'axis' are used carefully to respect their "
"distinct meanings.  Unfortunately that isn't necessarily true everywhere "
"else. In particular, GUIs for machines with trivial kinematics may gloss "
"over or completely hide the distinction between joints and axes. In "
"addition, the ini file uses the term 'axis' for data that would more "
"accurately be described as joint data, such as input and output scaling, etc."
msgstr ""

#. type: Plain text
msgid ""
"'POSE' - A pose is a fully specified position in 3-D Cartesian space. In"
msgstr ""

#. type: Plain text
msgid ""
"the LinuxCNC motion controller, when we refer to a pose we mean an EmcPose "
"structure, containing six linear coordinates (X, Y, Z, U, V, and W) and "
"three angular ones (A, B, and C)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Architecture overview"
msgstr ""

#. type: Plain text
msgid ""
"There are four components contained in the LinuxCNC Architecture: a motion "
"controller (EMCMOT), a discrete IO controller (EMCIO), a task executor which "
"coordinates them (EMCTASK) and several text-mode and graphical User "
"Interfaces. Each of them will be described in the current document, both "
"from the design point of view and from the developers point of view (where "
"to find needed data, how to easily extend/modify things, etc.)."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "LinuxCNC-block-diagram-small.png"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC software architecture. At the coarsest level, LinuxCNC is a "
"hierarchy of three controllers: the task level command handler and program "
"interpreter, the motion controller, and the discrete I/O controller. The "
"discrete I/O controller is implemented as a hierarchy of controllers, in "
"this case for spindle, coolant, and auxiliary (e.g., estop, lube)  "
"subsystems. The task controller coordinates the actions of the motion and "
"discrete I/O controllers. Their actions are programmed in conventional "
"numerical control \"G and M code\" programs, which are interpreted by the "
"task controller into NML messages and sent to either the motion or discrete "
"I/O controllers at the appropriate times."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Motion Controller Introduction"
msgstr ""

#. type: Plain text
msgid ""
"The motion controller receives commands from user space modules via a shared "
"memory buffer, and executes those commands in realtime. The status of the "
"controller is made available to the user space modules through the same "
"shared memory area. The motion controller interacts with the motors and "
"other hardware using the HAL (Hardware Abstraction Layer). This document "
"assumes that the reader has a basic understanding of the HAL, and uses terms "
"like HAL pins, HAL signals, etc, without explaining them. For more "
"information about the HAL, see the HAL Manual. Another chapter of this "
"document will eventually go into the internals of the HAL itself, but in "
"this chapter, we only use the HAL API as defined in src/hal/hal.h."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "LinuxCNC-motion-controller-small.png"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Block diagrams and Data Flow"
msgstr ""

#. type: Plain text
msgid ""
"The following figure is a block diagram of a joint controller. There is one "
"joint controller per joint. The joint controllers work at a lower level than "
"the kinematics, a level where all joints are completely independent. All the "
"data for a joint is in a single joint structure. Some members of that "
"structure are visible in the block diagram, such as coarse_pos, pos_cmd, and "
"motor_pos_fb."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "emc2-motion-joint-controller-block-diag.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Joint Controller Block Diagram"
msgstr ""

#. type: Plain text
msgid ""
"The above figure shows five of the seven sets of position information that "
"form the main data flow through the motion controller. The seven forms of "
"position data are as follows:"
msgstr ""

#. type: Plain text
msgid "'emcmotStatus\\->carte_pos_cmd' - This is the desired position, in"
msgstr ""

#. type: Plain text
msgid ""
"Cartesian coordinates. It is updated at the traj rate, not the servo rate. "
"In coord mode, it is determined by the traj planner. In teleop mode, it is "
"determined by the traj planner? In free mode, it is either copied from "
"actualPos, or generated by applying forward kins to (2) or (3)."
msgstr ""

#. type: Plain text
msgid ""
"'emcmotStatus\\->joints[n].coarse_pos' - This is the desired position, in"
msgstr ""

#. type: Plain text
msgid ""
"joint coordinates, but before interpolation. It is updated at the traj rate, "
"not the servo rate. In coord mode, it is generated by applying inverse kins "
"to (1) In teleop mode, it is generated by applying inverse kins to (1) In "
"free mode, it is copied from (3), I think."
msgstr ""

#. type: Plain text
msgid "'emcmotStatus\\->joints[n].pos_cmd - This is the desired position, in"
msgstr ""

#. type: Plain text
msgid ""
"joint coords, after interpolation. A new set of these coords is generated "
"every servo period. In coord mode, it is generated from (2)  by the "
"interpolator. In teleop mode, it is generated from (2) by the interpolator. "
"In free mode, it is generated by the free mode traj planner."
msgstr ""

#. type: Plain text
msgid ""
"'emcmotStatus\\->joints[n].motor_pos_cmd' - This is the desired position,"
msgstr ""

#. type: Plain text
msgid ""
"in motor coords. Motor coords are generated by adding backlash compensation, "
"lead screw error compensation, and offset (for homing) to (3). It is "
"generated the same way regardless of the mode, and is the output to the PID "
"loop or other position loop."
msgstr ""

#. type: Plain text
msgid ""
"'emcmotStatus\\->joints[n].motor_pos_fb' - This is the actual position, in"
msgstr ""

#. type: Plain text
msgid ""
"motor coords. It is the input from encoders or other feedback device (or "
"from virtual encoders on open loop machines). It is \"generated\" by reading "
"the feedback device."
msgstr ""

#. type: Plain text
msgid ""
"'emcmotStatus\\->joints[n].pos_fb' - This is the actual position, in joint"
msgstr ""

#. type: Plain text
msgid ""
"coordinates. It is generated by subtracting offset, lead screw error "
"compensation, and backlash compensation from (5). It is generated the same "
"way regardless of the operating mode."
msgstr ""

#. type: Plain text
msgid ""
"'emcmotStatus\\->carte_pos_fb' - This is the actual position, in Cartesian"
msgstr ""

#. type: Plain text
msgid ""
"coordinates. It is updated at the traj rate, not the servo rate.  Ideally, "
"actualPos would always be calculated by applying forward kinematics to (6). "
"However, forward kinematics may not be available, or they may be unusable "
"because one or more axes aren't homed. In that case, the options are: A) "
"fake it by copying (1), or B) admit that we don't really know the Cartesian "
"coordinates, and simply don't update actualPos. Whatever approach is used, I "
"can see no reason not to do it the same way regardless of the operating "
"mode. I would propose the following: If there are forward kins, use them, "
"unless they don't work because of unhomed axes or other problems, in which "
"case do (B). If no forward kins, do (A), since otherwise actualPos would "
"_never_ get updated."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Homing state diagram"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "homing.svg"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Another homing diagram"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "hss.svg"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Commands"
msgstr ""

#. type: Plain text
msgid ""
"This section simply lists all of the commands that can be sent to the motion "
"module, along with detailed explanations of what they do. The command names "
"are defined in a large typedef enum in {linuxcnc}/src/emc/motion/motion.h, "
"called cmd_code_t. (Note that in the code, each command name starts with "
"'EMCMOT_', which is omitted here.)"
msgstr ""

#. type: Plain text
msgid ""
"The commands are implemented by a large switch statement in the function "
"emcmotCommandHandler(), which is called at the servo rate.  More on that "
"function later."
msgstr ""

#. type: Plain text
msgid ""
"There are approximately 44 commands - this list is still under construction."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ABORT"
msgstr ""

#. type: Plain text
msgid ""
"The ABORT command simply stops all motion. It can be issued at any time, and "
"will always be accepted. It does not disable the motion controller or change "
"any state information, it simply cancels any motion that is currently in "
"progress.footnote:[It seems that the higher level code (TASK and above) also "
"use ABORT to clear faults.  Whenever there is a persistent fault (such as "
"being outside the hardware limit switches), the higher level code sends a "
"constant stream of ABORTs to the motion controller trying to make the fault "
"go away. Thousands of 'em.... That means that the motion controller should "
"avoid persistent faults. This needs to be looked into.]"
msgstr ""

#. type: Plain text
msgid "None. The command is always accepted and acted on immediately."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Results"
msgstr ""

#. type: Plain text
msgid ""
"In free mode, the free mode trajectory planners are disabled. That results "
"in each joint stopping as fast as its accel (decel) limit allows. The stop "
"is not coordinated. In teleop mode, the commanded Cartesian velocity is set "
"to zero. I don't know exactly what kind of stop results (coordinated, "
"uncoordinated, etc), but will figure it out eventually. In coord mode, the "
"coord mode trajectory planner is told to abort the current move. Again, I "
"don't know the exact result of this, but will document it when I figure it "
"out."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "FREE"
msgstr ""

#. type: Plain text
msgid ""
"The FREE command puts the motion controller in free mode. Free mode means "
"that each joint is independent of all the other joints. Cartesian "
"coordinates, poses, and kinematics are ignored when in free mode. In "
"essence, each joint has its own simple trajectory planner, and each joint "
"completely ignores the other joints. Some commands (like Joint JOG and HOME) "
"only work in free mode. Other commands, including anything that deals with "
"Cartesian coordinates, do not work at all in free mode."
msgstr ""

#. type: Plain text
msgid ""
"The command handler applies no requirements to the FREE command, it will "
"always be accepted. However, if any joint is in motion "
"(GET_MOTION_INPOS_FLAG() == FALSE), then the command will be ignored.  This "
"behavior is controlled by code that is now located in the function "
"'set_operating_mode()' in control.c, that code needs to be cleaned up.  I "
"believe the command should not be silently ignored, instead the command "
"handler should determine whether it can be executed and return an error if "
"it cannot."
msgstr ""

#. type: Plain text
msgid ""
"If the machine is already in free mode, nothing. Otherwise, the machine is "
"placed in free mode. Each joint's free mode trajectory planner is "
"initialized to the current location of the joint, but the planners are not "
"enabled and the joints are stationary."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "TELEOP"
msgstr ""

#. type: Plain text
msgid ""
"The TELEOP command places the machine in teleoperating mode. In teleop mode, "
"movement of the machine is based on Cartesian coordinates using kinematics, "
"rather than on individual joints as in free mode. However the trajectory "
"planner per se is not used, instead movement is controlled by a velocity "
"vector. Movement in teleop mode is much like jogging, except that it is done "
"in Cartesian space instead of joint space. On a machine with trivial "
"kinematics, there is little difference between teleop mode and free mode, "
"and GUIs for those machines might never even issue this command. However for "
"non-trivial machines like robots and hexapods, teleop mode is used for most "
"user commanded jog type movements."
msgstr ""

#. type: Plain text
msgid ""
"The command handler will reject the TELEOP command with an error message if "
"the kinematics cannot be activated because the one or more joints have not "
"been homed. In addition, if any joint is in motion (GET_MOTION_INPOS_FLAG() "
"== FALSE), then the command will be ignored (with no error message). This "
"behavior is controlled by code that is now located in the function "
"'set_operating_mode()' in control.c. I believe the command should not be "
"silently ignored, instead the command handler should determine whether it "
"can be executed and return an error if it cannot."
msgstr ""

#. type: Plain text
msgid ""
"If the machine is already in teleop mode, nothing. Otherwise the machine is "
"placed in teleop mode. The kinematics code is activated, interpolators are "
"drained and flushed, and the Cartesian velocity commands are set to zero."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "COORD"
msgstr ""

#. type: Plain text
msgid ""
"The COORD command places the machine in coordinated mode. In coord mode, "
"movement of the machine is based on Cartesian coordinates using kinematics, "
"rather than on individual joints as in free mode. In addition, the main "
"trajectory planner is used to generate motion, based on queued LINE, CIRCLE, "
"and/or PROBE commands. Coord mode is the mode that is used when executing a "
"G-code program."
msgstr ""

#. type: Plain text
msgid ""
"The command handler will reject the COORD command with an error message if "
"the kinematics cannot be activated because the one or more joints have not "
"been homed. In addition, if any joint is in motion (GET_MOTION_INPOS_FLAG() "
"== FALSE), then the command will be ignored (with no error message). This "
"behavior is controlled by code that is now located in the function "
"'set_operating_mode()' in control.c. I believe the command should not be "
"silently ignored, instead the command handler should determine whether it "
"can be executed and return an error if it cannot."
msgstr ""

#. type: Plain text
msgid ""
"If the machine is already in coord mode, nothing. Otherwise, the machine is "
"placed in coord mode. The kinematics code is activated, interpolators are "
"drained and flushed, and the trajectory planner queues are empty. The "
"trajectory planner is active and awaiting a LINE, CIRCLE, or PROBE command."
msgstr ""

#. type: Plain text
msgid "The ENABLE command enables the motion controller."
msgstr ""

#. type: Plain text
msgid ""
"None. The command can be issued at any time, and will always be accepted."
msgstr ""

#. type: Plain text
msgid ""
"If the controller is already enabled, nothing. If not, the controller is "
"enabled. Queues and interpolators are flushed. Any movement or homing "
"operations are terminated. The amp-enable outputs associated with active "
"joints are turned on. If forward kinematics are not available, the machine "
"is switched to free mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DISABLE"
msgstr ""

#. type: Plain text
msgid "The DISABLE command disables the motion controller."
msgstr ""

#. type: Plain text
msgid ""
"If the controller is already disabled, nothing. If not, the controller is "
"disabled. Queues and interpolators are flushed. Any movement or homing "
"operations are terminated. The amp-enable outputs associated with active "
"joints are turned off. If forward kinematics are not available, the machine "
"is switched to free mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ENABLE_AMPLIFIER"
msgstr ""

#. type: Plain text
msgid ""
"The ENABLE_AMPLIFIER command turns on the amp enable output for a single "
"output amplifier, without changing anything else. Can be used to enable a "
"spindle speed controller."
msgstr ""

#. type: Plain text
msgid ""
"Currently, nothing. (A call to the old extAmpEnable function is currently "
"commented out.) Eventually it will set the amp enable HAL pin true."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DISABLE_AMPLIFIER"
msgstr ""

#. type: Plain text
msgid ""
"The DISABLE_AMPLIFIER command turns off the amp enable output for a single "
"amplifier, without changing anything else. Again, useful for spindle speed "
"controllers."
msgstr ""

#. type: Plain text
msgid ""
"Currently, nothing. (A call to the old extAmpEnable function is currently "
"commented out.) Eventually it will set the amp enable HAL pin false."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ACTIVATE_JOINT"
msgstr ""

#. type: Plain text
msgid ""
"The ACTIVATE_JOINT command turns on all the calculations associated with a "
"single joint, but does not change the joint's amp enable output pin."
msgstr ""

#. type: Plain text
msgid ""
"Calculations for the specified joint are enabled. The amp enable pin is not "
"changed, however, any subsequent ENABLE or DISABLE commands will modify the "
"joint's amp enable pin."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DEACTIVATE_JOINT"
msgstr ""

#. type: Plain text
msgid ""
"The DEACTIVATE_JOINT command turns off all the calculations associated with "
"a single joint, but does not change the joint's amp enable output pin."
msgstr ""

#. type: Plain text
msgid ""
"Calculations for the specified joint are enabled. The amp enable pin is not "
"changed, and subsequent ENABLE or DISABLE commands will not modify the "
"joint's amp enable pin."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "ENABLE_WATCHDOG"
msgstr ""

#. type: Plain text
msgid ""
"The ENABLE_WATCHDOG command enables a hardware based watchdog (if present)."
msgstr ""

#. type: Plain text
msgid ""
"Currently nothing. The old watchdog was a strange thing that used a specific "
"sound card. A new watchdog interface may be designed in the future."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DISABLE_WATCHDOG"
msgstr ""

#. type: Plain text
msgid ""
"The DISABLE_WATCHDOG command disables a hardware based watchdog (if present)."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PAUSE"
msgstr ""

#. type: Plain text
msgid ""
"The PAUSE command stops the trajectory planner. It has no effect in free or "
"teleop mode. At this point I don't know if it pauses all motion immediately, "
"or if it completes the current move and then pauses before pulling another "
"move from the queue."
msgstr ""

#. type: Plain text
msgid "The trajectory planner pauses."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "RESUME"
msgstr ""

#. type: Plain text
msgid ""
"The RESUME command restarts the trajectory planner if it is paused. It has "
"no effect in free or teleop mode, or if the planner is not paused."
msgstr ""

#. type: Plain text
msgid "The trajectory planner resumes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "STEP"
msgstr ""

#. type: Plain text
msgid ""
"The STEP command restarts the trajectory planner if it is paused, and tells "
"the planner to stop again when it reaches a specific point. It has no effect "
"in free or teleop mode. At this point I don't know exactly how this works. "
"I'll add more documentation here when I dig deeper into the trajectory "
"planner."
msgstr ""

#. type: Plain text
msgid ""
"The trajectory planner resumes, and later pauses when it reaches a specific "
"point."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SCALE"
msgstr ""

#. type: Plain text
msgid ""
"The SCALE command scales all velocity limits and commands by a specified "
"amount. It is used to implement feed rate override and other similar "
"functions. The scaling works in free, teleop, and coord modes, and affects "
"everything, including homing velocities, etc. However, individual joint "
"velocity limits are unaffected."
msgstr ""

#. type: Plain text
msgid "All velocity commands are scaled by the specified constant."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "OVERRIDE_LIMITS"
msgstr ""

#. type: Plain text
msgid ""
"The OVERRIDE_LIMITS command prevents limits from tripping until the end of "
"the next JOG command. It is normally used to allow a machine to be jogged "
"off of a limit switch after tripping. (The command can actually be used to "
"override limits, or to cancel a previous override.)"
msgstr ""

#. type: Plain text
msgid ""
"None. The command can be issued at any time, and will always be accepted. (I "
"think it should only work in free mode.)"
msgstr ""

#. type: Plain text
msgid ""
"Limits on all joints are over-ridden until the end of the next JOG command. "
"(This is currently broken... once an OVERRIDE_LIMITS command is received, "
"limits are ignored until another OVERRIDE_LIMITS command re-enables them.)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "HOME"
msgstr ""

#. type: Plain text
msgid ""
"The HOME command initiates a homing sequence on a specified joint. The "
"actual homing sequence is determined by a number of configuration "
"parameters, and can range from simply setting the current position to zero, "
"to a multi-stage search for a home switch and index pulse, followed by a "
"move to an arbitrary home location. For more information about the homing "
"sequence, see the homing section of the Integrator Manual."
msgstr ""

#. type: Plain text
msgid ""
"The command will be ignored silently unless the machine is in free mode."
msgstr ""

#. type: Plain text
msgid ""
"Any jog or other joint motion is aborted, and the homing sequence starts."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "JOG_CONT"
msgstr ""

#. type: Plain text
msgid ""
"The JOG_CONT command initiates a continuous jog on a single joint. A "
"continuous jog is generated by setting the free mode trajectory planner's "
"target position to a point beyond the end of the joint's range of travel. "
"This ensures that the planner will move constantly until it is stopped by "
"either the joint limits or an ABORT command.  Normally, a GUI sends a "
"JOG_CONT command when the user presses a jog button, and ABORT when the "
"button is released."
msgstr ""

#. type: Plain text
msgid ""
"The command handler will reject the JOG_CONT command with an error message "
"if machine is not in free mode, or if any joint is in motion "
"(GET_MOTION_INPOS_FLAG() == FALSE), or if motion is not enabled. It will "
"also silently ignore the command if the joint is already at or beyond its "
"limit and the commanded jog would make it worse."
msgstr ""

#. type: Plain text
msgid ""
"The free mode trajectory planner for the joint identified by emcmotCommand\\-"
">axis is activated, with a target position beyond the end of joint travel, "
"and a velocity limit of emcmotCommand\\->vel. This starts the joint moving, "
"and the move will continue until stopped by an ABORT command or by hitting a "
"limit. The free mode planner accelerates at the joint accel limit at the "
"beginning of the move, and will decelerate at the joint accel limit when it "
"stops."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "JOG_INCR"
msgstr ""

#. type: Plain text
msgid ""
"The JOG_INCR command initiates an incremental jog on a single joint.  "
"Incremental jogs are cumulative, in other words, issuing two JOG_INCR "
"commands that each ask for 0.100 inches of movement will result in 0.200 "
"inches of travel, even if the second command is issued before the first one "
"finishes. Normally incremental jogs stop when they have traveled the desired "
"distance, however they also stop when they hit a limit, or on an ABORT "
"command."
msgstr ""

#. type: Plain text
msgid ""
"The command handler will silently reject the JOG_INCR command if machine is "
"not in free mode, or if any joint is in motion (GET_MOTION_INPOS_FLAG() == "
"FALSE), or if motion is not enabled. It will also silently ignore the "
"command if the joint is already at or beyond its limit and the commanded jog "
"would make it worse."
msgstr ""

#. type: Plain text
msgid ""
"The free mode trajectory planner for the joint identified by emcmotCommand\\-"
">axis is activated, the target position is incremented/decremented by "
"emcmotCommand\\->offset, and the velocity limit is set to emcmotCommand\\-"
">vel. The free mode trajectory planner will generate a smooth trapezoidal "
"move from the present position to the target position. The planner can "
"correctly handle changes in the target position that happen while the move "
"is in progress, so multiple JOG_INCR commands can be issued in quick "
"succession. The free mode planner accelerates at the joint accel limit at "
"the beginning of the move, and will decelerate at the joint accel limit to "
"stop at the target position."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "JOG_ABS"
msgstr ""

#. type: Plain text
msgid ""
"The JOG_ABS command initiates an absolute jog on a single joint. An absolute "
"jog is a simple move to a specific location, in joint coordinates. Normally "
"absolute jogs stop when they reach the desired location, however they also "
"stop when they hit a limit, or on an ABORT command."
msgstr ""

#. type: Plain text
msgid ""
"The command handler will silently reject the JOG_ABS command if machine is "
"not in free mode, or if any joint is in motion (GET_MOTION_INPOS_FLAG() == "
"FALSE), or if motion is not enabled. It will also silently ignore the "
"command if the joint is already at or beyond its limit and the commanded jog "
"would make it worse."
msgstr ""

#. type: Plain text
msgid ""
"The free mode trajectory planner for the joint identified by emcmotCommand\\-"
">axis is activated, the target position is set to emcmotCommand\\->offset, "
"and the velocity limit is set to emcmotCommand\\->vel. The free mode "
"trajectory planner will generate a smooth trapezoidal move from the present "
"position to the target position. The planner can correctly handle changes in "
"the target position that happen while the move is in progress. If multiple "
"JOG_ABS commands are issued in quick succession, each new command changes "
"the target position and the machine goes to the final commanded position.  "
"The free mode planner accelerates at the joint accel limit at the beginning "
"of the move, and will decelerate at the joint accel limit to stop at the "
"target position."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SET_LINE"
msgstr ""

#. type: Plain text
msgid ""
"The SET_LINE command adds a straight line to the trajectory planner queue."
msgstr ""

#. type: Plain text
msgid "(More later)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SET_CIRCLE"
msgstr ""

#. type: Plain text
msgid ""
"The SET_CIRCLE command adds a circular move to the trajectory planner queue."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SET_TELEOP_VECTOR"
msgstr ""

#. type: Plain text
msgid ""
"The SET_TELEOP_VECTOR command instructs the motion controller to move along "
"a specific vector in Cartesian space."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "PROBE"
msgstr ""

#. type: Plain text
msgid ""
"The PROBE command instructs the motion controller to move toward a specific "
"point in Cartesian space, stopping and recording its position if the probe "
"input is triggered."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "CLEAR_PROBE_FLAG"
msgstr ""

#. type: Plain text
msgid ""
"The CLEAR_PROBE_FLAG command is used to reset the probe input in preparation "
"for a PROBE command. (Question: why shouldn't the PROBE command "
"automatically reset the input?)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "SET_xix"
msgstr ""

#. type: Plain text
msgid ""
"There are approximately 15 SET_xxx commands, where xxx is the name of some "
"configuration parameter. It is anticipated that there will be several more "
"SET commands as more parameters are added. I would like to find a cleaner "
"way of setting and reading configuration parameters. The existing methods "
"require many lines of code to be added to multiple files each time a "
"parameter is added. Much of that code is identical or nearly identical for "
"every parameter."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Backlash and Screw Error Compensation"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " +\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Task controller (EMCTASK)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "State"
msgstr ""

#. type: Plain text
msgid ""
"Task has three possible internal states: *E-stop*, *E-stop Reset*, and "
"*Machine On*."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "task-state-transitions.svg"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "IO controller (EMCIO)"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The I/O Controller is separate module that accepts NML commands from TASK. +\n"
"It interacts with external I/O using HAL pins. +\n"
"iocontrol.cc is loaded via the linuxcnc script before TASK is. +\n"
"There are currently two versions of iocontrol. The second version handles toolchange hardware errors +\n"
" +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Currently ESTOP/Enable, coolant, lube, and tool changing are handled by +\n"
"iocontrol. These are relatively low speed events, high speed coordinated I/O is handled in motion. +\n"
" +\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"emctaskmain.cc sends I/O commands via taskclass.cc +\n"
"Taskclass's functions send NML messages out to iocontrol.cc +\n"
"taskclass either uses the commands defined in c++ in it's file or, +\n"
"if defined, runs python based commands defined in files provided by the user. +\n"
" +\n"
msgstr ""

#. type: Plain text
msgid "iocontrol main loop process:"
msgstr ""

#. type: Plain text
msgid "registers for SIGTERM and SIGINT signals from the OS. +"
msgstr ""

#. type: Plain text
msgid "checks to see it HAL inputs have changed +"
msgstr ""

#. type: Plain text
msgid ""
"checks if read_tool_inputs() indicates the tool change is finished and set "
"emcioStatus.status +"
msgstr ""

#. type: Plain text
msgid "checks for I/O related NML messages +"
msgstr ""

#. type: Plain text
msgid "+"
msgstr ""

#. type: Plain text
msgid "nml message numbers: from emc.hh:"
msgstr ""

#.  the following message is sent to io at the very start of an M6 +
#.  even before emccanon issues the move to toolchange position +
#. type: Plain text
#, no-wrap
msgid ""
"#define EMC_IO_INIT_TYPE                             ((NMLTYPE) 1601) +\n"
"#define EMC_TOOL_STAT_TYPE                           ((NMLTYPE) 1199) +\n"
"#define EMC_TOOL_INIT_TYPE                           ((NMLTYPE) 1101) +\n"
"#define EMC_TOOL_HALT_TYPE                           ((NMLTYPE) 1102) +\n"
"#define EMC_TOOL_ABORT_TYPE                          ((NMLTYPE) 1103) +\n"
"#define EMC_TOOL_PREPARE_TYPE                        ((NMLTYPE) 1104) +\n"
"#define EMC_TOOL_LOAD_TYPE                           ((NMLTYPE) 1105) +\n"
"#define EMC_TOOL_UNLOAD_TYPE                         ((NMLTYPE) 1106) +\n"
"#define EMC_TOOL_LOAD_TOOL_TABLE_TYPE                ((NMLTYPE) 1107) +\n"
"#define EMC_TOOL_SET_OFFSET_TYPE                     ((NMLTYPE) 1108) +\n"
"#define EMC_TOOL_SET_NUMBER_TYPE                     ((NMLTYPE) 1109) +\n"
"#define EMC_TOOL_START_CHANGE_TYPE                   ((NMLTYPE) 1110) +\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "libnml Introduction"
msgstr ""

#. type: Plain text
msgid ""
"libnml is derived from the NIST rcslib without all the multi-platform "
"support. Many of the wrappers around platform specific code has been removed "
"along with much of the code that is not required by LinuxCNC. It is hoped "
"that sufficient compatibility remains with rcslib so that applications can "
"be implemented on non-Linux platforms and still be able to communicate with "
"LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"This chapter is not intended to be a definitive guide to using libnml (or "
"rcslib), instead, it will eventually provide an overview of each C++ class "
"and their member functions. Initially, most of these notes will be random "
"comments added as the code scrutinized and modified."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "LinkedList"
msgstr ""

#. type: Plain text
msgid ""
"Base class to maintain a linked list. This is one of the core building "
"blocks used in passing NML messages and assorted internal data structures."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "LinkedListNode"
msgstr ""

#. type: Plain text
msgid ""
"Base class for producing a linked list - Purpose, to hold pointers to the "
"previous and next nodes, pointer to the data, and the size of the data."
msgstr ""

#. type: Plain text
msgid "No memory for data storage is allocated."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "SharedMemory"
msgstr ""

#. type: Plain text
msgid ""
"Provides a block of shared memory along with a semaphore (inherited from the "
"Semaphore class). Creation and destruction of the semaphore is handled by "
"the SharedMemory constructor and destructor."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "ShmBuffer"
msgstr ""

#. type: Plain text
msgid ""
"Class for passing NML messages between local processes using a shared memory "
"buffer. Much of internal workings are inherited from the CMS class."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Timer"
msgstr ""

#. type: Plain text
msgid ""
"The Timer class provides a periodic timer limited only by the resolution of "
"the system clock. If, for example, a process needs to be run every 5 seconds "
"regardless of the time taken to run the process, the following code snippet "
"demonstrates how :"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"main()\n"
"{\n"
"    timer = new Timer(5.0);    /* Initialize a timer with a 5 second loop */\n"
"    while(0) {\n"
"        /* Do some process */\n"
"        timer.wait();    /* Wait till the next 5 second interval */\n"
"    }\n"
"    delete timer;\n"
"}\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Semaphore"
msgstr ""

#. type: Plain text
msgid ""
"The Semaphore class provides a method of mutual exclusions for accessing a "
"shared resource. The function to get a semaphore can either block until "
"access is available, return after a timeout, or return immediately with or "
"without gaining the semaphore. The constructor will create a semaphore or "
"attach to an existing one if the ID is already in use."
msgstr ""

#. type: Plain text
msgid "The Semaphore::destroy() must be called by the last process only."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "CMS"
msgstr ""

#. type: Plain text
msgid ""
"At the heart of libnml is the CMS class, it contains most of the functions "
"used by libnml and ultimately NML. Many of the internal functions are "
"overloaded to allow for specific hardware dependent methods of data passing. "
"Ultimately, everything revolves around a central block of memory (referred "
"to as the 'message buffer' or just 'buffer'). This buffer may exist as a "
"shared memory block accessed by other CMS/NML processes, or a local and "
"private buffer for data being transferred by network or serial interfaces."
msgstr ""

#. type: Plain text
msgid ""
"The buffer is dynamically allocated at run time to allow for greater "
"flexibility of the CMS/NML sub-system. The buffer size must be large enough "
"to accommodate the largest message, a small amount for internal use and "
"allow for the message to be encoded if this option is chosen (encoded data "
"will be covered later). The following figure is an internal view of the "
"buffer space."
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "CMS_buffer.png"
msgstr ""

#. type: Block title
#, no-wrap
msgid "CMS buffer"
msgstr ""

#. type: Plain text
msgid ""
"The CMS base class is primarily responsible for creating the communications "
"pathways and interfacing to the O.S."
msgstr ""

#
#
#. == NML Notes /* FIX ME */
#. A collection of random notes and thought whilst studying the libnml
#. and rcslib code.
#. Much of this needs to be edited and re-written in a coherent manner
#. before publication.
#. type: Title ==
#, no-wrap
msgid "Configuration file format"
msgstr ""

#. type: Plain text
msgid ""
"NML configuration consists of two types of line formats. One for Buffers, "
"and a second for Processes that connect to the buffers."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Buffer line"
msgstr ""

#. type: Plain text
msgid "The original NIST format of the buffer line is:"
msgstr ""

#. type: Plain text
msgid ""
"'B name type host size neut RPC# buffer# max_procs key [type specific "
"configs]'"
msgstr ""

#. type: Plain text
msgid "'B' - identifies this line as a Buffer configuration."
msgstr ""

#. type: Plain text
msgid "'name' - is the identifier of the buffer."
msgstr ""

#. type: Plain text
msgid ""
"'type' - describes the buffer type - SHMEM, LOCMEM, FILEMEM, PHANTOM, or "
"GLOBMEM."
msgstr ""

#. type: Plain text
msgid "'host' - is either an IP address or host name for the NML server"
msgstr ""

#. type: Plain text
msgid "'size' - is the size of the buffer"
msgstr ""

#. type: Plain text
msgid ""
"'neut' - a boolean to indicate if the data in the buffer is encoded in a"
msgstr ""

#. type: Plain text
msgid "machine independent format, or raw."
msgstr ""

#. type: Plain text
msgid ""
"'RPC#' - Obsolete - Place holder retained for backward compatibility only."
msgstr ""

#. type: Plain text
msgid ""
"'buffer#' - A unique ID number used if a server controls multiple buffers."
msgstr ""

#. type: Plain text
msgid ""
"'max_procs' - is the maximum processes allowed to connect to this buffer."
msgstr ""

#. type: Plain text
msgid "'key' - is a numerical identifier for a shared memory buffer"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Type specific configs"
msgstr ""

#. type: Plain text
msgid ""
"The buffer type implies additional configuration options whilst the host "
"operating system precludes certain combinations. In an attempt to distill "
"published documentation in to a coherent format, only the *SHMEM* buffer "
"type will be covered."
msgstr ""

#. type: Plain text
msgid ""
"'mutex=os_sem' - default mode for providing semaphore locking of the buffer "
"memory."
msgstr ""

#. type: Plain text
msgid "'mutex=none' - Not used"
msgstr ""

#. type: Plain text
msgid "'mutex=no_interrupts' - not applicable on a Linux system"
msgstr ""

#. type: Plain text
msgid "'mutex=no_switching' - not applicable on a Linux system"
msgstr ""

#. type: Plain text
msgid "'mutex=mao split' - Splits the buffer in to half (or more) and allows"
msgstr ""

#. type: Plain text
msgid ""
"one process to access part of the buffer whilst a second process is writing "
"to another part."
msgstr ""

#. type: Plain text
msgid "'TCP=(port number)' - Specifies which network port to use."
msgstr ""

#. type: Plain text
msgid "'UDP=(port number)' - ditto"
msgstr ""

#. type: Plain text
msgid "'STCP=(port number)' - ditto"
msgstr ""

#. type: Plain text
msgid "'serialPortDevName=(serial port)' - Undocumented."
msgstr ""

#. type: Plain text
msgid "'passwd=file_name.pwd' - Adds a layer of security to the buffer by"
msgstr ""

#. type: Plain text
msgid "requiring each process to provide a password."
msgstr ""

#. type: Plain text
msgid "'bsem' - NIST documentation implies a key for a blocking semaphore,"
msgstr ""

#. type: Plain text
msgid "and if bsem=-1, blocking reads are prevented."
msgstr ""

#. type: Plain text
msgid "'queue' - Enables queued message passing."
msgstr ""

#. type: Plain text
msgid "'ascii' - Encode messages in a plain text format"
msgstr ""

#. type: Plain text
msgid "'disp' - Encode messages in a format suitable for display (???)"
msgstr ""

#. type: Plain text
msgid ""
"'xdr' - Encode messages in External Data Representation. (see rpc/xdr.h for "
"details)."
msgstr ""

#. type: Plain text
msgid ""
"'diag' - Enables diagnostics stored in the buffer (timings and byte counts ?)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Process line "
msgstr ""

#. type: Plain text
msgid "The original NIST format of the process line is:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*P name buffer type host ops server timeout master c_num [type specific configs]*\n"
msgstr ""

#. type: Plain text
msgid "'P' - identifies this line as a Process configuration."
msgstr ""

#. type: Plain text
msgid "'name' - is the identifier of the process."
msgstr ""

#. type: Plain text
msgid "'buffer' - is one of the buffers defined elsewhere in the config file."
msgstr ""

#. type: Plain text
msgid ""
"'type' - defines whether this process is local or remote relative to the "
"buffer."
msgstr ""

#. type: Plain text
msgid "'host' - specifies where on the network this process is running."
msgstr ""

#. type: Plain text
msgid ""
"'ops' - gives the process read only, write only, or read/write access to the "
"buffer."
msgstr ""

#. type: Plain text
msgid ""
"'server' - specifies if this process will running a server for this buffer."
msgstr ""

#. type: Plain text
msgid ""
"'timeout' - sets the timeout characteristics for accesses to the buffer."
msgstr ""

#. type: Plain text
msgid ""
"'master' - indicates if this process is responsible for creating and "
"destroying the buffer."
msgstr ""

#. type: Plain text
msgid "'c_num' - an integer between zero and (max_procs -1)"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configuration Comments"
msgstr ""

#. type: Plain text
msgid ""
"Some of the configuration combinations are invalid, whilst others imply "
"certain constraints. On a Linux system, GLOBMEM is obsolete, whilst PHANTOM "
"is only really useful in the testing stage of an application, likewise for "
"FILEMEM. LOCMEM is of little use for a multi-process application, and only "
"offers limited performance advantages over SHMEM. This leaves SHMEM as the "
"only buffer type to use with LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"The neut option is only of use in a multi-processor system where different "
"(and incompatible) architectures are sharing a block of memory. The "
"likelihood of seeing a system of this type outside of a museum or research "
"establishment is remote and is only relevant to GLOBMEM buffers."
msgstr ""

#. type: Plain text
msgid ""
"The RPC number is documented as being obsolete and is retained only for "
"compatibility reasons."
msgstr ""

#. type: Plain text
msgid ""
"With a unique buffer name, having a numerical identity seems to be "
"pointless. Need to review the code to identify the logic. Likewise, the key "
"field at first appears to be redundant, and it could be derived from the "
"buffer name."
msgstr ""

#. type: Plain text
msgid ""
"The purpose of limiting the number of processes allowed to connect to any "
"one buffer is unclear from existing documentation and from the original "
"source code. Allowing unspecified multiple processes to connect to a buffer "
"is no more difficult to implement."
msgstr ""

#. type: Plain text
msgid ""
"The mutex types boil down to one of two, the default âos_semâ or âmao "
"splitâ. Most of the NML messages are relatively short and can be copied to "
"or from the buffer with minimal delays, so split reads are not essential."
msgstr ""

#. type: Plain text
msgid ""
"Data encoding is only relevant when transmitted to a remote process - Using "
"TCP or UDP implies XDR encoding. Whilst ASCII encoding may have some use in "
"diagnostics or for passing data to an embedded system that does not "
"implement NML."
msgstr ""

#. type: Plain text
msgid ""
"UDP protocols have fewer checks on data and allows a percentage of packets "
"to be dropped. TCP is more reliable, but is marginally slower."
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC is to be connected to a network, one would hope that it is local "
"and behind a firewall. About the only reason to allow access to LinuxCNC via "
"the Internet would be for remote diagnostics - This can be achieved far more "
"securely using other means, perhaps by a web interface."
msgstr ""

#. type: Plain text
msgid ""
"The exact behavior when timeout is set to zero or a negative value is "
"unclear from the NIST documents. Only INF and positive values are mentioned. "
"However, buried in the source code of rcslib, it is apparent that the "
"following applies:"
msgstr ""

#. type: Plain text
msgid ""
"timeout > 0 Blocking access until the timeout interval is reached or access "
"to the buffer is available."
msgstr ""

#. type: Plain text
msgid ""
"timeout = 0 Access to the buffer is only possible if no other process is "
"reading or writing at the time."
msgstr ""

#. type: Plain text
msgid "timeout < 0 or INF Access is blocked until the buffer is available."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "NML base class "
msgstr ""

#.  FIX ME
#. type: Plain text
msgid ""
"Expand on the lists and the relationship between NML, NMLmsg, and the lower "
"level cms classes."
msgstr ""

#. type: Plain text
msgid "Not to be confused with NMLmsg, RCS_STAT_MSG, or RCS_CMD_MSG."
msgstr ""

#. type: Plain text
msgid ""
"NML is responsible for parsing the config file, configuring the cms buffers "
"and is the mechanism for routing messages to the correct buffer(s). To do "
"this, NML creates several lists for:"
msgstr ""

#. type: Plain text
msgid "cms buffers created or connected to."
msgstr ""

#. type: Plain text
msgid "processes and the buffers they connect to"
msgstr ""

#. type: Plain text
msgid "a long list of format functions for each message type"
msgstr ""

#. type: Plain text
msgid ""
"This last item is probably the nub of much of the malignment of libnml/"
"rcslib and NML in general. Each message that is passed via NML requires a "
"certain amount of information to be attached in addition to the actual data. "
"To do this, several formatting functions are called in sequence to assemble "
"fragments of the overall message. The format functions will include "
"NML_TYPE, MSG_TYPE, in addition to the data declared in derived NMLmsg "
"classes. Changes to the order in which the formatting functions are called "
"and also the variables passed will break compatibility with rcslib if messed "
"with - There are reasons for maintaining rcslib compatibility, and good "
"reasons for messing with the code. The question is, which set of reasons are "
"overriding?"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "NML internals"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "NML constructor"
msgstr ""

#. type: Plain text
msgid ""
"NML::NML() parses the config file and stores it in a linked list to be "
"passed to cms constructors in single lines. It is the function of the NML "
"constructor to call the relevant cms constructor for each buffer and "
"maintain a list of the cms objects and the processes associated with each "
"buffer."
msgstr ""

#. type: Plain text
msgid ""
"It is from the pointers stored in the lists that NML can interact with cms "
"and why Doxygen fails to show the real relationships involved."
msgstr ""

#. type: Plain text
msgid ""
"The config is stored in memory before passing a pointer to a specific line "
"to the cms constructor. The cms constructor then parses the line again to "
"extract a couple of variables... It would make more sense to do ALL the "
"parsing and save the variables in a struct that is passed to the cms "
"constructor - This would eliminate string handling and reduce duplicate code "
"in cms...."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "NML read/write"
msgstr ""

#. type: Plain text
msgid ""
"Calls to NML::read and NML::write both perform similar tasks in so much as "
"processing the message - The only real variation is in the direction of data "
"flow."
msgstr ""

#. type: Plain text
msgid ""
"A call to the read function first gets data from the buffer, then calls "
"format_output(), whilst a write function would call format_input() before "
"passing the data to the buffer. It is in format_xxx() that the work of "
"constructing or deconstructing the message takes place. A list of assorted "
"functions are called in turn to place various parts of the NML header (not "
"to be confused with the cms header) in the right order - The last function "
"called is emcFormat() in emc.cc."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "NMLmsg and NML relationships"
msgstr ""

#. type: Plain text
msgid ""
"NMLmsg is the base class from which all message classes are derived.  Each "
"message class must have a unique ID defined (and passed to the constructor) "
"and also an update(*cms) function. The update() will be called by the NML "
"read/write functions when the NML formatter is called"
msgstr ""

#. type: Plain text
msgid ""
"The pointer to the formatter will have been declared in the NML constructor "
"at some point. By virtue of the linked lists NML creates, it is able to "
"select cms pointer that is passed to the formatter and therefor which buffer "
"is to be used."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Adding custom NML commands"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is pretty awesome, but some parts need some tweaking. As you know "
"communication is done through NML channels, the data sent through such a "
"channel is one of the classes defined in emc.hh (implemented in emc.cc). If "
"somebody needs a message type that doesn't exist, he should follow these "
"steps to add a new one. (The Message I added in the example is called "
"EMC_IO_GENERIC (inherits EMC_IO_CMD_MSG (inherits RCS_CMD_MSG)))"
msgstr ""

#. type: Plain text
msgid ""
"add the definition of the EMC_IO_GENERIC class to emc2/src/emc/nml_intf/emc."
"hh"
msgstr ""

#. type: Plain text
msgid "add the type define: #define EMC_IO_GENERIC_TYPE ((NMLTYPE) 1605) +"
msgstr ""

#. type: Plain text
msgid ""
"(I chose 1605, because it was available) to emc2/src/emc/nml_intf/emc.hh"
msgstr ""

#. type: Plain text
msgid ""
"add case EMC_IO_GENERIC_TYPE to emcFormat in emc2/src/emc/nml_intf/emc.cc"
msgstr ""

#. type: Plain text
msgid ""
"add case EMC_IO_GENERIC_TYPE to emc_symbol_lookup in emc2/src/emc/nml_intf/"
"emc.cc"
msgstr ""

#. type: Plain text
msgid "add EMC_IO_GENERIC::update function to emc2/src/emc/nml_intf/emc.cc"
msgstr ""

#. type: Plain text
msgid ""
"Recompile, and the new message should be there. The next part is to send "
"such messages from somewhere, and receive them in another place, and do some "
"stuff with it."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The Tool Table and Toolchanger"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC interfaces with toolchanger hardware, and has an internal "
"toolchanger abstraction.  LinuxCNC manages tool information in a tool table "
"file."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Toolchanger abstraction in LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC supports two kinds of toolchanger hardware, called _nonrandom_ and "
"_random_.  The ini setting <<sec:emcio-section,[EMCIO]RANDOM_TOOLCHANGER>> "
"controls which of these kinds of hardware LinuxCNC thinks it's connected to."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Nonrandom Toolchangers"
msgstr ""

#. type: Plain text
msgid ""
"Nonrandom toolchanger hardware puts each tool back in the pocket it was "
"originally loaded from."
msgstr ""

#. type: Plain text
msgid ""
"Examples of nonrandom toolchanger hardware are the \"manual\" toolchanger, "
"lathe tool turrents, and rack toolchangers."
msgstr ""

#. type: Plain text
msgid ""
"When configured for a nonrandom toolchanger, LinuxCNC does not change the "
"pocket number in the tool table file as tools are loaded and unloaded.  "
"Internal to LinuxCNC, on tool change the tool information is *copied* from "
"the tool table's source pocket to pocket 0 (which represents the spindle), "
"replacing whatever tool information was previously there."
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC configured for nonrandom toolchanger, tool 0 (T0) has special "
"meaning: \"no tool\".  T0 may not appear in the tool table file, and "
"changing to T0 will result in LinuxCNC thinking it's got an empty spindle."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Random Toolchangers"
msgstr ""

#. type: Plain text
msgid ""
"Random toolchanger hardware swaps the tool in the spindle (if any) with the "
"requested tool on tool change.  Thus the pocket that a tool resides in "
"changes as it is swapped in and out of the spindle."
msgstr ""

#. type: Plain text
msgid "An example of random toolchanger hardware is a carousel toolchanger."
msgstr ""

#. type: Plain text
msgid ""
"When configured for a random toolchanger, LinuxCNC swaps the pocket number "
"of the old and the new tool in the tool table file when tools are loaded.  "
"Internal to LinuxCNC, on tool change, the tool information is *swapped* "
"between the tool table's source pocket and pocket 0 (which represents the "
"spindle).  So after a tool change, pocket 0 in the tool table has the tool "
"information for the new tool, and the pocket that the new tool came from has "
"the tool information for the old tool (the tool that was in the spindle "
"before the tool change), if any."
msgstr ""

#. type: Plain text
msgid ""
"In LinuxCNC configured for random toolchanger, tool 0 (T0) has *no* special "
"meaning.  It is treated exactly like any other tool in the tool table.  It "
"is customary to use T0 to represent \"no tool\" (ie, a tool with zero TLO), "
"so that the spindle can be conveniently emptied when needed."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "The Tool Table"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC keeps track of tools in a file called the <<sec:tool-table,tool "
"table>>.  The tool table records the following information for each tool:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "tool number"
msgstr ""

#. type: Plain text
msgid ""
"An integer that uniquely identifies this tool.  Tool numbers are handled "
"differently by LinuxCNC when configured for random and nonrandom "
"toolchangers:"
msgstr ""

#. type: Plain text
msgid "When LinuxCNC is configured for a nonrandom toolchanger this"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"number must be positive.  T0 gets special handling and is not\n"
"allowed to appear in the tool table.\n"
msgstr ""

#. type: Plain text
msgid "When LinuxCNC is configured for a random toolchanger this number"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"must be non-negative.  T0 is allowed in the tool table, and is\n"
"usually used to represent \"no tool\", ie the empty pocket.\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "pocket number"
msgstr ""

#. type: Plain text
msgid ""
"An integer that identifies the pocket or slot in the toolchanger hardware "
"where the tool resides.  Pocket numbers are handled differently by LinuxCNC "
"when configured for random and nonrandom toolchangers:"
msgstr ""

#. type: Plain text
msgid "When LinuxCNC is configured for a nonrandom toolchanger, the pocket"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"number in the tool file can be any positive integer (pocket\n"
"0 is not allowed).  LinuxCNC silently compactifies the pocket\n"
"numbers when it loads the tool file, so there may be a difference\n"
"between the pocket numbers in the tool file and the internal\n"
"pocket numbers used by LinuxCNC-with-nonrandom-toolchanger.\n"
msgstr ""

#. type: Plain text
msgid "When LinuxCNC is configured for a random toolchanger, the pocket"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"numbers in the tool file must be between 0 and 1000, inclusive.\n"
"Pockets 1-1000 are in the toolchanger, pocket 0 is the spindle.\n"
msgstr ""

#. type: Plain text
msgid "Diameter of the tool, in machine units."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "tool length offset"
msgstr ""

#. type: Plain text
msgid ""
"Tool length offset (also called TLO), in up to 9 axes, in machine units.  "
"Axes that don't have a specified TLO get 0."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Gcodes affecting tools"
msgstr ""

#. type: Plain text
msgid "The gcodes that use or affect tool information are:"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Txxx"
msgstr ""

#. type: Plain text
msgid ""
"Tells the toolchanger hardware to prepare to switch to a specified tool +xxx"
"+."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_tool_select()+."
msgstr ""

#. type: Plain text
msgid "The machine is asked to prepare to switch to the selected tool by"
msgstr ""

#. type: Plain text
msgid ""
"calling the Canon function +SELECT_TOOL()+ with the tool number of the "
"requested tool."
msgstr ""

#. type: Plain text
msgid "(saicanon) No-op."
msgstr ""

#. type: Plain text
msgid ""
"(emccanon) Builds an +EMC_TOOL_PREPARE+ message with the requested pocket "
"number and sends it to Task, which sends it on to IO.  IO gets the message "
"and asks HAL to prepare the pocket by setting +iocontrol.0.tool-prep-pocket"
"+, +iocontrol.0.tool-prep-number+, and +iocontrol.0.tool-prepare+.  IO then "
"repeatedly calls +read_tool_inputs()+ to poll the HAL pin +iocontrol.0.tool-"
"prepared+, which signals from the toolchanger hardware, via HAL, to IO that "
"the requested tool prep is complete.  When that pin goes True, IO sets "
"+emcioStatus.tool.pocketPrepped+ to the requested tool's pocket number."
msgstr ""

#. type: Plain text
msgid "Back in interp, +settings->selected_pocket+ is assigned the tooldata"
msgstr ""

#. type: Plain text
msgid "index of the requested tool _xxx_."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "M6"
msgstr ""

#. type: Plain text
msgid ""
"Tells the toolchanger to switch to the currently selected tool (selected by "
"the previous Txxx command)."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_tool_change()+."
msgstr ""

#. type: Plain text
msgid "The machine is asked to change to the selected tool"
msgstr ""

#. type: Plain text
msgid ""
"by calling the Canon function +CHANGE_TOOL()+ with +settings->selected_pocket"
"+ (a tooldata index)."
msgstr ""

#. type: Plain text
msgid ""
"(saicanon) Sets sai's +_active_slot+ to the passed-in pocket number.  Tool "
"information is copied from the selected pocket of of the tool table (ie, "
"from sai's +_tools[_active_slot]+)  to the spindle (aka sai's +_tools[0]+)."
msgstr ""

#. type: Plain text
msgid ""
"(emccanon) Sends an +EMC_TOOL_LOAD+ message to Task, which sends it to IO.  "
"IO sets +emcioStatus.tool.toolInSpindle+ to the tool number of the tool in "
"the pocket identified by +emcioStatus.tool.pocketPrepped+ (set by +Txxx+ aka "
"+SELECT_TOOL()+).  It then requests that the toolchanger hardware perform a "
"tool change, by setting the HAL pin +iocontrol.0.tool-change+ to True.  "
"Later, IO's +read_tool_inputs()+ will sense that the HAL pin +iocontrol.0."
"tool_changed+ has been set to True, indicating the toolchanger has completed "
"the tool change.  When this happens, it calls +load_tool()+ to update the "
"machine state."
msgstr ""

#. type: Plain text
msgid "+load_tool()+ with a nonrandom toolchanger"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"config copies the tool information from the selected pocket\n"
"to the spindle (pocket 0).\n"
msgstr ""

#. type: Plain text
msgid "+load_tool()+ with a random toolchanger config swaps tool"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"information between pocket 0 (the spindle) and the selected\n"
"pocket, then saves the tool table.\n"
msgstr ""

#. type: Plain text
msgid "Back in interp, +settings->current_pocket+ is assigned the new"
msgstr ""

#. type: Plain text
msgid ""
"tooldata index from +settings->selected_pocket+ (set by +Txxx+).  The "
"relevant numbered parameters (<<sub:numbered-parameters,#5400-#5413>>) are "
"updated with the new tool information from pocket 0 (spindle)."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "G43/G43.1/G49"
msgstr ""

#. type: Plain text
msgid ""
"Apply tool length offset.  G43 uses the TLO of the currently loaded tool, or "
"of a specified tool if the H-word is given in the block.  G43.1 gets TLO "
"from axis-words in the block.  G49 cancels the TLO (it uses 0 for the offset "
"for all axes)."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_tool_length_offset()+."
msgstr ""

#. type: Plain text
msgid "It starts by building an +EmcPose+ containing the 9-axis offsets"
msgstr ""

#. type: Plain text
msgid ""
"to use.  For +G43.1+, these tool offsets come from axis words in the current "
"block.  For +G43+ these offsets come from the current tool (the tool in "
"pocket 0), or from the tool specified by the H-word in the block.  For G49, "
"the offsets are all 0."
msgstr ""

#. type: Plain text
msgid "The offsets are passed to Canon's +USE_TOOL_LENGTH_OFFSET()+ function."
msgstr ""

#. type: Plain text
msgid "(saicanon) Records the TLO in +_tool_offset+."
msgstr ""

#. type: Plain text
msgid ""
"(emccanon) Builds an +EMC_TRAJ_SET_OFFSET+ message containing the offsets "
"and sends it to Task.  Task copies the offsets to +emcStatus->task.toolOffset"
"+ and sends them on to Motion via an +EMCMOT_SET_OFFSET+ command.  Motion "
"copies the offsets to +emcmotStatus->tool_offset+, where it gets used to "
"offset future motions."
msgstr ""

#. type: Plain text
msgid "Back in interp, the offsets are recorded in +settings->tool_offset+."
msgstr ""

#. type: Plain text
msgid ""
"The effective pocket is recorded in +settings->tool_offset_index+, though "
"this value is never used."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "G10 L1/L10/L11"
msgstr ""

#. type: Plain text
msgid "Modifies the tool table."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_setup_tool()+."
msgstr ""

#. type: Plain text
msgid "Picks the tool number out of the P-word in the block and finds the"
msgstr ""

#. type: Plain text
msgid "pocket for that tool:"
msgstr ""

#. type: Plain text
msgid "With a nonrandom toolchanger config this is always the"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"pocket number in the toolchanger (even when the tool is in\n"
"the spindle).\n"
msgstr ""

#. type: Plain text
msgid "With a random toolchanger config, if the tool is currently"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"loaded it uses pocket 0 (pocket 0 means \"the spindle\"),\n"
"and if the tool is not loaded it uses the pocket number in\n"
"the tool changer.  (This difference is important.)\n"
msgstr ""

#. type: Plain text
msgid "Figures out what the new offsets should be."
msgstr ""

#. type: Plain text
msgid "The new tool information (diameter, offsets, angles, and orientation),"
msgstr ""

#. type: Plain text
msgid ""
"along with the tool number and pocket number, are passed to the Canon call "
"SET_TOOL_TABLE_ENTRY()."
msgstr ""

#. type: Plain text
msgid "(saicanon)  Copy the new tool information to the specified pocket"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "(in sai's internal tool table, +_tools+).\n"
msgstr ""

#. type: Plain text
msgid "(emccanon)  Build an +EMC_TOOL_SET_OFFSET+ message with the new"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"tool information, and send it to Task, which passes it\n"
"to IO.  IO updates the specified pocket in its internal\n"
"copy of the tool table (+emcioStatus.tool.toolTable+), and\n"
"if the specified tool is currently loaded (it is compared to\n"
"+emcioStatus.tool.toolInSpindle+) then the new tool information\n"
"is copied to pocket 0 (the spindle) as well.  (FIXME: that's a\n"
"buglet, should only be copied on nonrandom machines.)  Finally IO\n"
"saves the new tool table.\n"
msgstr ""

#. type: Plain text
msgid "Back in interp, if the modified tool is currently loaded in the"
msgstr ""

#. type: Plain text
msgid ""
"spindle, and if the machine is a non-random toolchanger, then the new tool "
"information is copied from the tool's home pocket to pocket 0 (the spindle) "
"in interp's copy of the tool table, +settings->tool_table+.  (This copy is "
"not needed on random tool changer machines because there, tools don't have a "
"home pocket and instead we just updated the tool in pocket 0 directly.)"
msgstr ""

#. type: Plain text
msgid "The relevant numbered parameters"
msgstr ""

#. type: Plain text
msgid ""
"(<<sub:numbered-parameters,#5400-#5413>>) are updated from the tool "
"information in the spindle (by copying the information from interp's "
"+settings->tool_table+ to +settings->parameters+).  (FIXME: this is a "
"buglet, the params should only be updated if it was the current tool that "
"was modified)."
msgstr ""

#. type: Plain text
msgid "If the modified tool is currently loaded in the"
msgstr ""

#. type: Plain text
msgid ""
"spindle, and if the config is for a nonrandom toolchanger, then the new tool "
"information is written to the tool table's pocket 0 as well, via a second "
"call to SET_TOOL_TABLE_ENTRY().  (This second tool-table update is not "
"needed on random toolchanger machines because there, tools don't have a home "
"pocket and instead we just updated the tool in pocket 0 directly.)"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "M61"
msgstr ""

#. type: Plain text
msgid ""
"Set current tool number.  This switches LinuxCNC's internal representation "
"of which tool is in the spindle, without actually moving the toolchanger or "
"swapping any tools."
msgstr ""

#. type: Plain text
msgid "Canon: +CHANGE_TOOL_NUMBER()+"
msgstr ""

#. type: Plain text
msgid ""
"settings->current_pocket is assigned the tooldata index currently holding "
"the tool specified by the Q-word argument."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "G41/G41.1/G42/G42.1"
msgstr ""

#. type: Plain text
msgid "Enable cutter radius compensation (usually called _cutter comp_)."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_cutter_compensation_on()+."
msgstr ""

#. type: Plain text
msgid ""
"No Canon call, cutter comp happens in the interpreter.  Uses the tool table "
"in the expected way: if a D-word tool number is supplied it looks up the "
"pocket number of the specified tool number in the table, and if no D-word is "
"supplied it uses pocket 0 (the spindle)."
msgstr ""

#. type: Plain text
msgid "Cancel cutter radius compensation."
msgstr ""

#. type: Plain text
msgid "Handled by +Interp::convert_cutter_compensation_off()+."
msgstr ""

#. type: Plain text
msgid ""
"No Canon call, cutter comp happens in the interpreter.  Does not use the "
"tool table."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Internal state variables"
msgstr ""

#. type: Plain text
msgid ""
"This is not an exhaustive list! Tool information is spread through out "
"LinuxCNC."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "IO"
msgstr ""

#. type: Plain text
msgid "+emcioStatus+ is of type +EMC_IO_STAT+"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "emcioStatus.tool.pocketPrepped"
msgstr ""

#. type: Plain text
msgid ""
"When IO gets the signal from HAL that the toolchanger prep is complete "
"(after a +Txxx+ command), this variable is set to the pocket of the "
"requested tool.  When IO gets the signal from HAL that the tool change "
"itself is complete (after an +M6+ command), this variable gets reset to -1."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "emcioStatus.tool.toolInSpindle"
msgstr ""

#. type: Plain text
msgid ""
"Tool number of the tool currently installed in the spindle.  Exported on the "
"HAL pin +iocontrol.0.tool-number+ (s32)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "emcioStatus.tool.toolTable[]"
msgstr ""

#. type: Plain text
msgid ""
"An array of +CANON_TOOL_TABLE+ structures, +CANON_POCKETS_MAX+ long.  Loaded "
"from the tool table file at startup and maintained there after.  Index 0 is "
"the spindle, indexes 1-(CANON_POCKETS_MAX-1)  are the pockets in the "
"toolchanger.  This is a complete copy of the tool information, maintained "
"separately from Interp's +settings.tool_table+."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "interp"
msgstr ""

#. type: Plain text
msgid ""
"+settings+ is of type +settings+, which is +struct setup_struct+.  Defined "
"in +src/emc/rs274ngc/interp_internal.hh+."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.selected_pocket"
msgstr ""

#. type: Plain text
msgid "Tooldata index of the tool most recently selected by +Txxx+."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.current_pocket"
msgstr ""

#. type: Plain text
msgid ""
"Original tooldata index of the tool currently in the spindle.  In other "
"words: which tooldata index the tool that's currently in the spindle was "
"loaded from."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_table[]"
msgstr ""

#. type: Plain text
msgid ""
"An array of tool information.  The index into the array is the \"pocket "
"number\" (aka \"slot number\").  Pocket 0 is the spindle, pockets 1 through "
"(CANON_POCKETS_MAX-1) are the pockets of the toolchanger."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_offset_index"
msgstr ""

#. type: Plain text
msgid "Unused.  FIXME: Should probably be removed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.toolchange_flag"
msgstr ""

#. type: Plain text
msgid ""
"Interp sets this to true when calling Canon's CHANGE_TOOL()  function.  It "
"is checked in +Interp::convert_tool_length_offset()+ to decide which "
"tooldata index to use for G43 (with no H-word): +settings->current_pocket+ "
"if the tool change is still in progress, tooldata index 0 (the spindle) if "
"the tool change is complete."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.random_toolchanger"
msgstr ""

#. type: Plain text
msgid ""
"Set from the ini variable +[EMCIO]RANDOM_TOOLCHANGER+ at startup.  Controls "
"various tool table handling logic.  (IO also reads this ini variable and "
"changes its behavior based on it.  For example, when saving the tool table, "
"random toolchanger save the tool in the spindle (pocket 0), but non-random "
"toolchanger save each tool in its \"home pocket\".)"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_offset"
msgstr ""

#. type: Plain text
msgid "This is an +EmcPose+ variable."
msgstr ""

#. type: Plain text
msgid "Used to compute position in various places."
msgstr ""

#. type: Plain text
msgid "Sent to Motion via the +EMCMOT_SET_OFFSET+ message."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"All motion does with the offsets is export them to the HAL pins\n"
"+motion.0.tooloffset.[xyzabcuvw]+.  FIXME: export these from\n"
"someplace closer to the tool table (io or interp, probably)\n"
"and remove the EMCMOT_SET_OFFSET message.\n"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.pockets_max"
msgstr ""

#. type: Plain text
msgid ""
"Used interchangeably with +CANON_POCKETS_MAX+ (a #defined constant, set to "
"1000 as of April 2020).  FIXME: This settings variable is not currently "
"useful and should probably be removed."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_table"
msgstr ""

#. type: Plain text
msgid ""
"This is an array of +CANON_TOOL_TABLE+ structures (defined in +src/emc/"
"nml_intf/emctool.h+), with +CANON_POCKETS_MAX+ entries.  Indexed by \"pocket "
"number\", aka \"slot number\".  Index 0 is the spindle, indexes 1-"
"(CANON_POCKETS_MAX-1) are the pockets in the tool changer.  On a random "
"toolchanger pocket numbers are meaningful.  On a nonrandom toolchanger "
"pockets are meaningless; the pocket numbers in the tool table file are "
"ignored and tools are assigned to +tool_table+ slots sequentially."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_change_at_g30"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_change_quill_up"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "settings.tool_change_with_spindle_on"
msgstr ""

#. type: Plain text
msgid ""
"These are set from ini variables in the +[EMCIO]+ section, and control how "
"tool changes are performed."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Reckoning of joints and axes"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "In the status buffer"
msgstr ""

#. type: Plain text
msgid "The status buffer is used by Task and the UIs."
msgstr ""

#. type: Plain text
msgid "FIXME: `axis_mask` and `axes` overspecify the number of axes"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`status.motion.traj.axis_mask`"
msgstr ""

#. type: Plain text
msgid ""
"A bitmask with a \"1\" for the axes that are present and a \"0\" for the "
"axes that are not present.  X is bit 0, Y is bit 1, etc.  For example, a "
"machine with X and Z axes would have an `axis_mask` of 0x5, an XYZ machine "
"would have 0x7, and an XYZB machine would have an `axis_mask` of 0x17."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`status.motion.traj.axes` (deprecated)"
msgstr ""

#. type: Plain text
msgid ""
"The value of this variable is one more than the index of the highest-"
"numbered axis present on the machine.  As in the `axis_mask`, the index of X "
"in 0, Y is 1, etc.  An XZ machine has `axes` value of 3, as does an XYZ "
"machine.  An XYZW machine has `axes` value 9.  This variable is not terribly "
"helpful, and its use is deprecated.  Use `axis_mask` instead."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`status.motion.traj.joints`"
msgstr ""

#. type: Plain text
msgid ""
"A count of the number of joints the machine has.  A normal lathe has 2 "
"joints; one driving the X axis and one driving the Z axis.  An XYYZ gantry "
"mill has 4 joints; one driving X, one driving one side of the Y, one driving "
"the other side of the Y, and one driving Z.  An XYZA mill also has 4 joints."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`status.motion.axis[EMCMOT_MAX_AXIS]`"
msgstr ""

#. type: Plain text
msgid ""
"An array of `EMCMOT_MAX_AXIS` axis structures.  `axis[n]` is valid if "
"`(axis_mask & (1 << n))` is True.  If `(axis_mask & (1 << n))` is False, "
"then `axis[n]` does not exist on this machine and must be ignored."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`status.motion.joint[EMCMOT_MAX_JOINTS]`"
msgstr ""

#. type: Plain text
msgid ""
"An array of `EMCMOT_MAX_JOINTS` joint structures.  `joint[0]` through "
"`joint[joints-1]` are valid, the others do not exist on this machine and "
"must be ignored."
msgstr ""

#. type: Plain text
msgid ""
"Things are not this way currently in the joints-axes branch, but deviations "
"from this design are considered bugs.  For an example of such a bug, see the "
"treatment of axes in src/emc/ini/initraj.cc:loadTraj().  There are "
"undoubtedly more, and I need your help to find them and fix them."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "In Motion"
msgstr ""

#. type: Plain text
msgid ""
"The Motion controller realtime component first gets the number of joints "
"from the `num_joints` load-time parameter.  This determines how many joints "
"worth of HAL pins are created at startup."
msgstr ""

#. type: Plain text
msgid ""
"Motion's number of joints can be changed at runtime using the "
"`EMCMOT_SET_NUM_JOINTS` command from Task."
msgstr ""

#. type: Plain text
msgid ""
"The Motion controller always operates on `EMCMOT_MAX_AXIS` axes.  It always "
"creates nine sets of `axis.*.*` pins."
msgstr ""

#. type: Title =
#, no-wrap
msgid "NML Messages"
msgstr ""

#. type: Plain text
msgid "for details see src/emc/nml_intf/emc.hh"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    OPERATOR\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_OPERATOR_ERROR_TYPE\n"
"    EMC_OPERATOR_TEXT_TYPE\n"
"    EMC_OPERATOR_DISPLAY_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    JOINT\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_JOINT_SET_JOINT_TYPE\n"
"    EMC_JOINT_SET_UNITS_TYPE\n"
"    EMC_JOINT_SET_MIN_POSITION_LIMIT_TYPE\n"
"    EMC_JOINT_SET_MAX_POSITION_LIMIT_TYPE\n"
"    EMC_JOINT_SET_FERROR_TYPE\n"
"    EMC_JOINT_SET_HOMING_PARAMS_TYPE\n"
"    EMC_JOINT_SET_MIN_FERROR_TYPE\n"
"    EMC_JOINT_SET_MAX_VELOCITY_TYPE\n"
"    EMC_JOINT_INIT_TYPE\n"
"    EMC_JOINT_HALT_TYPE\n"
"    EMC_JOINT_ABORT_TYPE\n"
"    EMC_JOINT_ENABLE_TYPE\n"
"    EMC_JOINT_DISABLE_TYPE\n"
"    EMC_JOINT_HOME_TYPE\n"
"    EMC_JOINT_ACTIVATE_TYPE\n"
"    EMC_JOINT_DEACTIVATE_TYPE\n"
"    EMC_JOINT_OVERRIDE_LIMITS_TYPE\n"
"    EMC_JOINT_LOAD_COMP_TYPE\n"
"    EMC_JOINT_SET_BACKLASH_TYPE\n"
"    EMC_JOINT_UNHOME_TYPE\n"
"    EMC_JOINT_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    AXIS\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    EMC_AXIS_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    JOG\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_JOG_CONT_TYPE\n"
"    EMC_JOG_INCR_TYPE\n"
"    EMC_JOG_ABS_TYPE\n"
"    EMC_JOG_STOP_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    TRAJ\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_TRAJ_SET_AXES_TYPE\n"
"    EMC_TRAJ_SET_UNITS_TYPE\n"
"    EMC_TRAJ_SET_CYCLE_TIME_TYPE\n"
"    EMC_TRAJ_SET_MODE_TYPE\n"
"    EMC_TRAJ_SET_VELOCITY_TYPE\n"
"    EMC_TRAJ_SET_ACCELERATION_TYPE\n"
"    EMC_TRAJ_SET_MAX_VELOCITY_TYPE\n"
"    EMC_TRAJ_SET_MAX_ACCELERATION_TYPE\n"
"    EMC_TRAJ_SET_SCALE_TYPE\n"
"    EMC_TRAJ_SET_RAPID_SCALE_TYPE\n"
"    EMC_TRAJ_SET_MOTION_ID_TYPE\n"
"    EMC_TRAJ_INIT_TYPE\n"
"    EMC_TRAJ_HALT_TYPE\n"
"    EMC_TRAJ_ENABLE_TYPE\n"
"    EMC_TRAJ_DISABLE_TYPE\n"
"    EMC_TRAJ_ABORT_TYPE\n"
"    EMC_TRAJ_PAUSE_TYPE\n"
"    EMC_TRAJ_STEP_TYPE\n"
"    EMC_TRAJ_RESUME_TYPE\n"
"    EMC_TRAJ_DELAY_TYPE\n"
"    EMC_TRAJ_LINEAR_MOVE_TYPE\n"
"    EMC_TRAJ_CIRCULAR_MOVE_TYPE\n"
"    EMC_TRAJ_SET_TERM_COND_TYPE\n"
"    EMC_TRAJ_SET_OFFSET_TYPE\n"
"    EMC_TRAJ_SET_G5X_TYPE\n"
"    EMC_TRAJ_SET_HOME_TYPE\n"
"    EMC_TRAJ_SET_ROTATION_TYPE\n"
"    EMC_TRAJ_SET_G92_TYPE\n"
"    EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG_TYPE\n"
"    EMC_TRAJ_PROBE_TYPE\n"
"    EMC_TRAJ_SET_TELEOP_ENABLE_TYPE\n"
"    EMC_TRAJ_SET_SPINDLESYNC_TYPE\n"
"    EMC_TRAJ_SET_SPINDLE_SCALE_TYPE\n"
"    EMC_TRAJ_SET_FO_ENABLE_TYPE\n"
"    EMC_TRAJ_SET_SO_ENABLE_TYPE\n"
"    EMC_TRAJ_SET_FH_ENABLE_TYPE\n"
"    EMC_TRAJ_RIGID_TAP_TYPE\n"
"    EMC_TRAJ_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    MOTION\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_MOTION_INIT_TYPE\n"
"    EMC_MOTION_HALT_TYPE\n"
"    EMC_MOTION_ABORT_TYPE\n"
"    EMC_MOTION_SET_AOUT_TYPE\n"
"    EMC_MOTION_SET_DOUT_TYPE\n"
"    EMC_MOTION_ADAPTIVE_TYPE\n"
"    EMC_MOTION_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    TASK\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_TASK_INIT_TYPE\n"
"    EMC_TASK_HALT_TYPE\n"
"    EMC_TASK_ABORT_TYPE\n"
"    EMC_TASK_SET_MODE_TYPE\n"
"    EMC_TASK_SET_STATE_TYPE\n"
"    EMC_TASK_PLAN_OPEN_TYPE\n"
"    EMC_TASK_PLAN_RUN_TYPE\n"
"    EMC_TASK_PLAN_READ_TYPE\n"
"    EMC_TASK_PLAN_EXECUTE_TYPE\n"
"    EMC_TASK_PLAN_PAUSE_TYPE\n"
"    EMC_TASK_PLAN_STEP_TYPE\n"
"    EMC_TASK_PLAN_RESUME_TYPE\n"
"    EMC_TASK_PLAN_END_TYPE\n"
"    EMC_TASK_PLAN_CLOSE_TYPE\n"
"    EMC_TASK_PLAN_INIT_TYPE\n"
"    EMC_TASK_PLAN_SYNCH_TYPE\n"
"    EMC_TASK_PLAN_SET_OPTIONAL_STOP_TYPE\n"
"    EMC_TASK_PLAN_SET_BLOCK_DELETE_TYPE\n"
"    EMC_TASK_PLAN_OPTIONAL_STOP_TYPE\n"
"    EMC_TASK_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    TOOL\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_TOOL_INIT_TYPE\n"
"    EMC_TOOL_HALT_TYPE\n"
"    EMC_TOOL_ABORT_TYPE\n"
"    EMC_TOOL_PREPARE_TYPE\n"
"    EMC_TOOL_LOAD_TYPE\n"
"    EMC_TOOL_UNLOAD_TYPE\n"
"    EMC_TOOL_LOAD_TOOL_TABLE_TYPE\n"
"    EMC_TOOL_SET_OFFSET_TYPE\n"
"    EMC_TOOL_SET_NUMBER_TYPE\n"
"    EMC_TOOL_START_CHANGE_TYPE\n"
"    EMC_TOOL_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    AUX\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_AUX_ESTOP_ON_TYPE\n"
"    EMC_AUX_ESTOP_OFF_TYPE\n"
"    EMC_AUX_ESTOP_RESET_TYPE\n"
"    EMC_AUX_INPUT_WAIT_TYPE\n"
"    EMC_AUX_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    SPINDLE\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_SPINDLE_ON_TYPE\n"
"    EMC_SPINDLE_OFF_TYPE\n"
"    EMC_SPINDLE_INCREASE_TYPE\n"
"    EMC_SPINDLE_DECREASE_TYPE\n"
"    EMC_SPINDLE_CONSTANT_TYPE\n"
"    EMC_SPINDLE_BRAKE_RELEASE_TYPE\n"
"    EMC_SPINDLE_BRAKE_ENGAGE_TYPE\n"
"    EMC_SPINDLE_SPEED_TYPE\n"
"    EMC_SPINDLE_ORIENT_TYPE\n"
"    EMC_SPINDLE_WAIT_ORIENT_COMPLETE_TYPE\n"
"    EMC_SPINDLE_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    COOLANT\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_COOLANT_MIST_ON_TYPE\n"
"    EMC_COOLANT_MIST_OFF_TYPE\n"
"    EMC_COOLANT_FLOOD_ON_TYPE\n"
"    EMC_COOLANT_FLOOD_OFF_TYPE\n"
"    EMC_COOLANT_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    LUBE\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_LUBE_ON_TYPE\n"
"    EMC_LUBE_OFF_TYPE\n"
"    EMC_LUBE_STAT_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    IO (INPUT/OUTPUT)\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_IO_INIT_TYPE\n"
"    EMC_IO_HALT_TYPE\n"
"    EMC_IO_ABORT_TYPE\n"
"    EMC_IO_SET_CYCLE_TIME_TYPE\n"
"    EMC_IO_STAT_TYPE\n"
"    EMC_IO_PLUGIN_CALL_TYPE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    OTHER\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    EMC_NULL_TYPE\n"
"    EMC_SET_DEBUG_TYPE\n"
"    EMC_SYSTEM_CMD_TYPE\n"
"    EMC_INIT_TYPE\n"
"    EMC_HALT_TYPE\n"
"    EMC_ABORT_TYPE\n"
"    EMC_STAT_TYPE\n"
"    EMC_EXEC_PLUGIN_CALL_TYPE\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Coding Style"
msgstr ""

#. type: Plain text
msgid ""
"This chapter describes the source code style preferred by the LinuxCNC team."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Do no harm"
msgstr ""

#. type: Plain text
msgid ""
"When making small edits to code in a style different than the one described "
"below, observe the local coding style. Rapid changes from one coding style "
"to another decrease code readability."
msgstr ""

#. type: Plain text
msgid ""
"Never check in code after running âindentâ on it. The whitespace changes "
"introduced by indent make it more difficult to follow the revision history "
"of the file."
msgstr ""

#. type: Plain text
msgid ""
"Do not use an editor that makes unneeded changes to whitespace (e.g., which "
"replaces 8 spaces with a tabstop on a line not otherwise modified, or word-"
"wraps lines not otherwise modified)"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Tab Stops"
msgstr ""

#. type: Plain text
msgid ""
"A tab stop always corresponds to 8 spaces. Do not write code that displays "
"correctly only with a differing tab stop setting."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Indentation"
msgstr ""

#. type: Plain text
msgid ""
"Use 4 spaces per level of indentation. Combining 8 spaces into one tab is "
"acceptable but not required."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Placing Braces"
msgstr ""

#. type: Plain text
msgid ""
"Put the opening brace last on the line, and put the closing brace first:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"if (x) {\n"
"    // do something appropriate\n"
"}\n"
msgstr ""

#. type: Plain text
msgid ""
"The closing brace is on a line of its own, except in the cases where it is "
"followed by a continuation of the same statement, i.e. a 'while' in a do-"
"statement or an 'else' in an if-statement, like this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"do {\n"
"    // something important\n"
"} while (x > 0);\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"if (x == y) {\n"
"    // do one thing\n"
"} else if (x < y) {\n"
"    // do another thing\n"
"} else {\n"
"    // do a third thing\n"
"}\n"
msgstr ""

#. type: Plain text
msgid ""
"This brace-placement also minimizes the number of empty (or almost empty) "
"lines, which allows a greater amount of code or comments to be visible at "
"once in a terminal of a fixed size."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Naming"
msgstr ""

#. type: Plain text
msgid ""
"C is a Spartan language, and so should your naming be. Unlike Modula-2 and "
"Pascal programmers, C programmers do not use cute names like "
"ThisVariableIsATemporaryCounter. A C programmer would call that variable "
"'tmp', which is much easier to write, and not the least more difficult to "
"understand."
msgstr ""

#. type: Plain text
msgid ""
"However, descriptive names for global variables are a must. To call a global "
"function 'foo' is a shooting offense."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"GLOBAL variables (to be used only if you *really*  need them) need to\n"
"have descriptive names, as do global functions. If\n"
"you have a function that counts the number of active users, you should\n"
" call that 'count_active_users()' or similar, you should *not* call it\n"
"'cntusr()'.\n"
msgstr ""

#. type: Plain text
msgid ""
"Encoding the type of a function into the name (so-called Hungarian notation) "
"is brain damaged - the compiler knows the types anyway and can check those, "
"and it only confuses the programmer. No wonder Microsoft makes buggy "
"programs."
msgstr ""

#. type: Plain text
msgid ""
"LOCAL variable names should be short, and to the point. If you have some "
"random integer loop counter, it should probably be called 'i'.  Calling it "
"'loop_counter' is non-productive, if there is no chance of it being "
"misunderstood. Similarly, 'tmp' can be just about any type of variable that "
"is used to hold a temporary value."
msgstr ""

#. type: Plain text
msgid ""
"If you are afraid to mix up your local variable names, you have another "
"problem, which is called the function-growth-hormone-imbalance syndrome. See "
"next chapter."
msgstr ""

#. type: Plain text
msgid ""
"Functions should be short and sweet, and do just one thing. They should fit "
"on one or two screenfuls of text (the ISO/ANSI screen size is 80x24, as we "
"all know), and do one thing and do that well."
msgstr ""

#. type: Plain text
msgid ""
"The maximum length of a function is inversely proportional to the complexity "
"and indentation level of that function. So, if you have a conceptually "
"simple function that is just one long (but simple)  case-statement, where "
"you have to do lots of small things for a lot of different cases, it's OK to "
"have a longer function."
msgstr ""

#. type: Plain text
msgid ""
"However, if you have a complex function, and you suspect that a less-than-"
"gifted first-year high-school student might not even understand what the "
"function is all about, you should adhere to the maximum limits all the more "
"closely. Use helper functions with descriptive names (you can ask the "
"compiler to in-line them if you think it's performance-critical, and it will "
"probably do a better job of it that you would have done)."
msgstr ""

#. type: Plain text
msgid ""
"Another measure of the function is the number of local variables. They "
"shouldn't exceed 5-10, or you're doing something wrong. Re-think the "
"function, and split it into smaller pieces. A human brain can generally "
"easily keep track of about 7 different things, anything more and it gets "
"confused. You know you're brilliant, but maybe you'd like to understand what "
"you did 2 weeks from now."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Commenting"
msgstr ""

#. type: Plain text
msgid ""
"Comments are good, but there is also a danger of over-commenting.  NEVER try "
"to explain HOW your code works in a comment: it's much better to write the "
"code so that the *working* is obvious, and it's a waste of time to explain "
"badly written code."
msgstr ""

#. type: Plain text
msgid ""
"Generally, you want your comments to tell WHAT your code does, not HOW. A "
"boxed comment describing the function, return value, and who calls it placed "
"above the body is good. Also, try to avoid putting comments inside a "
"function body: if the function is so complex that you need to separately "
"comment parts of it, you should probably re-read the Functions section "
"again. You can make small comments to note or warn about something "
"particularly clever (or ugly), but try to avoid excess.  Instead, put the "
"comments at the head of the function, telling people what it does, and "
"possibly WHY it does it."
msgstr ""

#. type: Plain text
msgid ""
"If comments along the lines of /* Fix me */ are used, please, please, say "
"why something needs fixing. When a change has been made to the affected "
"portion of code, either remove the comment, or amend it to indicate a change "
"has been made and needs testing."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Shell Scripts & Makefiles "
msgstr ""

#. type: Plain text
msgid ""
"Not everyone has the same tools and packages installed. Some people use vi, "
"others emacs - A few even avoid having either package installed, preferring "
"a lightweight text editor such as nano or the one built in to Midnight "
"Commander."
msgstr ""

#. type: Plain text
msgid ""
"gawk versus mawk - Again, not everyone will have gawk installed, mawk is "
"nearly a tenth of the size and yet conforms to the Posix AWK standard. If "
"some obscure gawk specific command is needed that mawk does not provide, "
"than the script will break for some users. The same would apply to mawk. In "
"short, use the generic awk invocation in preference to gawk or mawk."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "C++ Conventions"
msgstr ""

#. type: Plain text
msgid ""
"C++ coding styles are always likely to end up in heated debates (a bit like "
"the emacs versus vi arguments). One thing is certain however, a common style "
"used by everyone working on a project leads to uniform and readable code."
msgstr ""

#. type: Plain text
msgid ""
"Naming conventions: Constants either from #defines or enumerations should be "
"in upper case through out. Rationale: Makes it easier to spot compile time "
"constants in the source code. e.g. EMC_MESSAGE_TYPE"
msgstr ""

#. type: Plain text
msgid ""
"Classes and Namespaces should capitalize the first letter of each word and "
"avoid underscores. Rationale: Identifies classes, constructors and "
"destructors. e.g. GtkWidget"
msgstr ""

#. type: Plain text
msgid ""
"Methods (or function names) should follow the C recommendations above and "
"should not include the class name. Rationale: Maintains a common style "
"across C and C++ sources. e.g. get_foo_bar()"
msgstr ""

#. type: Plain text
msgid ""
"However, boolean methods are easier to read if they avoid underscores and "
"use an 'is' prefix (not to be confused with methods that manipulate a "
"boolean). Rationale: Identifies the return value as TRUE or FALSE and "
"nothing else. e.g. isOpen, isHomed"
msgstr ""

#. type: Plain text
msgid ""
"Do NOT use 'Not' in a boolean name, it leads only leads to confusion when "
"doing logical tests. e.g. isNotOnLimit or is_not_on_limit are BAD."
msgstr ""

#. type: Plain text
msgid ""
"Variable names should avoid the use of upper case and underscores except for "
"local or private names. The use of global variables should be avoided as "
"much as possible. Rationale: Clarifies which are variables and which are "
"methods. Public: e.g. axislimit Private: e.g.  maxvelocity_"
msgstr ""

#. type: Plain text
msgid "Specific method naming conventions"
msgstr ""

#. type: Plain text
msgid ""
"The terms get and set should be used where an attribute is accessed "
"directly. Rationale: Indicates the purpose of the function or method.  e.g. "
"get_foo set_bar"
msgstr ""

#. type: Plain text
msgid ""
"For methods involving boolean attributes, set & reset is preferred.  "
"Rationale: As above. e.g. set_amp_enable reset_amp_fault"
msgstr ""

#. type: Plain text
msgid ""
"Math intensive methods should use compute as a prefix. Rationale: Shows that "
"it is computationally intensive and will hog the CPU. e.g.  compute_PID"
msgstr ""

#. type: Plain text
msgid ""
"Abbreviations in names should be avoided where possible - The exception is "
"for local variable names. Rationale: Clarity of code. e.g.  pointer is "
"preferred over ptr compute is preferred over cmp compare is again preferred "
"over cmp."
msgstr ""

#. type: Plain text
msgid ""
"Enumerates and other constants can be prefixed by a common type name e.g. "
"enum COLOR { COLOR_RED, COLOR_BLUE };"
msgstr ""

#. type: Plain text
msgid ""
"Excessive use of macros and defines should be avoided - Using simple methods "
"or functions is preferred. Rationale: Improves the debugging process."
msgstr ""

#. type: Plain text
msgid ""
"Include Statements Header files must be included at the top of a source file "
"and not scattered throughout the body. They should be sorted and grouped by "
"their hierarchical position within the system with the low level files "
"included first. Include file paths should NEVER be absolute - Use the "
"compiler -I flag instead. Rationale: Headers may not be in the same place on "
"all systems."
msgstr ""

#. type: Plain text
msgid ""
"Pointers and references should have their reference symbol next to the "
"variable name rather than the type name. Rationale: Reduces confusion.  e.g. "
"float *x or int &i"
msgstr ""

#. type: Plain text
msgid ""
"Implicit tests for zero should not be used except for boolean variables. e."
"g. if (spindle_speed != 0) NOT if (spindle_speed)"
msgstr ""

#. type: Plain text
msgid ""
"Only loop control statements must be included in a for() construct.  e.g. "
"sum = 0; for (i = 0; i < 10; i++) { sum += value[i]; }"
msgstr ""

#. type: Plain text
msgid "NOT for (i = 0, sum =0; i < 10; i++) sum += value[i];"
msgstr ""

#. type: Plain text
msgid ""
"Likewise, executable statements in conditionals must be avoided. e.g.  if "
"(fd = open(file_name) is bad."
msgstr ""

#. type: Plain text
msgid ""
"Complex conditional statements should be avoided - Introduce temporary "
"boolean variables instead."
msgstr ""

#. type: Plain text
msgid ""
"Parentheses should be used in plenty in mathematical expressions - Do not "
"rely on operator precedence when an extra parentheses would clarify things."
msgstr ""

#. type: Plain text
msgid ""
"File names: C++ sources and headers use .cc and .hh extension. The use of .c "
"and .h are reserved for plain C. Headers are for class, method, and "
"structure declarations, not code (unless the functions are declared inline)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Python coding standards"
msgstr ""

#. type: Plain text
msgid ""
"Use the http://www.python.org/dev/peps/pep-0008/[PEP 8] style for Python "
"code."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Comp coding standards"
msgstr ""

#. type: Plain text
msgid ""
"In the declaration portion of a .comp file, begin each declaration at the "
"first column. Insert extra blank lines when they help group related items."
msgstr ""

#. type: Plain text
msgid "In the code portion of a .comp file, follow normal C coding style."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Building LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"This document describes how to build the LinuxCNC software and documentation "
"from source.  This is primarily useful if you are a developer who is "
"modifying LinuxCNC.  It can also be useful if you're a user who is testing "
"developer branches, though then you also have the option of just installing "
"Debian packages from the buildbot: http://buildbot.linuxcnc.org"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Quick Start"
msgstr ""

#. type: Plain text
msgid "For the impatient, try this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> git clone git://github.com/linuxcnc/linuxcnc.git linuxcnc-dev\n"
"> cd linuxcnc-dev/src\n"
"> ./autogen.sh\n"
"> ./configure --with-realtime=uspace\n"
"> make\n"
msgstr ""

#. type: Plain text
msgid ""
"That will probably fail! That doesn't make you a bad person, it just means "
"you should read this whole document to find out how to fix your problems.  "
"Especially the section on <<Satisfying-Build-Dependencies, Satisfying Build "
"Dependencies>>."
msgstr ""

#. type: Plain text
msgid ""
"If you are running on a realtime-capable system (such as an install from the "
"LinuxCNC Live/Install Image, see the <<_realtime,Realtime>> section below), "
"one extra build step is needed at this time:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "> sudo make setuid\n"
msgstr ""

#. type: Plain text
msgid "After you've successfully built LinuxCNC it's time to run the tests:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> source ../scripts/rip-environment\n"
"> runtests\n"
msgstr ""

#. type: Plain text
msgid ""
"This might fail too! Read this whole document, but especially the section on "
"<<Setting-up-the-environment, Setting up the test environment>>."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Supported Platforms"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC project targets modern Debian-based distributions, including "
"Debian, Ubuntu, and Mint."
msgstr ""

#. type: Plain text
msgid ""
"We continuously test on the platforms listed at http://buildbot.linuxcnc.org."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC builds on most other Linux distributions, though dependency "
"management will be more manual and less automatic.  Patches to improve "
"portability to new platforms are always welcome."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Realtime"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC is a machine tool controller, and it requires a realtime platform "
"to do this job.  This version of LinuxCNC supports three realtime platforms"
msgstr ""

#. type: Plain text
msgid ""
"From https://www.rtai.org.  A Linux kernel with the RTAI patch is available "
"from the Debian archive at http://www.linuxcnc.org.  See <<cha:getting-"
"linuxcnc, Getting LinuxCNC>> for installation instructions."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Xenomai"
msgstr ""

#. type: Plain text
msgid ""
"From https://xenomai.org.  You will have to compile or obtain a Xenomai "
"kernel yourself."
msgstr ""

#. type: Plain text
msgid ""
"From https://rt.wiki.kernel.org.  A Linux kernel with the Preempt-RT patch "
"is occasionally available from the Debian archive at https://www.debian.org, "
"and from the wayback machine at https://snapshot.debian.org."
msgstr ""

#. type: Plain text
msgid ""
"To make use of the realtime capabilities of LinuxCNC, certain parts of "
"LinuxCNC need to run with root privileges.  To enable root for these parts, "
"run this extra command after the `make` that builds LinuxCNC:"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Non-realtime"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC can also be built and run on non-realtime platforms, such as a "
"regular install of Debian or Ubuntu without any special realtime kernel."
msgstr ""

#. type: Plain text
msgid ""
"In this mode LinuxCNC is not useful for controlling machine tools, but it is "
"useful for simulating the execution of G-code and for testing the non-"
"realtime parts of the system (such as the user interfaces, and some kinds of "
"components and device drivers)."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Build modes"
msgstr ""

#. type: Plain text
msgid ""
"There are two ways to build LinuxCNC: the developer-friendly \"run in place"
"\" mode and the user-friendly Debian packaging mode."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Building for Run In Place"
msgstr ""

#. type: Plain text
msgid ""
"In a Run-In-Place build, the LinuxCNC programs are compiled from source and "
"then run directly from within the build directory.  Nothing is installed "
"outside the build directory."
msgstr ""

#. type: Plain text
msgid "This is quick and easy, and suitable for rapid iteration of changes."
msgstr ""

#. type: Plain text
msgid "The LinuxCNC test suite runs only in a Run-In-Place build."
msgstr ""

#. type: Plain text
msgid "Most LinuxCNC developers primarily build using this mode."
msgstr ""

#. type: Plain text
msgid ""
"Building for Run-In-Place follows the steps in the <<Quick-Start, Quick "
"Start>> section at the top of this document, possibly with different "
"arguments to `src/configure` and `make`."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "`src/configure` arguments"
msgstr ""

#. type: Plain text
msgid ""
"The `src/configure` script configures how the source code will be compiled.  "
"It takes many optional arguments."
msgstr ""

#. type: Plain text
msgid "List all arguments to `src/configure` by running this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> cd linuxcnc-dev/src\n"
"> ./configure --help\n"
msgstr ""

#. type: Plain text
msgid "The most commonly used arguments are:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`--with-realtime=uspace`"
msgstr ""

#. type: Plain text
msgid ""
"Build for any realtime platform, or for non-realtime.  The resulting "
"LinuxCNC executables will run on both a Linux kernel with Preempt-RT patches "
"(providing realtime machine control) and on a vanilla (un-patched) Linux "
"kernel (providing G-code simulation but no realtime machine control).  If "
"development files are installed for Xenomai (typically from package "
"libxenomai-dev) or RTAI (typically from a package with a name starting "
"\"rtai-modules\"), support for these real-time kernels will also be enabled."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`--with-realtime=/usr/realtime-$VERSION`"
msgstr ""

#. type: Plain text
msgid ""
"Build for the RTAI realtime platform using the older \"kernel realtime\" "
"model.  This requires that you have an RTAI kernel and the RTAI modules "
"installed in `/usr/realtime-$VERSION`.  The resulting LinuxCNC executables "
"will only run on the specified RTAI kernel.  As of LinuxCNC 2.7, this "
"produces the best realtime performance."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`--enable-build-documentation`"
msgstr ""

#. type: Plain text
msgid ""
"Build the documentation, in addition to the executables.  This option adds "
"significantly to the time required for compilation, as building the docs is "
"quite time consuming.  If you are not actively working on the documentation "
"you may want to omit this argument."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "`make` arguments"
msgstr ""

#. type: Plain text
msgid "The `make` command takes two useful optional arguments."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Parallel compilation"
msgstr ""

#. type: Plain text
msgid ""
"`make` takes an optional argument `-jN` (where N is a number).  This enables "
"parallel compilation with N simultaneous processes, which can significantly "
"speed up your build."
msgstr ""

#. type: Plain text
msgid ""
"A useful value for N is the number of CPUs in your build system.  You can "
"discover the number of CPUs by running `nproc`."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "Building just a specific target"
msgstr ""

#. type: Plain text
msgid ""
"If you want to build just a specific part of LinuxCNC, you can name the "
"thing you want to build on the `make` command line.  For example, if you are "
"working on a component named `froboz`, you can build its executable by "
"running:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> cd linuxcnc-dev/src\n"
"> make ../bin/froboz\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Building Debian Packages"
msgstr ""

#. type: Plain text
msgid ""
"When building Debian packages, the LinuxCNC programs are compiled from "
"source and then stored in a Debian package, complete with dependency "
"information.  This takes more time, and the programs can't be used until the "
"Debian package is installed on a target machine."
msgstr ""

#. type: Plain text
msgid ""
"This build mode is primarily useful when packaging the software for delivery "
"to end users, and when building the software for a machine that doesn't have "
"the build environment installed, or that doesn't have internet access."
msgstr ""

#. type: Plain text
msgid ""
"Building Debian packages requires the `dpkg-buildpackage` tool, from the "
"`dpkg-dev` package:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "> sudo apt-get install dpkg-dev\n"
msgstr ""

#. type: Plain text
msgid ""
"Building Debian packages also requires that all build dependencies are "
"installed, as described in the section <<Satisfying-Build-Dependencies, "
"Satisfying Build Dependencies>>."
msgstr ""

#. type: Plain text
msgid ""
"Once those prerequisites are met, building the Debian packages consists of "
"two steps."
msgstr ""

#. type: Plain text
msgid ""
"The first step is generating the Debian package scripts and meta-data from "
"the git repo by running this:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"> cd linuxcnc-dev/debian\n"
"> ./configure uspace\n"
"> cd ..\n"
msgstr ""

#. type: delimited block =
msgid ""
"The `debian/configure` script is different from the `src/configure` script!"
msgstr ""

#. type: delimited block =
msgid ""
"The `debian/configure` script needs different arguments depending on the "
"platform you're building on/for, see the <<debian-configure-arguments, "
"`debian/configure` arguments>> section."
msgstr ""

#. type: Plain text
msgid ""
"Once the Debian package scripts and meta-data are configured, build the "
"package by running `dpkg-buildpackage` (note that it needs to run from the "
"`linuxcnc-dev` directory, *not* from `linuxcnc-dev/debian`):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "> dpkg-buildpackage -b -uc\n"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "`debian/configure` arguments"
msgstr ""

#. type: Plain text
msgid ""
"The `debian/configure` script configures the Debian packaging.  It must be "
"run before `dpkg-checkbuilddeps` and `dpkg-buildpackage` can be run."
msgstr ""

#. type: Plain text
msgid ""
"It takes a single argument which specifies the realtime or non-realtime "
"platform to build for.  The normal values for this argument are:"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`uspace`"
msgstr ""

#. type: Plain text
msgid ""
"Configure the Debian package for Preempt-RT realtime or for non-realtime "
"(these two are compatible)."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`noauto`"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`rtai`"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`xenomai`"
msgstr ""

#. type: Plain text
msgid ""
"Normally, the lists of RTOSes for uspace realtime to support is detected "
"automatically.  However, if you wish, you may specify one or more of these "
"after `uspace` to enable support for these RTOSes.  Or, to disable "
"autodetection, specify `noauto`."
msgstr ""

#. type: Plain text
msgid ""
"If you want just the traditional RTAI \"kernel module\" realtime, use `-r` "
"or `$KERNEL_VERSION` instead."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`rtai=<package name>`"
msgstr ""

#. type: Plain text
msgid ""
"If the development package for rtai lxrt does not start with \"rtai-modules"
"\", or if the first such package listed by apt-cache search is not the "
"desired one, then explicitly specify the package name."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`-r`"
msgstr ""

#. type: Plain text
msgid ""
"Configure the Debian package for the currently running RTAI kernel.  You "
"must be running an RTAI kernel on your build machine for this to work!"
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`$KERNEL_VERSION`"
msgstr ""

#. type: Plain text
msgid ""
"Configure the debian package for the specified RTAI kernel version (for "
"example \"3.4.9-rtai-686-pae\").  The matching kernel headers debian package "
"must be installed on your build machine (for example \"linux-headers-3.4.9-"
"rtai-686-pae\").  Note that you can _build_ LinuxCNC in this configuration, "
"but if you are not running the matching RTAI kernel you will not be able to "
"_run_ LinuxCNC, including the test suite."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Satisfying Build Dependencies"
msgstr ""

#. type: Plain text
msgid ""
"On Debian-based platforms we provide packaging meta-data that knows what "
"external software packages need to be installed in order to build LinuxCNC.  "
"This is called the Build Dependencies of LinuxCNC.  You can use this meta-"
"data to easily list the required packages missing from your build system."
msgstr ""

#. type: Plain text
msgid ""
"Debian systems provide a program called `dpkg-checkbuilddeps` that parses "
"the package meta-data and compares the packages listed as build dependencies "
"against the list of installed packages, and tells you what's missing."
msgstr ""

#. type: Plain text
msgid "First, install the `dpkg-checkbuilddeps` program by running:"
msgstr ""

#. type: Plain text
msgid ""
"Then ask your LinuxCNC git checkout to generate its Debian package meta-data:"
msgstr ""

#. type: Plain text
msgid ""
"Finally ask `dpkg-checkbuilddeps` to do its job (note that it needs to run "
"from the `linuxcnc-dev` directory, *not* from `linuxcnc-dev/debian`):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "> dpkg-checkbuilddeps\n"
msgstr ""

#. type: Plain text
msgid ""
"It will emit a list of packages that are required to build LinuxCNC on your "
"system, but that are not installed yet.  Install them all with `sudo apt-get "
"install`, followed by the package names."
msgstr ""

#. type: Plain text
msgid ""
"You can rerun `dpkg-checkbuilddeps` any time you want, to list any missing "
"packages."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Setting up the environment"
msgstr ""

#. type: Plain text
msgid ""
"This section describes the special steps needed to set up a machine to run "
"the LinuxCNC programs, including the tests."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Increase the locked memory limit"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC tries to improve its realtime latency by locking the memory it uses "
"into RAM.  It does this in order to prevent the operating system from "
"swapping LinuxCNC out to disk, which would have bad effects on latency."
msgstr ""

#. type: Plain text
msgid ""
"Normally locking memory into RAM is frowned upon, and the operating system "
"places a strict limit on how much memory a user is allowed to have locked."
msgstr ""

#. type: Plain text
msgid ""
"When using the Preempt-RT realtime platform LinuxCNC runs with enough "
"privilege to raise its memory lock limit itself.  When using the RTAI "
"realtime platform it does not have enough privilege, and the user must raise "
"the memory lock limit."
msgstr ""

#. type: Plain text
msgid ""
"If LinuxCNC displays the following message on startup, the problem is your "
"system's configured limit on locked memory:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"RTAPI: ERROR: failed to map shmem\n"
"RTAPI: Locked memory limit is 32KiB, recommended at least 20480KiB.\n"
msgstr ""

#. type: Plain text
msgid ""
"To fix this problem, add a file named `/etc/security/limits.d/linuxcnc.conf` "
"(as root) with your favorite text editor (e.g., `sudo gedit /etc/security/"
"limits.d/linuxcnc.conf`).  The file should contain the following line:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "* - memlock 20480\n"
msgstr ""

#. type: Plain text
msgid ""
"Log out and log back in to make the changes take effect.  Verify that the "
"memory lock limit is raised using the following command:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "> ulimit -l\n"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Options for checking out the git repo"
msgstr ""

#. type: Plain text
msgid ""
"The <<Quick-Start, Quick Start>> instructions at the top of this document "
"said to make an anonymous local clone from our git repo at http://github.com/"
"linuxcnc/linuxcnc.git.  This is the quickest, easiest way to get started.  "
"However, there are other options to consider."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Fork us on Github"
msgstr ""

#. type: Plain text
msgid ""
"The LinuxCNC project git repo is at http://github.com/LinuxCNC/linuxcnc.  "
"github is a popular git hosting service and code sharing website.  You can "
"easily (and for no cost) create a fork of our git repo at github, and use "
"that to track and publish your changes."
msgstr ""

#. type: Plain text
msgid ""
"After creating your own github fork of LinuxCNC, clone it to your "
"development machine and proceed with your hacking as usual."
msgstr ""

#. type: Plain text
msgid ""
"We of the LinuxCNC project hope that you will share your changes with us, so "
"that the community can benefit from your work.  Github makes this sharing "
"very easy: after you polish your changes and push them to your github fork, "
"send us a Pull Request."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Adding Configuration Selection Items"
msgstr ""

#. type: Plain text
msgid ""
"Example Configurations can be added to the Configuration Selector by two "
"methods:"
msgstr ""

#. type: Plain text
msgid ""
"Auxiliary applications -- Applications installed independently with a deb "
"package can place configuration subdirectories in a specified system "
"directory.  The directory name is specified using the shell linuxcnc_var "
"script:"
msgstr ""

#. type: delimited block =
#, no-wrap
msgid ""
"$ linuxcnc_var LINUXCNC_AUX_EXAMPLES\n"
"/usr/share/linuxcnc/aux_examples\n"
msgstr ""

#. type: Plain text
msgid ""
"Runtime settings -- the configuration selector can also offer configuration "
"subdirectories specified at runtime using an exported environamental "
"variable (LINUXCNC_AUX_CONFIGS).  This variable should be a path list of one "
"or more configuration directories separated by a (:).  Typically, this "
"variable would be set in a shell starting linuxcnc or in a user's ~/.profile "
"startup script.  Example:"
msgstr ""

#. type: delimited block =
#, no-wrap
msgid "export LINUXCNC_AUX_CONFIGS=~/myconfigs:/opt/otherconfigs\n"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Contributing to LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"This document contains information for developers about LinuxCNC "
"infrastructure, and describes the best practices for contributing code and "
"documentation updates to the LinuxCNC project."
msgstr ""

#. type: Plain text
msgid ""
"Throughout this document, \"source\" means both the source code to the "
"programs and libraries, and the source text for the documentation."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Communication among LinuxCNC developers"
msgstr ""

#. type: Plain text
msgid ""
"The two main ways that project developers communicate with each other are:"
msgstr ""

#. type: Plain text
msgid "Via IRC, at #linuxcnc-devel on FreeNode."
msgstr ""

#. type: Plain text
msgid ""
"Via email, on the developers' mailing list: https://lists.sourceforge.net/"
"lists/listinfo/emc-developers"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The LinuxCNC Source Forge project"
msgstr ""

#. type: Plain text
msgid ""
"We use Source Forge for mailing lists: http://sourceforge.net/p/emc/mailman/"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "The git Revision Control System"
msgstr ""

#. type: Plain text
msgid ""
"All of the LinuxCNC source is maintained in the revision control system git "
"footnote:[http://git-scm.com/]."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "LinuxCNC official git repo"
msgstr ""

#. type: Plain text
msgid ""
"The official LinuxCNC git repo is at http://github.com/linuxcnc/linuxcnc/"
msgstr ""

#. type: Plain text
msgid "Anyone can get a read-only copy of the LinuxCNC source tree via git:"
msgstr ""

#. type: Plain text
msgid "`git clone https://github.com/linuxcnc/linuxcnc linuxcnc-dev`"
msgstr ""

#. type: Plain text
msgid ""
"If you are a developer with push access, then follow github's instructions "
"for setting up a repository that you can push from."
msgstr ""

#. type: Plain text
msgid ""
"Note that the clone command put the local LinuxCNC repo in a directory "
"called `linuxcnc-dev`, instead of the default `linuxcnc`.  This is because "
"the LinuxCNC software by default expects configs and G-code programs in a "
"directory called `$HOME/linuxcnc`, and having the git repo there too is "
"confusing."
msgstr ""

#. type: Plain text
msgid ""
"Issues and pull requests are welcome on github: https://github.com/LinuxCNC/"
"linuxcnc/issues https://github.com/LinuxCNC/linuxcnc/pulls"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Use of git in the LinuxCNC project"
msgstr ""

#. type: Plain text
msgid ""
"We use the \"merging upwards\" and \"topic branches\" git workflows "
"described here:"
msgstr ""

#. type: Plain text
msgid "https://www.kernel.org/pub/software/scm/git/docs/gitworkflows.html"
msgstr ""

#. type: Plain text
msgid ""
"We have a development branch called `master`, and one or more stable "
"branches with names like `2.6` and `2.7` indicating the version number of "
"the releases we make from it."
msgstr ""

#. type: Plain text
msgid ""
"Bugfixes go in the oldest applicable stable branch, and that branch gets "
"merged into the next newer stable branch, and so on up to `master`.  The "
"committer of the bugfix may do the merges themselves, or they may leave the "
"merges for someone else."
msgstr ""

#. type: Plain text
msgid ""
"New features generally go in the `master` branch, but some kinds of features "
"(specifically well isolated device drivers and documentation)  may (at the "
"discretion of the stable branch release managers) go into a stable branch "
"and get merged up just like bugfixes do."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "git tutorials"
msgstr ""

#. type: Plain text
msgid "There are many excellent, free git tutorials on the internet."
msgstr ""

#. type: Plain text
msgid ""
"The first place to look is probably the \"gittutorial\" manpage.  This "
"manpage is accessible by running \"man gittutorial\" in a terminal (if you "
"have the git manpages installed).  The gittutorial and its follow-on "
"documentation are also available online here:"
msgstr ""

#. type: Plain text
msgid ""
"git tutorial: https://www.kernel.org/pub/software/scm/git/docs/gittutorial."
"html"
msgstr ""

#. type: Plain text
msgid ""
"git tutorial 2: https://www.kernel.org/pub/software/scm/git/docs/"
"gittutorial-2.html"
msgstr ""

#. type: Plain text
msgid ""
"Everyday git with 20 commands or so: https://www.kernel.org/pub/software/scm/"
"git/docs/giteveryday.html"
msgstr ""

#. type: Plain text
msgid ""
"Git User's Manual: https://www.kernel.org/pub/software/scm/git/docs/user-"
"manual.html"
msgstr ""

#. type: Plain text
msgid ""
"For a more thorough documentation of git see the \"Pro Git\" book: http://"
"git-scm.com/book"
msgstr ""

#. type: Plain text
msgid ""
"Another online tutorial that has been recommended is \"Git for the Lazy\": "
"http://wiki.spheredev.org/Git_for_the_lazy"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Overview of the process"
msgstr ""

#. type: Plain text
msgid ""
"The high-level overview of how to contribute changes to the source goes like "
"this:"
msgstr ""

#. type: Plain text
msgid ""
"Communicate with the project developers and let us know what you're hacking "
"on"
msgstr ""

#. type: Plain text
msgid "Clone the git repo"
msgstr ""

#. type: Plain text
msgid ""
"Make your changes in a local branch, making sure you \"sign off\" your "
"commits according to our signed-off-by policy (see below)."
msgstr ""

#. type: Plain text
msgid ""
"Adding documentation and tests is an important part of adding a new "
"feature.  Otherwise, others won't know how to use your feature, and if other "
"changes break your feature it can go unnoticed without a test."
msgstr ""

#. type: Plain text
msgid ""
"Share your changes with the other project developers in one of these ways:"
msgstr ""

#. type: Plain text
msgid ""
"Push your branch to github and create a github pull request to https://"
"github.com/linuxcnc/linuxcnc (this requires a github account)"
msgstr ""

#. type: Plain text
msgid ""
"Push your branch to a publicly visible git repo (such as github, bitbucket, "
"your own publicly-accessible server, etc) and share that location on the emc-"
"developers mailing list, or"
msgstr ""

#. type: Plain text
msgid ""
"Email your commits to the emc-developers mailing list (use `git format-"
"patch` to create the patches)"
msgstr ""

#. type: Plain text
msgid "Advocate for your patch"
msgstr ""

#. type: Plain text
msgid ""
"Explain what problem it addresses and why it should be included in LinuxCNC"
msgstr ""

#. type: Plain text
msgid "Be receptive to questions and feedback from the developer community."
msgstr ""

#. type: Plain text
msgid ""
"It is not uncommon for a patch to go through several revisions before it is "
"accepted."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "git configuration"
msgstr ""

#. type: Plain text
msgid ""
"In order to be considered for inclusion in the LinuxCNC source, commits must "
"have correct Author fields identifying the author of the commit.  A good way "
"to ensure this is to set your global git config:"
msgstr ""

#. type: Plain text
msgid "`git config --global user.name \"Your full name\"`"
msgstr ""

#. type: Plain text
msgid "`git config --global user.email \"you@example.com\"`"
msgstr ""

#. type: Plain text
msgid ""
"Use your real name (not a handle), and use an unobfuscated e-mail address."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Effective use of git"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Commit contents"
msgstr ""

#. type: Plain text
msgid ""
"Keep your commits small and to the point.  Each commit should accomplish one "
"logical change to the repo."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Write good commit messages"
msgstr ""

#. type: Plain text
msgid ""
"Keep commit messages around 72 columns wide (so that in a default-size "
"terminal window, they don't wrap when shown by `git log`)."
msgstr ""

#. type: Plain text
msgid ""
"Use the first line as a summary of the intent of the change (almost like the "
"subject line of an e-mail).  Follow it with a blank line, then a longer "
"message explaining the change.  Example:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    Get rid of RTAPI_SUCCESS, use 0 instead\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    The test \"retval < 0\" should feel familiar; it's the same kind of\n"
"    test you use in userspace (returns -1 for error) and in kernel space\n"
"    (returns -ERRNO for error)\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Commit to the proper branch"
msgstr ""

#. type: Plain text
msgid ""
"Bugfixes should go on the oldest applicable branch.  New features should go "
"in the master branch.  If you're not sure where a change belongs, ask on irc "
"or on the mailing list."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Use multiple commits to organize changes"
msgstr ""

#. type: Plain text
msgid ""
"When appropriate, organize your changes into a branch (a series of commits) "
"where each commit is a logical step towards your ultimate goal. For example, "
"first factor out some complex code into a new function. Then, in a second "
"commit, fix an underlying bug. Then, in the third commit, add a new feature "
"which is made easier by the refactoring and which would not have worked "
"without fixing that bug."
msgstr ""

#. type: Plain text
msgid ""
"This is helpful to reviewers, because it is easier to see that the \"factor "
"out code into new function\" step was right when there arenât other edits "
"mixed in; itâs easier to see that the bug is fixed when the change that "
"fixes it is separate from the new feature; and so on."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Follow the style of the surrounding code"
msgstr ""

#. type: Plain text
msgid ""
"Make an effort to follow the prevailing indentation style of surrounding "
"code. In particular, changes to whitespace make it harder for other "
"developers to track changes over time. When reformatting code must be done, "
"do it as a commit separate from any semantic changes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Simplify complicated history before sharing with fellow developers"
msgstr ""

#. type: Plain text
msgid ""
"With git, itâs possible to record every edit and false start as a separate "
"commit. This is very convenient as a way to create checkpoints during "
"development, but often you donât want to share these false starts with "
"others."
msgstr ""

#. type: Plain text
msgid ""
"Git provides two main ways to clean history, both of which can be done "
"freely before you share the change:"
msgstr ""

#. type: Plain text
msgid ""
"`git commit --amend` lets you make additional changes to the last thing you "
"committed, optionally modifying the commit message as well. Use this if you "
"realized right away that you left something out of the commit, or if you "
"typoâd the commit message."
msgstr ""

#. type: Plain text
msgid ""
"`git rebase --interactive upstream-branch` lets you go back through each "
"commit made since you forked your feature branch from the upstream branch, "
"possibly editing commits, dropping commits, or squashing (combining)  "
"commits with others.  Rebase can also be used to split individual commits "
"into multiple new commits."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Make sure every commit builds"
msgstr ""

#. type: Plain text
msgid ""
"If your change consists of several patches, `git rebase -i` may be used to "
"reorder these patches into a sequence of commits which more clearly lays out "
"the steps of your work.  A potential consequence of reordering patches is "
"that one might get dependencies wrong - for instance, introducing a use of a "
"variable, and the declaration of that variable only follows in a later patch."
msgstr ""

#. type: Plain text
msgid ""
"While the branch HEAD will build, not every commit might build in such a "
"case.  That breaks `git bisect` - something somebody else might use later on "
"to find the commit which introduced a bug.  So beyond making sure your "
"branch builds, it is important to assure every single commit builds as well."
msgstr ""

#. type: Plain text
msgid ""
"There's an automatic way to check a branch for each commit being buildable"
msgstr ""

#. type: Plain text
msgid ""
"see http://dustin.sallings.org/2010/03/28/git-test-sequence.html , and the "
"code at https://github.com/dustin/bindir/blob/master/git-test-sequence .  "
"Use as follows (in this case testing every commit from origin/master to "
"HEAD, including running regression tests):"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"cd linuxcnc-dev\n"
"git-test-sequence origin/master..  '(cd src && make && ../scripts/runtests)'\n"
msgstr ""

#. type: Plain text
msgid "This will either report 'All's well' or 'Broke on <commit>'"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Renaming files"
msgstr ""

#. type: Plain text
msgid ""
"Please use the ability to rename files very cautiously.  Like running indent "
"on single files, renames still make it more difficult to follow changes over "
"time.  At a minimum, you should seek consensus on irc or the mailing list "
"that the rename is an improvement."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Prefer \"rebase\""
msgstr ""

#. type: Plain text
msgid ""
"Use `git pull --rebase` instead of bare `git pull` in order to keep a nice "
"linear history.  When you rebase, you always retain your work as revisions "
"that are ahead of origin/master, so you can do things like `git format-"
"patch` them to share with others without pushing to the central repository."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Other ways to contribute"
msgstr ""

#. type: Plain text
msgid ""
"There are many ways to contribute to LinuxCNC, that are not addressed by "
"this document.  These ways include:"
msgstr ""

#. type: Plain text
msgid "Answering questions on the forum, mailing lists, and in IRC"
msgstr ""

#. type: Plain text
msgid "Reporting bugs on the bug tracker, forum, mailing lists, or in IRC"
msgstr ""

#. type: Plain text
msgid "Helping test experimental features"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Integrator Information V{lversion}, {date}"
msgstr ""

#.  vim: set syntax=asciidoc:
#. type: Title =
#, no-wrap
msgid "Stepper Information"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stepper Motor Operation"
msgstr ""

#. type: Plain text
msgid ""
"Stepper motors operate by sequentially energising and de-energising several "
"coils surrounding the rotor in such a way that the shaft is magnetically "
"forced to rotate around in discrete steps. Steps of 0.9 â 1.8 degrees are "
"quite common, giving 400 â 200 steps per full revolution of the shaft."
msgstr ""

#. type: Plain text
msgid ""
"As in real life, nothing can change from one state to another with "
"absolutely no time delay. In the case of the stepper motor, the current "
"passing through each coil, and thus the magnetic field that pulls the rotor "
"around to each step of rotation takes some time to take effect. This is due "
"to the coil having inductance (expressed in Henries, abbreviated to the "
"letter H) which has a natural tendency to resist the flow of a rapidly "
"changing current. More coil inductance results in a slower rate of current "
"change and thus a slower rate of magnetic field expansion and contraction."
msgstr ""

#. type: Plain text
msgid ""
"The maximum torque that the stepper motor can achieve is when the motor is "
"stationary with one winding energised.  This figure may be quoted on a "
"stepper motor datasheet as the âholding torqueâ. As the rate at which each "
"coil is energised and de-energised increases to induce rotation in the "
"shaft, the time that each coil can exert its full magnetic attraction on the "
"rotor reduces, thereby reducing the overall torque. This relationship "
"between speed and torque is largely inversely proportional."
msgstr ""

#. type: Plain text
msgid ""
"In the below example, the charging time for three coils is shown when the "
"applied voltage is stepped from 0V to 40V. While all three coils can easily "
"reach the full current limit of 5 amps, the time taken varies for each coil. "
"The 4 milli-Henry coil (blue trace) takes twice as long to reach full "
"current than the 2mH coil (green trace), and the 8mH (red trace) coil takes "
"twice as long again:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/inductance-step-response.png"
msgstr ""

#. type: Plain text
msgid ""
"If the rate at which step changes are applied to the coils is significantly "
"shorter than the rise time, itâs easy to see that the winding has less time "
"to attain full magnetic attraction on the rotor, and thus maximum torque is "
"curtailed. In the below example the 2mH coil can achieve the full 5A limit "
"before the step voltage is removed, but the 4mH and 8mH coils cannot:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/inductance-pulse-response-slow-charge.png"
msgstr ""

#. type: Plain text
msgid ""
"The accepted way of improving motor speed while maintaining torque is to "
"increase the speed at which the magnetic field of the motor coils can expand "
"and collapse. The easiest way to accomplish this is to increase the supply "
"voltage to force the current in each winding to rise and fall much more "
"rapidly. A quicker magnetising time equates to faster step rates while "
"improving torque at higher speeds, both of which are obviously desirable in "
"a CNC system."
msgstr ""

#. type: Plain text
msgid ""
"Using the same example as above, but increasing the step voltage to 80V it "
"can be seen that all three coils can now reach the 5A maximum quite easily:"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/inductance-pulse-response-fast-charge.png"
msgstr ""

#. type: Plain text
msgid ""
"However, careful management of a higher drive voltage is required, as a "
"higher voltage will increase current flowing in each coil with a "
"corresponding increase in temperature of the winding. Excessive temperature "
"rise in the winding will lead to eventual overheating and failure of the "
"motor."
msgstr ""

#. type: Plain text
msgid ""
"In most stepper-based CNC systems the voltage of the supply feeding the "
"stepper driver is several orders of magnitude greater than the voltage of "
"the motor itself. A typical NEMA23 stepper motor may have a rating of only a "
"handful of volts, yet the power supply and driver could be operating at "
"48VDC or more."
msgstr ""

#. type: Plain text
msgid ""
"Nearly all modern stepper motor drivers on the market today are constant-"
"current types. That is, the current being applied to each winding is fixed "
"irrespective of how much voltage is being applied. Most drivers accomplish "
"this by monitoring the current being drawn through the motor windings and "
"rapidly switching the outputs on and off at a very high frequency to "
"maintain this current. Depending on the drivers being used, it may even be "
"possible to hear this high frequency whistling in the motors themselves when "
"stationary. Because the voltage is rapidly switched on and off to maintain "
"the winding current at an approximate fixed value, these types of drivers "
"are also known as âchopper driveâ."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Selecting a Stepper Power Supply"
msgstr ""

#. type: Plain text
msgid ""
"While a higher voltage is directly related to more speed and torque, "
"obviously there comes a limit where increasing supply voltage is no longer "
"beneficial. The first limitation to the maximum power supply voltage is "
"likely to be what the stepper driver itself is capable of withstanding. This "
"value should be provided in the datasheet for the stepper driver, and "
"exceeding this voltage will result in the destruction of the driver. Ideally "
"the power supply voltage should be chosen with a degree of headroom that "
"falls under this maximum voltage limit of around 10%. If, for example a "
"stepper driver has a Vmax rating of 80VDC, the maximum power supply voltage "
"should be limited to 72VDC."
msgstr ""

#. type: Plain text
msgid ""
"As mentioned above, excessive motor supply voltage also leads to excessive "
"heat rise in the motor windings which can lead to eventual failure of the "
"motor through overheating. A commonly used equation for providing a "
"guideline in determining the maximum voltage to prevent excessive heat rise "
"is to take the square-root of the winding inductance quoted in the motor "
"datasheet (expressed in mill-Henries) and multiply by 32. For example, "
"choosing a stepper with a coil inductance of 4mH will result in a maximum "
"power supply voltage of 32 x SQRT (4) = 64VDC."
msgstr ""

#. type: Plain text
msgid ""
"Many stepper motor datasheets will also provide speed/torque curves, often "
"plotted using different supply voltages. By studying the graphs it may be "
"determined that increasing the supply voltage by a factor of two will not "
"result in a corresponding improvement in speed/torque by the same degree. If "
"there is little to be gained in running a stepper motor at 64VDC, this may "
"help in narrowing down the proposed power supply to 32VDC which will also "
"help minimise excessive heat rise in the motor windings."
msgstr ""

#. type: Plain text
msgid ""
"The other factor to consider is the current rating of the power supply. This "
"is based from the motorâs winding current ratings and whether the motor "
"windings are wired in series or parallel, both of which should be listed in "
"the motorâs datasheet. A good rule of thumb is to size the power supply "
"current rating at 2/3 of the rated phase current of the stepper motor if the "
"windings are in parallel, or 1/3 of the rated current if wired in series.  "
"Thus, for a stepper motor rated at 4A wired in parallel, the power supply "
"needs to have a current rating of at least 2.7A, or 1.3A if wired in series. "
"The total current rating of the complete system is then the sum of all "
"stepper motorsâ current requirements."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Resonance"
msgstr ""

#. type: Plain text
msgid ""
"Motor resonance occurs when the rate at which the steps are applied to the "
"windings matches the natural frequency of the motor itself. Applying steps "
"for a prolonged period of time at this rate results in the torque dropping "
"dramatically, and the motor may stall or even rotate in random directions. "
"Some stepper motor datasheets provide plots of the torque/speed relationship "
"and show a dip in the graph where resonance is likely to occur. It should be "
"noted that this resonant peak provided in the datasheet is only for the "
"motor itself â as soon as the motor is coupled to other components (ie, "
"installed in a CNC system) the resonant frequency may be altered, or even "
"multiple new resonances introduced."
msgstr ""

#. type: Plain text
msgid ""
"Several methods exist to help control the effects of resonance, all with "
"varying degrees of complexity, effectiveness and side effects:"
msgstr ""

#. type: Plain text
msgid ""
"Microstepping can help reduce resonance by using smaller step changes in "
"current between each step. These smaller step changes cause less ringing in "
"the motor and windings and thus cause less excitation at the point of "
"resonance."
msgstr ""

#. type: Plain text
msgid ""
"Ensuring the motor is never operated at a particular frequency for a "
"sustained period is a very basic method of reducing resonance, always "
"accelerating or decelerating through the resonant peak."
msgstr ""

#. type: Plain text
msgid ""
"Increasing inertial load will damp unwanted resonances at the expense of "
"some torque and potentially some accuracy. Elastomeric motor mounts, shaft "
"couplings or bearing mounts can be employed."
msgstr ""

#. type: Plain text
msgid ""
"More advanced stepper motor drives may have the ability to switch between "
"stepping modes such that the resonant peak is managed at certain rates of "
"operation. Other systems exist to place electrical load on the windings, "
"which has a similar effect to mechanical damping, above."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Microstepping"
msgstr ""

#. type: Plain text
msgid ""
"A stepper motor operating with each winding being fully energised in a "
"sequential fashion is operating in full-step mode. That is, the maximum "
"rotation resolution possible for that motor is the same as the number of "
"whole steps that motor is manufactured to perform at (eg, 200 steps per "
"revolution for a 1.8 degree/step motor).  As each winding is energised the "
"rotor clocks around fully from one detent to the next."
msgstr ""

#. type: Plain text
msgid ""
"Additional rotational resolution from a stepper motor can be obtained by "
"performing microstepping, whereby the current being driven into each winding "
"can essentially be ârampedâ in discrete intermediate steps. This then causes "
"the rotor to gradually straddle across each rotational detent rather than "
"making the full jump from one step to the next."
msgstr ""

#. type: Plain text
msgid ""
"Microstepping is commonly performed in multiples of 2 (4x, 8x, 16x, 32x "
"etc). For example, a drive set to 4x microstepping will divide each step "
"into four discrete current levels in the motor windings, thus affording an "
"improvement in rotational resolution by a factor of four. This obviously "
"means that for a typical step/direction control interface there will need to "
"be four times as many step pulses generated to make the motor move the same "
"amount had it been operating in full-step mode. To make the motor rotate at "
"the same speed the rate at which pulses need to be applied to the drive also "
"needs to be four times as fast."
msgstr ""

#. type: Plain text
msgid ""
"At low rotational speeds, microstepping actually results in slightly higher "
"torque than when full stepping. This is due to the smaller changes in "
"current between intermediate steps resulting in less energy being wasted "
"exciting natural resonances in the motor. As RPM increases however, torque "
"tends to fall off at a similar rate as full stepping."
msgstr ""

#. type: Plain text
msgid ""
"However, continuing to increase the degree of microstepping will eventually "
"lead to some real-life limitations.  Step pulse generation, particularly "
"when using the parallel port, is limited in frequency. This will inevitably "
"limit the maximum speed at which the drive can be commanded to step at. With "
"high degrees of microstepping this will result in unacceptably slow RPM of "
"the motor."
msgstr ""

#. type: Plain text
msgid ""
"Excessively-high rates of microstepping have no real benefit if the "
"resultant accuracy is too small to be mechanically useful. A 1.8 degree per "
"step motor running at 16x microstepping is theoretically capable of 0.1125 "
"degrees per step. Coupled with a 20TPI leadscrew this should result in a "
"positional resolution of 0.000016â or 0.0004mm. In reality it is incredibly "
"difficult to achieve such fine degrees of control. All components in the CNC "
"system will contain tolerances and countering forces (backlash in "
"leadscrews, flex in gantries, runout in the spindle and cutting tool, static "
"friction in the stepper motor itself, stepper detent error etc) that will "
"render such small amounts of resolution completely meaningless. In practice, "
"microstepping at rates in excess of 4x or 8x on a CNC machine fitted with "
"leadscrews serves little purpose. In some cases it may even be more "
"beneficial to run at lower degrees of microstepping or even full steps, and "
"operate the stepper motor through a gear reduction to obtain the necessary "
"resolution and torque gains."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Open and Closed Loop"
msgstr ""

#. type: Plain text
msgid ""
"In the simplest CNC systems employing stepper motors, the host computer and/"
"or stepper driver receives no feedback from the motor that it has achieved "
"the desired outcome when commanded to begin stepping. The assumption by the "
"software, driver and end user is that the motor operated correctly and the "
"axis has moved to the expected new position. A system operating in this "
"fashion is said to be running in âopen loopâ, where the device at the end of "
"the signal chain (the stepper motor) does not provide any indication to the "
"device at the start of the chain (the computer) that the target was reached."
msgstr ""

#. type: Plain text
msgid ""
"A further enhancement to the basic stepper motor is to run the system in a "
"âclosed loopâ. This is achieved by equipping the stepper motor with a rotary "
"encoder whose positional signal is returned back to a device higher up in "
"the signal chain. In this way the motorsâ actual position can be compared to "
"the expected position at all times, and the drive parameters adjusted in "
"real time to ensure that the motor does not fall behind. This enables closed "
"loop stepper systems to be able to achieve better speed and torque "
"performance than open loop systems, due to the system constantly "
"compensating for any deviation to the stepperâs performance under varying "
"loads."
msgstr ""

#. type: Plain text
msgid ""
"Basic systems operating in this fashion may only close the loop between the "
"motor and the driver, leaving the software on the host computer out of the "
"loop. The software issues step/direction pulses to the downstream driver as "
"it would normally when running in open loop. In these situations the drivers "
"usually include an alarm output which signals the software to halt when the "
"load placed on the stepper becomes too great for the driver to compensate "
"without losing steps."
msgstr ""

#. type: Plain text
msgid ""
"More advanced implementations of closed loop operation bring the encoder "
"signal all the way back to the host computer, but require that a much higher "
"hardware and software overhead be installed to manage the encoder feedback "
"and calculation and delivery of drive compensation."
msgstr ""

#. type: Plain text
msgid "This page is for step and direction timing of stepper drives."
msgstr ""

#. type: Plain text
msgid ""
"Please add to this list using the stepconf wizard format and in nanoseconds "
"so it will be uniform."
msgstr ""

#. type: Plain text
msgid ""
"Some boards have know issues see the troubleshooting hardware page "
"[[Hardware_Problems]]"
msgstr ""

#. type: Plain text
msgid ""
"If your unsure about your drive timing start high like 10000 for each and "
"test.  remember that signal conditioning and opto-isolation can increase "
"timing requirements. That's why you need to know the timings for a driver "
"board, not just the step translator chip that is contains."
msgstr ""

#. type: Plain text
msgid ""
"Also notice that some controllers step on the falling edge some on the "
"rising edge. This matters as it will change the timing and will be hard to "
"trace.  make sure LinuxCNC follows what the controller expects."
msgstr ""

#. type: Plain text
msgid ""
"Note 1 if an asterisk precedes the name then the values are not confirmed. "
"If you can confirm the values please do..."
msgstr ""

#. type: Plain text
msgid ""
"Times listed are in nanoseconds (ns). Multiply microseconds (us) by 1000 to "
"get nanoseconds (ns)"
msgstr ""

#. type: Table
#, no-wrap
msgid "Manufacturer"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step Tim"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step Spac"
msgstr ""

#. type: Table
#, no-wrap
msgid "Direction Hol"
msgstr ""

#. type: Table
#, no-wrap
msgid "Direction Setup"
msgstr ""

#. type: Table
#, no-wrap
msgid "Steps on"
msgstr ""

#. type: Table
#, no-wrap
msgid "Spec Sheet"
msgstr ""

#. type: Table
#, no-wrap
msgid "Chinese Blue Board"
msgstr ""

#. type: Table
#, no-wrap
msgid "TB6560 CNC Stepper Motor Driver Controller Boar"
msgstr ""

#. type: Table
#, no-wrap
msgid "150000"
msgstr ""

#. type: Table
#, no-wrap
msgid "Falling Edg"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://hyu68.com/cp8.ht"
msgstr ""

#. type: Table
#, no-wrap
msgid "Gecko"
msgstr ""

#. type: Table
#, no-wrap
msgid "201"
msgstr ""

#. type: Table
#, no-wrap
msgid "500"
msgstr ""

#. type: Table
#, no-wrap
msgid "4000"
msgstr ""

#. type: Table
#, no-wrap
msgid "20000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/stepper-drives/g201-rev-16.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "202"
msgstr ""

#. type: Table
#, no-wrap
msgid "4500"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/stepper-drives/g202-rev-15.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "203"
msgstr ""

#. type: Table
#, no-wrap
msgid "2000"
msgstr ""

#. type: Table
#, no-wrap
msgid "200"
msgstr ""

#. type: Table
#, no-wrap
msgid "Rising Edg"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/stepper-drives/g203v-rev-7.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "201x"
msgstr ""

#. type: Table
#, no-wrap
msgid "3000"
msgstr ""

#. type: Table
#, no-wrap
msgid "212"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/stepper-drives/g212-rev-15.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "213"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/stepper-drives/g213v-rev-7.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "320"
msgstr ""

#. type: Table
#, no-wrap
msgid "3500"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/dc-servo-drives/g320-rev-7.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "320x"
msgstr ""

#. type: Table
#, no-wrap
msgid "2500"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.geckodrive.com/support/motor-control-manuals/dc-servo-drives/g320x-rev-10.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "Granite Device"
msgstr ""

#. type: Table
#, no-wrap
msgid "VSD-E/XE Evolution"
msgstr ""

#. type: Table
#, no-wrap
msgid "125"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://granitedevices.fi/assets/files/vsd-e_160_manual.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "VSD-E/XE DualDC"
msgstr ""

#. type: Table
#, no-wrap
msgid "150"
msgstr ""

#. type: Table
#, no-wrap
msgid "1850"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://granitedevices.fi/assets/files/vsd-e_160_dualdc_manual.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "JVL"
msgstr ""

#. type: Table
#, no-wrap
msgid "SMD41"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.jvl.dk/files/pdf/lb043gb.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "SMD42"
msgstr ""

#. type: Table
#, no-wrap
msgid "Linistepper Open Sourc"
msgstr ""

#. type: Table
#, no-wrap
msgid "RULMS1"
msgstr ""

#. type: Table
#, no-wrap
msgid "30000"
msgstr ""

#. type: Table
#, no-wrap
msgid "100000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.piclist.com/techref/io/stepper/linistep/index.ht"
msgstr ""

#. type: Table
#, no-wrap
msgid "THB6064"
msgstr ""

#. type: Table
#, no-wrap
msgid "2300"
msgstr ""

#. type: Table
#, no-wrap
msgid "4600"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.piclist.com/techref/io/stepper/THB6064/index.ht"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Motion Contro"
msgstr ""

#. type: Table
#, no-wrap
msgid "MSD542"
msgstr ""

#. type: Table
#, no-wrap
msgid ">1500"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.motioncontrolproducts.com/c2/uploads/msd542%20datasheet.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parker"
msgstr ""

#. type: Table
#, no-wrap
msgid "OEM750"
msgstr ""

#. type: Table
#, no-wrap
msgid "300"
msgstr ""

#. type: Table
#, no-wrap
msgid "200000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.compumotor.com/manuals/OEM750/OEM750_Entire_Rev_B.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "ST"
msgstr ""

#. type: Table
#, no-wrap
msgid "L297"
msgstr ""

#. type: Table
#, no-wrap
msgid "?"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.st.com/stonline/books/pdf/docs/1334.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "XS-3525/8S-3"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.xylotex.com/XS3525V202.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "XS-3525/8S-4"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.xylotex.com/XS3525V400.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Lin Engineering"
msgstr ""

#. type: Table
#, no-wrap
msgid "Silverpak 17D/DE"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.linengineering.com/site/products/pdf/SilverPak17D_DE-manual.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Hobbycnc"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pro Chopper Boar"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.hobbycnc.com/products/hobbycnc-pro-chopper-driver-board-kits/"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Routout"
msgstr ""

#. type: Table
#, no-wrap
msgid "2.5amp Stepper Driver"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.routoutcnc.com/2-5ampdriver.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "*Intelligent Motion Syste"
msgstr ""

#. type: Table
#, no-wrap
msgid "IM483"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.imshome.com/im483.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "Keling"
msgstr ""

#. type: Table
#, no-wrap
msgid "4030"
msgstr ""

#. type: Table
#, no-wrap
msgid "5000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www."
msgstr ""

#. type: Table
#, no-wrap
msgid "6852"
msgstr ""

#. type: Table
#, no-wrap
msgid "1750"
msgstr ""

#. type: Table
#, no-wrap
msgid "10000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.kelinginc.net/kL-6852.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "8760"
msgstr ""

#. type: Table
#, no-wrap
msgid "6000"
msgstr ""

#. type: Table
#, no-wrap
msgid "24000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.sherline.com/"
msgstr ""

#. type: Table
#, no-wrap
msgid "Burkhard Lewetz"
msgstr ""

#. type: Table
#, no-wrap
msgid "Step3S"
msgstr ""

#. type: Table
#, no-wrap
msgid "15000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.lewetz.de/download/ibstep3se.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Parker Compumotor"
msgstr ""

#. type: Table
#, no-wrap
msgid "Zeta 4"
msgstr ""

#. type: Table
#, no-wrap
msgid "?(200)"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.compumotor.com/manuals/ZETA/ZETA_Rev_A_Entire.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "www.cncdrive.co"
msgstr ""

#. type: Table
#, no-wrap
msgid "Dugong"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.cncdrive.com/content/dugong.ht"
msgstr ""

#. type: Table
#, no-wrap
msgid "DG2S-08020"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://cncdrive.com/DG2S_08020.htm"
msgstr ""

#. type: Table
#, no-wrap
msgid "Wantai Motor"
msgstr ""

#. type: Table
#, no-wrap
msgid "DQ542MA"
msgstr ""

#. type: Table
#, no-wrap
msgid "5050"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.wantmotor.com/ProductsView.asp?id=257&pid=82"
msgstr ""

#. type: Table
#, no-wrap
msgid "Leadshine USA"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital DM422 40V 2.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "7500"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DM422m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital DM556 50V 5.6A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DM556m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital DM856 80V 7.0A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DM856m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital DM870 80V 7.0A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DM870m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital DM1182 150VAC 8.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/DM1182m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital EM402 40V 2.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/EM402d_P.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital EM503 50V 4.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/EM503d_P.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital EM705 70V 7.0A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/EM705d_P.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Digital EM806 80V 8.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/EM806d_P.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog M415B 40V 1.5A"
msgstr ""

#. type: Table
#, no-wrap
msgid "1500"
msgstr ""

#. type: Table
#, no-wrap
msgid "8000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/M415Bm.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog M542 50V 4.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/M542V2m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog M752 75V 5.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/M752m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog M880A 80V 7.8A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/M880Am.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Analog M860H 80VAC 7.2A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/MA860Hm.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushed servo DCS303 30V 15A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DCS303m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushed servo DCS810 80V 20A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DCS810V1m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushed servo DCS810S 80V 20A"
msgstr ""

#. type: Table
#, no-wrap
msgid "7000"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/DCS810Sm.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushless servo ACS306 30V 15A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshine.com/UploadFile/Down/ACS306hm.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushless servo ACS606 60V 15A"
msgstr ""

#. type: Table
#, no-wrap
msgid "6700"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/ACS606m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Brushless servo ACS806 80V 20A"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://leadshineusa.com/UploadFile/Down/ACS806m.pdf"
msgstr ""

#. type: Table
#, no-wrap
msgid "Pololu"
msgstr ""

#. type: Table
#, no-wrap
msgid "A4988 Stepper Motor Driver Carrier"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.pololu.com/catalog/product/1182/"
msgstr ""

#. type: Table
#, no-wrap
msgid "DRV8825 Stepper Motor Driver Carrier"
msgstr ""

#. type: Table
#, no-wrap
msgid "1900"
msgstr ""

#. type: Table
#, no-wrap
msgid "650"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://www.pololu.com/catalog/product/2132/"
msgstr ""

#. type: Table
#, no-wrap
msgid "cnc4you"
msgstr ""

#. type: Table
#, no-wrap
msgid "[[CW5045]]"
msgstr ""

#. type: Table
#, no-wrap
msgid "http://cnc4you.co.uk/resources/CW5045.pdf"
msgstr ""

#. type: Title =
#, no-wrap
msgid "Best Wiring Practices"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Electrical Noise"
msgstr ""

#. type: Plain text
msgid ""
"Electrical noise in a system is caused by Electromagnetic Interference "
"(EMI), where signals appearing in one electrical circuit interfere with an "
"adjacent circuit, either through electromagnetic induction, electrostatic "
"coupling or conduction. EMI can cause problems with the daily operation of a "
"CNC machine, and can manifest itself in various ways such as false "
"triggering of limit switches, prematurely interrupted tool probing "
"operations, corruption of a serial data link to a VFD or erratic behaviour "
"of the CNC control systems and software."
msgstr ""

#. type: Plain text
msgid ""
"When current passes through a conductor a magnetic field is created. As the "
"current increases the magnetic field gets stronger, and then collapses again "
"when current ceases to flow. If this alternating magnetic field happens to "
"cross another conductor it can induce an unwanted voltage into it, which "
"presents itself as noise."
msgstr ""

#. type: Plain text
msgid ""
"There are several methods that can be employed to minimise the effects of "
"EMI in any electrical system. The most effective of these is obviously to "
"prevent the noise from occurring in the first place. In reality the method "
"of controlling the effects of EMI is usually by applying measures to prevent "
"noise from contaminating wanted signals in the CNC system."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Ground, Earth and Common"
msgstr ""

#. type: Plain text
msgid ""
"Confusion can arise when using terms such as earth, ground and common. In "
"some cases they may be used to describe the same thing; that being the point "
"in an electrical system to which all voltages are referenced to. For the "
"purpose of this article, the terms 'earth' and 'ground' refer to the point "
"at which the incoming mains supply is earthed to, whereas 'common' is the "
"return or negative terminal on a DC supply.  In some cases it is permissible "
"to ground the common on a DC supply, thereby making the negative terminal on "
"that supply the same potential as the incoming AC earth, but for the "
"purposes of this discussion the terms 'earth' and 'common' must be made "
"distinct from each other to avoid confusion."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Wire Selection and Use"
msgstr ""

#. type: Plain text
msgid ""
"Wire comes in many types, sizes and configurations. Wading through all the "
"wire available is a monumental task of its own, but for the purposes of this "
"article it is only necessary to consider the types of wires typically used "
"when wiring a CNC controller. Additionally, how the wire is to be used can "
"have some effect on the overall system. What follows are some tips that may "
"prove helpful."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Single Conductor Wire"
msgstr ""

#. type: Plain text
msgid ""
"Wire comes in two forms: solid conductor and stranded. Solid core wire is "
"generally cheaper than stranded, but more likely to break if used in "
"applications where repeated bending is expected. Fortunately, the prevalence "
"of stranded wire on the market means that its use should be encouraged "
"wherever possible."
msgstr ""

#. type: Plain text
msgid ""
"Wires should be terminated such that all strands in the conductor are neatly "
"and securely located into the mating receptacle. This may be accomplished by "
"either twisting the strands together before inserting in the termination, or "
"using a compression crimp such as a spade or bootlace terminal. Care should "
"be made to ensure that no strands of wire end up outside the termination to "
"prevent accidental shorting with adjacent terminations."
msgstr ""

#. type: Plain text
msgid ""
"If using a compression crimp on the bare wire, avoid soldering the strands "
"together before crimping. Crimping the lug onto a soldered wire can result "
"in the lug working loose over time as the soldered strands lose their "
"compressibility once the crimp has been applied. For this same reason, "
"soldered wire should not be installed in a terminal block where the screw "
"stud bites directly onto the wire when tightened."
msgstr ""

#. type: Plain text
msgid ""
"When stripping the wire ready for a termination, only remove the minimum "
"amount required to keep the termination covered when complete. Stripping too "
"much insulation off will expose some of the wire that something can short "
"against."
msgstr ""

#. type: Plain text
msgid ""
"The circuit that the wire is intended for should also be considered; the "
"voltage the circuit operates at and the amount of current it carries have a "
"bearing on the choice of wire to be used. The thin insulation on a piece of "
"recycled CAT5 ethernet cable is insufficient to withstand the voltages that "
"can appear at the output terminals of a Variable Frequency Drive, nor is the "
"cross sectional area of the conductor sufficient to carry several amps of "
"current without overheating and potentially causing a fire. Conversely, "
"while it is perfectly permissible to wire a limit switch circuit using 2.5 "
"sqmm cable, it creates needless bulk in the wiring loom. Consult any "
"manufacturerâs documentation and your local countryâs electrical wiring "
"codes for minimum suggested wire gauges for power and control requirements."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Shielded Wire"
msgstr ""

#. type: Plain text
msgid ""
"There are two types of shielded wire. One has a bare wire braid that "
"surrounds the wire inside, and the other has metal foil that surrounds the "
"wire inside. The type of shielded wire selected will depend on the amount of "
"noise you are trying to combat."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Foil Shielded Wire"
msgstr ""

#. type: Plain text
msgid ""
"Foil shielded wire has a thin aluminium or copper foil that is usually "
"bonded to a film of plastic that surrounds the wire. The enclosed wire is "
"usually 100% covered. Attaching the foil to earth can be difficult, "
"especially if the foil is constructed from aluminium or laminated to a "
"plastic backing material. For this reason, it is usual to find a bare metal "
"stranded wire enclosed inside the cable which is in contact with the foil "
"for the full length of the cable. This is called the drain wire and is used "
"to make the connection to earth with."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Braided Shielded Wire"
msgstr ""

#. type: Plain text
msgid ""
"Braided shielded wire has a woven copper braid that surrounds the wire. It "
"is more bulky than foil and does not provide 100% coverage, but is more "
"flexible than foil shielded types. Coverage is typically 70% to 95% "
"depending on how tight the braid has been constructed. Despite the lower "
"coverage of braided shield, the effectiveness is greater than foil shielding "
"due to the increased bulk of the braid, and copper being a better conductor "
"than aluminium."
msgstr ""

#. type: Plain text
msgid ""
"For very noisy environments, a further subset of the above two shielding "
"methodologies may be employed, whereby both braid and foil shielding is used "
"simultaneously. Individual wires in a multi-conductor cable may also be "
"shielded along with an overall shield being applied to the entire cable "
"jacket."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "AC Line Voltage"
msgstr ""

#. type: Plain text
msgid ""
"The incoming mains AC that powers the CNC system can pick up and carry noise "
"into the power supplies and other equipment. For example, if the incoming "
"supply is also used to feed large motors, electrical noise may be generated "
"on the line feeding the CNC components. Although most modern electronic "
"devices feature built-in mains filtering to help minimise the susceptibility "
"to mains-borne interference, the custom and modularised nature of a CNC "
"system can mean that components used come from a wide variety of sources "
"with differing degrees of inherent noise immunity."
msgstr ""

#. type: Plain text
msgid ""
"Inline filters may be installed on the incoming mains supply feeding the CNC "
"control system to help reduce any induced noise. Running the CNC system from "
"a different mains circuit to any large electrical sources of noise may also "
"help minimise any potential sources of mains-borne interference."
msgstr ""

#. type: Plain text
msgid ""
"Be aware that in many countries, the installation and alteration of mains "
"circuits can only be carried out by licenced electricians."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Power Supply Units"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "AC Ground"
msgstr ""

#. type: Plain text
msgid ""
"A typical CNC machine may have several different Power Supply Units (PSUs) "
"installed in the system. Any device powered from the incoming mains designed "
"to be earthed must be properly and permanently terminated to mains earth.  "
"Ideally this should be made to the same point in the system, which may be a "
"threaded post or bolt, a copper/brass termination strip or a large metallic "
"mounting plate within the control enclosure."
msgstr ""

#. type: Plain text
msgid ""
"The prevalence of high-frequency switchmode PSUs used in CNC systems "
"increase the likelihood of RF noise being coupled from them to adjacent "
"circuitry. Many of these PSUs have a metal case which, if connected to mains "
"earth, will help screen the coupling of high frequency EMI into other "
"electrical components."
msgstr ""

#. type: Plain text
msgid ""
"From a safety standpoint, it is important that these mains earth connections "
"also be mechanically strong and unlikely to break free, and the wire used "
"has a cross-sectional area sufficient to carry the anticipated fault current "
"should a short to earth occur. It is also imperative that mains earth is "
"never used as a current-carrying conductor for other components in the "
"system. Earth shall be used for one purpose only: safety earthing."
msgstr ""

#. type: Plain text
msgid ""
"Note also that the colour of the jacket used to make a termination to earth "
"may be prescribed by the wiring code for your country, and the conduction of "
"other unrelated signals in that same wire colour may be prohibited."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "DC Common"
msgstr ""

#. type: Plain text
msgid ""
"Commoning of a DC PSU is somewhat dependent on the electrical operating "
"requirements of the CNC system. For example, a stepper motor driver "
"operating with a 24VDC motor supply and a 5V logic supply may have optically-"
"isolated signal input lines which provide complete electrical separation of "
"the driverâs input and output circuitry for safety and noise immunity "
"purposes. Tying the stepper motor and logic control supply commons together "
"in this case may have a detrimental impact on the operation of the system."
msgstr ""

#. type: Plain text
msgid ""
"In general it makes most sense to keep the commons of the various DC PSUs "
"used in the CNC system separate from each other, and separate from the AC "
"mains earth unless there is a specific requirement to tie them together. In "
"most cases the common points of the heavy-duty power sections of the CNC "
"system (eg, stepper motor or servo motor drivers, spindle motors etc) will "
"be segregated from common points of the electrically-sensitive sections of "
"the CNC (control interface boards, limit switches, tool probe circuitry etc) "
"to prevent cross-contamination of the two systems."
msgstr ""

#. type: Plain text
msgid ""
"Should it be necessary to connect several common points of different PSUs "
"together, or to connect a common of a PSU to AC main earth, it should be "
"done at a single point only and as close to the common terminal of the PSUs "
"as possible."
msgstr ""

#. type: Plain text
msgid ""
"In CNC machines where the hardware drivers and interfacing circuitry are pre-"
"assembled, the decision as to which DC commons are tied where is usually "
"taken out of the hands of the end user."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "DC Supply Feeds"
msgstr ""

#. type: Plain text
msgid ""
"In situations where a DC circuit is run with the common point disconnected "
"from the mains earth (ie, the supply is âfloatingâ), it can be helpful to "
"run DC supplies using twisted pairs of wires, whereby each pair of wires in "
"the circuit (eg, the positive and negative leads) is physically twisted "
"together in a helix pattern. The twist in the wire allows both conductors to "
"share the same âreal estateâ as closely as possible. Any EMI that passes "
"across them will therefore be largely cancelled as both conductors will "
"receive the same degree of EMI. For additional protection use twisted wire "
"that is housed in a shielded jacket with the shield terminated to mains "
"earth."
msgstr ""

#. type: Plain text
msgid ""
"Note however that twisted pairs of wires are less effective at combatting "
"the effects of EMI if one of the two wires is referenced to mains earth, as "
"the conductor at earth potential is less able to be influenced by EMI than "
"the un-earthed conductor. In these instances the twisting of the wires has "
"less of an impact on the overall noise immunity, and shielded cable will be "
"intrinsically more effective at reducing noise pickup."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Signal Wires and Control Lines"
msgstr ""

#. type: Plain text
msgid ""
"The wires that are used to transmit logic signals to and from various "
"peripherals in the CNC (eg, stepper motor controller inputs, axis limit "
"switches etc) are the most susceptible to noise interference. The reason for "
"this is the low level voltages that are used to convey the information. When "
"a limit or home switch is engaged, or a tool probe has made or broken "
"contact, this signal is used to signify the event has taken place. Typically "
"this is done by using input pins on the computer interface card or parallel "
"port which, dependent on the application, may be signalled using as little "
"as 3.3V. Evidently a 2V noise spike has the potential to corrupt the "
"validity of a signal if the useful range is only 0-3.3V."
msgstr ""

#. type: Plain text
msgid ""
"If possible, isolate the common point of the PSU supplying the logic "
"peripherals from the rest of the system.  For example, keeping the common of "
"the low voltage power supply isolated from the common of the stepper motor "
"supply will reduce the chances of large currents flowing in the stepper "
"motor return line contaminating the common of the low voltage supply."
msgstr ""

#. type: Plain text
msgid ""
"If the controller uses differential signalling, use twisted pairs to carry "
"the signal. Shielded cable is preferred when the control lines are single-"
"ended, or if the distances traversed are long or through electrically "
"hostile environments. When grounding the shield in the cable, terminate to "
"the mains earth."
msgstr ""

#. type: Plain text
msgid ""
"If the controller and interfacing devices can withstand higher control "
"signals, consider altering the wiring and power supply requirements to use a "
"bigger voltage for signalling (eg, 12V or 24V). The same 2V EMI noise spike "
"that could corrupt a 3.3V limit switch signal will be far less likely to "
"cause issues with a limit switch operating with a 24V signal."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Stepper or Servo Motor Drivers"
msgstr ""

#. type: Plain text
msgid ""
"The metal housing of the driver should be connected to the local mains earth "
"in the CNC system. Some driver enclosures will indicate a specific terminal "
"as being the earthing point, in which case this point must be connected to "
"earth via a dedicated wire."
msgstr ""

#. type: Plain text
msgid ""
"Control and power wiring should be segregated as much as possible. Route "
"signal input wires well away from power supply and motor drive output lines."
msgstr ""

#. type: Plain text
msgid ""
"It is recommended to run both driver input and motor output wiring in "
"shielded cable with the shield terminated to mains earth. The shield on the "
"input lines helps reduce the amount of interference they can receive, while "
"the shield on the output lines reduces the amount of noise they can radiate."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Variable Frequency Drives"
msgstr ""

#. type: Plain text
msgid ""
"If at all possible the Variable Frequency Drive (VFD) should be mounted in a "
"separate enclosure or cabinet to reduce the risk of it radiating noise into "
"adjacent wiring. If the VFD enclosure is metallic it must be earthed as per "
"any recommendations in the manufacturerâs documentation."
msgstr ""

#. type: Plain text
msgid ""
"Because the VFD is a high power, high frequency electronic switching device, "
"the output is notoriously prone to EMI radiation, and it is advisable to run "
"the VFD output to the connected motor in a shielded cable, with the shield "
"terminated to mains earth."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Routing Conductors"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Routing Movable Wires"
msgstr ""

#. type: Plain text
msgid ""
"Any wire that will be moved about during normal operation of the CNC falls "
"into this category. For example, wires running from stepper drivers through "
"a cable management system (drag chains) and then to the stepper motors "
"mounted on a moveable gantry.  Cables and wires operating in these "
"circumstances should be rated for extra flexibility. This precludes the use "
"of solid-core wires and cables, as the constant flexing will lead to fatigue "
"and eventual failure of the conductors."
msgstr ""

#. type: Plain text
msgid ""
"If running cables in a cable track/carrier, tie them down at both ends of "
"the cable track. If not, ratcheting can occur and fatigue the cable "
"prematurely. Care should also be taken to ensure that mechanical rubbing of "
"conductors against other parts of the machine is prevented."
msgstr ""

#. type: Plain text
msgid ""
"In a cable track/carrier observe the neutral axis idea. Have the wire run as "
"close to the neutral axis as possible. Make sure the wire is not in tension "
"in the longest neutral axis situation."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Routing Stationary Wires"
msgstr ""

#. type: Plain text
msgid ""
"As discussed earlier, running different signal classes (high voltage and low "
"voltage) in proximity to each other has the tendency to exacerbate EMI "
"interference. Separate conductors by as much distance as possible. If two "
"conductors must cross over each other make the crossing as close to a 90 "
"degree angle as possible."
msgstr ""

#. type: Plain text
msgid ""
"Avoid long loops of excess wire at any peripheral devices - they are great "
"antennas for receiving or transmitting noise. Where possible, run wires in "
"close proximity to large earthed structures. If the controller enclosure "
"features a large metallic back plate that is earthed, secure all control "
"wiring against this surface as much as possible while wiring between two "
"points."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Mechanical Noise"
msgstr ""

#. type: Plain text
msgid ""
"Very few mechanical switches (eg, an axis limit switch or tool probe input) "
"will close or open perfectly when operated. More often than not the switch "
"contacts will physically bounce against each other several times within a "
"very short space of time when operated. This may be interpreted by the "
"machine controller as multiple operations of the same signal when in reality "
"only one clean state change was expected. Sometimes it doesnât matter, but "
"in many circumstances it is desirable to ensure that any state change is as "
"âcleanâ as possible and does not interfere with the operation of the "
"machine. This is accomplished by debouncing."
msgstr ""

#. type: Plain text
msgid ""
"Debouncing is achieved by permitting a state change on a mechanical switch "
"to only register with the controller after a fixed period of time to allow "
"any bouncing in the switch contacts to settle. Time delays of 5-15 "
"milliseconds are usually sufficient. This can be done with the addition of "
"some hardware to the signal circuit or in software within LinuxCNC."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware Debouncing"
msgstr ""

#. type: Plain text
msgid ""
"Several schemes exist to implement debouncing of switches and relay contacts "
"with hardware, ranging from the addition of a single capacitor across the "
"signal and common lines, to dedicated debouncing integrated circuits such as "
"the MC14490 or MAX6818. Several hardware debouncing schemes can be found via "
"the link below:"
msgstr ""

#. type: Plain text
msgid "https://electrosome.com/switch-debouncing/"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Software Debouncing"
msgstr ""

#. type: Plain text
msgid ""
"The Hardware Abstraction Layer (HAL) of LinuxCNC includes a debounce "
"component. This component has a single input pin and a single output pin. "
"Its job is to monitor the input and to send an output after the input has "
"activated for a programmed delay period. More information can be found for "
"the debounce component by visiting the following page:"
msgstr ""

#. type: Plain text
msgid "http://linuxcnc.org/docs/html/man/man9/debounce.9.html"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Documentation"
msgstr ""

#. type: Plain text
msgid ""
"The importance of documenting the installed wiring and components cannot be "
"over-emphasised. Should the user want to modify the CNC system further down "
"the track, or if trouble should arise that needs correcting, then complete "
"and concise documentation of the wiring and equipment can save many hours of "
"head scratching and frustration."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Hardware Documentation"
msgstr ""

#. type: Plain text
msgid ""
"At a minimum, make sure to save any documentation associated with the "
"installed hardware in a safe place. Stepper controllers, break out boards, "
"power supplies, VFDs, interfaces and controllers, servo and stepper drivers "
"and any associated device settings are all critical components of the system "
"and their documentation should be kept at hand for easy reference."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Wiring Schematics"
msgstr ""

#. type: Plain text
msgid ""
"As the CNC machine is wired, make sure to draw up a schematic that can be "
"referenced to later. The schematic does not have to be all that neat, but it "
"should be understandable in such a way that it could be easily interpreted "
"at a later date, ideally by anyone who may need to service the equipment. "
"Include details such as wire colours used, pin numbers, part numbers and any "
"other notes that will help explain particular details not immediately "
"apparent from first glance at the schematic."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Wiring Identification"
msgstr ""

#. type: Plain text
msgid ""
"Take the time to identify each wire in the system. When a bundle of wires "
"has been cable-tied in place it can be very difficult to look at them and "
"know for sure which wire goes where. Label the motor wires with the joint or "
"axis they are associated with, or identify each signal wire so that it is "
"easy to identify what that signal does.  It will also help if this "
"information is transferred to the wiring schematics."
msgstr ""

#. type: TH
#, no-wrap
msgid "5Axisgui"
msgstr ""

#. type: TH
#, no-wrap
msgid "2020-08-26"
msgstr ""

#. type: TH
#, no-wrap
msgid "LinuxCNC Documentation"
msgstr "Documentacion de LinuxCNC"

#. type: TH
#, no-wrap
msgid "The Enhanced Machine Controller"
msgstr "EMC Controlador de maquina mejorado"

#. type: Plain text
msgid "5axisgui - Vismach Virtual Machine GUI"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPCIÓN"

#. type: Plain text
msgid "B<5axisgui> is one of the sample B<Vismach> GUIs for LinuxCNC"
msgstr ""

#. type: Plain text
msgid "See the main LinuxCNC documentation for more details."
msgstr ""

#. type: Plain text
msgid "http://linuxcnc.org/docs/html/gui/vismach.html"
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr "VER TAMBIÉN"

#. type: Plain text
msgid "B<LinuxCNC(1)>"
msgstr ""

#. type: Plain text
msgid ""
"Much more information about LinuxCNC and HAL is available in the LinuxCNC "
"and HAL User Manuals, found at /usr/share/doc/LinuxCNC/."
msgstr ""
"Los manuales de LinuxCNC y HAL tienen mucha mas informacion disponible. "
"Puede encontrarlos en /usr/share/doc/linuxcnc/."

#. type: SH
#, no-wrap
msgid "HISTORY"
msgstr "HISTORIA"

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr "ERRORES"

#. type: Plain text
msgid "None known at this time."
msgstr "En este momento, ninguno conocido."

#. type: SH
#, no-wrap
msgid "AUTHOR"
msgstr "AUTOR"

#. type: Plain text
msgid "This man page written by andypugh, as part of the LinuxCNC project."
msgstr ""

#. type: SH
#, no-wrap
msgid "REPORTING BUGS"
msgstr "REPORTAR ERRORES"

#. type: Plain text
msgid "Report bugs at https://github.com/LinuxCNC/linuxcnc/issues"
msgstr ""

#. type: SH
#, no-wrap
msgid "COPYRIGHT"
msgstr ""

#. type: Plain text
msgid "Copyright \\(co 2020 andypugh."
msgstr ""

#. type: Plain text
msgid ""
"This is free software; see the source for copying conditions.  There is NO "
"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
msgstr ""
"Este software es libre; vea las fuentes para las condiciones de copia. NO "
"hay garantia; ni para COMERCIABILIDAD, ni para APTITUD PARA UN USO "
"PARTICULAR."

#. type: TH
#, no-wrap
msgid "2007-04-01"
msgstr ""

#. type: Plain text
msgid "axis - AXIS LinuxCNC Graphical User Interface"
msgstr "axis - Interface grafica de usuario para LinuxCNC"

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr "SINOPSIS"

#. type: Plain text
msgid "B<axis> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<axis> is one of the Graphical User Interfaces (GUI) for LinuxCNC It gets "
"run by the runscript usually."
msgstr ""

#. type: SH
#, no-wrap
msgid "OPTIONS"
msgstr "OPCIONES"

#. type: TP
#, no-wrap
msgid "B<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"The ini file is the main piece of an LinuxCNC configuration. It is not the "
"entire configuration; there are various other files that go with it (NML "
"files, HAL files, TBL files, VAR files). It is, however, the most important "
"one, because it is the file that holds the configuration together. It can "
"adjust a lot of parameters itself, but it also tells B<LinuxCNC> which other "
"files to load and use."
msgstr ""

#. type: Plain text
msgid "This man page written by Alex Joni, as part of the LinuxCNC project."
msgstr ""
"Esta pagina man fue escrita por Alex Joni, como parte del proyecto LinuxCNC."

#. type: Plain text
msgid "Report bugs to alex_joni AT users DOT sourceforge DOT net"
msgstr "Comunicar errores a alex_joni AT users DOT sourceforge DOT net"

#. type: Plain text
msgid "Copyright \\(co 2007 Alex Joni."
msgstr ""

#. type: Plain text
msgid "axis-remote - AXIS Remote Interface"
msgstr "axis-remote - Interface remota AXIS"

#. type: Plain text
msgid "B<axis-remote >I<OPTIONS>|I<FILENAME>"
msgstr ""

#. type: Plain text
msgid ""
"B<axis-remote> is a small script that triggers commands in a running AXIS "
"GUI.  Use B<axis-remote --help> for further information."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--ping>, B<-p>"
msgstr ""

#. type: Plain text
msgid "Check whether AXIS is running."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--reload>, B<-r>"
msgstr ""

#. type: Plain text
msgid "Make AXIS reload the currently loaded file."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--clear>, B<-c>"
msgstr ""

#. type: Plain text
msgid "Make AXIS clear the backplot."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--quit>, B<-q>"
msgstr ""

#. type: Plain text
msgid "Make AXIS quit."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--help>, B<-h>, B<-?>"
msgstr ""

#. type: Plain text
msgid "Display a list of valid parameters for B<axis-remote>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--mdi COMMAND>, B<-m COMMAND>"
msgstr ""

#. type: Plain text
msgid "Run the MDI command B<COMMAND>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<FILENAME>"
msgstr ""

#. type: Plain text
msgid "Load the G-code file B<FILENAME>."
msgstr ""

#. type: Plain text
msgid "B<axis(1)>"
msgstr ""

#. type: Plain text
msgid ""
"Much more information about LinuxCNC and HAL is available in the LinuxCNC "
"and HAL User Manuals, found at /usr/share/doc/linuxcnc/."
msgstr ""

#. type: TH
#, no-wrap
msgid "DEBUGLEVEL"
msgstr ""

#. type: Plain text
msgid "debuglevel - sets the debug level for the userspace part of LinuxCNC"
msgstr ""

#. type: Plain text
msgid "B<debuglevel> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<debuglevel> displays a checkbox gui to select the current debug level of "
"some parts of LinuxCNC."
msgstr ""

#. type: Plain text
msgid "halcmd(1) - debug subcommand B<LinuxCNC(1)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "2015-04-18"
msgstr ""

#. type: Plain text
msgid "elbpcom - Communicate with Mesa ethernet cards"
msgstr ""

#. type: Plain text
msgid "Common options:"
msgstr "Opciones comunes:"

#. type: SY
#, no-wrap
msgid "elbpcom"
msgstr ""

#. type: Plain text
msgid "B<[--ip=>I<IP>B<]> B<[--port=>I<PORT>B<]> B<[--timeout=>I<TIMEOUT>B<]>"
msgstr ""

#. type: Plain text
msgid "Reading data:"
msgstr "Lectura de datos:"

#. type: Plain text
msgid ""
"B<[>I<common\\ options>B<]> B<--space=>I<SPACE> B<[--info]> B<--"
"address=>I<ADDRESS> B<--read=>I<LENGTH>"
msgstr ""

#. type: Plain text
msgid "Writing data:"
msgstr "Escritura de datos:"

#. type: Plain text
msgid ""
"B<[>I<common\\ options>B<]> B<--space=>I<SPACE> B<--address=>I<ADDRESS> B<--"
"write=>I<HEXDATA>"
msgstr ""

#. type: Plain text
msgid "Sending arbitrary packets:"
msgstr "Envio de paquetes arbitrarios:"

#. type: Plain text
msgid "B<[>I<common\\ options>B<]> I<HEXDATA>"
msgstr ""

#. type: Plain text
msgid ""
"Read or write data from a Mesa ethernet card that uses the LBP16 protocol, "
"such as the 7i80.  This can be useful for performing certain low-level tasks."
msgstr ""
"Lee o escribe datos de una tarjeta Ethernet de Mesa que use el protocolo "
"LBP16, como la 7i80. Esto puede ser util para realizar ciertas tareas de "
"bajo nivel."

#. type: Plain text
msgid ""
"For more information about the meaning of each address space, see the card "
"documentation.  Incorrect use of this utility can have negative effects such "
"as changing the board's IP address or even corrupting the FPGA bitfile in "
"the eeprom.  For some tasks, such as updating FPGA bitfiles and setting IP "
"addresses, B<mesaflash>(1)  is a more appropriate tool."
msgstr ""

#. type: Plain text
msgid "If not specified, the default values are"
msgstr "Si no se especifican, los valores por defecto son:"

#. type: Plain text
msgid "B<--ip=>I<192.168.1.121> B<--port=>I<27181> B<--timeout=>I<.2>"
msgstr ""

#. type: Plain text
msgid ""
"This example demonstrates reading the HOSTMOT2 identifying string from the "
"IDROM in space 0:"
msgstr ""
"Este ejemplo demuestra la lectura de HOSTMOT2 identificando cadenas desde la "
"IDROM en espacio 0:"

#. type: Plain text
#, no-wrap
msgid ""
"$ elbpcom --space 0 --address 0x104 --read 8\n"
"E<gt> 82420401\n"
"E<lt> 484f53544d4f5432\n"
"      HOSTMOT2\n"
msgstr ""

#. type: Plain text
msgid ""
"First the request is shown in hex.  Then the response (if any) is shown in "
"hex.  Finally, the response is shown in ASCII, with \".\" replacing any non-"
"ASCII characters.  This is similar to the following invocations of mesaflash:"
msgstr ""
"Primero se muestra la solicitud en hexadecimal. Despues, la respuesta (si la "
"hay) se muestra en hexadecimal. Finalmente, la respuesta se muestra en "
"ASCII, con \".\" reemplazando cualquier caracter no ASCII. Esto es similar a "
"las siguientes invocaciones de mesaflash:"

#. type: Plain text
#, no-wrap
msgid ""
"$ ./mesaflash  --device 7i80 --rpo 0x104\n"
"54534F48\n"
"$ ./mesaflash  --device 7i80 --rpo 0x108\n"
"32544F4D\n"
msgstr ""

#. type: Plain text
msgid "but notice its different treatment of byte order."
msgstr ""

#. type: Plain text
msgid ""
"B<mesaflash>(1), B<hostmot2>(9), B<hm2_eth>(9), E<.UR http://www.mesanet."
"com> Mesa's documentation for the Anything I/O boards E<.UE .>"
msgstr "Documentacion de Mesa para tarjetas Anything I/O E<.UE .>"

#. type: TH
#, no-wrap
msgid "GLADEVCP"
msgstr ""

#. type: TH
#, no-wrap
msgid "2010-12-20"
msgstr ""

#. type: Plain text
msgid ""
"gladevcp - Virtual Control Panel for LinuxCNC based on Glade, Gtk and HAL "
"widgets"
msgstr ""

#. type: Plain text
msgid ""
"B<gladevcp> [-g I<WxH+X+Y>] [-c I<component-name>] [-u I<handler>] [-U "
"I<useroption>] [-H I<halfile>] [-d] I<myfile.ui>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-g> I<WxH+X+Y>"
msgstr ""

#. type: Plain text
msgid ""
"This sets the initial geometry of the root window.  Use 'WxH' for just size, "
"'+X+Y' for just position, or 'WxH+X+Y' for both.  Size / position use pixel "
"units. Position is referenced from top left."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-c> I<component-name>"
msgstr ""

#. type: Plain text
msgid ""
"Use I<component-name> as the HAL component name.  If the component name is "
"not specified, the basename of the ui file is used."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-u> I<handler>"
msgstr ""

#. type: Plain text
msgid ""
"Instructs gladevcp to inspect the Python script I<handler> for event "
"handlers, and connect them to signals in the ui file."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-U> I<useroption>"
msgstr ""

#. type: Plain text
msgid ""
"gladevcp collects all I<useroption> strings and passes them to the handler "
"init()  method as a list of strings without further inspection."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-x> I<XID>"
msgstr ""

#. type: Plain text
msgid ""
"Reparent gladevcp into an existing window I<XID> instead of creating a new "
"top level window."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-H> I<halfile>"
msgstr ""

#. type: Plain text
msgid ""
"gladevcp runs I<halfile> - a list of HAL commands - by executing I<halcmd -c "
"halfile> after the HAL component is finalized."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-d>"
msgstr ""

#. type: Plain text
msgid "enable debug output."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-R> I<gtkrcfile>"
msgstr ""

#. type: Plain text
msgid "explicitly load a gtkrc file."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-t> I<THEME>"
msgstr ""

#. type: Plain text
msgid ""
"set gtk theme. Default is I<system> theme. Different panels can have "
"different themes."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-m> I<MAXIMUM>"
msgstr ""

#. type: Plain text
msgid ""
"force panel window to maxumize.  Together with the I<-g geometry> option one "
"can move the panel to a second monitor and force it to use all of the screen"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-R>"
msgstr ""

#. type: Plain text
msgid ""
"explicitly deactivate workaround for a gtk bug which makes matches of widget "
"and widget_class matches in gtk theme and gtkrc files fail. Normally not "
"needed."
msgstr ""

#. type: Plain text
msgid ""
"I<GladeVCP> in the LinuxCNC documentation for a description of gladevcp's "
"capabilities and the associated HAL widget set, along with examples"
msgstr ""

#. type: TH
#, no-wrap
msgid "GLADEVCP_DEMO"
msgstr ""

#. type: Plain text
msgid "gladevcp - used by sample configs to deonstrate Glade Virtual_demo"
msgstr ""

#. type: Plain text
msgid "B<gladevcp_demo> Control Panels"
msgstr ""

#. type: Plain text
msgid "B<gladevcp_demo> is a sample GladeVCP handler"
msgstr ""

#. type: Plain text
msgid "B<https://linuxcnc.org/docs/html/gui/gladevcp.html> B<LinuxCNC(1)>"
msgstr ""

#. type: Plain text
msgid "gmoccapy - TOUCHY LinuxCNC Graphical User Interface"
msgstr ""

#. type: Plain text
msgid "B<gmoccapy> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<gmoccapy> is one of the Graphical User Interfaces (GUI) for LinuxCNC It "
"gets run by the runscript usually."
msgstr ""

#. type: TH
#, no-wrap
msgid "GREMLIN_VIEW"
msgstr ""

#. type: Plain text
msgid "gremlin_view - G-code graphical preview"
msgstr ""

#. type: Plain text
msgid "B<gremlin_view>"
msgstr ""

#. type: Plain text
msgid ""
"B<gremlin_view> is a python wrapper for the gremlin G-code graphical preview"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"PGremlinView for gremlin with buttons for simpler embedding\n"
"Standalone functionality if linuxcnc running\n"
"A default ui file (gremlin_view.ui) is provided for a default\n"
"button arrangement but a user may provide their own by supplying\n"
"the glade_file argument.\n"
"The following objects are mandatory:\n"
"  'gremlin_view_window'      toplevel window\n"
"  'gremlin_view_hal_gremlin' hal_gremlin\n"
"  'gremlin_view_box'         HBox or VBox' containing hal_gremlin\n"
"Optional radiobutton group names:\n"
"  'select_p_view'\n"
"  'select_x_view'\n"
"  'select_y_view'\n"
"  'select_z_view'\n"
"  'select_z2_view'\n"
"Optional Checkbuttons names:\n"
"  'enable_dro'\n"
"  'show_machine_speed\n"
"  'show_distance_to_go'\n"
"  'show_limits'\n"
"  'show_extents'\n"
"  'show_tool'\n"
"  'show_metric'\n"
"Callbacks are provided for the following buttons actions\n"
"  on_clear_live_plotter_clicked\n"
"  on_enable_dro_clicked\n"
"  on_zoomin_pressed\n"
"  on_zoomout_pressed\n"
"  on_pan_x_minus_pressed\n"
"  on_pan_x_plus_pressed\n"
"  on_pan_y_minus_pressed\n"
"  on_pan_y_plus_pressed\n"
"  on_show_tool_clicked\n"
"  on_show_metric_clicked\n"
"  on_show_extents_clicked\n"
"  on_select_p_view_clicked\n"
"  on_select_x_view_clicked\n"
"  on_select_y_view_clicked\n"
"  on_select_z_view_clicked\n"
"  on_select_z2_view_clicked\n"
"  on_show_distance_to_go_clicked\n"
"  on_show_machine_speed_clicked\n"
"  on_show_limits_clicked\n"
msgstr ""

#. type: Plain text
msgid "B<http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Gremlin> B<LinuxCNC(1)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "gs2_vfd"
msgstr ""

#. type: TH
#, no-wrap
msgid "January 1, 2009"
msgstr ""

#. type: TH
#, no-wrap
msgid "GS2 VFD"
msgstr ""

#. type: Plain text
msgid "B<gs2_vfd> - HAL userspace component for Automation Direct GS2 VFD's"
msgstr ""

#. type: Plain text
msgid "B<gs2_vfd> [OPTIONS]"
msgstr ""

#. type: Plain text
msgid ""
"This manual page explains the B<gs2_vfd> component. This component reads and "
"writes to the GS2 via a modbus connection."
msgstr ""

#. type: Plain text
msgid "B<gs2_vfd> is for use with LinuxCNC"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-b,\\ --bits\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default 8) Set number of data bits to E<lt>nE<gt>, where n must be from 5 "
"to 8 inclusive"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-d,\\ --device\\ E<lt>pathE<gt>>"
msgstr ""

#. type: Plain text
msgid "(default /dev/ttyS0) Set the name of the serial device node to use."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-v,\\ --verbose>"
msgstr ""

#. type: Plain text
msgid "Turn on verbose mode."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-g,\\ --debug>"
msgstr ""

#. type: Plain text
msgid ""
"Turn on debug messages. Note that if there are serial errors, this may "
"become annoying.  Debug mode will cause all modbus messages to be printed in "
"hex on the terminal."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-n,\\ --name\\ E<lt>stringE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default gs2_vfd) Set the name of the HAL module. The HAL comp name will be "
"set to E<lt>stringE<gt>, and all pin and parameter names will begin with "
"E<lt>stringE<gt>."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-p,\\ --parity\\ [even,odd,none]>"
msgstr ""

#. type: Plain text
msgid "(default odd) Set serial parity to even, odd, or none."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-r,\\ --rate\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default 38400) Set baud rate to E<lt>nE<gt>. It is an error if the rate is "
"not one of the following: 110, 300, 600, 1200, 2400, 4800, 9600, 19200, "
"38400, 57600, 115200"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-s,\\ --stopbits\\ [1,2]>"
msgstr ""

#. type: Plain text
msgid "(default 1) Set serial stop bits to 1 or 2"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-t,\\ --target\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default 1) Set MODBUS target (slave) number. This must match the device "
"number you set on the GS2."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-A,\\ --accel-seconds\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid "(default 10.0) Seconds to accelerate the spindle from 0 to Max RPM."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-D,\\ --decel-seconds\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default 0.0) Seconds to decelerate the spindle from Max RPM to 0.  If set "
"to 0.0 the spindle will be allowed to coast to a stop without controlled "
"deceleration."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-R,\\ --braking-resistor>"
msgstr ""

#. type: Plain text
msgid ""
"This argument should be used when a braking resistor is installed on the GS2 "
"VFD (see Appendix A of the GS2 manual).  It disables deceleration over-"
"voltage stall prevention (see GS2 modbus Parameter 6.05), allowing the VFD "
"to keep braking even in situations where the motor is regenerating high "
"voltage.  The regenerated voltage gets safely dumped into the braking "
"resistor.  B<\\&\\&>"
msgstr ""

#. type: SH
#, no-wrap
msgid "PINS"
msgstr "PINES"

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.DC-bus-volts\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.at-speed\\ (bit,\\ out)>"
msgstr ""

#. type: Plain text
msgid "when drive is at commanded speed"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.err-reset\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid "reset errors sent to VFD"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.firmware-revision\\ (s32,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.frequency-command\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.frequency-out\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.is-stopped\\ (bit,\\ out)>"
msgstr ""

#. type: Plain text
msgid "when the VFD reports 0 Hz output"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.load-percentage\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.motor-RPM\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.output-current\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.output-voltage\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.power-factor\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.scale-frequency\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.speed-command\\ (float,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"speed sent to VFD in RPM It is an error to send a speed faster than the "
"Motor Max RPM as set in the VFD"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-fwd\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid "1 for FWD and 0 for REV sent to VFD"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-on\\ (bit,\\ in)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-rev\\ (bit,\\ in)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.status-1\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Drive Status of the VFD (see the GS2 manual)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.status-2\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid ""
"Drive Status of the VFD (see the GS2 manual) Note that the value is a sum of "
"all the bits that are on. So a 163 which means the drive is in the run mode "
"is the sum of 3 (run) + 32 (freq set by serial) + 128 (operation set by "
"serial)."
msgstr ""

#. type: SH
#, no-wrap
msgid "PARAMETERS"
msgstr "PARÁMETROS"

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.error-count\\ (s32,\\ RW)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.loop-time\\ (float,\\ RW)>"
msgstr ""

#. type: Plain text
msgid "how often the modbus is polled (default 0.1)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.nameplate-HZ\\ (float,\\ RW)>"
msgstr ""

#. type: Plain text
msgid "Nameplate Hz of motor (default 60)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.nameplate-RPM\\ (float,\\ RW)>"
msgstr ""

#. type: Plain text
msgid "Nameplate RPM of motor (default 1730)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.retval\\ (s32,\\ RW)>"
msgstr ""

#. type: Plain text
msgid "the return value of an error in HAL"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.tolerance\\ (float,\\ RW)>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " speed tolerance (default 0.01)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.ack-delay\\ (s32,\\ RW)>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " number of read/write cycles before checking at-speed (default 2)\n"
msgstr ""

#. type: Plain text
msgid ""
"I<GS2 Driver> in the LinuxCNC documentation for a full description of the "
"B<GS2> syntax"
msgstr ""

#. type: Plain text
msgid ""
"I<GS2 Examples> in the LinuxCNC documentation for examples using the B<GS2> "
"component"
msgstr ""

#. type: Plain text
msgid "John Thornton"
msgstr ""

#. type: SH
#, no-wrap
msgid "LICENSE"
msgstr ""

#. type: Plain text
msgid "GPL"
msgstr ""

#. type: TH
#, no-wrap
msgid "GSCREEN"
msgstr ""

#. type: Plain text
msgid "gscreen - TOUCHY LinuxCNC Graphical User Interface"
msgstr ""

#. type: Plain text
msgid "B<gscreen> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<gscreen> is one of the Graphical User Interfaces (GUI) for LinuxCNC It "
"gets run by the runscript usually."
msgstr ""

#. type: TH
#, no-wrap
msgid "HALCMD_TWOPASS"
msgstr ""

#. type: Plain text
msgid "halcmd_twopass - short description"
msgstr ""

#. type: Plain text
msgid "B<{name}>"
msgstr ""

#. type: Plain text
msgid ""
"B<halcmd_twopass> is a utility script used when parsing HAL files.  It is of "
"little relevance to normal users and is used internally by the system."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" B<http://linuxcnc.org/docs/html/hal/twopass.html>\n"
" B<LinuxCNC(1)>\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "2007-10-17"
msgstr ""

#. type: Plain text
msgid "halcompile - Build, compile and install LinuxCNC HAL components"
msgstr ""

#. type: Plain text
msgid ""
"B<halcompile> [B<--compile>|B<--preprocess>|B<--document>|B<--view-doc>] "
"compfile..."
msgstr ""

#. type: Plain text
msgid "I<sudo> B<halcompile> [B<--install>|B<--install-doc>] compfile..."
msgstr ""

#. type: Plain text
msgid "B<halcompile> B<--compile> B<--userspace> cfile..."
msgstr ""

#. type: Plain text
msgid "I<sudo> B<halcompile> B<--install> B<--userspace> cfile..."
msgstr ""

#. type: Plain text
msgid "I<sudo> B<halcompile> B<--install> B<--userspace> pyfile..."
msgstr ""

#. type: Plain text
msgid ""
"When personalities are used in a comp file, hal instances are exported "
"sequentially (typically by the mutually exclusive count= or names= "
"parameters).  If the number of exports exceeds the maximum number of "
"personalities, subsequent personalities are assigned modulo the maximum "
"number of personalities allowed."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"By default, the maximum number of personalities is 64.  To alter this\n"
"limit, use the B<--personalities=> option with halcompile.  For example,\n"
"to set the maximum of  personality items to 4:\n"
"   [sudo] B<halcompile --personalities=4> --install ...\n"
msgstr ""

#. type: Plain text
msgid "B<halcompile> performs many different functions:"
msgstr ""

#. type: IP
#, no-wrap
msgid "\\(bu"
msgstr ""

#. type: Plain text
msgid ""
"Compile B<.comp> and B<.c> files into B<.so> or B<.ko> HAL realtime "
"components (the B<--compile> flag)"
msgstr ""

#. type: Plain text
msgid ""
"Compile B<.comp> and B<.c> files into HAL userspace components (the B<--"
"compile --userspace> flag)"
msgstr ""

#. type: Plain text
msgid "Preprocess B<.comp> files into B<.c> files (the B<--preprocess> flag)"
msgstr ""

#. type: Plain text
msgid ""
"Extract documentation from B<.comp> files into B<.9> manpage files (the B<--"
"document> flag)"
msgstr ""

#. type: Plain text
msgid ""
"Display documentation from B<.comp> files onscreen (the B<--view-doc> flag)"
msgstr ""

#. type: Plain text
msgid ""
"Compile and install B<.comp> and B<.c> files into the proper directory for "
"HAL realtime components (the B<--install> flag), which may require I<sudo> "
"to write to system directories."
msgstr ""

#. type: Plain text
msgid ""
"Install B<.c> and B<.py> files into the proper directory for HAL userspace "
"components (the B<--install --userspace> flag), which may require I<sudo> to "
"write to system directories."
msgstr ""

#. type: Plain text
msgid ""
"Extract documentation from B<.comp> files into B<.9> manpage files in the "
"proper system directory (the B<--install> flag), which may require I<sudo> "
"to write to system directories."
msgstr ""

#. type: Plain text
msgid ""
"I<Halcompile HAL Component Generator> in the LinuxCNC documentation for a "
"full description of the B<.comp> syntax, along with examples"
msgstr ""

#. type: Plain text
msgid ""
"B<pydoc hal> and I<Creating Userspace Python Components> in the LinuxCNC "
"documentation for documentation on the Python interface to HAL components"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL-HISTOGRAM"
msgstr ""

#. type: Plain text
msgid "hal-histogram - plots the value of a HAL pin as a histogram"
msgstr ""

#. type: Plain text
msgid "B<hal-histogram>"
msgstr ""

#. type: Plain text
msgid "B<hal-histogram> represents the values of a hal pin graphically."
msgstr ""

#. type: Plain text
msgid "Details:"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_manualtoolchange"
msgstr ""

#. type: TH
#, no-wrap
msgid "04 APR 2017"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL Userspace Component"
msgstr "Componente de espacio de usuario HAL"

#. type: Plain text
msgid ""
"hal_manualtoolchange - HAL userspace component to enable manual tool changes."
msgstr ""

#. type: Plain text
msgid "loadusr hal_manualtoolchange"
msgstr ""

#. type: Plain text
msgid ""
"hal_manualtoolchange is a LinuxCNC userspace component that allows users "
"with machines lacking automatic tool changers to make manual tool changes.  "
"In use when a M6 tool change is encountered, the motion component will stop "
"the spindle and pause the program.  The hal_manualtoolchange component will "
"then receive a signal from the motion component causing it to display a tool "
"change window prompting the user which tool number to load based on the last "
"T- number programmed.  The dialog will stay active until the \"continue\" "
"button is pressed.  When the \"continue\" button is pressed, "
"hal_manualtoolchange will then signal the motion component that the tool "
"change is complete thus allowing motion to turn the spindle back on and "
"resume program execution."
msgstr ""

#. type: Plain text
msgid ""
"Additionally, The hal_manualtoolchange component includes a hal pin for a "
"button that can be connected to a physical button to complete the tool "
"change and remove the window prompt (hal_manualtoolchange.change_button)."
msgstr ""

#. type: Plain text
msgid ""
"hal_manualtoolchange can be used even when AXIS is not used as the GUI. This "
"component is most useful if you have presettable tools and you use the tool "
"table."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<hal_manualtoolchange.number> s32 in"
msgstr ""

#. type: Plain text
msgid "Receives last programmed T- number."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<hal_manualtoolchange.change> bit in"
msgstr ""

#. type: Plain text
msgid "Receives signal to do tool change."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<hal_manualtoolchange.changed> bit out"
msgstr ""

#. type: Plain text
msgid "Signifies that the tool change is complete."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<hal_manualtoolchange.change_button> bit in"
msgstr ""

#. type: Plain text
msgid ""
"Pin to allow an external switch to signify that the tool change is complete."
msgstr ""

#. type: SH
#, no-wrap
msgid "USAGE"
msgstr ""

#. type: Plain text
msgid ""
"Normal usage is to load the component in your HAL file and net the "
"appropriate pins from theI< motion> andI< io> components.  The following "
"lines are typical in a HAL file when using the hal_manualtoolchange "
"userspace component."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<loadusr -W hal_manualtoolchange>"
msgstr ""

#. type: Plain text
msgid ""
"This will load the hal_manualtoolchange userspace component waiting for the "
"component to be ready before continuing."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<net tool-change iocontrol.0.tool-change =E<gt> hal_manualtoolchange.change>"
msgstr ""

#. type: Plain text
msgid ""
"When an M6 code is run, motion sets I< iocontrol.0.tool-change > to high "
"indicating a tool change.  This pin should be netted to I< "
"hal_manualtoolchange.change>.  This causes the Tool change dialog to be "
"displayed on screen and wait for the user to either click the continue "
"button on the dialog or press an externally connected button."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<net tool-changed iocontrol.0.tool-changed E<lt>= hal_manualtoolchange.changed>"
msgstr ""

#. type: Plain text
msgid ""
"When the Tool change dialog's continue button is pressed, it will set the "
"I<hal_manualtoolchange.changed> pin to high, this should be netted to the "
"I<iocontrol.0.tool-changed> pin, indicating to the motion controller that "
"the tool change has been completed and can continue with the execution of "
"the G-code program."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<net tool-number iocontrol.0.tool-prep-number =E<gt> hal_manualtoolchange.number>"
msgstr ""

#. type: Plain text
msgid ""
"When a T- command is executed in a G-code program, the tool number will held "
"in the I<iocontrol.0.tool-prep-number>.  This pin should be netted to "
"I<hal_manualtoolchange.number>.  The value of this pin, the tool number is "
"displayed in the Tool change dialog to let the user know which tool should "
"be loaded."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<net tool-prepare-loopback iocontrol.0.tool-prepare =E<gt> iocontrol.0.tool-prepared>"
msgstr ""

#. type: Plain text
msgid ""
"The I< iocontrol.0.tool-prepare > pin will go true when a Tn tool prepare is "
"requested.  Since there is not automated tool changer this pin should be "
"netted to I< iocontrol.0.tool-prepared > to indocate that the tool has been "
"prepared."
msgstr ""

#. type: Plain text
msgid ""
"If you wish to use an external button to signal the hal_manualtoolchange "
"component that the tool change is complete simply bring the button into HAL "
"(via a parport input pin or a hostmot2 gpio input or similar), and wire it "
"directly to the I< hal_manualtoolchange.change_button > pin.  For Example:"
msgstr ""

#. type: Plain text
msgid ""
"B<net tool-changed-btn hal_manualtoolchange.change_button E<lt>= parport.0."
"pin-15-in>"
msgstr ""

#. type: Plain text
msgid "motion(1) iocontrol(1) halcmd(1)"
msgstr ""

#. type: TH
#, no-wrap
msgid "HALMETER"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-03-13"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL User's Manual"
msgstr "Manual HAL del usuario"

#. type: Plain text
msgid "halmeter - observe HAL pins, signals, and parameters"
msgstr ""

#. type: Plain text
msgid ""
"B<halmeter> [B<-s>] [B<pin>|B<sig>|B<param> I<name>] [B<-g> I<X-position Y-"
"position [Width]>]"
msgstr ""

#. type: Plain text
msgid ""
"B<halmeter> is used to observe HAL (Hardware Abstraction Layer) pins, "
"signals, or parameters.  It serves the same purpose as a multimeter does "
"when working on physical systems."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<pin> I<name>"
msgstr ""

#. type: Plain text
msgid "display the HAL pin I<name>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sig> I<name>"
msgstr ""

#. type: Plain text
msgid "display the HAL signal I<name>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<param> I<name>"
msgstr ""

#. type: Plain text
msgid "display the HAL parameter I<name>."
msgstr ""

#. type: TP
#, no-wrap
msgid "If neither B<pin>, B<sig>, or B<param> are specified, the"
msgstr ""

#. type: Plain text
msgid "window starts out blank and the user must select an item to observe."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-s>"
msgstr ""

#. type: Plain text
msgid ""
"small window.  Non-interactive, must be used with B<pin>, B<sig>, or "
"B<param> to select the item to display.  The item name is displayed in the "
"title bar instead of the window, and there are no \"Select\" or \"Exit\" "
"buttons.  Handy when you want a lot of meters in a small space."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-g>"
msgstr ""

#. type: Plain text
msgid ""
"geometry position.  allows one to specify the initial starting position and "
"optionally the width of the meter. Referenced from top left of screen in "
"pixel units.  Handy when you want to load a lot of meters in a script with "
"out them displaying on top of each other."
msgstr ""

#. type: Plain text
msgid ""
"Unless B<\\e-s> is specified, there are two buttons, \"Select\" and \"Exit"
"\".  \"Select\" opens a dialog box to select the item (pin, signal, or "
"parameter)  to be observed.  \"Exit\" does what you expect."
msgstr ""

#. type: Plain text
msgid ""
"The selection dialog has \"OK\" \"Apply\", and \"Cancel\" buttons.  OK "
"displays the selected item and closes the dialog.  \"Apply\" displays the "
"selected item but keeps the selection dialog open.  \"Cancel\" closes the "
"dialog without changing the displayed item."
msgstr ""

#. type: SH
#, no-wrap
msgid "EXAMPLES"
msgstr "EJEMPLOS"

#. type: TP
#, no-wrap
msgid "B<halmeter>"
msgstr ""

#. type: Plain text
msgid ""
"Opens a meter window, with nothing initially displayed.  Use the \"Select\" "
"button to choose an item to observe.  Does not return until the window is "
"closed."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halmeter &>"
msgstr ""

#. type: Plain text
msgid ""
"Open a meter window, with nothing initially displayed.  Use the \"Select\" "
"button to choose an item.  Runs in the background leaving the shell free for "
"other commands."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halmeter pin> I<parport.0.pin-03-out> B<&>"
msgstr ""

#. type: Plain text
msgid ""
"Open a meter window, initially displaying HAL pin I<parport.0.pin-03-out>.  "
"The \"Select\" button can be used to display other items.  Runs in "
"background."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halmeter -s pin> I<parport.0.pin-03-out> B<&>"
msgstr ""

#. type: Plain text
msgid ""
"Open a small meter window, displaying HAL pin I<parport.0.pin-03-out>.  The "
"displayed item cannot be changed.  Runs in background."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halmeter -s pin> I<parport.0.pin-03-out> B<-g> I<100 500> B<&> "
msgstr ""

#. type: Plain text
msgid ""
"Open a small meter window, displaying HAL pin I<parport.0.pin-03-out>.  "
"places it 100 pixels to the left and 500 pixels down from top of screen.  "
"The displayed item cannot be changed.  Runs in background."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halmeter -s pin> I<parport.0.pin-03-out> B<-g> I<100 500 400> B<&> "
msgstr ""

#. type: Plain text
msgid ""
"Open a small meter window, displaying HAL pin I<parport.0.pin-03-out>.  "
"places it 100 pixels to the left and 500 pixels down from top of screen.  "
"The width will be 400 pixels (270 is default)  The displayed item cannot be "
"changed.  Runs in background."
msgstr ""

#. type: Plain text
msgid ""
"Original version by John Kasunich, as part of the LinuxCNC project.  "
"Improvements by several other members of the LinuxCNC development team."
msgstr ""
"Version original de John Kasunich, como parte del proyecto LinuxCNC. Mejoras "
"de varios otros miembros de El equipo de desarrollo de LinuxCNC."

#. type: Plain text
msgid "Report bugs to jmkasunich AT users DOT sourceforge DOT net"
msgstr ""

#. type: Plain text
msgid "Copyright \\(co 2003 John Kasunich."
msgstr ""

#. type: TH
#, no-wrap
msgid "12 APR 2017"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL Realtime Component"
msgstr ""

#. type: Plain text
msgid ""
"hal_parport - Realtime HAL component to communicate with one or more pc "
"parallel ports."
msgstr ""

#. type: Plain text
msgid ""
"B<loadrt hal_parport cfg=\">I<port_addr >[I<type>] [[I<port_addr "
">[I<type>] ...]B<\">"
msgstr ""

#. type: Plain text
msgid ""
"The hal_parport component is a realtime component that provides connections "
"from HAL via halpins to the physical pins of one or more parallel ports.  It "
"provides a read and write function to send and receive data to the attached "
"parallel port(s)."
msgstr ""

#. type: Plain text
msgid "The hal_parport component supports up to B<8 >physical parallel ports."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<cfg=\"port_addr [type] [[port_addr [type] ...]\">"
msgstr ""

#. type: Plain text
msgid ""
"The cfg string tells hal_parport the address(es) of the parallel port(s) and "
"whether the port(s) is/are used as an input or output port(s).  Up to eight "
"parallel ports are supported by the component."
msgstr ""

#. type: Plain text
msgid ""
"The B<port_addr >parameter of the configuration string may be either the "
"physical base address of a parallel port or specified as the detected "
"parallel port via Linux parport_pc driver.  In which case, a B<port_addr >of "
"I<0 >is the first parallel port detected on the system, I<1 >is the next, "
"and so on."
msgstr ""

#. type: Plain text
msgid ""
"The B<type >parameter of the configuration string determines how the I/O "
"bits of the port are used.  There are four possible options and if none is "
"specified will default to out."
msgstr ""

#. type: Plain text
msgid ""
"I<in >- Sets the 8 bits of the data port to input.  In this mode the "
"parallel port has a total of 13 input pins and 4 output pins."
msgstr ""

#. type: Plain text
msgid ""
"I<out >- Sets the 8 bits of the data port to output.  In this mode the "
"parallel port has a total of 5 input pins and 12 output pins."
msgstr ""

#. type: Plain text
msgid ""
"I<epp >- This option is the same as setting to out, but can cause the "
"computer to change the electrical characteristics of the port. (I<See USAGE "
"below>.)"
msgstr ""

#. type: Plain text
msgid ""
"I<x >- The option allows ports with open collectorts on the control group "
"pins to be configured as inputs resulting in 8 output pins and 9 input pins. "
"(I<See USAGE below>.)"
msgstr ""

#. type: TP
#, no-wrap
msgid "The pins created by the hal_parport component depends on how it is configured in the B<cfg=\"\" >string passed to it.  (I<See OPTIONS>.)"
msgstr ""

#. type: Plain text
msgid ""
"B<parport.E<lt>pE<gt>.pin-E<lt>nE<gt>-out (bit) >Drives a physical output "
"pin."
msgstr ""

#. type: Plain text
msgid ""
"B<parport.E<lt>pE<gt>.pin-E<lt>nE<gt>-in (bit) >Tracks a physical input pin."
msgstr ""

#. type: Plain text
msgid ""
"B<parport.E<lt>pE<gt>.pin-E<lt>nE<gt>-in-not (bit) >Tracks a physical input "
"pin, but inverted."
msgstr ""

#. type: Plain text
msgid ""
"For each pin created, B<E<lt>pE<gt> >is the port number, and B<E<lt>nE<gt> "
">is the physical pin number in the 25 pin D-shell connector."
msgstr ""

#. type: Plain text
msgid ""
"For each physical output pin, the driver creates a single HAL pin, for "
"example: B<parport.0.pin-14-out>."
msgstr ""

#. type: Plain text
msgid ""
"For each physical input pin, the driver creates two HAL pins, for example: "
"B<parport.0.pin-12-in >and B<parport.0.pin-12-in-not>."
msgstr ""

#. type: Plain text
msgid ""
"The B<-in >HAL pin is TRUE if the physical pin is high, and FALSE if the "
"physical pin is low. The B<-in-not >HAL pin is inverted and is FALSE if the "
"physical pin is high."
msgstr ""

#. type: Plain text
msgid ""
"The following lists the input and output pins by the type setting used in "
"the cfg=\"\" string."
msgstr ""

#. type: Plain text
msgid ""
"B<in>: Pins 2,3,4,5,6,7,8,9,10,11,12,13,15 are input pins and pins 1,14,16 "
"and 17 are output pins."
msgstr ""

#. type: Plain text
msgid ""
"B<out/epp>: Pins 10,11,12,13 and 15 are input pins and pins "
"1,2,3,4,5,6,7,8,9,14,16 and 17 are output pins."
msgstr ""

#. type: Plain text
msgid ""
"B<x>: Pins 1,10,11,12,13,14,15,16 and 17 are input pins and pins "
"2,3,4,5,6,7,8,9 are output pins. (I<See USAGE section>.)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.pin-E<lt>nE<gt>-out-invert (bit)>"
msgstr ""

#. type: Plain text
msgid "Inverts an output pin."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.pin-E<lt>nE<gt>-out-reset (bit)>"
msgstr ""

#. type: Plain text
msgid ""
"(only for out pins) TRUE if this pin should be reset when the .reset "
"function is executed."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.reset-time' (U32)>"
msgstr ""

#. type: Plain text
msgid ""
"The time (in nanoseconds) between a pin is set by write and reset by the "
"reset function if it is enabled."
msgstr ""

#. type: SH
#, no-wrap
msgid "FUNCTIONS"
msgstr "FUNCIONES"

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.read(funct)>"
msgstr ""

#. type: Plain text
msgid ""
"Reads physical input pins of port E<lt>portnumE<gt> and updates HAL -in and -"
"in-not pins."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.read-all (funct)>"
msgstr ""

#. type: Plain text
msgid ""
"Reads physical input pins of all ports and updates HAL -in and -in-not pins."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.write (funct)>"
msgstr ""

#. type: Plain text
msgid ""
"Reads HAL -out pins of port E<lt>pE<gt> and updates that portâs physical "
"output pins."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.write-all (funct)>"
msgstr ""

#. type: Plain text
msgid "Reads HAL -out pins of all ports and updates all physical output pins."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<parport.E<lt>pE<gt>.reset (funct)>"
msgstr ""

#. type: Plain text
msgid ""
"Waits until I<reset-time >has elapsed since the associated write, then "
"resets pins to values indicated by I<-out-reset >and I<-out-invert "
">settings. reset must be later in the same thread as write. 'If 'I<-out-"
"reset >is TRUE, then the reset function will set the pin to the value of I<-"
"out-invert>. This can be used in conjunction with stepgenâs doublefreq to "
"produce one step per period. The stepgen stepspace for that pin must be set "
"to 0 to enable doublefreq."
msgstr ""

#. type: Plain text
msgid ""
"The hal_parport component is a driver for the traditional PC parallel port. "
"The port has a total of 25 physical pins of which 17 are used for signals. "
"The original parallel port divided those pins into three groups: data, "
"control, and status. The data group consists of 8 output pins, the control "
"group consists of 4 output pins, and the status group consists of 5 input "
"pins."
msgstr ""

#. type: Plain text
msgid ""
"In the early 1990âs, the bidirectional parallel port was introduced, which "
"allows the data group to be used for output or input. The HAL driver "
"supports the bidirectional port, and allows the user to set the data group "
"as either input or output. If configured as I<out>, a port provides a total "
"of 12 outputs and 5 inputs. If configured as I<in>, it provides 4 outputs "
"and 13 inputs."
msgstr ""

#. type: Plain text
msgid ""
"In some parallel ports, the control group pins are open collectors, which "
"may also be driven low by an external gate. On a board with open collector "
"control pins, if configured as I<x>, it provides 8 outputs, and 9 inputs."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Note: HAL and Open Collectors>"
msgstr ""

#. type: Plain text
msgid ""
"HAL cannot automatically determine if the x mode bidirectional pins are "
"actually open collectors (OC). If they are not, they cannot be used as "
"inputs, and attempting to drive them LOW from an external source can damage "
"the hardware."
msgstr ""

#. type: Plain text
msgid ""
"To determine whether your port has open collector pins, load hal_parport in "
"x mode. With no device attached, HAL should read the pin as TRUE. Next, "
"insert a 470 ohm resistor from one of the control pins to GND. If the "
"resulting voltage on the control pin is close to 0V, and HAL now reads the "
"pin as FALSE, then you have an OC port. If the resulting voltage is far from "
"0V, or HAL does not read the pin as FALSE, then your port cannot be used in "
"x mode."
msgstr ""

#. type: Plain text
msgid ""
"On some computers, BIOS settings may affect whether x mode can be used. SPP "
"mode is most likely to work."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Loading the hal_parport component>"
msgstr ""

#. type: Plain text
msgid ""
"The hal_parport driver is a real time component so it must be loaded into "
"the real time thread with loadrt. The configuration string describes the "
"parallel ports to be used, and (optionally) their types. If the "
"configuration string does not describe at least one port, it is an error."
msgstr ""

#. type: Plain text
msgid "B<loadrt hal_parport cfg=\"port [type] [port [type] ...]\">"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Specifying the Port>"
msgstr ""

#. type: Plain text
msgid ""
"Numbers below 16 refer to parallel ports detected by the system. This is the "
"simplest way to configure the hal_parport driver, and cooperates with the "
"Linux parport_pc driver if it is loaded. A port of 0 is the first parallel "
"port detected on the system, 1 is the next, and so on."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Basic configuration>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "      B<loadrt hal_parport cfg=\"0\">\n"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Using the Port Address>"
msgstr ""

#. type: Plain text
msgid ""
"Instead, the port address may be specified using the hex notation 0x then "
"the address."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "      B<loadrt hal_parport cfg=\"0x378\">\n"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Specifying a port Type>"
msgstr ""

#. type: Plain text
msgid ""
"For each parallel port handled by the hal_parport driver, a type can "
"optionally be specified. The type is one of in, out, epp, or x."
msgstr ""

#. type: Plain text
msgid "If the type is not specified, the default is out."
msgstr ""

#. type: Plain text
msgid ""
"A type of epp is the same as out, but the hal_parport driver requests that "
"the port switch into EPP mode. The hal_parport driver does not use the EPP "
"bus protocol, but on some systems EPP mode changes the electrical "
"characteristics of the port in a way that may make some marginal hardware "
"work better. The Gecko G540âs charge pump is known to require this on some "
"parallel ports."
msgstr ""

#. type: Plain text
msgid "See the Note above about mode x."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Example with two parallel ports>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "      B<loadrt hal_parport cfg=\"0 out 1 in\">\n"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Functions single port>"
msgstr ""

#. type: Plain text
msgid "You must also direct LinuxCNC to run the read and write functions."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"      B<addf parport.read-all base-thread\n"
"      addf parport.write-all base-thread>\n"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Functions multiple ports>"
msgstr ""

#. type: Plain text
msgid ""
"You can direct LinuxCNC to ruin the read and write functions for all the "
"attached ports."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"      B<addf parport.0.read base-thread\n"
"      addf parport.0.write base-thread>\n"
msgstr ""

#. type: Plain text
msgid ""
"The individual functions are provided for situations where one port needs to "
"be updated in a very fast thread, but other ports can be updated in a slower "
"thread to save CPU time. It is probably not a good idea to use both an -all "
"function and an individual function at the same time."
msgstr ""

#. type: Plain text
msgid ""
"Parallel Port Driver (Hardware Drivers Section of LinuxCNC Docs)  PCI "
"Parallel Port Example (Hardware Examples Section of LinuxCNC Docs)"
msgstr ""

#. type: Plain text
msgid ""
"This man page written by Joe Hildreth as part of the LinuxCNC project. Most "
"of this information was taken from the parallel-port docs located in the "
"Hardware Drivers section of the documentation.  To the best of my knowledge "
"that documentation was written by Sebastian Kuzminsky and Chris Radek."
msgstr ""
"Esta pagina de manual escrita por Joe Hildreth como parte del proyecto "
"LinuxCNC. La mayor parte de esta informacion se tomo de los documentos de "
"puertos paralelos ubicados en la seccion Controladores de hardware de la "
"documentacion. Que yo sepa, esa documentacion fue escrita por Sebastian "
"Kuzminsky y Chris Radek."

#. type: TH
#, no-wrap
msgid "HALREPORT"
msgstr ""

#. type: Plain text
msgid "halreport - creates a report on the status of the HAL"
msgstr ""

#. type: Plain text
msgid "B<halreport [outfilename]>"
msgstr ""

#. type: Plain text
msgid "B<halreport>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" 1) supports components made by halcompile and numerous\n"
"    legacy components\n"
" 2) Known unhandled components:\n"
"    at_pid   -- naming conflicts with pid, seldom used\n"
"    boss_plc -- no manpage or docs (any users?)\n"
"    watchdog -- seldom used (no users in-tree)\n"
" 3) deprecated/obsolete components\n"
"    counter\n"
"    supply\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" Identificaion of functions used according to pin name.\n"
" Default handling works for components that:\n"
" 1) use names=|count= (.comp components created with halcompile)\n"
" 2) have a *single* function\n"
msgstr ""

#. type: Plain text
msgid "Full docs:"
msgstr ""

#. type: TH
#, no-wrap
msgid "HALRMT"
msgstr ""

#. type: Plain text
msgid "halrmt - short description"
msgstr ""

#. type: Plain text
msgid "B<halrmt>"
msgstr ""

#. type: Plain text
msgid "B<halrmt> is a remote-control interface for LinuxCNC."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  halrmt {-- --port E<lt>port numberE<gt> --name E<lt>server nameE<gt> --connectpw E<lt>passwordE<gt>\n"
"             --enablepw E<lt>passwordE<gt> --sessions E<lt>max sessionsE<gt> -iniE<lt>inifileE<gt>}\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  With -- --port Waits for socket connections (Telnet) on specified socket, without port\n"
"            uses default port 5006. (note: linuxcncrsh uses 5007 as default)\n"
"  With -- --name E<lt>server nameE<gt> Sets the server name to specified name for Hello.\n"
"  With -- --connectpw E<lt>passwordE<gt> Sets the connection password to 'password'. Default EMC\n"
"  With -- --enablepw E<lt>passwordE<gt> Sets the enable password to 'password'. Default EMCTOO\n"
"  With -- --sessions E<lt>max sessionsE<gt> Sets the maximum number of simultaneous connextions\n"
"            to max sessions. Default is no limit (-1).\n"
"  With -- -ini E<lt>inifileE<gt>, uses inifile instead of emc.ini. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  There are six commands supported, Where the commands set and get contain HAL\n"
"  specific sub-commands based on the commands supported by halcmd. Commands and \n"
"  most parameters are not case sensitive. The exceptions are passwords, \n"
"  file paths and text strings.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  The supported commands are as follows:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> HELLO E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Hello E<lt>passwordE<gt> E<lt>clientE<gt> E<lt>versionE<gt>\n"
"  If a valid password was entered the server will respond with\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  HELLO ACK E<lt>Server NameE<gt> E<lt>Server VersionE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Where server name and server version are looked up from the implementation.\n"
"  if an invalid password or any other syntax error occurs then the server \n"
"  responds with:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  HELLO NAK\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> Get E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The get command includes one of the hal sub-commands, described below and\n"
"  zero or more additional parameters. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> Set E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The set command inclides one of the hal sub-commands, described below and\n"
"  one or more additional parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> Quit E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  The quit command disconnects the associated socket connection.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> Shutdown E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The shutdown command tells EMC to shutdown before quitting the connection. This\n"
"  command may only be issued if the Hello has been successfully negotiated and the\n"
"  connection has control of the CNC (see enable sub-command below). This command\n"
"  has no parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ==E<gt> Help E<lt>==\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The help command will return help information in text format over the telnet\n"
"  connection. If no parameters are specified, it will itemize the available commands.\n"
"  If a command is specified, it will provide usage information for the specified\n"
"  command. Help will respond regardless of whether a \"Hello\" has been\n"
"  successfully negotiated.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  HAL sub-commands:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  echo on | off\n"
"  With get will return the current echo state, with set, sets the echo\n"
"  state. When echo is on, all commands will be echoed upon receipt. This\n"
"  state is local to each connection.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  verbose on | off\n"
"  With get will return the current verbose state, with set, sets the\n"
"  verbose state. When in verbose mode is on, all set commands return\n"
"  positive acknowledgement in the form SET E<lt>COMMANDE<gt> ACK. In addition,\n"
"  text error messages will be issued when in verbose mode. This state\n"
"  is local to each connection.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  enable E<lt>pwdE<gt> | off\n"
"  With get will return On or Off to indicate whether the current connection\n"
"  is enabled to perform control functions. With set and a valid password,\n"
"  the current connection is enabled for control functions. \"OFF\" may not\n"
"  be used as a password and disables control functions for this connection.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  config [TBD]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  comm_mode ascii | binary\n"
"  With get, will return the current communications mode. With set, will\n"
"  set the communications mode to the specified mode. The binary protocol \n"
"  is TBD.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  comm_prot E<lt>version noE<gt>\n"
"  With get, returns the current protocol version used by the server,\n"
"  with set, sets the server to use the specified protocol version,\n"
"  provided it is lower than or equal to the highest version number\n"
"  supported by the server implementation.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Comps [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all components beginning with the specified substring. \n"
"  If no substring is specified then it returns all components.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Pins [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about all pins beginning with the\n"
"  specified substring. If no substring is specified then it returns all pins.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  PinVals [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns only value information about all pins beginning with the\n"
"  specified substring. If no substring is specified then it returns all pins.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Signals [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about all signals beginning with the\n"
"  specified substring. If no substring is specified then it returns all signals.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  SigVals [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns only value information about all signals beginning with the\n"
"  specified substring. If no substring is specified then it returns all pins.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Params [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about all parameters beginning with the\n"
"  specified substring. If no substring is specified then it returns all \n"
"  parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ParamVals [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns only value information about all parameters beginning with the\n"
"  specified substring. If no substring is specified then it returns all pins\n"
"  parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Functs [E<lt>substringE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about all functions beginning with the\n"
"  specified substring. If no substring is specified then it returns all \n"
"  functions.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Threads\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Get only, returns all information about all functions.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Comp E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Get only, returns the component matching the specified name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Pin E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about the pin matching the specified \n"
"  name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  PinVal E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Get only, returns the value of the pin matching the specified name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Sig E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  SigVal E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns just the value of the signal matching the specified\n"
"  name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Param E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about the parameter matching the \n"
"  specified name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  ParamVal E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns just the value of the parameter matching the specified\n"
"  name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Funct E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Thread E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Get only, returns all information about the thread matching the \n"
"  specified name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  LoadRt E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, loads the real time executable specified by name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Unload E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, unloads the executable specified by name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  LoadUsr E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, loads the user executable specified by name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Linkps E<lt>pin nameE<gt> E<lt>signal nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, links the specified pin to the specified signal.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Linksp E<lt>signal nameE<gt> E<lt>pin nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, links the specified signal to the specified pin.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Linkpp E<lt>pin name 1E<gt> E<lt>pin name 2E<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, links the pin specified by pin 1 with the pin specified by pin 2.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Net E<lt>net listE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, nets the specified net list.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Unlinkp E<lt>pin name 1E<gt> E<lt>pin name 2E<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, unlinks the specified pins\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Lock\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Unlock\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  NewSig E<lt>nameE<gt> E<lt>typeE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, creates the signal specified by name and of type specified by type.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  DelSig E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, deletes the signal specified by name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  SetP E<lt>nameE<gt> E<lt>valueE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, sets the parameter specified by name to the value specified by value.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  SetS E<lt>nameE<gt> E<lt>valueE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, sets the signal specified by name to the value specified by value.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  AddF E<lt>nameE<gt> E<lt>threadE<gt> [E<lt>parametersE<gt>]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  Set only, adds the function specified by name, to the thread specified by\n"
"  thread, with the optional parameters specified by parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  DelF E<lt>nameE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Set only, deletes the function specified by name.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Save \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Start\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  Stop\n"
msgstr ""

#. type: Plain text
msgid "It is not know if this interface currently works."
msgstr ""

#. type: TH
#, no-wrap
msgid "HALSAMPLER"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-11-18"
msgstr ""

#. type: Plain text
msgid "halsampler - sample data from HAL in realtime"
msgstr ""

#. type: Plain text
msgid "B<halsampler> [I<options>]"
msgstr ""

#. type: Plain text
msgid ""
"B<sampler>(9)  and B<halsampler> are used together to sample HAL data in "
"real time and store it in a file.  B<sampler> is a realtime HAL component "
"that exports HAL pins and creates a FIFO in shared memory.  It then begins "
"sampling data from the HAL and storing it to the FIFO.  B<halsampler> is a "
"user space program that copies data from the FIFO to stdout, where it can be "
"redirected to a file or piped to some other program."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-c >I<CHAN>"
msgstr ""

#. type: Plain text
msgid ""
"instructs B<halsampler> to read from FIFO I<CHAN>.  FIFOs are numbered from "
"zero, and the default value is zero, so this option is not needed unless "
"multiple FIFOs have been created."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-n >I<COUNT>"
msgstr ""

#. type: Plain text
msgid ""
"instructs B<halsampler> to read I<COUNT> samples from the FIFO, then exit.  "
"If B<-n> is not specified, B<halsampler> will read continuously until it is "
"killed."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-t>"
msgstr ""

#. type: Plain text
msgid ""
"instructs B<halsampler> to tag each line by printing the sample number in "
"the first column."
msgstr ""

#. type: Plain text
msgid "instructs B<halsampler> to write to B<FILENAME> instead of to stdout."
msgstr ""

#. type: Plain text
msgid ""
"A FIFO must first be created by loading B<sampler>(9)  with B<halcmd loadrt> "
"or a B<loadrt> command in a .hal file.  Then B<halsampler> can be invoked to "
"begin printing data from the FIFO to stdout."
msgstr ""

#. type: Plain text
msgid ""
"Data is printed one line per sample.  If B<-t> was specified, the sample "
"number is printed first.  The data follows, in the order that the pins were "
"defined in the config string.  For example, if the B<sampler> config string "
"was \"ffbs\" then a typical line of output (without B<-t>)  would look like:"
msgstr ""

#. type: Plain text
msgid "123.55 33.4 0 -12"
msgstr ""

#. type: Plain text
msgid ""
"B<halsampler> prints data as fast as possible until the FIFO is empty, then "
"it retries at regular intervals, until it is either killed or has printed "
"I<COUNT> samples as requested by B<-n>.  Usually, but not always, data "
"printed by B<halsampler> will be redirected to a file or piped to some other "
"program."
msgstr ""

#. type: Plain text
msgid ""
"The FIFO size should be chosen to absorb samples captured during any "
"momentary disruptions in the flow of data, such as disk seeks, terminal "
"scrolling, or the processing limitations of subsequent program in a "
"pipeline.  If the FIFO gets full and B<sampler> is forced to overwrite old "
"data, B<halsampler> will print 'overrun' on a line by itself to mark each "
"gap in the sampled data.  If B<-t> was specified, gaps in the sequential "
"sample numbers in the first column can be used to determine exactly how many "
"samples were lost."
msgstr ""

#. type: Plain text
msgid ""
"The data format for B<halsampler> output is the same as for "
"B<halstreamer>(1)  input, so 'waveforms' captured with B<halsampler> can be "
"replayed using B<halstreamer>.  The B<-t> option should not be used in this "
"case."
msgstr ""

#. type: SH
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
msgid ""
"If a problem is encountered during initialization, B<halsampler> prints a "
"message to stderr and returns failure."
msgstr ""

#. type: Plain text
msgid ""
"Upon printing I<COUNT> samples (if B<-n> was specified) it will shut down "
"and return success.  If it is terminated before printing the specified "
"number of samples, it returns failure.  This means that when B<-n> is not "
"specified, it will always return failure when terminated."
msgstr ""

#. type: Plain text
msgid "B<sampler>(9)  B<streamer>(9)  B<halstreamer>(1)"
msgstr ""

#. type: Plain text
msgid "Copyright \\(co 2006 John Kasunich."
msgstr ""

#. type: TH
#, no-wrap
msgid "HALSCOPE"
msgstr ""

#. type: Plain text
msgid "halscope - short description"
msgstr ""

#. type: Plain text
msgid "B<halscope>"
msgstr ""

#. type: Plain text
msgid "B<halscope> Software oscilloscope for LinuxCNC/HAL"
msgstr ""

#. type: Plain text
msgid ""
"Digital oscilloscope for viewing real time waveforms of hal pins and signals"
msgstr ""

#. type: TH
#, no-wrap
msgid "HALSHOW"
msgstr ""

#. type: Plain text
msgid "halshow - short description"
msgstr ""

#. type: Plain text
msgid "B<halshow>"
msgstr ""

#. type: Plain text
msgid ""
"B<halshow> creates a GUI interface to view and interact with a running HAL "
"session.  It is documented in the PDF and HTML docs much more completely "
"than is possible in a manpage: http://linuxcnc.org/docs/html/hal/halshow.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "HALUI"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-07-22"
msgstr ""

#. type: Plain text
msgid "halui - observe HAL pins and command LinuxCNC through NML"
msgstr ""

#. type: Plain text
msgid "B<halui> [B<-ini E<lt>path-to-iniE<gt>>]"
msgstr ""

#. type: Plain text
msgid ""
"B<halui> is used to build a User Interface using hardware knobs and "
"switches. It exports a big number of pins, and acts accordingly when these "
"change."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-ini name>"
msgstr ""

#. type: Plain text
msgid ""
"use the I<name> as the configuration file. Note: halui must find the nml "
"file specified in the ini, usually that file is in the same folder as the "
"ini, so it makes sense to run halui from that folder."
msgstr ""

#. type: Plain text
msgid ""
"When run, B<halui> will export a large number of pins. A user can connect "
"those to his physical knobs & switches & leds, and when a change is noticed "
"halui triggers an appropriate event."
msgstr ""

#. type: Plain text
msgid ""
"B<halui> expects the signals to be debounced, so if needed (bad knob "
"contact) connect the physical button to a HAL debounce filter first."
msgstr ""

#. type: SS
#, no-wrap
msgid "abort"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.abort> bit in "
msgstr ""

#. type: Plain text
msgid "pin for clearing most errors"
msgstr ""

#. type: SS
#, no-wrap
msgid "tool"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.a> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the A axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.b> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the B axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.c> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the C axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.u> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the U axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.v> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the V axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.w> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the W axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.x> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the X axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.y> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the Y axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.length-offset.z> float out "
msgstr ""

#. type: Plain text
msgid "current applied tool length offset for the Z axis"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.diameter> float out "
msgstr ""

#. type: Plain text
msgid "Current tool diameter, or 0 if no tool is loaded."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.tool.number> u32 out "
msgstr ""

#. type: Plain text
msgid "current selected tool"
msgstr ""

#. type: SS
#, no-wrap
msgid "spindle"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.brake-is-on> bit out "
msgstr ""

#. type: Plain text
msgid "status pin that tells us if brake is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.brake-off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for deactivating the spindle brake"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.brake-on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for activating the spindle brake"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.decrease> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin decreases the current spindle speed by 100"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.forward> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin makes the spindle go forward"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.increase> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin increases the current spindle speed by 100"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling if the spindle is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.reverse> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin makes the spindle go reverse"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.runs-backward> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling if the spindle is running backward"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.runs-forward> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling if the spindle is running forward"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.start> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin starts the spindle"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.stop> bit in "
msgstr ""

#. type: Plain text
msgid "a rising edge on this pin stops the spindle"
msgstr ""

#. type: SS
#, no-wrap
msgid "spindle override"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.count-enable> bit in  (default: B<TRUE>)"
msgstr ""

#. type: Plain text
msgid "When TRUE, modify spindle override when counts changes."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.counts> s32 in "
msgstr ""

#. type: Plain text
msgid "counts X scale = spindle override percentage"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.decrease> bit in "
msgstr ""

#. type: Plain text
msgid "pin for decreasing the SO (-=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.direct-value> bit in "
msgstr ""

#. type: Plain text
msgid "pin to enable direct spindle override value input"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.increase> bit in "
msgstr ""

#. type: Plain text
msgid "pin for increasing the SO (+=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.scale> float in "
msgstr ""

#. type: Plain text
msgid "pin for setting the scale of counts for SO"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.spindle.N.override.value> float out "
msgstr ""

#. type: Plain text
msgid "current FO value"
msgstr ""

#. type: SS
#, no-wrap
msgid "program"
msgstr "Programa"

#. type: TP
#, no-wrap
msgid "B<halui.program.block-delete.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that block delete is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.block-delete.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting that block delete is off"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.block-delete.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting that block delete is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.is-idle> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that no program is running"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.is-paused> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that a program is paused"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.is-running> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that a program is running"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.optional-stop.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that the optional stop is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.optional-stop.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin requesting that the optional stop is off"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.optional-stop.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin requesting that the optional stop is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.pause> bit in "
msgstr ""

#. type: Plain text
msgid "pin for pausing a program"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.resume> bit in "
msgstr ""

#. type: Plain text
msgid "pin for resuming a program"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.run> bit in "
msgstr ""

#. type: Plain text
msgid "pin for running a program"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.step> bit in "
msgstr ""

#. type: Plain text
msgid "pin for stepping in a program"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.program.stop> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for stopping a program (note: this pin does the same thing as halui."
"abort)"
msgstr ""

#. type: SS
#, no-wrap
msgid "mode"
msgstr "Modo"

#. type: TP
#, no-wrap
msgid "B<halui.mode.auto> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting auto mode"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.is-auto> bit out "
msgstr ""

#. type: Plain text
msgid "pin for auto mode is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.is-joint> bit out "
msgstr ""

#. type: Plain text
msgid "pin showing joint by joint jog mode is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.is-manual> bit out "
msgstr ""

#. type: Plain text
msgid "pin for manual mode is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.is-mdi> bit out "
msgstr ""

#. type: Plain text
msgid "pin for mdi mode is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.is-teleop> bit out "
msgstr ""

#. type: Plain text
msgid "pin showing coordinated jog mode is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.joint> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting joint by joint jog mode"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.manual> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting manual mode"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.mdi> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting mdi mode"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mode.teleop> bit in "
msgstr ""

#. type: Plain text
msgid "pin for requesting coordinated jog mode"
msgstr ""

#. type: SS
#, no-wrap
msgid "mdi R<(optional)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mdi-command-XX> bit in"
msgstr ""

#. type: Plain text
msgid ""
"B<halui> looks for ini variables named [HALUI]MDI_COMMAND, and exports a pin "
"for each command it finds.  When the pin is driven TRUE, B<halui> runs the "
"specified MDI command.  XX is a two digit number starting at 00.  If no "
"[HALUI]MDI_COMMAND variables are set in the ini file, no halui.mdi-command-"
"XX pins will be exported by halui."
msgstr ""

#. type: SS
#, no-wrap
msgid "mist"
msgstr "niebla"

#. type: TP
#, no-wrap
msgid "B<halui.mist.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "pin for mist is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mist.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for stopping mist"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.mist.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for starting mist"
msgstr ""

#. type: SS
#, no-wrap
msgid "max-velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.count-enable> bit in  (default: B<TRUE>)"
msgstr ""

#. type: Plain text
msgid "When True, modify max velocity when halui.max-velocity.counts changes."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.counts> s32 in "
msgstr ""

#. type: Plain text
msgid ""
"When .count-enable is True, halui changes the max velocity in response to "
"changes to this pin.  It's usually connected to an MPG encoder on an "
"operator's panel or jog pendant.  When .count-enable is False, halui ignores "
"this pin."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.direct-value> bit in "
msgstr ""

#. type: Plain text
msgid ""
"When this pin is True, halui commands the max velocity directly to (.counts "
"* .scale).  When this pin is False, halui commands the max velocity in a "
"relative way: change max velocity by an amount equal to (change in .counts "
"* .scale)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.increase> bit in "
msgstr ""

#. type: Plain text
msgid ""
"A positive edge (a False to True transition) on this pin increases the max "
"velocity by the value of the .scale pin.  (Note that halui always responds "
"to this pin, independent of the .count-enable pin.)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.decrease> bit in "
msgstr ""

#. type: Plain text
msgid ""
"A positive edge (a False to True transition) on this pin decreases the max "
"velocity by the value of the .scale pin.  (Note that halui always responds "
"to this pin, independent of the .count-enable pin.)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.scale> float in "
msgstr ""

#. type: Plain text
msgid ""
"This pin controls the scale of changes to the max velocity.  Each unit "
"change in .counts, and each positive edge on .increase and .decrease, "
"changes the max velocity by .scale.  The units of the .scale pin are machine-"
"units per second."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.max-velocity.value> float out "
msgstr ""

#. type: Plain text
msgid "Current value for maximum velocity, in machine-units per second."
msgstr ""

#. type: SS
#, no-wrap
msgid "machine"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.machine.units-per-mm> float out "
msgstr ""

#. type: Plain text
msgid ""
"pin for machine units-per-mm (inch:1/25.4, mm:1)  according to inifile "
"setting: [TRAJ]LINEAR_UNITS"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.machine.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "pin for machine is On/Off"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.machine.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for setting machine Off"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.machine.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for setting machine On"
msgstr ""

#. type: SS
#, no-wrap
msgid "lube"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.lube.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "pin for lube is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.lube.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for stopping lube"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.lube.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for starting lube"
msgstr ""

#. type: SS
#, no-wrap
msgid "joint R<(>NR< = joint number (0 ... num_joints-1))>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.select> bit in "
msgstr ""

#. type: Plain text
msgid "pin for selecting joint N"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.is-selected> bit out "
msgstr ""

#. type: Plain text
msgid "status pin that joint N is selected"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.has-fault> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N has a fault"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.home> bit in "
msgstr ""

#. type: Plain text
msgid "pin for homing joint N"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.is-homed> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N is homed"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.on-hard-max-limit> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N is on the positive hardware limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.on-hard-min-limit> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N is on the negative hardware limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.on-soft-max-limit> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N is on the positive software limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.on-soft-min-limit> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N is on the negative software limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.override-limits> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that joint N's limits are temporarily overridden"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.unhome> bit in "
msgstr ""

#. type: Plain text
msgid "pin for unhoming joint N"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected> u32 out "
msgstr ""

#. type: Plain text
msgid "selected joint number (0 ... num_joints-1)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.has-fault> bit out "
msgstr ""

#. type: Plain text
msgid "status pin selected joint is faulted"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.home> bit in "
msgstr ""

#. type: Plain text
msgid "pin for homing the selected joint"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.is-homed> bit out "
msgstr ""

#. type: Plain text
msgid "status pin telling that the selected joint is homed"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.on-hard-max-limit> bit out "
msgstr ""

#. type: Plain text
msgid ""
"status pin telling that the selected joint is on the positive hardware limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.on-hard-min-limit> bit out "
msgstr ""

#. type: Plain text
msgid ""
"status pin telling that the selected joint is on the negative hardware limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.on-soft-max-limit> bit out "
msgstr ""

#. type: Plain text
msgid ""
"status pin telling that the selected joint is on the positive software limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.on-soft-min-limit> bit out "
msgstr ""

#. type: Plain text
msgid ""
"status pin telling that the selected joint is on the negative software limit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.override-limits> bit out "
msgstr ""

#. type: Plain text
msgid ""
"status pin telling that the selected joint's limits are temporarily "
"overridden"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.unhome> bit in "
msgstr ""

#. type: Plain text
msgid "pin for unhoming the selected joint"
msgstr ""

#. type: SS
#, no-wrap
msgid "joint jogging R<(>NR< = joint number (0 ... num_joints-1))>"
msgstr ""

#. type: Plain text
msgid ""
"B<halui.joint.jog-deadband> float in pin for setting jog analog deadband "
"(jog analog inputs smaller/slower than this (in absolute value) are ignored)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.jog-speed> float in "
msgstr ""

#. type: Plain text
msgid "pin for setting jog speed for plus/minus jogging."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.analog> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the joint N using an float value (e.g. joystick).  The "
"value, typically set between 0.0 and \\(+-1.0, is used as a jog-speed "
"multiplier."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.increment> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for setting the jog increment for joint N when using increment-plus/minus"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.increment-minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make joint N jog in the negative direction by the "
"increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.increment-plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make joint N jog in the positive direction by the "
"increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging joint N in negative direction at the halui.joint.jog-speed "
"velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.N.plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging joint N in positive direction at the halui.joint.jog-speed "
"velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.increment> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for setting the jog increment for the selected joint when using "
"increment-plus/minus"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.increment-minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make the selected joint jog in the negative "
"direction by the increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.increment-plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make the selected joint jog in the positive "
"direction by the increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the selected joint in negative direction at the halui.joint."
"jog-speed velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.joint.selected.plus>"
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the selected joint bit in in positive direction at the halui."
"joint.jog-speed velocity"
msgstr ""

#. type: SS
#, no-wrap
msgid "axis (LR< = axis letter (xyzabcuvw)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.select> bit in "
msgstr ""

#. type: Plain text
msgid "pin for selecting axis by letter"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.is-selected> bit out "
msgstr ""

#. type: Plain text
msgid "status pin that axis L is selected"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.pos-commanded> float out  float out "
msgstr ""

#. type: Plain text
msgid "Commanded axis position in machine coordinates"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.pos-feedback> float out  float out "
msgstr ""

#. type: Plain text
msgid "Feedback axis position in machine coordinates"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.pos-relative> float out  float out "
msgstr ""

#. type: Plain text
msgid "Commanded axis position in relative coordinates"
msgstr ""

#. type: SS
#, no-wrap
msgid "axis jogging R<(>LR< = axis letter (xyzabcuvw)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.jog-deadband> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for setting jog analog deadband (jog analog inputs smaller/slower than "
"this (in absolute value) are ignored)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.jog-speed> float in "
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.analog> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the axis L using an float value (e.g. joystick).  The value, "
"typically set between 0.0 and \\(+-1.0, is used as a jog-speed multiplier."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.increment> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for setting the jog increment for axis L when using increment-plus/minus"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.increment-minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make axis L jog in the negative direction by the "
"increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.increment-plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make axis L jog in the positive direction by the "
"increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging axis L in negative direction at the halui.axis.jog-speed "
"velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.L.plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging axis L in positive direction at the halui.axis.jog-speed "
"velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected> u32 out "
msgstr ""

#. type: Plain text
msgid "selected axis (by index: 0:x 1:y 2:z 3:a 4:b 5:cr 6:u 7:v 8:w)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected.increment> float in "
msgstr ""

#. type: Plain text
msgid ""
"pin for setting the jog increment for the selected axis when using increment-"
"plus/minus"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected.increment-minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make the selected axis jog in the negative direction "
"by the increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected.increment-plus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"a rising edge will will make the selected axis jog in the positive direction "
"by the increment amount"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected.minus> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the selected axis in negative direction at the halui.axis."
"jog-speed velocity"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.axis.selected.plus>"
msgstr ""

#. type: Plain text
msgid ""
"pin for jogging the selected axis bit in in positive direction at the halui."
"axis.jog-speed velocity"
msgstr ""

#. type: SS
#, no-wrap
msgid "flood"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.flood.is-on> bit out "
msgstr ""

#. type: Plain text
msgid "pin for flood is on"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.flood.off> bit in "
msgstr ""

#. type: Plain text
msgid "pin for stopping flood"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.flood.on> bit in "
msgstr ""

#. type: Plain text
msgid "pin for starting flood"
msgstr ""

#. type: SS
#, no-wrap
msgid "feed override"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.count-enable> bit in  (default: B<TRUE>)"
msgstr ""

#. type: Plain text
msgid "When TRUE, modify feed override when counts changes."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.counts> s32 in "
msgstr ""

#. type: Plain text
msgid "counts X scale = feed override percentage"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.decrease> bit in "
msgstr ""

#. type: Plain text
msgid "pin for decreasing the FO (-=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.direct-value> bit in "
msgstr ""

#. type: Plain text
msgid "pin to enable direct value feed override input"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.increase> bit in "
msgstr ""

#. type: Plain text
msgid "pin for increasing the FO (+=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.scale> float in "
msgstr ""

#. type: Plain text
msgid "pin for setting the scale on changing the FO"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.feed-override.value> float out "
msgstr ""

#. type: Plain text
msgid "current Feed Override value"
msgstr ""

#. type: SS
#, no-wrap
msgid "rapid override"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.count-enable> bit in  (default: B<TRUE>)"
msgstr ""

#. type: Plain text
msgid "When TRUE, modify Rapid Override when counts changes."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.counts> s32 in "
msgstr ""

#. type: Plain text
msgid "counts X scale = Rapid Override percentage"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.decrease> bit in "
msgstr ""

#. type: Plain text
msgid "pin for decreasing the Rapid Override (-=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.direct-value> bit in "
msgstr ""

#. type: Plain text
msgid "pin to enable direct value Rapid Override input"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.increase> bit in "
msgstr ""

#. type: Plain text
msgid "pin for increasing the Rapid Override (+=scale)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.scale> float in "
msgstr ""

#. type: Plain text
msgid "pin for setting the scale on changing the Rapid Override"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.rapid-override.value> float out "
msgstr ""

#. type: Plain text
msgid "current Rapid Override value"
msgstr ""

#. type: SS
#, no-wrap
msgid "estop"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.estop.activate> bit in "
msgstr ""

#. type: Plain text
msgid "pin for setting Estop (LinuxCNC internal) On"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.estop.is-activated> bit out "
msgstr ""

#. type: Plain text
msgid "pin for displaying Estop state (LinuxCNC internal) On/Off"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.estop.reset> bit in "
msgstr ""

#. type: Plain text
msgid "pin for resetting Estop (LinuxCNC internal) Off"
msgstr ""

#. type: SS
#, no-wrap
msgid "home"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<halui.home-all> bit in "
msgstr ""

#. type: Plain text
msgid ""
"pin for requesting home-all (only available when a valid homing sequence is "
"specified)"
msgstr ""

#. type: Plain text
msgid "none known at this time."
msgstr "En este momento, ninguno conocido."

#. type: Plain text
msgid ""
"Written by Alex Joni, as part of the LinuxCNC project. Updated by John "
"Thornton"
msgstr ""

#. type: Plain text
msgid "Copyright \\(co 2006 Alex Joni."
msgstr ""

#. type: TH
#, no-wrap
msgid "hbmgui"
msgstr ""

#. type: Plain text
msgid "hbmgui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<hbmgui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating a "
"Horizontal Boring Machine."
msgstr ""

#. type: TH
#, no-wrap
msgid "hexagui"
msgstr ""

#. type: Plain text
msgid "hexagui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<hexagui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating a "
"Horizontal Boring Machine."
msgstr ""

#. type: TH
#, no-wrap
msgid "hy_vfd"
msgstr ""

#. type: TH
#, no-wrap
msgid "April 25, 2015"
msgstr ""

#. type: TH
#, no-wrap
msgid "Huanyang VFD"
msgstr ""

#. type: Plain text
msgid "B<hy_vfd> - HAL userspace component for Huanyang VFDs"
msgstr ""

#. type: Plain text
msgid "B<hy_vfd> [OPTIONS]"
msgstr ""

#. type: Plain text
msgid ""
"This component connects the Huanyang VFD to the LinuxCNC HAL via a serial "
"(RS-485) connection."
msgstr ""

#. type: Plain text
msgid ""
"The Huanyang VFD must be configured via the face plate user interface to "
"accept serial communications:"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD001\\ =\\ 2>"
msgstr ""

#. type: Plain text
msgid "Set register PD001 (source of run commands) to 2 (communication port)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD002\\ =\\ 2>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD002 (source of operating frequency) to 2 (communication port)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD004>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD004 (Base Frequency) according to motor specs.  This is the "
"rated frequency of the motor from the motor's name plate, in Hz."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD005>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD005 (max frequency) according to motor specs.  This is the "
"maximum frequency of the motor's power supply, in Hz."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD011>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD011 (min frequency) according to motor specs.  This is the "
"minimum frequency of the motor's power supply, in Hz."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD141>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD141 (rated motor voltage) according to motor name plate.  "
"This is the motor's maximum voltage, in Volts."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD142>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD142 (rated motor current) according to motor name plate.  "
"This is the motor's maximum current, in Amps."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD143>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD143 (Number of Motor Poles) according to motor name plate."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD144>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD144 (rated motor revolutions) according to motor name plate.  "
"This is the motor's speed in RPM at 50 Hz.  Note: This is not the motor's "
"max speed (unless the max motor frequency happens to be 50 Hz)!"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD163\\ =\\ 1>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD163 (communication address) to 1.  This matches the default "
"in the hy_vfd driver, change this if your setup has special needs."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD164\\ =\\ 2>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD164 (baud rate) to 2 (19200 bps).  This matches the default "
"in the hy_vfd driver, change this if your setup has special needs."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PD165\\ =\\ 3>"
msgstr ""

#. type: Plain text
msgid ""
"Set register PD165 (communication data method) to 3 (8n1 RTU).  This matches "
"the default in the hy_vfd driver, change this if your setup has special "
"needs.  Note that the hy_vfd driver only supports RTU communication, not "
"ASCII."
msgstr ""

#. type: Plain text
msgid ""
"Consult the Huanyang instruction manual for details on using the face plate "
"to program the VFDs registers, and alternative values for the above "
"registers."
msgstr ""

#. type: Plain text
msgid ""
"Access to devices such as /dev/ttyUSB0 is restricted to members of the "
"\"dialout\" group. If you see error messages such as"
msgstr ""

#. type: Plain text
msgid "B<open: Permission denied>"
msgstr ""

#. type: Plain text
msgid "B<ERROR Can't open the device /dev/ttyUSB0 (errno 13)>"
msgstr ""

#. type: Plain text
msgid "Check your groups membership with the command"
msgstr ""

#. type: Plain text
msgid "B<groups>"
msgstr ""

#. type: Plain text
msgid "Then add your user to the dialout group with"
msgstr ""

#. type: Plain text
msgid "B<sudo addgroup your-username dialout>"
msgstr ""

#. type: Plain text
msgid "You will need to log out and back in again for this to take effect."
msgstr ""

#. type: Plain text
msgid ""
"Turn on debug messages. Note that if there are serial errors, this may "
"become annoying.  Debug mode will cause all serial communication messages to "
"be printed in hex on the terminal."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-y,\\ --regdump>"
msgstr ""

#. type: Plain text
msgid "Print the current value of all registers as soon as the VFD is enabled."
msgstr ""

#. type: Plain text
msgid ""
"(default hy_vfd) Set the name of the HAL module. The HAL comp name will be "
"set to E<lt>stringE<gt>, and all pin and parameter names will begin with "
"E<lt>stringE<gt>."
msgstr ""

#. type: Plain text
msgid ""
"(default 8) Set number of data bits to E<lt>nE<gt>, where n must be from 5 "
"to 8 inclusive.  This must match the setting in register PD165 of the "
"Huanyang VFD."
msgstr ""

#. type: Plain text
msgid ""
"(default odd) Set serial parity to even, odd, or none.  This must match the "
"setting in register PD165 of the Huanyang VFD."
msgstr ""

#. type: Plain text
msgid ""
"(default 38400) Set baud rate to E<lt>nE<gt>. It is an error if the rate is "
"not one of the following: 110, 300, 600, 1200, 2400, 4800, 9600, 19200, "
"38400, 57600, 115200.  This must match the setting in register PD164 of the "
"Huanyang VFD."
msgstr ""

#. type: Plain text
msgid ""
"(default 1) Set serial stop bits to 1 or 2.  This must match the setting in "
"register PD165 of the HuanyangVFD."
msgstr ""

#. type: Plain text
msgid ""
"(default 1) Set HYCOMM target (slave) number. This must match the device "
"number you set on the Hyanyang VFD in register PD163."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-F,\\ --max-frequency\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: read from VFD) If specified, program register PD005 of the VFD "
"with the specified max frequency of E<lt>nE<gt> Hz (and use the same max "
"frequency in the hy_vfd driver).  If not specified, read the max frequency "
"to use from register PD005 of the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-f,\\ --min-frequency\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: read from VFD) If specified, program register PD011 of the VFD "
"with the specified minimum frequency of E<lt>nE<gt> Hz (and use the same "
"minimum frequency in the hy_vfd driver).  If not specified, read the minimum "
"frequency to use from register PD011 of the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-V,\\ --motor-voltage\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: read from VFD) If specified, program register PD141 of the VFD "
"with the specified max motor voltage of E<lt>nE<gt> Volts.  If not "
"specified, read the max motor voltage from register PD141 of the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-I,\\ --motor-current\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: read from VFD) If specified, program register PD142 of the VFD "
"with the specified max motor current of E<lt>nE<gt> Amps.  If not specified, "
"read the max motor current from register PD142 of the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-S,\\ --motor-speed\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: compute from value read from VFD P144) This command-line argument "
"is the motor's max speed.  If specified, compute the motor's speed at 50 Hz "
"from this argument and from the motor's max frequency (from the --max-"
"frequency argument or from P011 if --max-frequency is not specified) and "
"program register PD144 of the VFD.  If not specified, read the motor's speed "
"at 50 Hz from register P144 of the VFD, and use that and the max frequency "
"to compute the motor's max speed."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-P,\\ --motor-poles\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"(default: read value from VFD P143) This command-line argument is the number "
"of poles in the motor.  If specified, this value is sent to the VFD's "
"register PD143.  If not specified, the value is read from PD143 and reported "
"on the corresponding HAL pin."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-x,\\ --register\\ PDnnn=mmm\\ E<lt>nE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"Set a specific register to a new value. Can be used to set up to 10 "
"registers. Parameters will \"stick\" (but only after hy_vfd.enable has been "
"set true) so to set more than ten parameters it is possible to repeatedly "
"load the driver with a set of registers to set then enable (setp hy_vfd."
"enable 1) and unload (unload hy_vfd) the driver at a halrun(1) prompt.  For "
"example:"
msgstr ""

#. type: Plain text
msgid ""
"B<loadusr -W hy_vfd -d /ttyUSB0 --register PD014=30 --register PD015=30 >"
msgstr ""

#. type: Plain text
msgid ""
"Will set both ramp1 times to 3 seconds. The values should be scaled "
"according to the manual data. The example above uses values with a "
"resolution of 0.1 seconds, so the numbers are 10x larger than the required "
"value."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.enable>"
msgstr ""

#. type: Plain text
msgid "(bit, in) Enable communication from the hy_vfd driver to the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.SetF>"
msgstr ""

#. type: Plain text
msgid "(float, out)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.OutF>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.OutA>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.Rott>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.DCV>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.ACV>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.Cont>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.Tmp>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-forward>"
msgstr ""

#. type: Plain text
msgid "(bit, in)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-reverse>"
msgstr ""

#. type: Plain text
msgid "(bin, in)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-on>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNTR>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-run>"
msgstr ""

#. type: Plain text
msgid "(bit, out)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-jog>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-command-rf>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-running>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-jogging>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-running-rf>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-bracking>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.CNST-track-start>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.speed-command>"
msgstr ""

#. type: Plain text
msgid "(float, in)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-speed-fb>"
msgstr ""

#. type: Plain text
msgid "(float, out) Current spindle speed as reported by Huanyang VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-at-speed-tolerance>"
msgstr ""

#. type: Plain text
msgid ""
"(float, in) Spindle speed error tolerance.  If the actual spindle speed is "
"within .spindle-at-speed-tolerance of the commanded speed, then the .spindle-"
"at-speed pin will go True.  The default .spindle-at-speed-tolerance is 0.02, "
"which means the actual speed must be within 2% of the commanded spindle "
"speed."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.spindle-at-speed>"
msgstr ""

#. type: Plain text
msgid ""
"(bit, out) True when the current spindle speed is within .spindle-at-speed-"
"tolerance of the commanded speed."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.frequency-command>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.max-freq>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.base-freq>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.freq-lower-limit>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.rated-motor-voltage>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.rated-motor-current>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.rated-motor-rev>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.motor-poles>"
msgstr ""

#. type: Plain text
msgid "(u32, out)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.hycomm-ok>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.error-count>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.retval>"
msgstr ""

#. type: Plain text
msgid "(float, RW)"
msgstr ""

#. type: Plain text
msgid "Sebastian Kuzminsky"
msgstr ""

#. type: TH
#, no-wrap
msgid "IMAGE-TO-GCODE"
msgstr ""

#. type: Plain text
msgid "image-to-gcode - converts bitmap images to G-code"
msgstr ""

#. type: Plain text
msgid "B<image-to-gcode>"
msgstr ""

#. type: Plain text
msgid ""
"B<image-to-gcode> converts a bitmap image to G-code inteerpreting the "
"brightness of each pixel as a Z-height."
msgstr ""

#. type: Plain text
msgid ""
"Detailed docs: http://linuxcnc.org/docs/2.4/html/gui_image-to-gcode.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "INIVAR"
msgstr ""

#. type: Plain text
msgid "inivar - Query an INI file"
msgstr ""

#. type: Plain text
msgid ""
"B<inivar -var E<lt>variableE<gt> {-sec E<lt>sectionE<gt>} {E<lt>-ini "
"inifileE<gt>}>"
msgstr ""

#. type: Plain text
msgid "B<inivar> does stuff for LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"Prints to stdout the INI file result of a variable-in-section search, useful "
"for scripts that want to pick things out of INI files."
msgstr ""

#. type: Plain text
msgid ""
"syntax: inivar -var E<lt>variableE<gt> {-sec E<lt>sectionE<gt>} {E<lt>-ini "
"inifileE<gt>}"
msgstr ""

#. type: Plain text
msgid ""
"Uses emc.ini as default. E<lt>variableE<gt> needs to be supplied. If "
"E<lt>sectionE<gt> is omitted, first instance of E<lt>variableE<gt> will be "
"looked for in any section. Otherwise only a match of the variable in "
"E<lt>sectionE<gt> will be returned."
msgstr ""

#. type: TH
#, no-wrap
msgid "LATENCY-HISTOGRAM"
msgstr ""

#. type: TH
#, no-wrap
msgid "2021-08-14"
msgstr ""

#. type: Plain text
msgid "latency-histogram - plot a histogram of machine latency"
msgstr ""

#. type: Plain text
msgid ""
"B<latency-histogram> [B<-?|--help>] [B<--base> I<ns>] [B<--servo> I<ns>] "
"[B<--bbinsize> I<ns>] [B<--sbinsize> I<ns>] [B<--bbins> I<ns>] [B<--sbins> "
"I<ns>] [B<--logscale> I<0|1>] [B<--text> I<note>] [B<--show>] [B<--nobase>] "
"[B<--verbose>] [B<--nox>]"
msgstr ""

#. type: Plain text
msgid ""
"The latency test is important when configuring a LinuxCNC system.  An "
"adjunct to the standard latency-test latency-histogram plots the "
"distribution of latency. This can be useful to get a feel for how frequent "
"the high latency excursions are."
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC and Hal should not be running, stop with I<halrun -U>.  Large "
"number of bins and/or small binsizes will slow updates.  For single thread, "
"specify B<--nobase> (and options for servo thread).  Measured latencies "
"outside of the +/- bin range are reported with special end bars.  Use B<--"
"show> to show count for the off-chart [pos|neg] bin"
msgstr ""

#. type: Plain text
msgid ""
"More details: \\%https://linuxcnc.org/docs/html/install/latency-test.html"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-?>, B<--help>"
msgstr ""

#. type: Plain text
msgid "Show options and exit."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--base>I< ns>"
msgstr ""

#. type: Plain text
msgid "base thread interval, default: 25000, min: 5000"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--servo>I< ns>"
msgstr ""

#. type: Plain text
msgid "servo thread interval, default: 1000000, min: 25000"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--bbinsize>I< ns>"
msgstr ""

#. type: Plain text
msgid "base bin size, default: 100"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--sbinsize>I< ns>"
msgstr ""

#. type: Plain text
msgid "servo bin size, default: 100"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--bbins>I< ns>"
msgstr ""

#. type: Plain text
msgid "base bins, default: 200"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--sbins>I< ns>"
msgstr ""

#. type: Plain text
msgid "servo bins, default: 200"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--logscale>I< 0|1>"
msgstr ""

#. type: Plain text
msgid "y axis log scale, default: 1"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--text>I< note>"
msgstr ""

#. type: Plain text
msgid "additional note, default: \"\""
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--show>"
msgstr ""

#. type: Plain text
msgid "show count of undisplayed bins"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--nobase>"
msgstr ""

#. type: Plain text
msgid "servo thread only"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--verbose>"
msgstr ""

#. type: Plain text
msgid "progress and debug"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--nox>"
msgstr ""

#. type: Plain text
msgid "no gui, display elapsed,min,max,sdev for each thread"
msgstr ""

#. type: Plain text
msgid "B<latency-plot>(1), B<latency-test>(1), B<linuxcnc>(1)"
msgstr ""

#. type: Plain text
msgid ""
"Much more information about LinuxCNC and HAL is available in the LinuxCNC "
"and HAL User Manuals, found at I</usr/share/doc/linuxcnc/>."
msgstr ""

#. type: Plain text
msgid "Report bugs at \\%https://github.com/LinuxCNC/linuxcnc/issues"
msgstr ""

#. type: TH
#, no-wrap
msgid "LATENCY-PLOT"
msgstr ""

#. type: Plain text
msgid "latency-plot - another way to view latency numbers"
msgstr ""

#. type: Plain text
msgid ""
"B<latency-plot> [B<-?|--help>] [B<-H|--hal>] [B<-b|--base> I<nS>] [B<-s|--"
"servo> I<nS>] [B<-t|--time> I<mS>] [B<--relative>] [B<--actual>]"
msgstr ""

#. type: Plain text
msgid ""
"B<latency-plot> makes a strip chart recording for a base and a servo thread. "
"It may be useful to see spikes in latency when other applications are "
"started or used.  Mainly superseded by latency-histogram."
msgstr ""

#. type: Plain text
msgid "LinuxCNC and Hal should not be running, stop with I<halrun -U>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-H>, B<--hal>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-b>, B<--base> I<nS>"
msgstr ""

#. type: Plain text
msgid "base thread interval, default: 25000"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-s>, B<--servo> I<nS>"
msgstr ""

#. type: Plain text
msgid "servo thread interval, default: 1000000"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-t>, B<--time> I<mS>"
msgstr ""

#. type: Plain text
msgid "report interval, default: 1000, min: 100, max: 10000"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--relative>"
msgstr ""

#. type: Plain text
msgid "relative clock time (default)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--actual>"
msgstr ""

#. type: Plain text
msgid "actual clock time"
msgstr ""

#. type: Plain text
msgid "B<latency-histogram>(1), B<latency-test>(1), B<linuxcnc>(1)"
msgstr ""

#. type: TH
#, no-wrap
msgid "LATENCY-TEST"
msgstr ""

#. type: Plain text
msgid "latency-test - test the realtime system latency"
msgstr ""

#. type: Plain text
msgid "B<latency-test [-nobase]>"
msgstr ""

#. type: Plain text
msgid ""
"B<latency-test> runs a simple latency test http://linuxcnc.org/docs/html/"
"install/latency-test.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "lineardelta"
msgstr ""

#. type: Plain text
msgid "lineardelta - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<lineardelta> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating "
"a delta robot with linear actuators"
msgstr ""

#. type: Plain text
msgid ""
"See the main LinuxCNC documentation for more details.  http://linuxcnc.org/"
"docs/html/gui/vismach.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-02-20"
msgstr ""

#. type: Plain text
msgid "linuxcnc - LinuxCNC (The Enhanced Machine Controller)"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc> [I<-v>] [I<-d>] [I<INIFILE>]"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcnc> is used to start LinuxCNC (The Enhanced Machine Controller). It "
"starts the realtime system and then initializes a number of LinuxCNC "
"components (IO, Motion, GUI, HAL, etc).  The most important parameter is "
"I<INIFILE>, which specifies the configuration name you would like to run. If "
"I<INIFILE> is not specified, the B<linuxcnc> script presents a graphical "
"wizard to let you choose one."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-v> "
msgstr ""

#. type: Plain text
msgid ""
"Be a little bit verbose. This causes the script to print information as it "
"works."
msgstr ""

#. type: Plain text
msgid ""
"Print lots of debug information. All executed commands are echoed to the "
"screen. This mode is useful when something is not working as it should."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-l>"
msgstr ""

#. type: Plain text
msgid ""
"Use the last-used INI file without prompting. This is often a good choice "
"for a shortcut command or startup item."
msgstr ""

#. type: Plain text
msgid ""
"The ini file is the main piece of an LinuxCNC configuration. It is not the "
"entire configuration; there are various other files that go with it (NML "
"files, HAL files, TBL files, VAR files). It is, however, the most important "
"one, because it is the file that holds the configuration together. It can "
"adjust a lot of parameters itself, but it also tells B<linuxcnc> which other "
"files to load and use."
msgstr ""

#. type: Plain text
msgid "There are several ways to specify which config to use:"
msgstr ""

#. type: Plain text
msgid "Specify the absolute path to an ini, e.g."
msgstr ""

#. type: Plain text
msgid "B<linuxcnc> I</usr/local/linuxcnc/configs/sim/sim.ini>"
msgstr ""

#. type: Plain text
msgid "Specify a relative path from the current directory, e.g."
msgstr ""

#. type: Plain text
msgid "B<linuxcnc> I<configs/sim/sim.ini>"
msgstr ""

#. type: Plain text
msgid ""
"Otherwise, in the case where the B<INIFILE> is not specified, the behavior "
"will depend on whether you configured linuxcnc with B<--enable-run-in-"
"place>.  If so, the linuxcnc config chooser will search only the configs "
"directory in your source tree.  If not (or if you are using a packaged "
"version of linuxcnc), it may search several directories.  The config chooser "
"is currently set to search the path:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<~/linuxcnc/configs:/usr/local/etc/linuxcnc/configs:/usr/share/doc/linuxcnc/examples/sample-configs>\n"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc>"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc> I</etc/linuxcnc/sample-configs/stepper/stepper_mm.ini>"
msgstr ""

#. type: Plain text
msgid "B<halcmd(1)>"
msgstr ""

#. type: Plain text
msgid ""
"This man page written by Alex Joni, as part of the LinuxCNC Enhanced Machine "
"Controller project."
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNC_INFO"
msgstr ""

#. type: Plain text
msgid "linuxcnc_info - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc_info>"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcnc_info> supplies information about the linuxcnc version and system "
"info. It creates a text file and opens it in the default text editor."
msgstr ""

#. type: Plain text
msgid "It appears to hang until the text editor is closed."
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNCLCD"
msgstr ""

#. type: Plain text
msgid ""
"linuxcnclcd - LinuxCNC Graphical User Interface for LCD character display"
msgstr ""

#. type: Plain text
msgid "B<linuxcnclcd> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcnclcd> is one of the Graphical User Interfaces (GUI) for LinuxCNC It "
"gets run by the runscript usually. Linuxcnclcd is designed to run on a 4 x "
"20 LCD character display. It is not clear if it has ever worked."
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNCMKDESKTOP"
msgstr ""

#. type: Plain text
msgid "linuxcncmkdesktop - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcncmkdesktop>"
msgstr ""

#. type: Plain text
msgid "B<linuxcncmkdesktop> Script used by pickconfig to create a desktop icon"
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNC_MODULE_HELPER"
msgstr ""

#. type: Plain text
msgid "linuxcnc_module_helper - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc_module_helper>"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcnc_module_helper> This module exists to give root access to system "
"hardware for LinuxCNC It is not directly useful to users."
msgstr ""

#. type: TH
#, no-wrap
msgid "May 31, 2011"
msgstr ""

#. type: Plain text
msgid ""
"linuxcncrsh - text-mode interface for commanding LinuxCNC over the network"
msgstr ""

#. type: Plain text
msgid "B<linuxcncrsh [OPTIONS] [-- LINUXCNC_OPTIONS]>"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcncrsh> is a user interface for LinuxCNC.  Instead of popping up a "
"GUI window like axis(1) and touchy(1) do, it processes text-mode commands "
"that it receives via the network.  A human (or a program) can interface with "
"B<linuxcncrsh> using telnet(1) or nc(1) or similar programs."
msgstr ""

#. type: Plain text
msgid ""
"All features of LinuxCNC are available via the B<linuxcncrsh> interface."
msgstr ""

#. type: Plain text
msgid "B<-p,--port PORT_NUMBER>"
msgstr ""

#. type: Plain text
msgid ""
"Specify the port for linuxcncrsh to listen on.  Defaults to 5007 if omitted."
msgstr ""

#. type: Plain text
msgid "B<-n,--name SERVER_NAME>"
msgstr ""

#. type: Plain text
msgid ""
"Sets the server name that linuxcncrsh will use to identify itself during "
"handshaking with a new client.  Defaults to EMCNETSVR if omitted."
msgstr ""

#. type: Plain text
msgid "B<-w,--connectpw PASSWORD>"
msgstr ""

#. type: Plain text
msgid ""
"Specify the connection password to use during handshaking with a new "
"client.  Note that the password is sent in the clear, so it can be read by "
"anyone who can read packets on the network between the server and the "
"client.  Defaults to EMC if omitted."
msgstr ""

#. type: Plain text
msgid "B<-e,--enablepw PASSWORD>"
msgstr ""

#. type: Plain text
msgid ""
"Specify the password required to enable LinuxCNC via linuxcncrsh.  Note that "
"the password is sent in the clear, so it can be read by anyone who can read "
"packets on the network between the server and the client.  Defaults to "
"EMCTOO if omitted."
msgstr ""

#. type: Plain text
msgid "B<-s,--sessions MAX_SESSIONS>"
msgstr ""

#. type: Plain text
msgid ""
"Specify the maximum number of simultaneous connections.  Defaults to -1 (no "
"limit) if not specified."
msgstr ""

#. type: Plain text
msgid ""
"In addition to the options listed above, linuxcncrsh accepts an optional "
"special LINUXCNC_OPTION at the end:"
msgstr ""

#. type: Plain text
msgid "B<-ini LINUXCNC_INI_FILE>"
msgstr ""

#. type: Plain text
msgid ""
"LinuxCNC .ini file to use.  The -ini option B<must> be preceded by two "
"dashes: \"--\".  Defaults to emc.ini if omitted."
msgstr ""

#. type: SH
#, no-wrap
msgid "Starting linuxcncrsh"
msgstr ""

#. type: Plain text
msgid ""
"To use linuxcncrsh instead of a normal LinuxCNC GUI like axis or touch, "
"specify it in your .ini file like this:"
msgstr ""

#. type: Plain text
msgid "B<[DISPLAY]>"
msgstr ""

#. type: Plain text
msgid "B<DISPLAY=linuxcncrsh>"
msgstr ""

#. type: Plain text
msgid ""
"To use linuxcncrsh in addition to a normal GUI, you can either start it at "
"the end of your .hal file, or run it by hand in a terminal window."
msgstr ""

#. type: Plain text
msgid ""
"To start it from hal, add a line like this to the end of your .hal file:"
msgstr ""

#. type: Plain text
msgid "B<loadusr linuxcncrsh [OPTIONS] [-- LINUXCNC_OPTIONS]>"
msgstr ""

#. type: Plain text
msgid "To start it from the terminal, run linuxcncrsh manually like this:"
msgstr ""

#. type: SH
#, no-wrap
msgid "Connecting"
msgstr ""

#. type: Plain text
msgid ""
"Once LinuxCNC is up and linuxcncrsh is running, you can connect to it using "
"B<telnet> or B<nc> or similar:"
msgstr ""

#. type: Plain text
msgid "B<telnet HOST PORT>"
msgstr ""

#. type: Plain text
msgid ""
"HOST is the hostname or IP address of the computer running linuxcncrsh, and "
"PORT is the port it's listening on (5007 if you did not give linuxcncrsh the "
"--port option)."
msgstr ""

#. type: SH
#, no-wrap
msgid "Network protocol"
msgstr ""

#. type: Plain text
msgid ""
"linuxcncrsh accepts TCP connections on the port specified by the --port "
"option, or 5007 if not specified."
msgstr ""

#. type: Plain text
msgid ""
"The client sends requests, and the linuxcncrsh server returns replies.  "
"Requests consist of a command word followed by optional command-specific "
"parameters.  Requests and most request parameters are case insensitive. The "
"exceptions are passwords, file paths and text strings."
msgstr ""

#. type: Plain text
msgid ""
"Requests to linuxcncrsh are terminated with line endings, any combination of "
"one or more '\\er' and '\\en' characters.  Replies from linuxcncrsh are "
"terminated with the sequence '\\er\\en'."
msgstr ""

#. type: Plain text
msgid "The supported commands are as follows:"
msgstr ""

#. type: Plain text
msgid "B<hello E<lt>passwordE<gt> E<lt>clientE<gt> E<lt>versionE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"E<lt>passwordE<gt> must match linuxcncrsh's connect password, or \"EMC\" if "
"no --connectpw was supplied.  The three arguments may not contain "
"whitespace.  If a valid password was entered the server will respond with:"
msgstr ""

#. type: Plain text
msgid "I<HELLO ACK E<lt>ServerNameE<gt> E<lt>ServerVersionE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"If an invalid password or any other syntax error occurs then the server "
"responds with:"
msgstr ""

#. type: Plain text
msgid "I<HELLO NAK>"
msgstr ""

#. type: Plain text
msgid "B<get E<lt>subcommandE<gt> [E<lt>parametersE<gt>]>"
msgstr ""

#. type: Plain text
msgid ""
"The get command takes one of the LinuxCNC sub-commands (described in the "
"section B<LinuxCNC Subcommands>, below) and zero or more additional "
"subcommand-specific parameters."
msgstr ""

#. type: Plain text
msgid "B<set E<lt>subcommandE<gt> E<lt>parametersE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"The set command takes one of the LinuxCNC sub-commands (described in the "
"section B<LinuxCNC Subcommands>, below) and one or more additional "
"parameters."
msgstr ""

#. type: Plain text
msgid "B<quit>"
msgstr ""

#. type: Plain text
msgid "The quit command disconnects the associated socket connection."
msgstr ""

#. type: Plain text
msgid "B<shutdown>"
msgstr ""

#. type: Plain text
msgid ""
"The shutdown command tells LinuxCNC to shutdown and disconnect the session. "
"This command may only be issued if the Hello has been successfully "
"negotiated and the connection has control of the CNC (see B<enable> "
"subcommand in the B<LinuxCNC Subcommands> section, below)."
msgstr ""

#. type: Plain text
msgid "B<help>"
msgstr ""

#. type: Plain text
msgid ""
"The help command will return help information in text format over the "
"connection. If no parameters are specified, it will itemize the available "
"commands.  If a command is specified, it will provide usage information for "
"the specified command. Help will respond regardless of whether a \"Hello\" "
"has been successfully negotiated."
msgstr ""

#. type: SH
#, no-wrap
msgid "LinuxCNC Subcommands"
msgstr ""

#. type: Plain text
msgid "Subcommands for B<get> and B<set> are:"
msgstr ""

#. type: Plain text
msgid "B<echo {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any on/off parameter is ignored and the current echo state is "
"returned.  With set, sets the echo state as specified.  Echo defaults to on "
"when the connection is first established.  When echo is on, all commands "
"will be echoed upon receipt.  This state is local to each connection."
msgstr ""

#. type: Plain text
msgid "B<verbose {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any on/off parameter is ignored and the current verbose state is "
"returned.  With set, sets the verbose state as specified.  When verbose mode "
"is on, all set commands return positive acknowledgement in the form SET "
"E<lt>COMMANDE<gt> ACK, and text error messages will be issued (FIXME: I "
"don't know what this means).  The verbose state is local to each connection, "
"and starts out OFF on new connections."
msgstr ""

#. type: Plain text
msgid "B<enable {E<lt>passwdE<gt>|off}>"
msgstr ""

#. type: Plain text
msgid ""
"The session's enable state indicates whether the current connection is "
"enabled to perform control functions.  With get, any parameter is ignored, "
"and the current enable state is returned.  With set and a valid password "
"matching linuxcncrsh's --enablepw (EMCTOO if not specified), the current "
"connection is enabled for control functions.  \"OFF\" may not be used as a "
"password and disables control functions for this connection."
msgstr ""

#. type: Plain text
msgid "B<config [TBD]>"
msgstr ""

#. type: Plain text
msgid "Unused, ignore for now."
msgstr ""

#. type: Plain text
msgid "B<comm_mode {ascii|binary}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current communications mode is "
"returned.  With set, will set the communications mode to the specified "
"mode.  The ascii mode is the text request/reply mode, the binary protocol is "
"not currently designed or implemented."
msgstr ""

#. type: Plain text
msgid "B<comm_prot E<lt>versionE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current protocol version used by "
"the server is returned.  With set, sets the server to use the specified "
"protocol version, provided it is lower than or equal to the highest version "
"number supported by the server implementation."
msgstr ""

#. type: Plain text
msgid "B<inifile>"
msgstr ""

#. type: Plain text
msgid ""
"Not currently implemented! With get, returns the string \"emc.ini\".  Should "
"return the full path and file name of the current configuration inifile.  "
"Setting this does nothing."
msgstr ""

#. type: Plain text
msgid "B<plat>"
msgstr ""

#. type: Plain text
msgid "With get, returns the string \"Linux\"."
msgstr ""

#. type: Plain text
msgid "B<ini E<lt>varE<gt> E<lt>sectionE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"Not currently implemented, do not use! Should return the string value of "
"E<lt>varE<gt> in section E<lt>sectionE<gt> of the ini file."
msgstr ""

#. type: Plain text
msgid "B<debug E<lt>valueE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current integer value of "
"EMC_DEBUG is returned.  Note that the value of EMC_DEBUG returned is the "
"from the UI's ini file, which may be different than emc's ini file.  With "
"set, sends a command to the EMC to set the new debug level, and sets the "
"EMC_DEBUG global here to the same value. This will make the two values the "
"same, since they really ought to be the same."
msgstr ""

#. type: Plain text
msgid "B<set_wait {received|done}>"
msgstr ""

#. type: Plain text
msgid ""
"The set_wait setting controls the wait after receiving a command.  It can be "
"\"received\" (after the command was sent and received) or \"done\" (after "
"the command was done).  With get, any parameter is ignored and the current "
"set_wait setting is returned.  With set, set the set_wait setting to the "
"specified value."
msgstr ""

#. type: Plain text
msgid "B<wait {received|done}>"
msgstr ""

#. type: Plain text
msgid ""
"With set, force a wait for the previous command to be received, or done."
msgstr ""

#. type: Plain text
msgid "B<set_timeout E<lt>timeoutE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With set, set the timeout for commands to return to E<lt>timeoutE<gt> "
"seconds. Timeout is a real number. If it's E<lt>= 0.0, it means wait "
"forever.  Default is 0.0, wait forever."
msgstr ""

#. type: Plain text
msgid "B<update {none|auto}>"
msgstr ""

#. type: Plain text
msgid ""
"The update mode controls whether to return fresh or stale values for \"get\" "
"requests.  When the update mode is \"none\" it returns stale values, when "
"it's \"auto\" it returns fresh values.  Defaults to \"auto\" for new "
"connections.  Set this to \"none\" if you like to be confused."
msgstr ""

#. type: Plain text
msgid "B<error>"
msgstr ""

#. type: Plain text
msgid "With get, returns the current error string, or \"ok\" if no error."
msgstr ""

#. type: Plain text
msgid "B<operator_display>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the current operator display string, or \"ok\" if none."
msgstr ""

#. type: Plain text
msgid "B<operator_text>"
msgstr ""

#. type: Plain text
msgid "With get, returns the current operator text string, or \"ok\" if none."
msgstr ""

#. type: Plain text
msgid "B<time>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the time, in seconds, from the start of the epoch. This "
"starting time depends on the platform."
msgstr ""

#. type: Plain text
msgid "B<estop {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current estop setting as "
"\"on\" or \"off\".  With set, sets the estop as specified.  Estop \"on\" "
"means the machine is in the estop state and won't run."
msgstr ""

#. type: Plain text
msgid "B<machine {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current machine power "
"setting as \"on\" or \"off\".  With set, sets the machine on or off as "
"specified."
msgstr ""

#. type: Plain text
msgid "B<mode {manual|auto|mdi}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current machine mode.  With "
"set, sets the machine mode as specified."
msgstr ""

#. type: Plain text
msgid "B<mist {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current mist coolant "
"setting.  With set, sets the mist setting as specified."
msgstr ""

#. type: Plain text
msgid "B<flood {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current flood coolant "
"setting.  With set, sets the flood setting as specified."
msgstr ""

#. type: Plain text
msgid "B<lube {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, ignores any parameters and returns the current lube pump setting.  "
"With set, sets the lube pump setting as specified."
msgstr ""

#. type: Plain text
msgid "B<lube_level>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the lubricant level sensor reading as \"ok\" or \"low\".  "
"With set, mocks you for wishful thinking."
msgstr ""

#. type: Plain text
msgid "B<spindle {forward|reverse|increase|decrease|constant|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current spindle state is returned "
"as \"forward\", \"reverse\", \"increase\", \"decrease\", or \"off\". With "
"set, sets the spindle as specified.  Note that \"increase\" and \"decrease\" "
"will cause a speed change in the corresponding direction until a \"constant"
"\" command is sent."
msgstr ""

#. type: Plain text
msgid "B<brake {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current brake setting is "
"returned.  With set, the brake is set as specified."
msgstr ""

#. type: Plain text
msgid "B<tool>"
msgstr ""

#. type: Plain text
msgid "With get, returns the id of the currently loaded tool."
msgstr ""

#. type: Plain text
msgid "B<tool_offset>"
msgstr ""

#. type: Plain text
msgid "With get, returns the currently applied tool length offset."
msgstr ""

#. type: Plain text
msgid "B<load_tool_table E<lt>fileE<gt>>"
msgstr ""

#. type: Plain text
msgid "With set, loads the tool table specified by E<lt>fileE<gt>."
msgstr ""

#. type: Plain text
msgid "B<home {0|1|2|...} | -1>"
msgstr ""

#. type: Plain text
msgid "With set, homes the indicated joint or if -1, Home All joints"
msgstr ""

#. type: Plain text
msgid "B<jog_stop joint_number|axis_letter>"
msgstr ""

#. type: Plain text
msgid ""
"With set, stop any in-progress jog on the specified joint or axis.  If "
"TELEOP_ENABLE is NO, use joint_number; If TELEOP_ENABLE is YES, use "
"axis_letter."
msgstr ""

#. type: Plain text
msgid "B<jog joint_number|axis_letter E<lt>speedE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With set, jog the specified joint or axis at E<lt>speedE<gt>; sign of speed "
"is direction.  If TELEOP_ENABLE is NO, use joint_number; If TELEOP_ENABLE is "
"YES, use axis_letter."
msgstr ""

#. type: Plain text
msgid "B<jog_incr jog_number|axis_letter E<lt>speedE<gt> E<lt>incrE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With set, jog the indicated joint or axis by increment E<lt>incrE<gt> at the "
"E<lt>speedE<gt>; sign of speed is direction.  If TELEOP_ENABLE is NO, use "
"joint_number; If TELEOP_ENABLE is YES, use axis_letter."
msgstr ""

#. type: Plain text
msgid "B<feed_override E<lt>percentE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current feed override is returns "
"(as a percentage of commanded feed).  With set, sets the feed override as "
"specified."
msgstr ""

#. type: Plain text
msgid "B<spindle_override E<lt>percentE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current spindle override is "
"returned (as a percentage of commanded speed).  With set, sets the spindle "
"override as specified."
msgstr ""

#. type: Plain text
msgid "B<abs_cmd_pos [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the specified axis' commanded position in absolute "
"coordinates.  If no axis is specified, returns all axes' commanded absolute "
"position."
msgstr ""

#. type: Plain text
msgid "B<abs_act_pos [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the specified axis' actual position in absolute "
"coordinates.  If no axis is specified, returns all axes' actual absolute "
"position."
msgstr ""

#. type: Plain text
msgid "B<rel_cmd_pos [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the specified axis' commanded position in relative "
"coordinates, including tool length offset.  If no axis is specified, returns "
"all axes' commanded relative position."
msgstr ""

#. type: Plain text
msgid "B<rel_act_pos [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the specified axis' actual position in relative "
"coordinates, including tool length offset.  If no axis is specified, returns "
"all axes' actual relative position."
msgstr ""

#. type: Plain text
msgid "B<joint_pos [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the specified joint's actual position in absolute "
"coordinates, excluding tool length offset.  If no joint is specified, "
"returns all joints' actual absolute position."
msgstr ""

#. type: Plain text
msgid "B<pos_offset [{X|Y|Z|R|P|W}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the position offset associated with the world coordinate "
"provided."
msgstr ""

#. type: Plain text
msgid "B<joint_limit [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns limit status of the specified joint as \"ok\", \"minsoft"
"\", \"minhard\", \"maxsoft\", or \"maxhard\".  If no joint number is "
"specified, returns the limit status of all joints."
msgstr ""

#. type: Plain text
msgid "B<joint_fault [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the fault status of the specified joint as \"ok\" or "
"\"fault\".  If no joint number is specified, returns the fault status of all "
"joints."
msgstr ""

#. type: Plain text
msgid "B<joint_homed [{0|1|...}]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the homed status of the specified joint as \"homed\" or "
"\"not\".  If no joint number is specified, returns the homed status of all "
"joints."
msgstr ""

#. type: Plain text
msgid "B<mdi E<lt>stringE<gt>>"
msgstr ""

#. type: Plain text
msgid "With set, sends E<lt>stringE<gt> as an MDI command."
msgstr ""

#. type: Plain text
msgid "B<task_plan_init>"
msgstr ""

#. type: Plain text
msgid "With set, initializes the program interpreter."
msgstr ""

#. type: Plain text
msgid "B<open E<lt>filenameE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"With set, opens the named file.  The E<lt>filenameE<gt> is opened by "
"linuxcnc, so it should either be an absolute path or a relative path "
"starting in the linuxcnc working directory (the directory of the active .ini "
"file)."
msgstr ""

#. type: Plain text
msgid "B<run [E<lt>StartLineE<gt>]>"
msgstr ""

#. type: Plain text
msgid ""
"With set, runs the opened program.  If no StartLine is specified, runs from "
"the beginning.  If a StartLine is specified, start line, runs from that "
"line. A start line of -1 runs in verify mode."
msgstr ""

#. type: Plain text
msgid "B<pause>"
msgstr ""

#. type: Plain text
msgid "With set, pause program execution."
msgstr ""

#. type: Plain text
msgid "B<resume>"
msgstr ""

#. type: Plain text
msgid "With set, resume program execution."
msgstr ""

#. type: Plain text
msgid "B<abort>"
msgstr ""

#. type: Plain text
msgid "With set, abort program or MDI execution."
msgstr ""

#. type: Plain text
msgid "B<step>"
msgstr ""

#. type: Plain text
msgid "With set, step the program one line."
msgstr ""

#. type: Plain text
msgid "B<program>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the name of the currently opened program, or \"none\"."
msgstr ""

#. type: Plain text
msgid "B<program_line>"
msgstr ""

#. type: Plain text
msgid "With get, returns the currently executing line of the program."
msgstr ""

#. type: Plain text
msgid "B<program_status>"
msgstr ""

#. type: Plain text
msgid "With get, returns \"idle\", \"running\", or \"paused\"."
msgstr ""

#. type: Plain text
msgid "B<program_codes>"
msgstr ""

#. type: Plain text
msgid "With get, returns the string for the currently active program codes."
msgstr ""

#. type: Plain text
msgid "B<joint_type [E<lt>jointE<gt>]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"linear\", \"angular\", or \"custom\" for the type of the "
"specified joint (or for all joints if none is specified)."
msgstr ""

#. type: Plain text
msgid "B<joint_units [E<lt>jointE<gt>]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"inch\", \"mm\", \"cm\", or \"deg\", \"rad\", \"grad\", "
"or \"custom\", for the corresponding native units of the specified joint (or "
"for all joints if none is specified).  The type of the axis (linear or "
"angular) is used to resolve which type of units are returned. The units are "
"obtained heuristically, based on the EMC_AXIS_STAT::units numerical value of "
"user units per mm or deg.  For linear joints, something close to 0.03937 is "
"deemed \"inch\", 1.000 is \"mm\", 0.1 is \"cm\", otherwise it's \"custom\".  "
"For angular joints, something close to 1.000 is deemed \"deg\", PI/180 is "
"\"rad\", 100/90 is \"grad\", otherwise it's \"custom\"."
msgstr ""

#. type: Plain text
msgid "B<program_units>"
msgstr ""

#. type: Plain text
msgid "Synonym for program_linear_units."
msgstr ""

#. type: Plain text
msgid "B<program_linear_units>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"inch\", \"mm\", \"cm\", or \"none\", for the "
"corresponding linear units that are active in the program interpreter."
msgstr ""

#. type: Plain text
msgid "B<program_angular_units>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"deg\", \"rad\", \"grad\", or \"none\" for the "
"corresponding angular units that are active in the program interpreter."
msgstr ""

#. type: Plain text
msgid "B<user_linear_units>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"inch\", \"mm\", \"cm\", or \"custom\", for the "
"corresponding native user linear units of the LinuxCNC trajectory level. "
"This is obtained heuristically, based on the EMC_TRAJ_STAT::linearUnits "
"numerical value of user units per mm.  Something close to 0.03937 is deemed "
"\"inch\", 1.000 is \"mm\", 0.1 is \"cm\", otherwise it's \"custom\"."
msgstr ""

#. type: Plain text
msgid "B<user_angular_units>"
msgstr ""

#. type: Plain text
msgid ""
"Returns \"deg\", \"rad\", \"grad\", or \"custom\" for the corresponding "
"native user angular units of the LinuxCNC trajectory level. Like with linear "
"units, this is obtained heuristically."
msgstr ""

#. type: Plain text
msgid "B<display_linear_units>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"inch\", \"mm\", \"cm\", or \"custom\", for the linear "
"units that are active in the display.  This is effectively the value of "
"linearUnitConversion."
msgstr ""

#. type: Plain text
msgid "B<display_angular_units>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns \"deg\", \"rad\", \"grad\", or \"custom\", for the angular "
"units that are active in the display.  This is effectively the value of "
"angularUnitConversion."
msgstr ""

#. type: Plain text
msgid "B<linear_unit_conversion {inch|mm|cm|auto}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the active unit conversion is "
"returned.  With set, sets the unit to be displayed.  If it's \"auto\", the "
"units to be displayed match the program units."
msgstr ""

#. type: Plain text
msgid "B<angular_unit_conversion {deg|rad|grad|auto}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the active unit conversion is "
"returned.  With set, sets the units to be displayed. If it's \"auto\", the "
"units to be displayed match the program units."
msgstr ""

#. type: Plain text
msgid "B<probe_clear>"
msgstr ""

#. type: Plain text
msgid "With set, clear the probe tripped flag."
msgstr ""

#. type: Plain text
msgid "B<probe_tripped>"
msgstr ""

#. type: Plain text
msgid ""
"With get, return the probe state - has the probe tripped since the last "
"clear?"
msgstr ""

#. type: Plain text
msgid "B<probe_value>"
msgstr ""

#. type: Plain text
msgid "With get, return the current value of the probe signal."
msgstr ""

#. type: Plain text
msgid "B<probe>"
msgstr ""

#. type: Plain text
msgid ""
"With set, move toward a certain location. If the probe is tripped on the way "
"stop motion, record the position and raise the probe tripped flag."
msgstr ""

#. type: Plain text
msgid "B<teleop_enable [on|off]>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current teleop mode is returned.  "
"With set, sets the teleop mode as specified."
msgstr ""

#. type: Plain text
msgid "B<kinematics_type>"
msgstr ""

#. type: Plain text
msgid ""
"With get, returns the type of kinematics functions used (identity=1, "
"serial=2, parallel=3, custom=4)."
msgstr ""

#. type: Plain text
msgid "B<override_limits {on|off}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the override_limits setting is "
"returned.  With set, the override_limits parameter is set as specified.  If "
"override_limits is on, disables end of travel hardware limits to allow "
"jogging off of a limit. If parameters is off, then hardware limits are "
"enabled."
msgstr ""

#. type: Plain text
msgid "B<optional_stop {0|1}>"
msgstr ""

#. type: Plain text
msgid ""
"With get, any parameter is ignored and the current \"optional stop on M1\" "
"setting is returned.  With set, the setting is set as specified."
msgstr ""

#. type: SH
#, no-wrap
msgid "Example Session"
msgstr ""

#. type: Plain text
msgid ""
"This section shows an example session to the local machine (B<localhost>).  "
"Bold items are typed by you, non-bold is machine output.  Default values are "
"shown for --port PORT_NUMBER (B<5007>), --conectpw PASSWORD (B<EMC>), and --"
"enablepw PASSWORD (B<EMCTOO>)."
msgstr ""

#. type: Plain text
msgid ""
"The user connects to linuxcncrsh, handshakes with the server (hello), "
"enables machine commanding from this session (set enable), brings the "
"machine out of estop (set estop off) and turns it on (set machine on), homes "
"all the axes, switches the machine to mdi mode, sends an MDI g-code command, "
"then disconnects and shuts down LinuxCNC."
msgstr ""

#. type: Plain text
msgid "E<gt> B<telnet localhost 5007>"
msgstr ""

#. type: Plain text
msgid "Trying 127.0.0.1..."
msgstr ""

#. type: Plain text
msgid "Connected to 127.0.0.1"
msgstr ""

#. type: Plain text
msgid "Escape character is '^]'."
msgstr ""

#. type: Plain text
msgid "B<hello EMC user-typing-at-telnet 1.0>"
msgstr ""

#. type: Plain text
msgid "HELLO ACK EMCNETSVR 1.1"
msgstr ""

#. type: Plain text
msgid "B<set enable EMCTOO>"
msgstr ""

#. type: Plain text
msgid "set enable EMCTOO"
msgstr ""

#. type: Plain text
msgid "B<set mode manual>"
msgstr ""

#. type: Plain text
msgid "set mode manual"
msgstr ""

#. type: Plain text
msgid "B<set estop off>"
msgstr ""

#. type: Plain text
msgid "set estop off"
msgstr ""

#. type: Plain text
msgid "B<set machine on>"
msgstr ""

#. type: Plain text
msgid "set machine on"
msgstr ""

#. type: Plain text
msgid "B<set home 0>"
msgstr ""

#. type: Plain text
msgid "set home 0"
msgstr ""

#. type: Plain text
msgid "B<set home 1>"
msgstr ""

#. type: Plain text
msgid "set home 1"
msgstr ""

#. type: Plain text
msgid "B<set home 2>"
msgstr ""

#. type: Plain text
msgid "set home 2"
msgstr ""

#. type: Plain text
msgid "B<set mode mdi>"
msgstr ""

#. type: Plain text
msgid "set mode mdi"
msgstr ""

#. type: Plain text
msgid "B<set mdi g0x1>"
msgstr ""

#. type: Plain text
msgid "set mdi g0x1"
msgstr ""

#. type: Plain text
msgid "help"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Available commands:\n"
"  Hello E<lt>passwordE<gt> E<lt>client nameE<gt> E<lt>protocol versionE<gt>\n"
"  Get E<lt>emc commandE<gt>\n"
"  Set E<lt>emc commandE<gt>\n"
"  Shutdown\n"
"  Help E<lt>commandE<gt>\n"
msgstr ""

#. type: Plain text
msgid "B<help get>"
msgstr ""

#. type: Plain text
msgid "help get"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Usage:\n"
"Get E<lt>emc commandE<gt>\n"
"  Get commands require that a hello has been successfully negotiated.\n"
"  Emc command may be one of:\n"
"    Abs_act_pos\n"
"    Abs_cmd_pos\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " B<... >\n"
msgstr ""

#. type: Plain text
msgid "shutdown"
msgstr ""

#. type: Plain text
msgid "Connection closed by foreign host."
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNCSVR"
msgstr ""

#. type: Plain text
msgid "linuxcncsvr - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcncsvr>"
msgstr ""

#. type: Plain text
msgid "B<linuxcncsvr> Allows network access to LinuxCNC internals via NML"
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNCTOP"
msgstr ""

#. type: Plain text
msgid "linuxcnctop - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcnctop> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<linuxcnctop> displays much of the LinuxCNC state in a live format similar "
"to the Linux \"top\" command."
msgstr ""

#. type: Plain text
msgid ""
"It is more fully documented in the Axis gui documentation but can be run "
"standalone or with other GUIs.  http://linuxcnc.org/docs/html/gui/axis.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "LINUXCNC_VAR"
msgstr ""

#. type: Plain text
msgid "linuxcnc_var - short description"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc_var>"
msgstr ""

#. type: Plain text
msgid "B<linuxcnc_var> Retrieve LinuxCNC variables"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Usage:\n"
"      linuxcnc_var [ varname | all ]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Varnames supported:\n"
"         LINUXCNCVERSION\n"
"         LINUXCNC_AUX_GLADEVCP\n"
"         LINUXCNC_AUX_EXAMPLES\n"
"         REALTIME\n"
"         RTS\n"
"         HALLIB_DIR\n"
msgstr ""

#. type: Plain text
msgid "Option 'all' returns varname=value for all supported varnames"
msgstr ""

#. type: TH
#, no-wrap
msgid "maho600gui"
msgstr ""

#. type: Plain text
msgid ""
"B<maho600gui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating "
"a Maho 600 CNC Milling Machine."
msgstr ""

#. type: TH
#, no-wrap
msgid "max5gui"
msgstr ""

#. type: Plain text
msgid ""
"B<max5gui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating a 5 "
"axis CNC Milling Machine."
msgstr ""

#. type: TH
#, no-wrap
msgid "mb2hal"
msgstr ""

#. type: TH
#, no-wrap
msgid "January 1, 2016"
msgstr ""

#. type: TH
#, no-wrap
msgid "Modbus to HAL"
msgstr ""

#. type: Plain text
msgid "B<mb2hal> - HAL userspace component for Modbus"
msgstr ""

#. type: Plain text
msgid "B<mb2hal> [OPTIONS]"
msgstr ""

#. type: Plain text
msgid ""
"MB2HAL is a generic userspace HAL component to communicate with one or more "
"Modbus devices."
msgstr ""

#. type: Plain text
msgid ""
"See E<.UR http://linuxcnc.org/docs/html/drivers/mb2hal.html > E<.UE> for "
"more information."
msgstr ""

#. type: Plain text
msgid "Victor Rocco"
msgstr ""

#. type: Plain text
msgid ""
"mdi - Send G-code commands from the terminal to the running LinuxCNC instance"
msgstr ""

#. type: Plain text
msgid "B<mdi>"
msgstr ""

#. type: Plain text
msgid ""
"B<mdi> sends G-code commands to LinuxCNC.  The command starts an envirmonemt "
"in which G-code commands are sent to the interpreter and machine feedback is "
"displayed."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" send a single command and exit\n"
" mdi m2 s1400\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" interactive session\n"
" $mdi\n"
" MDIE<gt> m3 s1000\n"
" MDIE<gt> G0 X100\n"
" MDIE<gt> ^Z\n"
" $stopped\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "milltask"
msgstr ""

#. type: TH
#, no-wrap
msgid "September 30, 2014"
msgstr ""

#. type: Plain text
msgid "B<milltask> - Userspace task controller for LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"B<milltask> is an internal process of LinuxCNC.  It is generally not invoked "
"directly but by an inifile setting: B<[TASK]TASK=milltask>.  The B<milltask> "
"process creates the B<ini.*> hal pins listed below and owned by the "
"B<inihal> user component.  These pins may be modified while LinuxCnC is "
"running to alter values that are typically specified in an inifile."
msgstr ""

#. type: Plain text
msgid ""
"The B<inihal> pins are sampled in every task cycle, however, commands "
"affected by their values typically use the value present at the time when "
"the command is processed.  Such commands include all codes handled by the "
"interpreter (B<Gcode> programs and B<MDI> commands) and NML B<jogging> "
"commands issued by a GUI (including B<halui>).  B<Wheel jogging> is "
"implemented in the realtime motion module so B<inihal> pin changes (e.g., "
"ini.*.max_velocity, ini.*.max_acceleration) may be honored as soon as "
"altered values are propagated to the motion module."
msgstr ""

#. type: SS
#, no-wrap
msgid "Per-joint pins (N == joint number)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.backlash>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]BACKLASH>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.ferror>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]FERROR>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.min_ferror>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]MIN_FERROR>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.min_limit>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]MIN_LIMIT>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.max_limit>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]MAX_LIMIT>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.max_velocity>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]MAX_VELOCITY>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.max_acceleration>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]MAX_ACCELERATION>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.home>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]HOME>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<N>B<.home_offset>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]HOME_OFFSET>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[JOINT_>I<N>B<]HOME_SEQUENCE>"
msgstr ""

#. type: SS
#, no-wrap
msgid "Per-axis pins (L == axis letter)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<L>B<.min_limit>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[AXIS_>I<L>B<]MIN_LIMIT>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<L>B<.max_limit>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[AXIS_>I<L>B<]MAX_LIMIT>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<L>B<.max_velocity>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[AXIS_>I<L>B<]MAX_VELOCITY>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.>I<L>B<.max_acceleration>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[AXIS_>I<L>B<]MAX_ACCELERATION>"
msgstr ""

#. type: SS
#, no-wrap
msgid "Global pins"
msgstr "Pines Globales"

#. type: TP
#, no-wrap
msgid "B<ini.traj_default_acceleration>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]DEFAULT_ACCELERATION>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_default_velocity>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]DEFAULT_VELOCITY>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_max_acceleration>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]MAX_ACCELERATION>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_max_velocity>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]MAX_VELOCITY>"
msgstr ""

#. type: SS
#, no-wrap
msgid "Global pins (arc_blend trajectory planner)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_arc_blend_enable>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]ARC_BLEND_ENABLE>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_arc_blend_fallback_enable>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]ARC_BLEND_FALLBACK_ENABLE>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_arc_blend_gap_cycles>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]ARC_OPTIMIZATION_DEPTH>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_arc_blend_optimization_depth>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]ARC_BLEND_GAP_CYCLES>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ini.traj_arc_blend_ramp_freq>"
msgstr ""

#. type: Plain text
msgid "Allows adjustment of B<[TRAJ]ARC_BLEND_RAMP_FREQ>"
msgstr ""

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
msgid ""
"The B<inihal> pins cannot be linked or set in a halfile that is specified by "
"an inifile B<[HAL]HALFILE> item because they are not created until "
"B<milltask> is started.  The B<inihal> pin values can be altered by "
"independent halcmd programs specified by B<[APPLICATION]APP> items or by "
"GUIs that support a B<[HAL]POSTGUI_HALFILE>."
msgstr ""

#. type: Plain text
msgid ""
"The inifile is not automatically updated with values altered by B<inihal> "
"pin settings but can be updated using the calibration program (emccalib.tcl) "
"when using a B<[HAL]POSTGUI_HALFILE>."
msgstr ""

#. type: TH
#, no-wrap
msgid "mitsub_vfd"
msgstr ""

#. type: TH
#, no-wrap
msgid "2018-10-25"
msgstr ""

#. type: TH
#, no-wrap
msgid "HAL Component"
msgstr ""

#. type: Plain text
msgid ""
"mitsub_vfd - HAL userspace component for Mitsubishi A500 F500 E500 A500 D700 "
"E700 F700-series VFDs (others may work)"
msgstr ""

#. type: Plain text
msgid ""
"B<loadrt mitsub_vfd [--baud 4800] [--port /dev/ttyUSB0] name1=number1[,"
"name2=numer2...]>"
msgstr ""

#. type: Plain text
msgid ""
"B<name1> is user selectable (usually a description of the controlled device)."
msgstr ""

#. type: Plain text
msgid ""
"B<number1> is the slave number that was set on the VFD.  must be two digits "
"(Parameter 117)"
msgstr ""

#. type: Plain text
msgid "B<name=number> can be repeated for multiple VFD's connected together"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<--baud> is optional as it defaults to 9600\n"
"  all networked vfds must be set to the same baudrate\n"
msgstr ""

#. type: Plain text
msgid "B<--port> is optional as it defaults to ttyS0"
msgstr ""

#. type: Plain text
msgid ""
"The mitsub_vfd component interfaces a Mitsubishi VFD to LinuxCNC. The VFD is "
"connected via RS-485 serial to the computer's USB or serial port using a "
"RS-232/RS-485 converter"
msgstr ""

#. type: SH
#, no-wrap
msgid "HARDWARE SETUP"
msgstr ""

#. type: Plain text
msgid ""
"reference manual 'communication option reference manual' and A500 technical "
"manual for 500 series.  Fr-A700 F700 E700 D700 technical manual for the 700 "
"series"
msgstr ""

#. type: Plain text
msgid "The inverter must be set manually for communication"
msgstr ""

#. type: Plain text
msgid "( you may have to set PR 77 to 1 to unlock PR modification )"
msgstr ""

#. type: Plain text
msgid "You must power cycle the inverter for some of these. (eg 79)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<VFD INTERNAL PARAMETERS: >"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 79> - 1 or 0"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 117> station number - 1"
msgstr ""

#. type: Plain text
msgid "(can be optionally set 0 - 31) if component is also set"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 118> communication speed 96"
msgstr ""

#. type: Plain text
msgid "(can be optionally set 48,96,192 if component is also set)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 119> stop bit/data length - 0"
msgstr ""

#. type: Plain text
msgid "(8 bits, two stop - don't change)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 120> parity - 0"
msgstr ""

#. type: Plain text
msgid "(no parity - don't change)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 121> COM tries - 10"
msgstr ""

#. type: Plain text
msgid "(if maximuim 10 COM errors then inverter faults- can change)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 122> COM check time interval 9999"
msgstr ""

#. type: Plain text
msgid ""
"(never check - if communication is lost inverter will not know (can change)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 123> wait time - 9999"
msgstr ""

#. type: Plain text
msgid "no wait time is added to the serial data frame (don't change)"
msgstr ""

#. type: Plain text
msgid "B<PARAMETER 124> CR selection - 0"
msgstr ""

#. type: Plain text
msgid "don't change"
msgstr ""

#. type: Plain text
msgid ""
"This driver assumes certain other VFD settings: -That the motor frequency "
"status is set to show herts."
msgstr ""

#. type: Plain text
msgid "-That the status bit 3 is up to speed"
msgstr ""

#. type: Plain text
msgid "-That the status bit 7 is alarm"
msgstr ""

#. type: Plain text
msgid "some models (eg E500) cannot monitor status."
msgstr ""

#. type: Plain text
msgid "You must set set the monitor pin to false."
msgstr ""

#. type: Plain text
msgid ""
"In this case pins such as up-to-speed, amps, alarm and status bits are not "
"useful."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].fwd> (bit, in)::\n"
"      forward/reverse pin\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].run> (bit, in)::\n"
"      run/stop pin\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].debug> (bit, in)::\n"
"      set debug mode pin\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "      This will print many messages to the terminal\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].monitor> (bit, in)::\n"
"      set monitor mode pin\n"
"      If false request-status command will not be sent to vfd.\n"
"      Status, amps, power, motor-feedback, and alarm would then not \n"
"        be useful.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].estop> (bit, in)::\n"
"      set estop mode pin\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"      This will stop the VFD. \n"
"      Restarting requires the run pin to cycle.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].fwd> (bit, out)::\n"
"      up-to-speed status pin\n"
"      Motor is at requested speed within VFD's settings tolerance.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].alarm> (bit, out)::\n"
"      alarm status pin\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].motor-cmd> (float, in)::\n"
"      The requested motor speed, is Hertz\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].motor-fb> (float, out)::\n"
"      The motor feedback speed (from vfd) in hertz\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].motor-amps> (float, out)::\n"
"      The motor current, in amps\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].motor-power> (float, out)::\n"
"      The motor power\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].scale-cmd> (float, in)::\n"
"      Motor command's scale setting defaults to 1\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-0> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-1> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-2> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-3> (bit, out)::\n"
"      raw status bit\n"
"      set the VFD so this is motor-at-speed status\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-4> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-5> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-6> (bit, out)::\n"
"      raw status bit\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<[VFD NAME].stat-bit-7> (bit, out)::\n"
"      raw status bit\n"
"      Set the VFD so this in the alarm bit\n"
msgstr ""

#. type: SH
#, no-wrap
msgid "SAMPLE HAL"
msgstr ""

#. type: Plain text
msgid ""
"loadusr -Wn coolant mitsub_vfd --port /dev/ttyUSB0 spindle=02 coolant=01"
msgstr ""

#. type: Plain text
msgid "# **************** Spindle VFD setup slave 2 ****************"
msgstr ""

#. type: Plain text
msgid "net spindle-vel-cmd spindle.motor-cmd"
msgstr ""

#. type: Plain text
msgid "net spindle-cw spindle.fwd"
msgstr ""

#. type: Plain text
msgid "net spindle-on spindle.run"
msgstr ""

#. type: Plain text
msgid "net spindle-at-speed spindle.up-to-speed"
msgstr ""

#. type: Plain text
msgid "net estop-out spindle.estop"
msgstr ""

#. type: Plain text
msgid "# cmd scaled to RPM (belt/gearbox driven)"
msgstr ""

#. type: Plain text
msgid "setp spindle.scale-cmd .135"
msgstr ""

#. type: Plain text
msgid "# feedback is in rpm (recipicale of command)"
msgstr ""

#. type: Plain text
msgid "setp spindle.scale-fb 7.411"
msgstr ""

#. type: Plain text
msgid "# turn on monitoring so feedback works"
msgstr ""

#. type: Plain text
msgid "setp spindle.monitor 1"
msgstr ""

#. type: Plain text
msgid "net spindle-speed-indicator spindle.motor-fb"
msgstr ""

#. type: Plain text
msgid "# *************** Coolant vfd setup slave 1 *****************"
msgstr ""

#. type: Plain text
msgid "net coolant-flood coolant.run"
msgstr ""

#. type: Plain text
msgid "net coolant-is-on coolant.up-to-speed"
msgstr ""

#. type: Plain text
msgid "# cmd and feedback scaled to hertz"
msgstr ""

#. type: Plain text
msgid "setp coolant.scale-cmd 1"
msgstr ""

#. type: Plain text
msgid "setp coolant.scale-fb 1"
msgstr ""

#. type: Plain text
msgid "# command full speed"
msgstr ""

#. type: Plain text
msgid "setp coolant.motor-cmd 60"
msgstr ""

#. type: Plain text
msgid "# allows us to see status"
msgstr ""

#. type: Plain text
msgid "setp coolant.monitor 1"
msgstr ""

#. type: Plain text
msgid "net estop-out coolant.estop"
msgstr ""

#. type: SH
#, no-wrap
msgid "ISSUES"
msgstr ""

#. type: Plain text
msgid ""
"some models (eg E500) cannot monitor status, so set the monitor pin to false "
"In this case pins such as up-to-speed, amps, alarm and status bits are not "
"useful."
msgstr ""

#. type: TH
#, no-wrap
msgid "MONITOR-XHC-HB04"
msgstr ""

#. type: Plain text
msgid ""
"monitor-xhc-hb04 - monitors the XHC-HB04 pendant and warns of disconnection"
msgstr ""

#. type: Plain text
msgid "B<monitor-xhc-hb04>"
msgstr ""

#. type: Plain text
msgid ""
"B<monitor-xhc-hb04> is included to monitor disconnects and reconnects of the "
"pendant.  This script runs in the background and will pop up a message when "
"the pendant is disconnected or reconnected."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Usage is optional; if used it is specified with ini file entry:\n"
"  [APPLICATIONS]APP = monitor-xhc-hb04\n"
msgstr ""

#. type: Plain text
msgid "B<xhc-hb04(1)> B<LinuxCNC(1)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "MOTION-LOGGER"
msgstr ""

#. type: Plain text
msgid "motion-logger - short description"
msgstr ""

#. type: Plain text
msgid "B<motion-logger>"
msgstr ""

#. type: Plain text
msgid ""
"B<motion-logger> is a test program to log motion commands sent from "
"LinuxCNC's Task module to the Motion module"
msgstr ""

#. type: Plain text
msgid "It is largely used by the regression tests and is poorly documented."
msgstr ""

#. type: TH
#, no-wrap
msgid "moveoff_gui"
msgstr ""

#. type: TH
#, no-wrap
msgid "2014-12-18"
msgstr ""

#. type: Plain text
msgid "moveoff_gui - a gui for the moveoff component"
msgstr ""

#. type: Plain text
msgid "B<moveoff_gui [--help | -- -h | -?]>"
msgstr ""

#. type: Plain text
msgid "B<moveoff_gui [options>]"
msgstr ""

#. type: Plain text
msgid ""
"Moveoff_gui is a sample graphical user interface (GUI) for controlling a Hal "
"moveoff component to implement Hal-only offsets.  See the manpage (man "
"moveoff) for B<IMPORTANT limitations and warnings>."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Supported configurations must use a known kinematics module with\n"
"B<KINEMATICS_TYPE = KINEMATICS_IDENTITY>.  The modules currently\n"
"supported are:\n"
"   B<trivkins>\n"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<--help | -? | -- -h>"
msgstr ""

#. type: Plain text
msgid "Show options and exit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-mode> B<onpause> | always"
msgstr ""

#. type: Plain text
msgid "onpause: popup gui to control offsets when program paused"
msgstr ""

#. type: Plain text
msgid "always: show gui to control offsets always"
msgstr ""

#. type: Plain text
msgid "Default: B<onpause>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-axes> axisnames"
msgstr ""

#. type: Plain text
msgid "Letters from set of {x y z a b c u v w}"
msgstr ""

#. type: Plain text
msgid "Examples: -axes x, -axes xyz, -axes xz (no spaces)"
msgstr ""

#. type: Plain text
msgid "Default: B<xyz>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-inc> incrementvalue"
msgstr ""

#. type: Plain text
msgid "Specify one increment value per -inc (up to 4)"
msgstr ""

#. type: Plain text
msgid "Defaults: B< 0.001 0.01 0.10 1.0>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-size> integer"
msgstr ""

#. type: Plain text
msgid "Overall gui size is based on font size, typically 8 - 20"
msgstr ""

#. type: Plain text
msgid "Default: B<14>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-loc> center | +x+y"
msgstr ""

#. type: Plain text
msgid "Initial location on screen"
msgstr ""

#. type: Plain text
msgid "Examples: -loc center, -loc +20+100"
msgstr ""

#. type: Plain text
msgid "Default: B<center>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-autoresume>"
msgstr ""

#. type: Plain text
msgid "Resume program when move-enable deasserted"
msgstr ""

#. type: Plain text
msgid "Default: notused"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-delay> delay secs"
msgstr ""

#. type: Plain text
msgid ""
"Delay for autoresume (allow time to restore spindle speed etc)  Default: B<5>"
msgstr ""

#. type: SH
#, no-wrap
msgid "OTHER OPTIONS"
msgstr ""

#. type: Plain text
msgid "These options are available for special cases:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-noentry>"
msgstr ""

#. type: Plain text
msgid "Disables creation of entry widgets"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-no_resume_inhibit>"
msgstr ""

#. type: Plain text
msgid "Disable use of resume-inhibit to controlling gui"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-no_pause_requirement>"
msgstr ""

#. type: Plain text
msgid "Disable check for halui.program.is-paused"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-no_cancel_autoresume>"
msgstr ""

#. type: Plain text
msgid "Useful for retracting offsets with simple external controls"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-no_display>"
msgstr ""

#. type: Plain text
msgid "Use when both external controls and external displays are in use"
msgstr ""

#. type: Plain text
msgid "LinuxCNC must be running."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Halui must be loaded, typical ini file setting:\n"
"    B<[HAL]HALUI = halui>.\n"
msgstr ""

#. type: Plain text
msgid "The moveoff component must be loaded with the name 'mv' as:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    B<loadrt moveoff names=mv personality=number_of_axes>\n"
msgstr ""

#. type: Plain text
msgid ""
"If the pin mv.motion-enable is B<not> connected when moveoff_gui is started, "
"B<controls will be provided> to enable offsets and set offset values.  If "
"the pin B<is> connected, B<only a display> of offsets is shown and control "
"must be made by B<external> Hal connections."
msgstr ""

#. type: Plain text
msgid ""
"If a pin named *.resume-inhibit exists and is not connected, it will be set "
"while offsets are applied.  This pin may be provided by the controlling "
"linuxcnc gui in use.  Use of the pin may be disabled with the option -"
"no_resume_inhibit."
msgstr ""

#. type: Plain text
msgid ""
"The -autoresume option uses halui.program.resume to automatically resume "
"program execution when the move-enable pin is deactivated and all offsets "
"are removed.  The resume pin is not activated until an additional interval (-"
"delay delay_secs) elapses.  This delay interval may be useful for restarting "
"related equipment (a spindle motor for example)  While timing the delay, a "
"popup is offered to cancel the automatic program resumption."
msgstr ""

#. type: Plain text
msgid ""
"The ini file in the configuration directory must provide HALFILEs to loadrt "
"the moveoff component, connect its pins, and addf its read and write "
"functions in the proper order.  These steps can be done at runtime using an "
"existing configuration ini file and specifying a system library HALFILE "
"B<hookup_moveoff.tcl> as illustrated below:"
msgstr ""

#. type: Plain text
msgid "B<[HAL]>"
msgstr ""

#. type: Plain text
msgid "HALUI = halui"
msgstr ""

#. type: Plain text
msgid "HALFILE = user_halfile_1"
msgstr ""

#. type: Plain text
msgid "etc ..."
msgstr ""

#. type: Plain text
msgid "HALFILE = user_halfile_n"
msgstr ""

#. type: Plain text
msgid "B<HALFILE = LIB:hookup_moveoff.tcl>"
msgstr ""

#. type: Plain text
msgid ""
"The B<hookup_moveoff.tcl> halfile will use ini file settings for the moveoff "
"component control pins:"
msgstr ""

#. type: Plain text
msgid "B<[OFFSET]>"
msgstr ""

#. type: Plain text
msgid "EPSILON ="
msgstr ""

#. type: Plain text
msgid "WAYPOINT_SAMPLE_SECS ="
msgstr ""

#. type: Plain text
msgid "WAYPOINT_THRESHOLD ="
msgstr ""

#. type: Plain text
msgid "BACKTRACK_ENABLE ="
msgstr ""

#. type: Plain text
msgid ""
"The B<hookup_moveoff.tcl> will use ini file settings for the moveoff per-"
"axis limits:"
msgstr ""

#. type: Plain text
msgid "B<[AXIS_m]>"
msgstr ""

#. type: Plain text
msgid "OFFSET_MAX_VELOCITY ="
msgstr ""

#. type: Plain text
msgid "OFFSET_MAX_ACCELERATION ="
msgstr ""

#. type: Plain text
msgid "OFFSET_MAX_LIMIT ="
msgstr ""

#. type: Plain text
msgid "OFFSET_MIN_LIMIT ="
msgstr ""

#. type: Plain text
msgid ""
"The moveoff_gui program should be specified in the APPLICATIONS stanza of "
"the ini file, for example:"
msgstr ""

#. type: Plain text
msgid "B<[APPLICATIONS]>"
msgstr ""

#. type: Plain text
msgid "DELAY = delay_in_secs_to_allow_hal_connections"
msgstr ""

#. type: Plain text
msgid "B<APP = moveoff_gui -option1 -option2 ...>"
msgstr ""

#. type: Plain text
msgid ""
"Simulation configurations that demonstrate the moveoff_gui and the moveoff "
"component are located in:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   configs/sim/axis/moveoff     (axis-ui)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   configs/sim/touchy/ngcgui    (touchy-ui)\n"
msgstr ""

#. type: Plain text
msgid "man page for the moveoff component:B<moveoff>(9)"
msgstr ""

#. type: Plain text
msgid ""
"ngcgui - a framework for conversational G-code generation on the controller"
msgstr ""

#. type: Plain text
msgid "B<ngcgui>"
msgstr ""

#. type: Plain text
msgid "B<ngcgui> details: http://linuxcnc.org/docs/html/gui/ngcgui.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "PANELUI"
msgstr ""

#. type: Plain text
msgid "panelui - short description"
msgstr ""

#. type: Plain text
msgid "B<panelui>"
msgstr ""

#. type: Plain text
msgid ""
"B<panelui> is a userspace component to interface buttons to linuxcnc or "
"HAL.  It decodes MESA 7I73 style key-scan codes and calls the appropriate "
"routine.  It gets input from a realtime component - sampler.  Sampler gets "
"it's input from either the MESA 7i73 or sim_matrix_kb component.  Panelui is "
"configurable using an INI style text file to define button types, HAL pin "
"types, and/or commands."
msgstr ""

#. type: Plain text
msgid ""
"Full documentation can be found in the HTML or PDF docs: http://linuxcnc.org/"
"docs/html/gui/panelui.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "pmx485"
msgstr ""

#. type: TH
#, no-wrap
msgid "Feb 1 2020"
msgstr ""

#. type: TH
#, no-wrap
msgid "Powermax Modbus Communications"
msgstr ""

#. type: Plain text
msgid "B<pmx485> - Modbus communications with a Powermax Plasma Cutter."
msgstr ""

#. type: Plain text
msgid "B<loadusr -Wn pmx485 pmx485 /dev/ttyUSB0>"
msgstr ""

#. type: Plain text
msgid ""
"pmx485 is a userspace HAL component to communicate with a Hypertherm "
"Powermax plasma cutter using the Modbus ASCII protocol over RS485."
msgstr ""

#. type: Plain text
msgid ""
"See the Drivers section of the LinuxCNC Documentation for more information "
"on pmx485."
msgstr ""

#. type: Plain text
msgid "Phillip Carter"
msgstr ""

#. type: TH
#, no-wrap
msgid "pmx485-test"
msgstr ""

#. type: TH
#, no-wrap
msgid "Oct 28 2021"
msgstr ""

#. type: TH
#, no-wrap
msgid "Powermax Modbus Communications Testing"
msgstr ""

#. type: Plain text
msgid ""
"B<pmx485-test> - Modbus communications testing with a Powermax Plasma Cutter"
msgstr ""

#. type: Plain text
msgid "B<pmx485-test>"
msgstr ""

#. type: Plain text
msgid ""
"pmx485 is a python script for testing communications with a Hypertherm "
"Powermax plasma cutter using the Modbus ASCII protocol over RS485."
msgstr ""

#. type: Plain text
msgid "Select the correct port from the list of available ports."
msgstr ""

#. type: Plain text
msgid "Check RS485 to establish communications."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Changing MODE, CURRENT, or PRESSURE will change the corresponding value on the\n"
" Powermax and the new value will be reported back to the test panel.\n"
msgstr ""

#. type: Plain text
msgid "Check PANEL to end communication."
msgstr ""

#. type: TH
#, no-wrap
msgid "PNCCONF"
msgstr ""

#. type: Plain text
msgid "pncconf - configuration wizard for Mesa cards"
msgstr ""

#. type: Plain text
msgid "B<pncconf>"
msgstr ""

#. type: Plain text
msgid "B<pncconf> is used to configure systems that use Mesa cards."
msgstr ""

#. type: TH
#, no-wrap
msgid "puma560gui"
msgstr ""

#. type: Plain text
msgid "puma560agui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<puma560gui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating "
"a Puma 560 robot arm."
msgstr ""

#. type: TH
#, no-wrap
msgid "pumagui"
msgstr ""

#. type: Plain text
msgid "pumagui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<pumagui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating a "
"generic Puma style robot arm."
msgstr ""

#. type: TH
#, no-wrap
msgid "PYNGCGUI"
msgstr ""

#. type: Plain text
msgid "pyngcgui - python implementation of ngcgui"
msgstr ""

#. type: Plain text
msgid "B<pyngcgui>"
msgstr ""

#. type: Plain text
msgid "B<pyngcgui> is an alternative implenentation of ngcgui:"
msgstr ""

#. type: Plain text
msgid "B<ngcgui> B<LinuxCNC(1)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "PYUI"
msgstr ""

#. type: Plain text
msgid "pyui - utility for panelui"
msgstr ""

#. type: Plain text
msgid "B<loadusr pyui>"
msgstr ""

#. type: Plain text
msgid "B<pyui> Validates panelui.ini files"
msgstr ""

#. type: TH
#, no-wrap
msgid "PYVCP"
msgstr ""

#. type: Plain text
msgid "pyvcp - Virtual Control Panel for LinuxCNC"
msgstr ""

#. type: Plain text
msgid "B<pyvcp> [-g I<WxH+X+Y>] [-c I<component-name>] I<myfile.xml>"
msgstr ""

#. type: Plain text
msgid ""
"Use I<component-name> as the HAL component name.  If the component name is "
"not specified, the basename of the xml file is used."
msgstr ""

#. type: Plain text
msgid ""
"I<Python Virtual Control Panel> in the LinuxCNC documentation for a "
"description of the xml syntax, along with examples"
msgstr ""

#. type: TH
#, no-wrap
msgid "PYVCP_DEMO"
msgstr ""

#. type: Plain text
msgid "pyvcp_demo - Python Virtual Control Panel demonstration component"
msgstr ""

#. type: Plain text
msgid "B<pyvcp_demo>"
msgstr ""

#. type: Plain text
msgid "B<pyvcp_demo> is mainly used by sample configurations."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "      pyvcp_demo filename1.xml filename2.hal [compname]\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " If not provided, use compname == pyvcp\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "qtplasmac-cfg2prefs"
msgstr ""

#. type: TH
#, no-wrap
msgid "QtPlasmaC Parameters Assistant"
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-cfg2prefs> - Convert plasma parameters."
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-cfg2prefs>"
msgstr ""

#. type: Plain text
msgid ""
"qtplasmac-cfg2prefs is a python script for converting parameters from a "
"PlasmaC configuration to a QtPlasmaC configuration."
msgstr ""

#. type: Plain text
msgid ""
"See the QtPlasmaC section of the LinuxCNC Documentation for more information."
msgstr ""

#. type: Plain text
msgid ""
"http://linuxcnc.org/docs/devel/html/plasma/qtplasmac.html#qt_modify-config"
msgstr ""

#. type: TH
#, no-wrap
msgid "qtplasmac-materials"
msgstr ""

#. type: TH
#, no-wrap
msgid "QtPlasmaC Materials Assistant"
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-materials> - Create a plasma materials file."
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-materials>"
msgstr ""

#. type: Plain text
msgid "qtplasmac-materials is a python script for creating a materials file."
msgstr ""

#. type: Plain text
msgid ""
"The file can be created by text entry or by importing text from a CAM tool "
"file."
msgstr ""

#. type: Plain text
msgid ""
"http://linuxcnc.org/docs/devel/html/plasma/qtplasmac.html#_material_converter"
msgstr ""

#. type: TH
#, no-wrap
msgid "qtplasmac-plasmac2qt"
msgstr ""

#. type: TH
#, no-wrap
msgid "QtPlasmaC Migration Assistant"
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-plasmac2qt> - Migrate a PlasmaC configuration."
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-plasmac2qt>"
msgstr ""

#. type: Plain text
msgid ""
"qtplasmac-plasmac2qt is a python script for migrating from PlasmaC to "
"QtPlasmac."
msgstr ""

#. type: TH
#, no-wrap
msgid "qtplasmac-setup"
msgstr ""

#. type: TH
#, no-wrap
msgid "QtPlasmaC Config Switcher"
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-setup> - Switch a QtPlasmaC installation type."
msgstr ""

#. type: Plain text
msgid "B<qtplasmac-setup>"
msgstr ""

#. type: Plain text
msgid ""
"qtplasmac-setup is a python script for switching a QtPlasmac configuration "
"from package to run in place and vice-versa."
msgstr ""

#. type: Plain text
msgid ""
"http://linuxcnc.org/docs/devel/html/plasma/qtplasmac."
"html#_change_type_of_linuxcnc_installation"
msgstr ""

#. type: TH
#, no-wrap
msgid "QTVCP"
msgstr ""

#. type: Plain text
msgid "qtvcp - QT based virtual control panels"
msgstr ""

#. type: Plain text
msgid "B<qtvcp>"
msgstr ""

#. type: Plain text
msgid "B<qtvcp> is a system for creating user interfaces for LinuxCNC."
msgstr ""

#. type: Plain text
msgid "Full documentation at http://linuxcnc.org/docs/html/gui/qtvcp.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "rotarydelta"
msgstr ""

#. type: Plain text
msgid "rotarydelta - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<rotarydelta> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating "
"a delta robot with rotary actuators"
msgstr ""

#. type: TH
#, no-wrap
msgid "RS274"
msgstr ""

#. type: Plain text
msgid "rs274 - standalone G-code interpreter"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<rs274 >[-p interp.so] [-t tool.tbl] [-v var-file.var] [-n 0|1|2]\n"
"          [-b] [-s] [-g] [input file [output file]]\n"
msgstr ""

#. type: Plain text
msgid "B<rs274> Standalone G-code interpreter interface"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"test.ngc\n"
" ----\n"
" #E<lt>testE<gt> = 123.352\n"
" o101 while [[#E<lt>testE<gt> MOD 60 ] NE 0]\n"
" (debug,#E<lt>testE<gt>)\n"
"    #E<lt>testE<gt> = [#E<lt>testE<gt> + 1]\n"
" 101 endwhile\n"
" M2\n"
" ----\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"test.tbl\n"
" ----\n"
" T1 P1 Z0.511 D0.125 ;1/8 end mill\n"
" T2 P2 Z0.1 D0.0625 ;1/16 end mill\n"
" T3 P3 Z1.273 D0.201 ;#7 tap drill\n"
" ----\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"command\n"
" ----\n"
" rs274 -g test.ngc -t test.tbl\n"
" ----\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "RTAPI_APP"
msgstr ""

#. type: Plain text
msgid "rtapi_app - short description"
msgstr ""

#. type: Plain text
msgid "B<rtapi_app>"
msgstr ""

#. type: Plain text
msgid "B<rtapi_app> Creates a simulated real time environment"
msgstr ""

#. type: Plain text
msgid ""
"Used for loading real time modules on systems without real time (for "
"simulation)"
msgstr ""

#. type: TH
#, no-wrap
msgid "scaragui"
msgstr ""

#. type: Plain text
msgid "scaragui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<scaragui> is one of the sample B<Vismach> GUIs for LinuxCNC, simulating a "
"SCARA style robot arm."
msgstr ""

#. type: TH
#, no-wrap
msgid "SCHEDRMT"
msgstr ""

#. type: Plain text
msgid "schedrmt - telnet based scheduler for LinuxCNC"
msgstr ""

#. type: Plain text
msgid "B<schedrmt>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  schedrmt {-- --port E<lt>port numberE<gt> --name E<lt>server nameE<gt> --connectpw E<lt>passwordE<gt>\n"
"             --enablepw E<lt>passwordE<gt> --sessions E<lt>max sessionsE<gt> --path E<lt>pathE<gt>\n"
"             -iniE<lt>inifileE<gt>}\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  With -- --port Waits for socket connections (Telnet) on specified socket, without port\n"
"            uses default port 5007.\n"
"  With -- --name E<lt>server nameE<gt> Sets the server name to specified name for Hello.\n"
"  With -- --connectpw E<lt>passwordE<gt> Sets the connection password to 'password'. Default EMC\n"
"  With -- --enablepw E<lt>passwordE<gt> Sets the enable password to 'password'. Default EMCTOO\n"
"  With -- --sessions E<lt>max sessionsE<gt> Sets the maximum number of simultaneous connextions\n"
"            to max sessions. Default is no limit (-1).\n"
"  With -- --path Sets the base path to program (G-Code) files, default is \"../../nc_files/\".\n"
"            Make sure to include the final slash (/).\n"
"  With -- -ini E<lt>inifileE<gt>, uses inifile instead of emc.ini. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  There are six commands supported, Where the commands set and get contain EMC\n"
"  specific sub-commands based on the commands supported by emcsh, but where the \"emc_\"\n"
"  is omitted. Commands and most parameters are not case sensitive. The exceptions are \n"
"  passwords, file paths and text strings.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The get command includes one of the emc sub-commands, described below and\n"
"  zero or more additional parameters. \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  The set command inclides one of the emc sub-commands, described below and\n"
"  one or more additional parameters.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  EMC sub-commands:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  INIFILE\n"
"  Returns the path and file name of the current configuration inifile.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  plat\n"
"  Returns the platform for which this was compiled, e.g., linux_2_0_36\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  ini E<lt>varE<gt> E<lt>sectionE<gt>\n"
"  Returns the string value of E<lt>varE<gt> in section E<lt>sectionE<gt>, in EMC_INIFILE\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  debug {E<lt>new valueE<gt>}\n"
"  With get, returns the integer value of EMC_DEBUG, in the EMC. Note that\n"
"  it may not be true that the local EMC_DEBUG variable here (in emcsh and\n"
"  the GUIs that use it) is the same as the EMC_DEBUG value in the EMC. This\n"
"  can happen if the EMC is started from one .ini file, and the GUI is started\n"
"  with another that has a different value for DEBUG.\n"
"  With set, sends a command to the EMC to set the new debug level,\n"
"  and sets the EMC_DEBUG global here to the same value. This will make\n"
"  the two values the same, since they really ought to be the same.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  QMode E<lt>modeE<gt>\n"
"  stop | run | pause | resume (Set only) | error (Get only)\n"
"  With no arg, returns the program queue status as \"stop\", \"run\", \"pause\" or \"error\". Otherwise,\n"
"  sends a command to set the current mode to \"stop\", \"run\" or \"pause\".\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  QStatus E<lt>Queue SizeE<gt> E<lt>First Tag IdE<gt> E<lt>Last Tag IdE<gt> E<lt>Queue CRCE<gt>\n"
"  Get only, returns then number of programs in queue (Queue Size), the Tag id of the first \n"
"  program in the queue, the Tag id of the last program in the queue, and the CRC of all\n"
"  of the Tag Ids in the queue. The actual calculation of the CRC is not important, the\n"
"  purpose is to be able to compare the current CRC with the previous CRC. If they\n"
"  differ, then there has been a change to the size or order of the programs in queue.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  AutoTagId E<lt>Start IdE<gt>\n"
"  With get, returns the next autoincremented unique tag id to associate with a queue record.\n"
"  With set, resets auto tag generation to begin at the specified value.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PgmAdd E<lt>priorityE<gt> E<lt>tag idE<gt> E<lt>xE<gt> E<lt>yE<gt> E<lt>zE<gt> E<lt>zoneE<gt> E<lt>file nameE<gt> E<lt>feed overrideE<gt> E<lt>spindle overrideE<gt> E<lt>toolE<gt>\n"
"  With set, adds a program to the queue with priority of the program, a unique tag identifying the \n"
"  program, the x, y and z offsets or zone for the origin of the program, the path + file name, the\n"
"  feed and spindle overrides to apply, and the default tool to use. If tag id is zero, the tag id\n"
"  will be generated automatically. If zone is zero, then the x, y, and z offsets will be used, \n"
"  otherwise zones 1 to 9 correspond to G54 to G59.3 respectively.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PgmById E<lt>tag idE<gt>\n"
"  [priority] [tag id] [x] [y] [z] [zone] [file name] [feed override] [spindle override] [tool]\n"
"  With get, returns the queue entry matching the specified tag id, including the priority,\n"
"  tag id, x, y, and z coordinates, the zone, file name, feed and spindle overrides and the default\n"
"  tool.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PgmByIndex E<lt>indexE<gt>\n"
"  [priority] [tag id] [x] [y] [z] [zone] [file name] [feed override] [spindle override] [tool]\n"
"  With get, returns the queue entry matching the specified index into the queue, including the priority,\n"
"  tag id, x, y, and z coordinates, the zone, file name, feed and spindle overrides and the default\n"
"  tool.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PgmAll\n"
"  With get, performs effectively a PgmByIndex for every entry in the queue. Each result will be\n"
"  returned in the form: \"PGMBYINDEX ...\" with cr lf at the end of each record.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PriorityById E<lt>tag idE<gt> E<lt>priorityE<gt>\n"
"  With get, returns the priority of the queue entry matching the specified tag. With set, changes the \n"
"  priority of the queue entry to the specified priority.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PriorityByIndex E<lt>tag idE<gt> E<lt>priorityE<gt>\n"
"  With get, returns the priority of the queue entry matching the specified index into the queue. With \n"
"  set, changes the priority of the queue entry to the specified priority.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  DeleteById E<lt>tag idE<gt>\n"
"  With set, deletes the queue entry matching the specified tag id.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  DeleteByIndex E<lt>indexE<gt>\n"
"  With set, deletes the queue entry matching the specified index into the queue.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  PollRate E<lt>rateE<gt>\n"
"  With set, sets the rate at which the scheduler polls for information. The default is 1.0 or one\n"
"  second. With get, returns the current poll rate.\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "scorbot-er-3"
msgstr ""

#. type: Plain text
msgid ""
"scorbot-er-3 - to link the Intellitek Scorbot educational robot to LinuxCNC"
msgstr ""

#. type: Plain text
msgid ""
"B<scorbot-er-3> is a userspace, non-realtime component that interfaces the "
"control box of a Scorbot ER-3 robot arm to the LinuxCNC HAL."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
" Joint 0: rotation around the base\n"
" Joint 1: shoulder\n"
" Joint 2: elbow\n"
" Joint 3: wrist (+ is wrist up & rotate hand)\n"
" Joint 4: wrist (+ is wrist down & rotate hand)\n"
" Joint 5: unused\n"
" Joint 6: unused\n"
" Joint 7: hand open/close (+ is close)\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "sim_pin"
msgstr ""

#. type: Plain text
msgid "B<sim_pin> - gui for displaying and setting one or more Hal inputs"
msgstr ""

#. type: Plain text
msgid "B<sim_pin> I<[Options]> I<name1> [I<name2> [I<name3> ...]]"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"I<Options>:\n"
"  B<--help> (shows help text)\n"
"  B<--title title_string>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"For bit items, the name may include a /mode= specifier:\n"
"    I<namei>B</mode=>[B<pulse> | B<toggle> | B<hold>]\n"
"    (default is toggle)\n"
msgstr ""

#. type: Plain text
msgid ""
"Hal boolean items (bit) and numerical items (u32, s32, float) are supported."
msgstr ""

#. type: Plain text
msgid "If the named input is a numerical type, the gui displays:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   B<Entry>  Entry widget for value or a valid Tcl expression.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   B<Set>    Pushbutton to set new value from Entry (or use E<lt>RETURNE<gt>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   B<Reset>  Pushbutton to reset to the value present on initiation\n"
msgstr ""

#. type: Plain text
msgid ""
"If the input is a B<bit> type, the gui shows a single pushbutton that is "
"controlled by radio-button selectors:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   mode=B<pulse>   Pulse input to 1 for each pushbutton press\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   mode=B<toggle>  Toggle input for each pushbutton press\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "   mode=B<hold>    Set input to 1 while pushbutton pressed\n"
msgstr ""

#. type: Plain text
msgid ""
"If the bit item mode begins with an uppercase letter, the radio buttons for "
"selecting other modes are not shown"
msgstr ""

#. type: SH
#, no-wrap
msgid "NOTE"
msgstr ""

#. type: Plain text
msgid "LinuxCNC or a standalone Hal application must be running"
msgstr ""

#. type: Plain text
msgid ""
"A named item can specify a B<pin>, B<param>, or B<signal>.  The named item "
"must be writable:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  B<pin    IN or I/O> (and not connected to a signal with a writer)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  B<param  RW>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "  B<signal connected to a writable pin>\n"
msgstr ""

#. type: Plain text
msgid ""
"B<sim_pin> can be used interactively from a shell command line or started "
"automatically from a configuration ini file."
msgstr ""

#. type: SH
#, no-wrap
msgid "EXAMPLE"
msgstr ""

#. type: Plain text
msgid "Example for ini file usage:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"   [APPLICATIONS]\n"
"   DELAY = 5\n"
"   APP = B<sim_pin> \\e\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "          halui.machine.off/mode=pulse \\e\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "          ini.traj_arc_blend_enable \\e\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "          motion-command-handler-tmax\n"
msgstr ""

#. type: TH
#, no-wrap
msgid "SIMULATE_PROBE"
msgstr ""

#. type: Plain text
msgid "simulate_probe - simulate a probe input"
msgstr ""

#. type: Plain text
msgid "B<simulate_probe>"
msgstr ""

#. type: Plain text
msgid ""
"B<simulate_probe> Creates an on-screen GUI button to simulate touch probe "
"input. Typically used in sim configs or debugging."
msgstr ""

#. type: TH
#, no-wrap
msgid "STEPCONF"
msgstr ""

#. type: Plain text
msgid "stepconf - A configuration wizard for parallel-port based machines."
msgstr ""

#. type: Plain text
msgid "B<stepconf>"
msgstr ""

#. type: Plain text
msgid ""
"B<stepconf> aids in the configuration of machines using the parallel port "
"interface."
msgstr ""

#. type: Plain text
msgid "Detailed docs: http://linuxcnc.org/docs/html/config/stepconf.html"
msgstr ""

#. type: TH
#, no-wrap
msgid "TEACH-IN"
msgstr ""

#. type: Plain text
msgid "teach-in - jog the machine to a position, and record the state"
msgstr ""

#. type: Plain text
msgid "B<teach-in [E<gt> outfile]>"
msgstr ""

#. type: Plain text
msgid ""
"B<teach-in> is a script to learn set positions for later use by a script."
msgstr ""

#. type: Plain text
msgid ""
"A dialog box is shown with options to choose the coordinate system.  each "
"press of the \"Learn\" button outputs a line of text to stdout or the file "
"chosen at load time.  line format: line-no X Y Z flood mist lube spindle"
msgstr ""

#. type: TH
#, no-wrap
msgid "TOOLEDIT"
msgstr ""

#. type: Plain text
msgid "tooledit - tool table editor"
msgstr ""

#. type: Plain text
msgid "B<tooledit>"
msgstr ""

#. type: Plain text
msgid "B<tooledit> a graphical tool table editor"
msgstr ""

#. type: Plain text
msgid "details: http://linuxcnc.org/docs/html/gui/tooledit.html"
msgstr ""

#. type: Plain text
msgid "axis - TOUCHY LinuxCNC Graphical User Interface"
msgstr ""

#. type: Plain text
msgid "B<touchy> I<-ini> I<INIFILE>"
msgstr ""

#. type: Plain text
msgid ""
"B<touchy> is one of the Graphical User Interfaces (GUI) for LinuxCNC It gets "
"run by the runscript usually."
msgstr ""

#. type: TH
#, no-wrap
msgid "UPDATE_INI"
msgstr ""

#. type: Plain text
msgid "update_ini - A script to convert 2.7 format .ini files to 2.8 format"
msgstr ""

#. type: Plain text
msgid "B<update_ini [-f] [-d] inifile>"
msgstr ""

#. type: Plain text
msgid ""
"B<update_ini> is run automatically by the \"linuxcnc\" script when an INI "
"file in the pre-joints-axes format is opened."
msgstr ""

#. type: Plain text
msgid "-d causes a dialog box to be shown asking if the script should be run"
msgstr ""

#. type: Plain text
msgid "-f is designed for auto-conversion and will not create the backup files"
msgstr ""

#. type: TH
#, no-wrap
msgid "vfdb_vfd"
msgstr ""

#. type: TH
#, no-wrap
msgid "September 19, 2009"
msgstr ""

#. type: TH
#, no-wrap
msgid "VFD-B VFD"
msgstr ""

#. type: Plain text
msgid ""
"B<vfdb_vfd> - HAL userspace component for Delta VFD-B Variable Frequency "
"Drives"
msgstr ""

#. type: Plain text
msgid "B<vfdb_vfd> [OPTIONS]"
msgstr ""

#. type: Plain text
msgid ""
"This manual page explains the B<vfdb_vfd> component. This component reads "
"and writes to the VFD-B device via a Modbus connection."
msgstr ""

#. type: Plain text
msgid "B<vfdb_vfd> is for use with LinuxCNC."
msgstr ""

#. type: SH
#, no-wrap
msgid "QUICK START"
msgstr ""

#. type: Plain text
msgid ""
"The VFD-B ships in a configuration that can not talk to this driver.  The "
"VFD-B must be reconfigured via the face plate by the integrator before it "
"will work.  This section gives a brief description of what changes need to "
"be made, consult your Delta VFD-B manual for more details."
msgstr ""

#. type: TP
#, no-wrap
msgid "Switch the VFD-B to Modbus RTU frame format:"
msgstr ""

#. type: Plain text
msgid ""
"Switch parameter 09-04 from the factory default of 0 (Ascii framing)  to 3, "
"4, or 5 (RTU framing).  The setting you choose will determine several serial "
"parameters in addition to the Modbus framing protocol."
msgstr ""

#. type: TP
#, no-wrap
msgid "Set the frequency control source to be Modbus, not the keypad:"
msgstr ""

#. type: Plain text
msgid ""
"Switch parameter 02-00 from factory default of 00 (keypad control) to 5 "
"(control from RS-485)."
msgstr ""

#. type: TP
#, no-wrap
msgid "Set the run/stop control source to be Modbus, not the keypad:"
msgstr ""

#. type: Plain text
msgid ""
"Switch parameter 02-01 from the factory default of 0 (control from keypad)  "
"to 3 (control from Modbus, with Stop enabled on the keypad)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-n\\ --name\\ E<lt>halnameE<gt>>"
msgstr ""

#. type: Plain text
msgid "set the HAL component name"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-d\\ --debug>"
msgstr ""

#. type: Plain text
msgid ""
"Turn on debugging messages. Also toggled by sending a USR1 signal to the "
"vfdb_vfd process."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-m\\ --modbus-debug>"
msgstr ""

#. type: Plain text
msgid ""
"Turn on Modbus debugging messages. This will cause all Modbus messages to be "
"printed in hex on the terminal.  Also toggled by sending a USR2 signal to "
"the vfdb_vfd process."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-I\\ --ini\\ E<lt>inifilenameE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"take configuration from this ini file. Defaults to environment variable "
"INI_FILE_NAME.  Most vfdb_vfd configuration comes from the ini file, not "
"from command-line arguments."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-S\\ --section\\ E<lt>section\\ nameE<gt>>"
msgstr ""

#. type: Plain text
msgid ""
"take configuration from this section in the ini file. Defaults to 'VFD-B'."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<-r\\ --report-device>"
msgstr ""

#. type: Plain text
msgid "report device propertiers on console at startup"
msgstr ""

#. type: SH
#, no-wrap
msgid "INI CONFIG VARIABLES"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<DEBUG>"
msgstr ""

#. type: Plain text
msgid ""
"Set to a non-zero value to enable general debug output from the VFD-B "
"driver.  Optional."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<MODBUS_DEBUG>"
msgstr ""

#. type: Plain text
msgid ""
"Set to a non-zero value to enable modbus debug output from the VFD-B "
"driver.  Optional."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<DEVICE>"
msgstr ""

#. type: Plain text
msgid ""
"Serial port device file to use for Modbus communication with the VFD-B.  "
"Defaults to '/dev/ttyS0'."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<BAUD>"
msgstr ""

#. type: Plain text
msgid "Modbus baud rate.  Defaults to 19200."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<BITS>"
msgstr ""

#. type: Plain text
msgid "Modbus data bits.  Defaults to 8."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PARITY>"
msgstr ""

#. type: Plain text
msgid "Modbus parity.  Defaults to Even.  Accepts 'Even', 'Odd', or 'None'."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<STOPBITS>"
msgstr ""

#. type: Plain text
msgid "Modbus stop bits.  Defaults to 1."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TARGET>"
msgstr ""

#. type: Plain text
msgid "Modbus target number of the VFD-B to speak to.  Defaults to 1."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<POLLCYCLES>"
msgstr ""

#. type: Plain text
msgid ""
"Only read the less important variables from the VFD-B once in this many poll "
"cycles.  Defaults to 10."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<RECONNECT_DELAY>"
msgstr ""

#. type: Plain text
msgid ""
"If the connection to the VFD-B is broken, wait this many seconds before "
"reconnecting.  Defaults to 1."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<MOTOR_HZ,\\ MOTOR_RPM>"
msgstr ""

#. type: Plain text
msgid ""
"The frequency of the motor (in Hz) and the corresponding speed of the motor "
"(in RPM).  This information is provided by the motor manufacturer, and is "
"generally printed on the motor's name plate."
msgstr ""

#. type: Plain text
msgid "True when drive is at commanded speed (see I<speed-tolerance> below)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.enable\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"Enable the VFD. If False, all operating parameters are still read but "
"control is released and panel control is enabled (subject to VFD setup)."
msgstr ""

#. type: Plain text
msgid ""
"Current target frequency in HZ as set through speed-command (which is in "
"RPM), from the VFD."
msgstr ""

#. type: Plain text
msgid "Current output frequency of the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.inverter-load-percentage\\ (float,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Current load report from VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.is-e-stopped\\ (bit,\\ out)>"
msgstr ""

#. type: Plain text
msgid "The VFD is in emergency stop status (blinking \"E\" on panel)."
msgstr ""

#. type: Plain text
msgid "True when the VFD reports 0 Hz output."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.jog-mode\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"1 for ON and 0 for OFF, enables the VFD-B 'jog mode'. Speed control is "
"disabled.  This might be useful for spindle orientation."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.max-rpm\\ (float,\\ out)>"
msgstr ""

#. type: Plain text
msgid ""
"Actual RPM limit based on maximum frequency the VFD may generate, and the "
"motors nameplate values. For instance, if I<nameplate-HZ> is 50, and "
"I<nameplate-RPM> is 1410, but the VFD may generate up to 80Hz, then I<max-"
"rpm> would read as 2256 (80*1410/50). The frequency limit is read from the "
"VFD at startup.  To increase the upper frequency limit, the UL and FH "
"parameters must be changed on the panel.  See the VFD-B manual for "
"instructions how to set the maximum frequency."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.modbus-ok\\ (bit,\\ out)>"
msgstr ""

#. type: Plain text
msgid ""
"True when the Modbus session is successfully established and the last 10 "
"transactions returned without error."
msgstr ""

#. type: Plain text
msgid "Estimated current RPM value, from the VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.motor-RPS\\ (float,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Estimated current RPS value, from the VFD."
msgstr ""

#. type: Plain text
msgid "From the VFD."
msgstr ""

#. type: Plain text
msgid ""
"Speed sent to VFD in RPM. It is an error to send a speed faster than the "
"Motor Max RPM as set in the VFD."
msgstr ""

#. type: Plain text
msgid "1 for ON and 0 for OFF sent to VFD, only on when running."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.max-speed\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"Ignore the loop-time parameter and run Modbus at maximum speed, at the "
"expense of higher CPU usage. Suggested use during spindle positioning."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.status\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Drive Status of the VFD (see the VFD manual). A bitmap."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.error-count\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Total number of transactions returning a Modbus error."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.error-code\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Most recent Error Code from VFD."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.frequency-limit\\ (float,\\ out)>"
msgstr ""

#. type: Plain text
msgid "Upper limit read from VFD setup.  B<\\&\\&>"
msgstr ""

#. type: Plain text
msgid "How often the Modbus is polled (default interval 0.1 seconds)."
msgstr ""

#. type: Plain text
msgid ""
"Nameplate Hz of motor (default 50). Used to calculate target frequency "
"(together with I<nameplate-RPM> ) for a target RPM value as given by speed-"
"command."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.rpm-limit\\ (float,\\ RW)>"
msgstr ""

#. type: Plain text
msgid "Do-not-exceed soft limit for motor RPM (defaults to I<nameplate-RPM> )."
msgstr ""

#. type: Plain text
msgid ""
"Speed tolerance (default 0.01) for determining whether spindle is at speed "
"(0.01 meaning: output frequency is within 1% of target frequency)."
msgstr ""

#. type: Plain text
msgid ""
"The vfdb_vfd driver takes precedence over panel control while it is enabled "
"(see I<.enable> pin), effectively disabling the panel. Clearing the I<."
"enable> pin re-enables the panel. Pins and parameters can still be set, but "
"will not be written to the VFD untile the .enable pin is set. Operating "
"parameters are still read while bus control is disabled."
msgstr ""

#. type: Plain text
msgid ""
"Exiting the vfdb_vfd driver in a controlled way will release the VFD from "
"the bus and restore panel control."
msgstr ""

#. type: Plain text
msgid ""
"See the LinuxCNC Integrators Manual for more information. For a detailed "
"register description of the Delta VFD-B, see the VFD manual."
msgstr ""

#. type: Plain text
msgid "Yishin Li; based on vfd11_vfd by Michael Haberler."
msgstr ""

#. type: TH
#, no-wrap
msgid "vfs11_vfd"
msgstr ""

#. type: TH
#, no-wrap
msgid "vfs11 VFD"
msgstr ""

#. type: Plain text
msgid ""
"B<vfs11_vfd> - HAL userspace component for Toshiba-Schneider VF-S11 Variable "
"Frequency Drives"
msgstr ""

#. type: Plain text
msgid "B<vfs11_vfd> [OPTIONS]"
msgstr ""

#. type: Plain text
msgid ""
"This manual page explains the B<vfs11_vfd> component. This component reads "
"and writes to the vfs11 via a Modbus connection."
msgstr ""

#. type: Plain text
msgid "B<vfs11_vfd> is for use with LinuxCNC."
msgstr ""

#. type: Plain text
msgid ""
"Turn on debugging messages. Also toggled by sending a USR1 signal to the "
"vfs11_vfd process."
msgstr ""

#. type: Plain text
msgid ""
"Turn on Modbus debugging messages. This will cause all Modbus messages to be "
"printed in hex on the terminal.  Also toggled by sending a USR2 signal to "
"the vfs11_vfd process."
msgstr ""

#. type: Plain text
msgid ""
"take configuration from this ini file. Defaults to environment variable "
"INI_FILE_NAME."
msgstr ""

#. type: Plain text
msgid ""
"take configuration from this section in the ini file. Defaults to 'VFS11'."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.acceleration-pattern\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"when true, set acceleration and deceleration times as defined in registers "
"F500 and F501 respectively. Used in PID loops to choose shorter ramp times "
"to avoid oscillation."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.alarm-code\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid ""
"non-zero if drive is in alarmed state. Bitmap describing alarm information "
"(see register FC91 description). Use I<err-reset> (see below) to clear the "
"alarm."
msgstr ""

#. type: Plain text
msgid "when drive is at commanded speed (see I<speed-tolerance> below)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.current-load-percentage\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.dc-brake\\ \\ (bit,\\ in)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.estop\\ (bit,\\ in)>"
msgstr ""

#. type: Plain text
msgid ""
"put the VFD into emergency-stopped status. No operation possible until "
"cleared with I<err-reset> or powercycling."
msgstr ""

#. type: Plain text
msgid ""
"the VFD is in emergency stop status (blinking \"E\" on panel). Use I<err-"
"reset> to reboot the VFD and clear the e-stop status."
msgstr ""

#. type: Plain text
msgid ""
"1 for ON and 0 for OFF, enables the VF-S11 'jog mode'. Speed control is "
"disabled, and the output frequency is determined by register F262 (preset to "
"5Hz). This might be useful for spindle orientation."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.max-rpm\\ (float,\\ R)>"
msgstr ""

#. type: Plain text
msgid ""
"actual RPM limit based on maximum frequency the VFD may generate, and the "
"motors nameplate values. For instance, if I<nameplate-HZ> is 50, and "
"I<nameplate-RPM_> is 1410, but the VFD may generate up to 80Hz, then I<max-"
"rpm> would read as 2256 (80*1410/50). The frequency limit is read from the "
"VFD at startup.  To increase the upper frequency limit, the UL and FH "
"parameters must be changed on the panel.  See the VF-S11 manual for "
"instructions how to set the maximum frequency."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.output-current-percentage\\ (float,\\ out)>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.output-voltage-percentage\\ (float,\\ out)>"
msgstr ""

#. type: Plain text
msgid "1 for ON and 0 for OFF, only on when running B<\\&\\&>"
msgstr ""

#. type: IP
#, no-wrap
msgid "E<lt>nameE<gt>.max-speed\\ (bit,\\ in)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.trip-code\\ (s32,\\ out)>"
msgstr ""

#. type: Plain text
msgid "total number of transactions returning a Modbus error B<\\&\\&>"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<E<lt>nameE<gt>.frequency-limit\\ (float,\\ RO)>"
msgstr ""

#. type: Plain text
msgid "do-not-exceed soft limit for motor RPM (defaults to I<nameplate-RPM> )."
msgstr ""

#. type: Plain text
msgid ""
"The vfs11_vfd driver takes precedence over panel control while it is enabled "
"(see I<.enable> pin), effectively disabling the panel. Clearing the I<."
"enable> pin re-enableds the panel. Pins and parameters can still be set, but "
"will not be written to the VFD untile the .enable pin is set. Operating "
"parameters are still read while bus control is disabled."
msgstr ""

#. type: Plain text
msgid ""
"Exiting the vfs11_vfd driver in a controlled will release the VFD from the "
"bus and restore panel control."
msgstr ""

#. type: Plain text
msgid ""
"See the LinuxCNC Integrators Manual for more information. For a detailed "
"register description of the Toshiba VFD's, see the \"TOSVERT VF-S11 "
"Communications Function Instruction Manual\" (Toshiba document number "
"E6581222)  and the \"TOSVERT VF-S11 Instruction manual\" (Toshiba document "
"number E6581158)."
msgstr ""

#. type: Plain text
msgid "Michael Haberler; based on gs2_vfd by Steve Padnos and John Thornton."
msgstr ""

#. type: TH
#, no-wrap
msgid "XHC-HB04"
msgstr ""

#. type: TH
#, no-wrap
msgid "2015-03-06"
msgstr ""

#. type: Plain text
msgid "xhc-hb04 - User-space HAL component for the xhc-hb04 pendant."
msgstr ""

#. type: Plain text
msgid ""
"The xhc-hb04 component supports a common USB pendant that provides a number "
"of pushbuttons, a manual pulse generator (mpg or jog wheel), and a selector "
"switch for the wheel."
msgstr ""

#. type: Plain text
msgid ""
"There are at least two hardware versions -- one with 16 buttons and a more "
"common one with 18 buttons.  The information herein is based on the 18 "
"button device with a USB Vendor:Product code of 10CE:EB70."
msgstr ""

#. type: Plain text
msgid ""
"In addition to buttons, the pendant provides an LCD display for the current "
"stepsize multiplier (from a set of available integer values), position "
"(absolute and relative, labeled MC and WC respectively), feedrate (override "
"percent and value in units per minute), and spindle speed (override percent "
"and value in revolutions per minute (RPM)).  The display is managed by a "
"rotary switch that selects one of four axes for wheel positioning, feed "
"override, spindle override, or OFF."
msgstr ""

#. type: Plain text
msgid ""
"The pendant display, its rotary selector switch, and the component pin names "
"use designators x,y,z,a.  While this arrangement presumes a machine "
"configured as XYZA, the pins can be assigned independently as required in a "
"HAL configuration."
msgstr ""

#. type: SH
#, no-wrap
msgid "UDEV"
msgstr ""

#. type: Plain text
msgid ""
"The xhc-hb04 executable needs permission for reading the pendant's USB "
"device.  Debian package installs (debs) handle this automatically but Run-In-"
"Place (RIP) builds may need a udev rules file.  This file should be created "
"(using sudo and a text editor) as:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B</etc/udev/rules.d/99-xhc-hb04.rules> with the single line:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "ATTR{idProduct}==\"eb70\", ATTR{idVendor}==\"10ce\", MODE=\"0666\", OWNER=\"root\", GROUP=\"plugdev\"\n"
msgstr ""

#. type: Plain text
msgid ""
"The xhc-hb04 program can be run from the command line without LinuxCNC to "
"test a pendant in a simulation mode.  This standalone mode is used to "
"identify the button codes produced for each button press and to verify "
"proper counting of the jog wheel.  The identified button codes can be used "
"to create a B<button-cfg-file>.  When a B<button-cfg-file> exists, pendant "
"operation can be verified using the -I option to specify the file."
msgstr ""

#. type: Plain text
msgid "Usage:"
msgstr ""

#. type: Plain text
msgid "$ xhc-hb04 [options]"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-h>    list command line options and exit"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-I button-cfg-file> (see below for file format)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-H>    run in real-time HAL mode (simulation mode is default)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-x>    wait for pendant detection before creating HAL pins."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-s n>  n is one of the following stepsize sequences"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"      1: 1,10,100,1000 (default)\n"
"      2: 1,5,10,20\n"
"      3: 1,10,100\n"
"      4: 1,5,10,20,50,100\n"
"      5: 1,10,50,100,1000\n"
"      The stepsize selected is always multiplied by 0.001\n"
msgstr ""

#. type: SH
#, no-wrap
msgid "button-cfg-file format"
msgstr ""

#. type: Plain text
msgid ""
"Standard configuration files are provided in the distribution for known "
"button configurations:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"   /usr/share/linuxcnc/hallib/xhc-hb04-layout1.cfg\n"
"   /usr/share/linuxcnc/hallib/xhc-hb04-layout2.cfg\n"
"or for a RIP build:\n"
"   rip_base_dir/lib/hallib/xhc-hb04-layout1.cfg\n"
"   rip_base_dir/lib/hallib/xhc-hb04-layout2.cfg\n"
msgstr ""

#. type: Plain text
msgid ""
"layout1 describes the 16 button pendant, layout2 describes the more common "
"18 button pendant."
msgstr ""

#. type: Plain text
msgid ""
"The button configuration file follows the same format as ini files but "
"should use a file suffix of .cfg."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"File format:\n"
"  [XHC-HB04]\n"
"  BUTTON=X1:button-thename1\n"
"  BUTTON=X2:button-thename2\n"
"  BUTTON=X3:button-thename3\n"
"  etc.\n"
msgstr ""

#. type: Plain text
msgid ""
"XN is the code reported for a button press and button-thenameN is the name "
"to be assigned to the pin created for the button."
msgstr ""

#. type: SH
#, no-wrap
msgid "Hal Usage"
msgstr ""

#. type: Plain text
msgid "Use the -H option to specify HAL mode and other options as required:"
msgstr ""

#. type: Plain text
msgid "I<loadusr -W > B<xhc-hb04> I<-H [Options]>"
msgstr ""

#. type: Plain text
msgid "Example: I<loadusr -W > B<xhc-hb04> I<-H -I path_to_cfg_file -s 2>"
msgstr ""

#. type: SH
#, no-wrap
msgid "Input Pins (Control)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit in) I<xhc-hb04.stepsize-up> A 1 pulse on this pin changes the"
msgstr ""

#. type: Plain text
msgid ""
"stepsize to the next higher stepsize in the stepsize sequence specified in "
"the xhc-hb04 (loadusr) command."
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit in) I<xhc-hb04.stepsize-down> A 1 pulse on this pin changes the"
msgstr ""

#. type: Plain text
msgid ""
"stepsize to the next lower stepsize in the stepsize sequence specified in "
"the xhc-hb04 (loadusr) command."
msgstr ""

#. type: SH
#, no-wrap
msgid "Input Pins (to the pendant LCD display)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.[xyza].pos-absolute> Absolule position display."
msgstr ""

#. type: Plain text
msgid ""
"(typically connect to: halui.axis.N.pos-feedback). The LCD display for pos-"
"absolute is fixed format with a sign, 4 number digits and 3 fraction digits "
"(+XXXX.XXX), require: -9999.999 E<lt>= value E<lt>= 9999.999."
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.[xyza].pos-relative> Relative position display."
msgstr ""

#. type: Plain text
msgid ""
"(typically connect to: halui.axis.N.pos-relative). The LCD display for pos-"
"relative is fixed format with a sign, 4 number digits and 3 fraction digits "
"(+XXXX.XXX), require: -9999.999 E<lt>= value E<lt>= 9999.999."
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.feed-override> Feed-override value."
msgstr ""

#. type: Plain text
msgid ""
"The float value is converted to a 16 bit integer and multiplied by 100 in "
"order to display as percent, require: 0 E<lt>= pinvalue E<lt>= 655 "
"(typically connect to: halui.feed-override.value)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.feed-value> Current Feed-value (units/sec)."
msgstr ""

#. type: Plain text
msgid ""
"The float value is converted to a 16 bit integer and multiplied by 60 in "
"order to display as units-per-minute, require: 0 E<lt>= pinvalue E<lt>= 1092 "
"(65520 units-per-minute) (typically connect to: motion.current-vel)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.spindle-override> Spindle-override value."
msgstr ""

#. type: Plain text
msgid ""
"The float value is converted to a 16 bit integer and multiplied by 100 in "
"order to display as percent, require: 0 E<lt>= pinvalue E<lt>= 655)  "
"(typically connect to: halui.spindle-override.value)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.spindle-rps> Spindle speed in rps."
msgstr ""

#. type: Plain text
msgid ""
"(revolutions per second).  The float value is converted to a 16 bit integer "
"and multiplied by 60 in order to display as RPMs, require: 0 E<lt>= pinvalue "
"E<lt>= 1092 (65520 RPM) (typically connect to: spindle.N.speed-out-rps-abs)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit in) I<xhc-hb04.inch-icon> Use inch icon (default is mm)"
msgstr ""

#. type: SH
#, no-wrap
msgid "Output Pins (Status)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.sleeping> True when the driver receives a pendant"
msgstr ""

#. type: Plain text
msgid "inactive (sleeping) message."
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.jog.enable-off> True when the pendant rotary"
msgstr ""

#. type: Plain text
msgid "selector switch is in the OFF position or when the pendant is sleeping."
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.enable-[xyza]> True when the pendant rotary"
msgstr ""

#. type: Plain text
msgid "selector switch is in the [xyza] position and not sleeping."
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.enable-spindle-override> True when the pendant"
msgstr ""

#. type: Plain text
msgid ""
"rotary selector switch is in the Spindle position and not sleeping.  "
"(typically connect to: halui.spindle-override-count-enable)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.enable-feed-override> True when the pendant rotary"
msgstr ""

#. type: Plain text
msgid ""
"selector switch is in the Feed position and not sleeping.  (typically "
"connect to: halui.feed-override-count-enable)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.connected> True when connection to the pendant"
msgstr ""

#. type: Plain text
msgid "is established over the USB interface."
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.require_pendant> True if driver started with"
msgstr ""

#. type: Plain text
msgid "the -x option."
msgstr ""

#. type: TP
#, no-wrap
msgid "(s32 out) I<xhc-hb04.stepsize> Current stepsize in the stepsize sequence"
msgstr ""

#. type: Plain text
msgid "as controlled by the stepsize-up and/or stepsize-down pins."
msgstr ""

#. type: SH
#, no-wrap
msgid "Output Pins (for jogging using axis.N.jog-counts)"
msgstr ""

#. type: TP
#, no-wrap
msgid "(s32 out) I<xhc-hb04.jog.counts> Number of counts of the wheel since"
msgstr ""

#. type: Plain text
msgid ""
"start-up (50 counts per wheel revolution).  (typically connect to axis.N.jog-"
"counts (lowpass filtering may be helpful))"
msgstr ""

#. type: TP
#, no-wrap
msgid "(s32 out) I<xhc-hb04.jog.counts-neg> The value of the"
msgstr ""

#. type: Plain text
msgid "xhc-hb04.jog.counts multiplied by -1."
msgstr ""

#. type: TP
#, no-wrap
msgid "(float out) I<xhc-hb04.jog.scale>  Value is the current stepsize"
msgstr ""

#. type: Plain text
msgid "multiplied by 0.001.  (typically connect to axis.N.jog-scale)"
msgstr ""

#. type: SH
#, no-wrap
msgid "Experimental: Pins for halui plus/minus jogging"
msgstr ""

#. type: Plain text
msgid "These pins provide some support for non-trivkins, world mode jogging."
msgstr ""

#. type: TP
#, no-wrap
msgid "(float in) I<xhc-hb04.jog.max-velocity> Connect to halui.max-velocity.value"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float out) I<xhc-hb04.jog.velocity> Connect to halui.jog-speed"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.jog.plus-[xyza]> Connect to halui.jog.N.plus"
msgstr ""

#. type: TP
#, no-wrap
msgid "(bit out) I<xhc-hb04.jog.minus-[xyza]> Connect to halui.jog.N.minus"
msgstr ""

#. type: TP
#, no-wrap
msgid "(float out) I<xhc-hb04.jog.increment> Debug pin -- abs(delta_pos)"
msgstr ""

#. type: SH
#, no-wrap
msgid "Button output pins (for the 18 button, layout2 pendant)"
msgstr ""

#. type: Plain text
msgid "The output bit type pins are TRUE when the button is pressed."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"ROW 1\n"
"    (bit out) xhc-hb04.button-reset\n"
"    (bit out) xhc-hb04.button-stop\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"ROW 2\n"
"    (bit out) xhc-hb04.button-goto-zero\n"
"    (bit out) xhc-hb04.button-rewind\n"
"    (bit out) xhc-hb04.button-start-pause\n"
"    (bit out) xhc-hb04.button-probe-z\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"ROW 3\n"
"   (bit out) xhc-hb04.button-spindle\n"
"   (bit out) xhc-hb04.button-half\n"
"   (bit out) xhc-hb04.button-zero\n"
"   (bit out) xhc-hb04.button-safe-z\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"ROW 4\n"
"   (bit out) xhc-hb04.button-home\n"
"   (bit out) xhc-hb04.button-macro-1\n"
"   (bit out) xhc-hb04.button-macro-2\n"
"   (bit out) xhc-hb04.button-macro-3\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"ROW 5\n"
"   (bit out) xhc-hb04.button-step\n"
"   (bit out) xhc-hb04.button-mode\n"
"   (bit out) xhc-hb04.button-macro-6\n"
"   (bit out) xhc-hb04.button-macro-7\n"
msgstr ""

#. type: SH
#, no-wrap
msgid "Synthesized button pins"
msgstr ""

#. type: Plain text
msgid ""
"Additional buttons are synthesized for buttons named B<zero>, B<goto-zero>, "
"and B<half>.  These synthesized buttons are active when the button is "
"pressed AND the selector-switch is set to the corresponding axis [xyza]."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"   (bit out) xhc-hb04.button-zero-[xyza]\n"
"   (bit out) xhc-hb04.button-goto-zero-[xyza]\n"
"   (bit out) xhc-hb04.button-half-[xyza]\n"
msgstr ""

#. type: SH
#, no-wrap
msgid "DEBUGGING"
msgstr ""

#. type: Plain text
msgid "For debugging USB activity, use environmental variable LIBUSB_DEBUG:"
msgstr ""

#. type: TP
#, no-wrap
msgid "export LIBUSB_DEBUG=[2 | 3 | 4]; xhc-hb04 [options]"
msgstr ""

#. type: Plain text
msgid "2:warning, 3:info, 4:debug"
msgstr ""

#. type: SH
#, no-wrap
msgid "Sim Configs"
msgstr ""

#. type: Plain text
msgid ""
"The distribution includes several simulation configurations in the directory:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"   /usr/share/doc/linuxcnc/examples/sample-configs/sim/axis/xhc-hb04/\n"
"or for a RIP build:\n"
"   rip_base_dir/configs/sim/axis/xhc-hb04/\n"
msgstr ""

#. type: Plain text
msgid ""
"These configurations use a distribution-provided script (xhc-hb04.tcl)  to "
"configure the pendant and make necessary HAL connections according to a "
"number of ini file settings.  The script uses an additional HAL component "
"(xhc_hb04_util) to provide common functionality and includes support for a "
"standard method for the start-pause button."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The settings available include:\n"
"  1) specify button-cfg-file for standard layout1 or layout2\n"
"  2) select axes (up to 4 axes from set of x y z a b c u v w)\n"
"  3) implement per-axis filtering coefficients\n"
"  4) implement per-axis acceleration for mpg jogging\n"
"  5) implement per-axis scale settings\n"
"  6) select normal or velocity based jog modes\n"
"  7) select stepsize sequence\n"
"  8) option to initialize pin for inch or mm display icon\n"
"  9) option to require pendant on startup\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The sim configs illustrate button connections that:\n"
"  1) connect pendant stepsize-up button to the step input pin.\n"
"  2) connect buttons to halui.* pins\n"
"  3) connect buttons to motion.* pins\n"
msgstr ""

#. type: Plain text
msgid ""
"Another script is included to monitor the pendant and report loss of USB "
"connectivity.  See the README and .txt files in the above directory for "
"usage."
msgstr ""

#. type: Plain text
msgid ""
"B<Note:> The sim configs use the axis gui but the scripts are available with "
"any HAL configuration or gui.  The same scripts can be used to adapt the xhc-"
"hb04 to existing configurations provided that the halui, motion, and axis.N "
"pins needed are not otherwise claimed.  Instructions are included in README "
"file in the directory named above."
msgstr ""

#. type: Plain text
msgid ""
"Use halcmd to display the pins and signals used by the xhc-hb04.tcl script:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"  halcmd show pin xhc-hb04       (show all xhc-hb04 pins)\n"
"  halcmd show pin pendant_util   (show all pendant_util pins)\n"
"  halcmd show sig pendant:       (show all pendant signals)\n"
msgstr ""

#. type: SH
#, no-wrap
msgid "Author"
msgstr ""

#. type: Plain text
msgid "Frederick Rible (frible@teaser.fr)"
msgstr ""

#. type: TH
#, no-wrap
msgid "XHC-HB04-ACCELS"
msgstr ""

#. type: Plain text
msgid "xhc-hb04-accels - Obsolete script for jogging wheel"
msgstr ""

#. type: Plain text
msgid "B<xhc-hb04-accels>"
msgstr ""

#. type: Plain text
msgid ""
"B<xhc-hb04-accels> Obsolete script, xhc-hb04.tcl now controls reduced wheel "
"jogging accels"
msgstr ""

#. type: TH
#, no-wrap
msgid "xyzac-trt-gui"
msgstr ""

#. type: Plain text
msgid "xyzac-trt-gui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<xyzac-trt-gui> is one of the sample B<Vismach> GUIs for LinuxCNC, "
"simulating a 5-axis milling machine with tool-point kinematics"
msgstr ""

#. type: TH
#, no-wrap
msgid "xyzbc-trt-gui"
msgstr ""

#. type: Plain text
msgid "xyzbc-trt-gui - Vismach Virtual Machine GUI"
msgstr ""

#. type: Plain text
msgid ""
"B<xyzbc-trt-gui> is one of the sample B<Vismach> GUIs for LinuxCNC, "
"simulating a 5-axis milling machine with tool-point kinematics"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_add_funct_to_thread"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-10-12"
msgstr ""

#. type: Plain text
msgid ""
"hal_add_funct_to_thread - cause a function to be executed at regular "
"intervals"
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNTAX"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"int hal_add_funct_to_thread(const char *I<funct_name>, const char *I<thread_name>,\n"
" int position)\n"
msgstr ""

#. type: Plain text
msgid ""
"int hal_del_funct_from_thread(const char *I<funct_name>, const char "
"*I<thread_name>)"
msgstr ""

#. type: SH
#, no-wrap
msgid "ARGUMENTS"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<funct_name>"
msgstr ""

#. type: Plain text
msgid "The name of the function"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<thread_name>"
msgstr ""

#. type: Plain text
msgid "The name of the thread"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<position>"
msgstr ""

#. type: Plain text
msgid ""
"The desired location within the thread.  This determines when the function "
"will run, in relation to other functions in the thread.  A positive number "
"indicates the desired location as measured from the beginning of the thread, "
"and a negative is measured from the end.  So +1 means this function will "
"become the first one to run, +5 means it will be the fifth one to run, -2 "
"means it will be next to last, and -1 means it will be last.  Zero is "
"illegal."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_add_funct_to_thread> adds a function exported by a realtime HAL "
"component to a realtime thread.  This determines how often and in what order "
"functions are executed."
msgstr ""

#. type: Plain text
msgid "B<hal_del_funct_from_thread> removes a function from a thread."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
msgid "Returns a HAL status code."
msgstr ""

#. type: SH
#, no-wrap
msgid "REALTIME CONSIDERATIONS"
msgstr ""

#. type: Plain text
msgid ""
"Call only from realtime init code, not from user space or realtime code."
msgstr ""

#. type: Plain text
msgid "B<hal_thread_new(3hal)>, B<hal_export_funct(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_create_thread"
msgstr ""

#. type: Plain text
msgid "hal_create_thread - Create a HAL thread"
msgstr ""

#. type: Plain text
msgid ""
"int hal_create_thread(const char *I<name>, unsigned long I<period>, int "
"I<uses_fp>)"
msgstr ""

#. type: Plain text
msgid "int hal_thread_delete(const char *I<name>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<name>"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<period>"
msgstr ""

#. type: Plain text
msgid "The interval, in nanoseconds, between iterations of the thread"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<uses_fp>"
msgstr ""

#. type: Plain text
msgid ""
"Must be nonzero if a function which uses floating-point will be attached to "
"this thread."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_create_thread> establishes a realtime thread that will execute one or "
"more HAL functions periodically."
msgstr ""

#. type: Plain text
msgid ""
"All thread periods are rounded to integer multiples of the hardware timer "
"period, and the timer period is based on the first thread created.  Threads "
"must be created in order, from the fastest to the slowest.  HAL assigns "
"decreasing priorities to threads that are created later, so creating them "
"from fastest to slowest results in rate monotonic priority scheduling."
msgstr ""

#. type: Plain text
msgid "B<hal_delete_thread> deletes a previously created thread."
msgstr ""

#. type: Plain text
msgid "B<hal_export_funct(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_exit"
msgstr ""

#. type: Plain text
msgid "hal_exit - Shut down HAL"
msgstr ""

#. type: Plain text
msgid "int hal_exit(int I<comp_id>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<comp_id>"
msgstr ""

#. type: Plain text
msgid "A HAL component identifier returned by an earlier call to B<hal_init>."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_exit> shuts down and cleans up HAL and RTAPI.  It must be called prior "
"to exit by any module that called B<hal_init>."
msgstr ""

#. type: Plain text
msgid ""
"Call only from within user or init/cleanup code, not from realtime tasks."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_export_funct"
msgstr ""

#. type: Plain text
msgid "hal_export_funct - create a realtime function callable from a thread"
msgstr ""

#. type: Plain text
msgid "typedef void(*hal_funct_t)(void * I<arg>, long I<period>)"
msgstr ""

#. type: Plain text
msgid ""
"int hal_export_funct(const char *I<name>, hal_funct_t I<funct>, void "
"*I<arg>, int I<uses_fp>, int I<reentrant>, int I<comp_id>)"
msgstr ""

#. type: Plain text
msgid "The name of the function."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<funct>"
msgstr ""

#. type: Plain text
msgid "The pointer to the function"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<arg>"
msgstr ""

#. type: Plain text
msgid "The argument to be passed as the first parameter of I<funct>"
msgstr ""

#. type: Plain text
msgid ""
"Nonzero if the function uses floating-point operations, including assignment "
"of floating point values with \"=\"."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<reentrant>"
msgstr ""

#. type: Plain text
msgid ""
"If reentrant is non-zero, the function may be preempted and called again "
"before the first call completes.  Otherwise, it may only be added to one "
"thread."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_export_funct> makes a realtime function provided by a component "
"available to the system.  A subsequent call to B<hal_add_funct_to_thread> "
"can be used to schedule the execution of the function as needed by the "
"system."
msgstr ""

#. type: Plain text
msgid ""
"When this function is placed on a HAL thread, and HAL threads are started, "
"I<funct> is called repeatedly with two arguments: I<void *arg> is the same "
"value that was given to B<hal_export_funct>, and I<long period> is the "
"interval between calls in nanoseconds."
msgstr ""

#. type: Plain text
msgid "Each call to the function should do a small amount of work and return."
msgstr ""

#. type: Plain text
msgid "B<hal_create_thread(3hal)>, B<hal_add_funct_to_thread(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_init"
msgstr ""

#. type: Plain text
msgid "hal_init - Sets up HAL and RTAPI"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_init(const char *I<modname>)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<modname>"
msgstr ""

#. type: Plain text
msgid "The name of this hal module"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_init> sets up HAL and RTAPI.  It must be called by any module that "
"intends to use the API, before any other RTAPI calls."
msgstr ""

#. type: Plain text
msgid ""
"I<modname> must point to a string that identifies the module.  The string "
"may be no longer than B<HAL_NAME_LEN> characters."
msgstr ""

#. type: Plain text
msgid ""
"Call only from within user or init/cleanup code, not from relatime tasks."
msgstr ""

#. type: Plain text
msgid ""
"On success, returns a positive integer module ID, which is used for "
"subsequent calls to hal and rtapi APIs.  On failure, returns a HAL error "
"code."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_malloc"
msgstr ""

#. type: Plain text
msgid "hal_malloc - Allocate space in the HAL shared memory area"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " void *hal_malloc(long int I<size>)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<size>"
msgstr ""

#. type: Plain text
msgid "Gives the size, in bytes, of the block"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_malloc> allocates a block of memory from the main HAL shared memory "
"area.  It should be used by all components to allocate memory for HAL pins "
"and parameters.  It allocates `size' bytes, and returns a pointer to the "
"allocated space, or NULL (0) on error.  The returned pointer will be "
"properly aligned for any type HAL supports.  A component should allocate "
"during initialization all the memory it needs."
msgstr ""

#. type: Plain text
msgid ""
"The allocator is very simple, and there is no `free'.  The entire HAL shared "
"memory area is freed when the last component calls B<hal_exit>.  This means "
"that if you continuously install and remove one component while other "
"components are present, you eventually will fill up the shared memory and an "
"install will fail.  Removing all components completely clears memory and you "
"start fresh."
msgstr ""

#. type: Plain text
msgid ""
"A pointer to the allocated space, which is properly aligned for any variable "
"HAL supports.  Returns NULL on error."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_param_alias"
msgstr ""

#. type: Plain text
msgid "hal_param_alias - create an alternate name for a param"
msgstr ""

#. type: Plain text
msgid ""
"int B<hal_param_alias>(const char *B<original_name>, const char *B<alias>);"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<original_name>"
msgstr ""

#. type: Plain text
msgid "The original name of the param"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<alias>"
msgstr ""

#. type: Plain text
msgid ""
"The alternate name that may be used to refer to the param, or NULL to remove "
"any alternate name."
msgstr ""

#. type: Plain text
msgid ""
"A param may have two names: the original name (the one that was passed to a "
"B<hal_param_new> function) and an alias."
msgstr ""

#. type: Plain text
msgid ""
"Usually, aliases are for the convenience of users and should be created and "
"destroyed via halcmd.  However, in some cases it is sensible to create "
"aliases directly in a component.  These cases include the case where a param "
"is renamed, to preserve compatibility with old versions."
msgstr ""

#. type: Plain text
msgid "B<hal_pin_alias>(3)"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_param_new"
msgstr ""

#. type: Plain text
msgid "hal_param_new - Create a HAL parameter"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_bit_new(const char *I<name>, hal_param_dir_t I<dir>, hal_bit_t * I<data_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_float_new(const char *I<name>, hal_param_dir_t I<dir>, hal_float_t * I<data_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_u32_new(const char *I<name>, hal_param_dir_t I<dir>, hal_u32_t * I<data_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_s32_new(const char *I<name>, hal_param_dir_t I<dir>, hal_s32_t * I<data_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_bit_newf(hal_param_dir_t I<dir>, hal_bit_t * I<data_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_float_newf(hal_param_dir_t I<dir>, hal_float_t * I<data_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_u32_newf(hal_param_dir_t I<dir>, hal_u32_t * I<data_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_s32_newf(hal_param_dir_t I<dir>, hal_s32_t * I<data_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_param_new(const char *I<name>, hal_type_t I<type>, hal_param_dir_t I<dir>, void *I<data_addr>, int I<comp_id>) \n"
msgstr ""

#. type: Plain text
msgid "The name to give to the created parameter"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<dir>"
msgstr ""

#. type: Plain text
msgid ""
"The direction of the parameter, from the viewpoint of the component.  It may "
"be one of B<HAL_RO>, or B<HAL_RW> A component may assign a value to any "
"parameter, but other programs (such as halcmd) may only assign a value to a "
"parameter that is B<HAL_RW>."
msgstr ""

#. type: TP
#, no-wrap
msgid "I<data_addr>"
msgstr ""

#. type: Plain text
msgid ""
"The address of the data, which must lie within memory allocated by "
"B<hal_malloc>."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<fmt,\\ ...>"
msgstr ""

#. type: Plain text
msgid "A printf-style format string and arguments"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<type>"
msgstr ""

#. type: Plain text
msgid "The type of the parameter, as specified in B<hal_type_t(3hal)>."
msgstr ""

#. type: Plain text
msgid "The B<hal_param_new> family of functions create a new I<param> object."
msgstr ""

#. type: Plain text
msgid ""
"There are functions for each of the data types that the HAL supports.  Pins "
"may only be linked to signals of the same type."
msgstr ""

#. type: Plain text
msgid "B<hal_type_t(3hal)>"
msgstr ""

#. type: Plain text
msgid "hal_parport - portable access to PC-style parallel ports"
msgstr ""

#. type: Plain text
msgid "#include \"hal_parport.h\""
msgstr ""

#. type: Plain text
msgid ""
"int B<hal_parport_get>(int I<comp_id>, hal_parport_t *I<port>, unsigned "
"short I<base>, unsigned short I<base_hi>, unsigned int I<modes>)"
msgstr ""

#. type: Plain text
msgid "void B<hal_parport_release>(hal_parport_t *I<port>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<port>"
msgstr ""

#. type: Plain text
msgid "A pointer to a hal_parport_t structure"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<base>"
msgstr ""

#. type: Plain text
msgid ""
"The base address of the port (if port E<gt>= 16) or the linux port number of "
"the port (if port E<lt> 16)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<base_hi>"
msgstr ""

#. type: Plain text
msgid ""
"The \"high\" address of the port (location of the ECP registers), 0 to use a "
"probed high address, or -1 to disable the high address"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<modes>"
msgstr ""

#. type: Plain text
msgid ""
"Advise the driver of the desired port modes, from E<lt>linux/parport."
"hE<gt>.  If a linux-detected port does not provide the requested modes, a "
"warning is printed with rtapi_print_msg.  This does not make the port "
"request fail, because unfortunately, many systems that have working EPP "
"parports are not detected as such by Linux."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_parport_get> allocates a parallel port for exclusive use of the named "
"hal component.  The port must be released with B<hal_parport_release> before "
"the component exits with B<hal_exit>."
msgstr ""

#. type: SH
#, no-wrap
msgid "HIGH ADDRESS PROBING"
msgstr ""

#. type: Plain text
msgid ""
"If the port is a parallel port known to Linux, and Linux detected a high I/O "
"address, this value is used.  Otherwise, if base+0x400 is not registered to "
"any device, it is used.  Otherwise, no address is used.  If no high address "
"is detected, port-E<gt>base_hi is 0."
msgstr ""

#. type: SH
#, no-wrap
msgid "PARPORT STRUCTURE"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"typedef struct\n"
"{\n"
"    unsigned short base;\n"
"    unsigned short base_hi;\n"
"    .... // and further unspecified fields\n"
"} hal_parport_t;\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_parport_get> returns a HAL status code.  On success, I<port> is filled "
"out with information about the allocated port.  On failure, the contents of "
"I<port> are undefined except that it is safe (but not required) to pass this "
"port to B<hal_parport_release>."
msgstr ""

#. type: Plain text
msgid "B<hal_parport_release> does not return a value.  It always succeeds."
msgstr ""

#. type: Plain text
msgid "In new code, prefer use of rtapi_parport to hal_parport."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_pin_alias"
msgstr ""

#. type: Plain text
msgid "hal_pin_alias - create an alternate name for a pin"
msgstr ""

#. type: Plain text
msgid ""
"int B<hal_pin_alias>(const char *B<original_name>, const char *B<alias>);"
msgstr ""

#. type: Plain text
msgid "The original name of the pin"
msgstr ""

#. type: Plain text
msgid ""
"The alternate name that may be used to refer to the pin, or NULL to remove "
"any alternate name."
msgstr ""

#. type: Plain text
msgid ""
"A pin may have two names: the original name (the one that was passed to a "
"B<hal_pin_new> function) and an alias."
msgstr ""

#. type: Plain text
msgid ""
"Usually, aliases are for the convenience of users and should be created and "
"destroyed via halcmd.  However, in some cases it is sensible to create "
"aliases directly in a component.  These cases include the case where a pin "
"is renamed, to preserve compatibility with old versions."
msgstr ""

#. type: Plain text
msgid "B<hal_param_alias>(3)"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_pin_new"
msgstr ""

#. type: Plain text
msgid "hal_pin_new - Create a HAL pin"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_bit_new(const char *I<name>, hal_pin_dir_t I<dir>, hal_bit_t ** I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_float_new(const char *I<name>, hal_pin_dir_t I<dir>, hal_float_t ** I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_u32_new(const char *I<name>, hal_pin_dir_t I<dir>, hal_u32_t ** I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_s32_new(const char *I<name>, hal_pin_dir_t I<dir>, hal_s32_t ** I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_port_new(const char *I<name>, hal_pin_dir_t I<dir>, hal_port_t ** I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_bit_newf(hal_pin_dir_t I<dir>, hal_bit_t ** I<data_ptr_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_float_newf(hal_pin_dir_t I<dir>, hal_float_t ** I<data_ptr_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_u32_newf(hal_pin_dir_t I<dir>, hal_u32_t ** I<data_ptr_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_s32_newf(hal_pin_dir_t I<dir>, hal_s32_t ** I<data_ptr_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_port_newf(hal_pin_dir_t I<dir>, hal_port_t ** I<data_ptr_addr>, int I<comp_id>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int hal_pin_new(const char *I<name>, hal_type_t I<type>, hal_pin_dir_t I<dir>, void **I<data_ptr_addr>, int I<comp_id>)\n"
msgstr ""

#. type: Plain text
msgid "The name of the pin"
msgstr ""

#. type: Plain text
msgid ""
"The direction of the pin, from the viewpoint of the component.  It may be "
"one of B<HAL_IN>, B<HAL_OUT>, or B<HAL_IO>.  Any number of B<HAL_IN> or "
"B<HAL_IO> pins may be connected to the same signal, but at most one "
"B<HAL_OUT> pin is permitted.  A component may assign a value to a pin that "
"is B<HAL_OUT> or B<HAL_IO>, but may not assign a value to a pin that is "
"B<HAL_IN>."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<data_ptr_addr>"
msgstr ""

#. type: Plain text
msgid ""
"The address of the pointer-to-data, which must lie within memory allocated "
"by B<hal_malloc>."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<fmt,>"
msgstr ""

#. type: Plain text
msgid "The type of the param, as specified in B<hal_type_t(3hal)>."
msgstr ""

#. type: Plain text
msgid ""
"The B<hal_pin_new> family of functions create a new I<pin> object.  Once a "
"pin has been created, it can be linked to a signal object using "
"B<hal_link>.  A pin contains a pointer, and the component that owns the pin "
"can dereference the pointer to access whatever signal is linked to the pin.  "
"(If no signal is linked, it points to a dummy signal.)"
msgstr ""

#. type: Plain text
msgid "Returns 0 on success, or a negative errno value on failure."
msgstr ""

#. type: Plain text
msgid "B<hal_type_t(3hal)>, B<hal_link(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "funct"
msgstr ""

#. type: Plain text
msgid "hal_ready - indicates that this component is ready"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " hal_ready(int I<comp_id>)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_ready> indicates that this component is ready (has created all its "
"pins, parameters, and functions).  This must be called in any realtime HAL "
"component before its B<rtapi_app_init> exits, and in any userspace component "
"before it enters its main loop."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_set_constructor"
msgstr ""

#. type: Plain text
msgid "hal_set_constructor - Set the constructor function for this component"
msgstr ""

#. type: Plain text
msgid ""
"typedef int (*hal_constructor_t)(const char *prefix, const char *arg); int "
"hal_set_constructor(int I<comp_id>, hal_constructor_t I<constructor>)"
msgstr ""

#. type: Plain text
msgid ""
"I<comp_id> A HAL component identifier returned by an earlier call to "
"B<hal_init>."
msgstr ""

#. type: Plain text
msgid ""
"I<prefix> The prefix to be given to the pins, parameters, and functions in "
"the new instance"
msgstr ""

#. type: Plain text
msgid ""
"arg An argument that may be used by the component to customize this instance."
msgstr ""

#. type: Plain text
msgid ""
"As an experimental feature in HAL 2.1, components may be I<constructable>.  "
"Such a component may create pins and parameters not only at the time the "
"module is loaded, but it may create additional pins and parameters, and "
"functions on demand."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_set_lock"
msgstr ""

#. type: Plain text
msgid "hal_set_lock, hal_get_lock - Set or get the HAL lock level"
msgstr ""

#. type: Plain text
msgid "int hal_set_lock(unsigned char I<lock_type>)"
msgstr ""

#. type: Plain text
msgid "int hal_get_lock()"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<lock_type>"
msgstr ""

#. type: Plain text
msgid ""
"The desired lock type, which may be a bitwise combination of: "
"B<HAL_LOCK_LOAD>, B<HAL_LOCK_CONFIG>, B<HAL_LOCK_PARAMS>, or "
"B<HAL_LOCK_PARAMS>.  B<HAL_LOCK_NONE> or 0 locks nothing, and B<HAL_LOCK_ALL "
"locks everything.>"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_set_lock> Returns a HAL status code.  B<hal_get_lock> returns the "
"current HAL lock level or a HAL status code."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_signal_new"
msgstr ""

#. type: Plain text
msgid ""
"hal_signal_new, hal_signal_delete, hal_link, hal_unlink - Manipulate HAL "
"signals"
msgstr ""

#. type: Plain text
msgid "int hal_signal_new(const char *I<signal_name>, hal_type_t I<type>)"
msgstr ""

#. type: Plain text
msgid "int hal_signal_delete(const char *I<signal_name>)"
msgstr ""

#. type: Plain text
msgid "int hal_link(const char *I<pin_name>, const char *I<signal_name>)"
msgstr ""

#. type: Plain text
msgid "int hal_unlink(const char *I<pin_name>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<signal_name>"
msgstr ""

#. type: Plain text
msgid "The name of the signal"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<pin_name>"
msgstr ""

#. type: Plain text
msgid "The type of the signal, as specified in B<hal_type_t(3hal)>."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_signal_new> creates a new signal object.  Once a signal has been "
"created, pins can be linked to it with B<hal_link>.  The signal object "
"contains the actual storage for the signal data.  Pin objects linked to the "
"signal have pointers that point to the data.  'name' is the name of the new "
"signal.  It may be no longer than HAL_NAME_LEN characters.  If there is "
"already a signal with the same name the call will fail."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_link> links a pin to a signal.  If the pin is already linked to the "
"desired signal, the command succeeds.  If the pin is already linked to some "
"other signal, it is an error.  In either case, the existing connection is "
"not modified.  (Use 'hal_unlink' to break an existing connection.)  If the "
"signal already has other pins linked to it, they are unaffected - one signal "
"can be linked to many pins, but a pin can be linked to only one signal."
msgstr ""

#. type: Plain text
msgid "B<hal_unlink> unlinks any signal from the specified pin."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_signal_delete> deletes a signal object.  Any pins linked to the object "
"are unlinked."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_start_threads"
msgstr ""

#. type: Plain text
msgid "hal_start_threads - Allow HAL threads to begin executing"
msgstr ""

#. type: Plain text
msgid "int hal_start_threads()"
msgstr ""

#. type: Plain text
msgid "int hal_stop_threads()"
msgstr ""

#. type: Plain text
msgid ""
"B<hal_start_threads> starts all threads that have been created.  This is the "
"point at which realtime functions start being called."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_stop_threads> stops all threads that were previously started by "
"B<hal_start_threads>.  It should be called before any component that is part "
"of a system exits."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_export_funct(3hal)>, B<hal_create_thread(3hal)>, "
"B<hal_add_funct_to_thread(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_type_t"
msgstr ""

#. type: Plain text
msgid "hal_type_t - typedefs for HAL datatypes"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESRCIPTION"
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_bool;>"
msgstr ""

#. type: Plain text
msgid "A type which may have a value of 0 or nonzero."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_bit_t;>"
msgstr ""

#. type: Plain text
msgid "A volatile type which may have a value of 0 or nonzero."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_s32_t>;"
msgstr ""

#. type: Plain text
msgid "A volatile type which may have a value from -2147483648 to 2147483647."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_u32_t>;"
msgstr ""

#. type: Plain text
msgid "A volatile type which may have a value from 0 to 4294967295."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_port_t>;"
msgstr ""

#. type: Plain text
msgid "A volatile handle to a port object. Used with hal_port* functions."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<hal_float_t>;"
msgstr ""

#. type: Plain text
msgid ""
"A volatile floating-point type, which typically has the same precision and "
"range as the C type B<double>."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<real_t>;"
msgstr ""

#. type: Plain text
msgid ""
"A nonvolatile floating-point type with at least as much precision as "
"B<hal_float_t>."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef ... B<ireal_t>;"
msgstr ""

#. type: Plain text
msgid "A nonvolatile unsigned integral type the same size as B<hal_float_t>."
msgstr ""

#. type: TP
#, no-wrap
msgid "typedef enum B<hal_type_t>;"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<HAL_BIT>"
msgstr ""

#. type: Plain text
msgid "Corresponds to the type B<hal_bit_t>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<HAL_FLOAT>"
msgstr ""

#. type: Plain text
msgid "Corresponds to the type B<hal_float_t>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<HAL_S32>"
msgstr ""

#. type: Plain text
msgid "Corresponds to the type B<hal_s32_t>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<HAL_U32>"
msgstr ""

#. type: Plain text
msgid "Corresponds to the type B<hal_u32_t>."
msgstr ""

#. type: Plain text
msgid ""
"B<hal_bit_t> is typically a typedef to an integer type whose range is larger "
"than just 0 and 1.  When testing the value of a B<hal_bit_t>, never compare "
"it to 1.  Prefer one of the following:"
msgstr ""

#. type: Plain text
msgid "if(b)"
msgstr ""

#. type: Plain text
msgid "if(b != 0)"
msgstr ""

#. type: Plain text
msgid ""
"It is often useful to refer to a type that can represent all the values as a "
"hal type, but without the volatile qualifier.  The following types "
"correspond with the hal types:"
msgstr ""

#. type: IP
#, no-wrap
msgid "hal_bit_t"
msgstr ""

#. type: Plain text
msgid "int"
msgstr ""

#. type: IP
#, no-wrap
msgid "hal_s32_t"
msgstr ""

#. type: Plain text
msgid "__s32"
msgstr ""

#. type: IP
#, no-wrap
msgid "hal_u32_t"
msgstr ""

#. type: Plain text
msgid "__u32"
msgstr ""

#. type: IP
#, no-wrap
msgid "hal_float_t"
msgstr ""

#. type: Plain text
msgid "hal_real_t"
msgstr ""

#. type: IP
#, no-wrap
msgid "hal_port_t"
msgstr ""

#. type: Plain text
msgid ""
"Take care not to use the types B<s32> and B<u32>.  These will compile in "
"kernel modules but not in userspace, and not for \"realtime components\" "
"when using simulated (userspace) realtime."
msgstr ""

#. type: Plain text
msgid "B<hal_pin_new(3hal)>, B<hal_param_new(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_allocate_bspi_tram"
msgstr ""

#. type: TH
#, no-wrap
msgid "2011-05-31"
msgstr ""

#. type: TH
#, no-wrap
msgid "Hostmot2"
msgstr ""

#. type: Plain text
msgid "hm2_allocate_bspi_tram - Allocate the TRAM regions for a BSPI channel"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<#include E<lt>hostmot2-serial.hE<gt>>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "hm2_allocate_bspi_tram(char* name)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram> Allocate the TRAM memory for bspi instance \"name"
"\".  \"name\" is a unique string given to each bspi channel during hostmot2 "
"setup.  The names of the available channels are printed to standard output "
"during the driver loading process and take the form: hm2_E<lt>board "
"nameE<gt>.E<lt>board indexE<gt>.bspi.E<lt>indexE<gt> For example hm2_5i23.0."
"bspi.0"
msgstr ""

#. type: Plain text
msgid ""
"This function allocates the TRAM memory and sets up the regular data "
"transfers.  It should be called only when all the frames have been defined "
"by calls to hm2_tram_add_bspi_frame()."
msgstr ""

#. type: Plain text
msgid "Returns 0 on success and -1 on failure."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_bspi_set_read_function(3hm2)>, B<hm2_bspi_setup_chan(3hm2)>, "
"B<hm2_bspi_set_write_function(3hm2)>, B<hm2_bspi_write_chan(3hm2)>, "
"B<hm2_tram_add_bspi_frame(3hm2)>, See src/hal/drivers mesa_7i65.comp for an "
"example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_bspi_set_read_function"
msgstr ""

#. type: Plain text
msgid ""
"hm2_bspi_set_read_function - Register a function to handle the tram write "
"phase of a hostmot2 buffered SPI driver."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_bspi_set_read_function(char *name, void *func, void *subdata)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_bspi_set_read_function> registers a function in an external driver to "
"be called every time that the main Hostmot2 driver calls the generic "
"\"process_tram_read\" function.  The names of the available channels are "
"printed with rtapi_print_msg during the driver loading process and take the "
"form:"
msgstr ""

#. type: Plain text
msgid "hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>.bspi.E<lt>indexE<gt>"
msgstr ""

#. type: Plain text
msgid "For example hm2_5i23.0.bspi.0."
msgstr ""

#. type: Plain text
msgid ""
"\"func\" should be a pointer to a function in the sub driver which is to be "
"called to process the results of the BSPI TRAM read phase. The function must "
"take a single argument, a pointer to an individual instance of the internal "
"driver. If defined in comp then the function must B<not> use the FUNCTION()  "
"convenience macro, and the argument to the function in the definition must "
"B<always> be (struct state *inst)."
msgstr ""

#. type: Plain text
msgid ""
"\"subdata\" is a pointer to the driver instance internal data. In the case "
"of a driver written in comp this will always be \"inst\" in the function "
"call and the call should be anywhere in the EXTRA_SETUP code."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram(3hm2)>, B<hm2_bspi_setup_chan(3hm2)>, "
"B<hm2_bspi_set_write_function(3hm2)>, B<hm2_bspi_write_chan(3hm2)>, "
"B<hm2_tram_add_bspi_frame(3hm2)>, src/hal/drivers mesa_7i65.comp in the "
"LinuxCNC source distribution."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_bspi_setup_chan"
msgstr ""

#. type: Plain text
msgid "hm2_bspi_setup_chan - setup a Hostmot2 bspi channel"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"int hm2_bspi_setup_chan(char *name, int chan, int cs, int bits, float mhz,\n"
"int delay, int cpol, int cpha, int noclear, int noecho)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_bspi_setup_chan> allows a realtime component to claim and configure a "
"BSPI channel on a previously configured hostmot2 board."
msgstr ""

#. type: IP
#, no-wrap
msgid "name"
msgstr ""

#. type: Plain text
msgid ""
"A unique string given to the BSPI channel during hostmot2 setup.  The names "
"of the available channels are printed to standard output during the driver "
"loading process and take the form B<hm2_>I<board-name>B<.>I<board-index>B<."
"bspi.>I<bspi-index>.  For example, the first index on the first hm2_5i23 "
"board would be called hm2_5i23.0.bspi.0."
msgstr ""

#. type: IP
#, no-wrap
msgid "chan"
msgstr ""

#. type: Plain text
msgid ""
"Channels are numbered 0 to 15.  The value on the chip-select lines is set by "
"cs and need not match the channel number."
msgstr ""

#. type: IP
#, no-wrap
msgid "cs"
msgstr ""

#. type: Plain text
msgid ""
"The chip select line(s) to assert when accessing this channel.  BSPI "
"supports 4 chip select lines, so the valid range for cs is 0-15."
msgstr ""

#. type: IP
#, no-wrap
msgid "bits"
msgstr ""

#. type: Plain text
msgid ""
"sets the bit-length of the SPI packet. The maximum supported length is 64 "
"bits but this will span two read FIFO entries and will need special "
"handling. (values 32 and below require no special handling)"
msgstr ""

#. type: IP
#, no-wrap
msgid "mhz"
msgstr ""

#. type: Plain text
msgid ""
"sets the chip communication rate. The maximum value for this is half the "
"FPGA base frequency, so for example with a 48MHz 5i23 the max SPI frequency "
"is 24Mhz. Values in excess of the max supported will be silently rounded "
"down."
msgstr ""

#. type: IP
#, no-wrap
msgid "delay"
msgstr ""

#. type: Plain text
msgid "sets the chip select valid delay (in nS)"
msgstr ""

#. type: IP
#, no-wrap
msgid "cpha\\ and\\ cpol"
msgstr ""

#. type: Plain text
msgid "Set the clock phase and polarity (according to the device datasheet)."
msgstr ""

#. type: IP
#, no-wrap
msgid "noclear"
msgstr ""

#. type: Plain text
msgid ""
"controls whether the frame clear bit is set after the 32 bit buffer "
"transfer. This parameter should be set to 1 when the frame length is greater "
"than 32 bits and the next data in the FIFO contains the other bits."
msgstr ""

#. type: IP
#, no-wrap
msgid "noecho"
msgstr ""

#. type: Plain text
msgid "Set to 1 for devices which do not return data (such as DACs)."
msgstr ""

#. type: IP
#, no-wrap
msgid "samplelate"
msgstr ""

#. type: Plain text
msgid ""
"Set to 1 to sample the received SPI data 1/2 SPI clock later than normal.  "
"This is useful when high clock rates or isolation cause significant delays "
"from clock to received data."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram(3hm2)>, B<hm2_bspi_set_read_function(3hm2)>, "
"B<hm2_bspi_set_write_function(3hm2)>, B<hm2_bspi_write_chan(3hm2)>, "
"B<hm2_tram_add_bspi_frame(3hm2)>, See src/hal/drivers mesa_7i65.comp for an "
"example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_bspi_set_write_function"
msgstr ""

#. type: Plain text
msgid ""
"hm2_bspi_set_write_function - Register a function to handle the tram write "
"phase of a hostmot2 buffered SPI driver."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_bspi_set_write_function(char *name, void *func, void *subdata)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_bspi_set_write_function> registers a function in an external driver to "
"be called every time that the main Hostmot2 driver calls the generic "
"\"prepare_tram_write\" functions.  The names of the available channels are "
"printed with rtapi_print_msg during the driver loading process and take the "
"form:"
msgstr ""

#. type: Plain text
msgid ""
"\"func\" should be a pointer to a function in the sub driver which is to be "
"called to process the pins into BSPI write registers prior to the regular "
"TRAM write phase. The function must take a single argument, a pointer to an "
"individual instance of the internal driver. If defined in comp then the "
"function must B<not> use the FUNCTION() convenience macro, and the argument "
"to the function in the definition must B<always> be (struct state *inst)."
msgstr ""

#. type: Plain text
msgid ""
"\"subdata\" is a pointer to the driver instance internal data. In the case "
"of a driver written in comp this will always be \"inst\" in the function "
"call."
msgstr ""

#. type: Plain text
msgid ""
"If using comp then the call to this function should be anywhere in the "
"EXTRA_SETUP code."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram(3hm2)>, B<hm2_bspi_set_read_function(3hm2)>, "
"B<hm2_bspi_setup_chan(3hm2)>, B<hm2_bspi_write_chan(3hm2)>, "
"B<hm2_tram_add_bspi_frame(3hm2)>, src/hal/drivers mesa_7i65.comp in the "
"LinuxCNC source distribution."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_bspi_write_chan"
msgstr ""

#. type: Plain text
msgid "hm2_bspi_write_chan - write data to a Hostmot2 Buffered SPI channel"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "hm2_bspi_write_chan(char* name, int chan, u32 val)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_bspi_write_chan> write one-time data to the bspi channel \"chan\" on "
"the bspi instance \"name\". \"name\" is a unique string given to each bspi "
"channel during hostmot2 setup. The names of the available channels are "
"printed to standard output during the driver loading process and take the "
"form: hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>.bspi.E<lt>indexE<gt> "
"For example hm2_5i23.0.bspi.0"
msgstr ""

#. type: Plain text
msgid ""
"This function performs a one-time write of data to the specified channel. It "
"is typically used for setup and chip enabling purposes. It should not be "
"used in the main loop for regular data transfers (but is appropriate to use "
"for on-the- fly setup changes)."
msgstr ""

#. type: Plain text
msgid ""
"May be called from init/cleanup code and from within realtime tasks.  Not "
"available in userspace components."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram(3hm2)>, B<hm2_bspi_set_read_function(3hm2)>, "
"B<hm2_bspi_setup_chan(3hm2)>, B<hm2_bspi_set_write_function(3hm2)>, "
"B<hm2_tram_add_bspi_frame(3hm2)>, See src/hal/drivers mesa_7i65.comp for an "
"example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_pktuart_read"
msgstr ""

#. type: TH
#, no-wrap
msgid "2016-02-26"
msgstr ""

#. type: Plain text
msgid "hm2_pktuart_read - read data from a Hostmot2 UART buffer"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_pktuart_read(char *name,  unsigned char data[], rtapi_u8 *num_frames, rtapi_u16 *max_frame_length, rtapi_u16 frame_sizes[])\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_pktuart_read> reads data from the PktUART \"name\".  \"name\" is a "
"unique string given to each PktUART during hostmot2 setup. The names of the "
"available channels are printed to standard output during the driver loading "
"process and take the form: hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>."
"pktuart.E<lt>indexE<gt> For example hm2_5i25.0.pktuart.0"
msgstr ""

#. type: Plain text
msgid ""
"This function reads a variable number of PktUART packets from the the "
"specified channel. It should be used inside a realtime HAL component "
"registered with the main hostmot2 driver using the function "
"hm2_pktuart_setup in the setup code."
msgstr ""

#. type: Plain text
msgid ""
"\"(*num_frames)*(*max_frame_length)\" should be E<lt>= sizeof \"data\", "
"which one tries to estimate or guess before calling the function.  If there "
"are more bytes in the buffer than the size of data array is, then "
"RxArraySizeError is returned."
msgstr ""

#. type: Plain text
msgid ""
"Note that the PktUART MaxFrameSize is 1024 bytes as hard-coded in hostmot2."
"vhd ."
msgstr ""

#. type: Plain text
msgid ""
"Returns the number of bytes read on success and negative error codes on "
"failure."
msgstr ""

#. type: Plain text
msgid ""
"\"num_frames\" which pointer is passed by value is set to the number of "
"successfully datagrams read."
msgstr ""

#. type: Plain text
msgid "Negative error codes are:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-1 - low level read/write error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-EINVAL - any PktUART configuration error per instance>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxStartbitError - Rx mode register error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxOverrunError - Rx mode register error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxRCFIFOError - Rx mode register error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxPacketOverrrunError - Rx count register error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxPacketStartbitError - Rx count register error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxPacketSizeZero - the size of the received packet is zero>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_RxArraySizeError - data array is too small for all the data in the buffer>"
msgstr ""

#. type: TP
#, no-wrap
msgid "Numeric values of the HM2_PKTUART_ error codes are defined in src/hal/drivers/mesa-hostmot2/pktuart_errno.h ."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<man hm2_pktuart_setup, man hm2_pktuart_send>"
msgstr ""

#. type: TP
#, no-wrap
msgid "See src/hal/drivers/mesa_pktgyro_test.comp for an example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_pktuart_send"
msgstr ""

#. type: TH
#, no-wrap
msgid "2016-02-29"
msgstr ""

#. type: Plain text
msgid "hm2_pktuart_send - write data to a Hostmot2 PktUART"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_uart_send(char *name,  unsigned char data[], rtapi_u8 *num_frames, rtapi_u16 frame_sizes[])\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_pktuart_send> writes \"num_frames\" of data to the PktUART \"name\" "
"from the buffer \"data\" with frame sizes preset in \"frame_sizes[]\" "
"array.  \"frame_sizes[]\" array should not have more than 16 elements as "
"this is the highest number of frames that can be sent out in the so called "
"\"burst mode\"."
msgstr ""

#. type: Plain text
msgid ""
"\"name\" is a unique string given to each PktUART during hostmot2 setup. The "
"names of the available channels are printed to standard output during the "
"driver loading process and take the form: hm2_E<lt>board nameE<gt>."
"E<lt>board indexE<gt>.pktuart.E<lt>indexE<gt> For example hm2_5i25.0."
"pktuart.0 ."
msgstr ""

#. type: Plain text
msgid ""
"This function sends a variable number of PktUART packets (less or equal 16) "
"from the the specified channel. It should be used inside a realtime HAL "
"component registered with the main hostmot2 driver using the function "
"hm2_pktuart_setup in the setup code."
msgstr ""

#. type: Plain text
msgid ""
"Returns the number of bytes sent on success and negative error codes on "
"failure."
msgstr ""

#. type: Plain text
msgid ""
"\"num_frames\" which pointer is passed by value is set to the number of "
"successfully datagrams sent out."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-HM2_PKTUART_TxSCFIFOError - Tx Send Count FIFO Error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "Numeric values of HM2_PKTUART_ error codes are defined in src/hal/drivers/mesa-hostmot2/pktuart_errno.h ."
msgstr ""

#. type: Plain text
msgid "B<man hm2_pktuart_setup, man hm2_pktuart_read>"
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_pktuart_setup"
msgstr ""

#. type: Plain text
msgid "hm2_pktuart_setup - setup a Hostmot2 PktUART instance"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_pktuart_setup(char *name, int bitrate, rtapi_s32 tx_mode, rtapi_s32 rx_mode, int txclear, int rxclear)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_pktuart_setup> Setup the bitrate for the PktUART named \"name\".  "
"\"name\" is a unique string given to each PktUART during hostmot2 setup. The "
"names of the available UARTs are printed to standard output during the "
"driver loading process and take the form: hm2_E<lt>board nameE<gt>."
"E<lt>board indexE<gt>.pktuart.E<lt>indexE<gt> For example hm2_5i25.0."
"pktuart.0 ."
msgstr ""

#. type: Plain text
msgid ""
"Hostmot2 UARTs are good to about 10 Mb/sec, but higher data rates (with any "
"UART)  trade speed for susceptibility to impulse noise."
msgstr ""

#. type: Plain text
msgid ""
"The PktUART function allows different RX and TX bitrates, but that is not "
"currently supported by this driver."
msgstr ""

#. type: Plain text
msgid "tx_mode is bit mask defined in the Hostmot2 regmap:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 21\t FrameBuffer Has Data>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bits 20..16 Frames to send>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bits 15..8 InterFrame delay in bit times>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 7\t Send busy, Transmit Logic active>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 6\t Drive Enable bit (enables external RS-422/485 Driver when set)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 5\t Drive enable Auto (Automatic external drive enable)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 4\t SCFIFO Error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bits 3..0 Drive enable delay (delay from asserting drive enable>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"     \t           to start of data transmit. In CLock Low periods \n"
"\t\t\t\t   \n"
"\t\t\t\t   \n"
msgstr ""

#. type: TP
#, no-wrap
msgid "rx_mode is bit mask defined in the Hostmot2 regmap:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 21\t FrameBuffer has data \\&\t\\&>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bits 20..16 Frames received>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 7\t Rx Logic active>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 6\t RXMask>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 5 Unused>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 4\t RCFIFO Error>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 3\t RXEnable (must be set to receive packets)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 2\t RXMask Enable (enables input data masking when transmitting)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 1\t Overrun error (no stop bit when expected) (sticky)>"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<Bit 0\t False Start bit error (sticky)>"
msgstr ""

#. type: Plain text
msgid ""
"rx_mode and tx_mode registers are currently write-only.  One can get the "
"instance number of a PktUART instance with the help of hm2_get_pktuart "
"function in order to read and write to Rx and Tx registers."
msgstr ""

#. type: Plain text
msgid ""
"To write only to the tx_mode DriveEnable bit call this function with the "
"bitrate unchanged and -1 as the rx_mode To change bitrate without altering "
"mode settings send -1 to both modes."
msgstr ""

#. type: Plain text
msgid ""
"txclear==1 aborts any sends in process, clears the data FIFO and clears the "
"send count FIFO."
msgstr ""

#. type: Plain text
msgid ""
"rxclear==1 aborts any receives in process, clears the data FIFO and clears "
"the receive count FIFO."
msgstr ""

#. type: Plain text
msgid "txclear!=1 or rxclear!=1 lets the corresponding registers unchanged."
msgstr ""

#. type: Plain text
msgid "Returns 0 on success and -1 or -EINVAL on failure."
msgstr ""

#. type: Plain text
msgid "B<man hm2_pktuart_send, man hm2_pktuart_read>"
msgstr ""

#. type: TP
#, no-wrap
msgid "See src/hal/drivers/mesa_pktgyro_test.comp for an example usage. "
msgstr ""

#. type: SH
#, no-wrap
msgid "FUTURE DEVELOPMENT"
msgstr ""

#. type: Plain text
msgid ""
"This function is subject to change as digital filters will be added on the "
"Rx UART, and bit rate register will gain a 12 bit field for the input filter "
"constant."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_tram_add_bspi_frame"
msgstr ""

#. type: Plain text
msgid "hm2_tram_add_bspi_frame - add a register-write to the Hostmot2 TRAM"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "hm2_tram_add_bspi_frame(char *name, int chan, u32 **wbuff, u32 **rbuff)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_tram_add_bspi_frame> Add a regular (every thread) write event to the "
"Hostmot2 tram for bspi instance \"name\". \"name\" is a unique string given "
"to each bspi channel during hostmot2 setup. The names of the available "
"channels are printed to standard output during the driver loading process "
"and take the form: hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>.bspi."
"E<lt>indexE<gt> For example hm2_5i23.0.bspi.0"
msgstr ""

#. type: Plain text
msgid ""
"This function is used to add a regular, every thread, write or write-read "
"transaction to the Translation RAM system. A write need not have a read (use "
"0 for **rbuff) but it is an error to have a read without a write. Note that "
"the TRAM list is not actioned until the hm2_allocate_bspi_tram function is "
"called.  The read and write parameters must be pointers to pointers, as TRAM "
"re-maps the buffers into contiguous memory."
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_allocate_bspi_tram(3hm2)>, B<hm2_bspi_set_read_function(3hm2)>, "
"B<hm2_bspi_setup_chan(3hm2)>, B<hm2_bspi_set_write_function(3hm2)>, "
"B<hm2_bspi_write_chan(3hm2)>, See src/hal/drivers mesa_7i65.comp for an "
"example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_uart_read"
msgstr ""

#. type: TH
#, no-wrap
msgid "2012-05-23"
msgstr ""

#. type: Plain text
msgid "hm2_uart_read - read data from a Hostmot2 UART buffer"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_uart_read(char *name, unsigned char *data)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_uart_read> read data from the UART \"name\".  \"name\" is a unique "
"string given to each UART during hostmot2 setup. The names of the available "
"channels are printed to standard output during the driver loading process "
"and take the form: hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>.uart."
"E<lt>indexE<gt> For example hm2_5i23.0.uart.0"
msgstr ""

#. type: Plain text
msgid ""
"This function reads a variable number of bytes from the the specified "
"channel.It should be used inside a realtime HAL component registered with "
"the main hostmot2 driver using the function hm2_uart_set_read_function in "
"the setup code."
msgstr ""

#. type: Plain text
msgid ""
"Note that the UART Receive FIFO is only 16 bytes deep,(the transmit FIFO is "
"64 bytes) and \"data\" needs to be at least that large or undefined mayhem "
"will ensue."
msgstr ""

#. type: Plain text
msgid "Returns the number of bytes read on success and -1 on failure."
msgstr ""

#. type: Plain text
msgid ""
"man hm2_uart_setup, man hm2_uart_send See src/hal/drivers mesa_uart.comp for "
"an example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_uart_send"
msgstr ""

#. type: Plain text
msgid "hm2_uart_send - write data to a Hostmot2 UART"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_uart_send(char* name,  unsigned char data[], int count)\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_uart_send> write 'count' bytes of data to the UART \"name\" from the "
"buffer 'data'."
msgstr ""

#. type: Plain text
msgid ""
"The UART FIFO is 64 bytes deep, attempts to transmit more than 64 bytes may "
"have unexpected effects."
msgstr ""

#. type: Plain text
msgid ""
"\"name\" is a unique string given to each UART during hostmot2 setup. The "
"names of the available channels are printed to standard output during the "
"driver loading process and take the form: hm2_E<lt>board nameE<gt>."
"E<lt>board indexE<gt>.uart.E<lt>indexE<gt> For example hm2_5i23.0.uart.0"
msgstr ""

#. type: Plain text
msgid ""
"This function performs writes of data to the specified UART.It should be "
"used inside a function in a realtime or userspace HAL component."
msgstr ""

#. type: Plain text
msgid "Returns the number of bytes sent on success and -1 on failure."
msgstr ""

#. type: Plain text
msgid ""
"man hm2_uart_setup, man hm2_uart_read See src/hal/drivers mesa_uart.comp for "
"an example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "hm2_uart_setup"
msgstr ""

#. type: Plain text
msgid "hm2_uart_setup - setup a Hostmot2 UART"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "int hm2_uart_setup(char *name, int bitrate, s32 tx_mode, s32 rx_mode){\n"
msgstr ""

#. type: Plain text
msgid ""
"B<hm2_uart_setup> Setup the bitrate for the UART named \"name\".  \"name\" "
"is a unique string given to each UART during hostmot2 setup. The names of "
"the available UARTs are printed to standard output during the driver loading "
"process and take the form: hm2_E<lt>board nameE<gt>.E<lt>board indexE<gt>."
"uart.E<lt>indexE<gt> For example hm2_5i23.0.uart.0 The minimum bitrate is "
"approximately 50bps, and the maximum around the FPGA frequency, 48MHz for a "
"5i23.  The UART function allows different RX and TX bitrates, but that is "
"not currently supported by this driver"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"tx_mode is bit mask defined in the Hostmot2 regmap:\n"
"Bit 0..3 = TXEnable delay. TXEnable delay specifies the transmit data \n"
"        holdoff time from the TXenable signal valid state. This is used for \n"
"        RS-485 (half duplex) operation, to delay transmit data until the driver \n"
"        is enabled, allowing for driver enable delays, isolation barrier delays \n"
"        etc. Delay is in units of ClockLow period.\n"
"Bit 4 = FIFOError, it indicates that a host push has overflowed the FIFO\n"
"        (Mainly for driver debugging)\n"
"Bit 5 = DriveEnableAuto, When set, enables Drive when any data is in FIFO or \n"
"        Xmit Shift register,removes drive when FIFO and Xmit shift register \n"
"        are empty.\n"
"Bit 6 = DriveEnableBit, If DriveEnableAuto is 0, controls Drive (\n"
"        for software control of Xmit drive)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"rx_mode is bit mask defined in the Hostmot2 regmap:\n"
"Bit 0 = FalseStart bit Status, 1 = false start bit detected\n"
"Bit 1 = OverRun Status, 1 = overrun condition detected (no valid stop bit)\n"
"Bit 2 = RXMaskEnable, 1= enable RXMask for half duplex operation,\n"
"    0 = ignore RXMask\n"
"Bit 4 = FIFOError, indicates that a host read has attempted to read more \n"
"        data than available. (mainly for driver debugging)\n"
"Bit 5 = LostDataError, indicates that data was received with no room in FIFO, \n"
"        therefore lost\n"
"Bit 6 = RXMask, RO RXMASK status\n"
"Bit 7 = FIFO Has Data\n"
msgstr ""

#. type: Plain text
msgid ""
"rx_mode and tx_mode registers are currently write-only. There should "
"possibly be a get-status function."
msgstr ""

#. type: Plain text
msgid "Returns0 on success and -1 on failure"
msgstr ""

#. type: Plain text
msgid ""
"man hm2_uart_send, man hm2_uart_read See src/hal/drivers mesa_uart.comp for "
"an example usage."
msgstr ""

#. type: TH
#, no-wrap
msgid "intro"
msgstr ""

#. type: Plain text
msgid "hal - Introduction to the HAL API"
msgstr ""

#. type: Plain text
msgid ""
"HAL stands for Hardware Abstraction Layer, and is used by LinuxCNC to "
"transfer realtime data to and from I/O devices and other low-level modules."
msgstr ""

#. type: Plain text
msgid ""
"B<hal.h> defines the API and data structures used by the HAL.  This file is "
"included in both realtime and non-realtime HAL components.  HAL uses the "
"RTPAI real time interface, and the #define symbols RTAPI and ULAPI are used "
"to distinguish between realtime and non-realtime code.  The API defined in "
"this file is implemented in hal_lib.c and can be compiled for linking to "
"either realtime or user space HAL components."
msgstr ""

#. type: Plain text
msgid ""
"The HAL is a very modular approach to the low level parts of a motion "
"control system.  The goal of the HAL is to allow a systems integrator to "
"connect a group of software components together to meet whatever I/O "
"requirements he (or she) needs.  This includes realtime and non-realtime I/"
"O, as well as basic motor control up to and including a PID position loop.  "
"What these functions have in common is that they all process signals.  In "
"general, a signal is a data item that is updated at regular intervals.  For "
"example, a PID loop gets position command and feedback signals, and produces "
"a velocity command signal."
msgstr ""

#. type: Plain text
msgid ""
"HAL is based on the approach used to design electronic circuits.  In "
"electronics, off-the-shelf components like integrated circuits are placed on "
"a circuit board and their pins are interconnected to build whatever overall "
"function is needed.  The individual components may be as simple as an op-"
"amp, or as complex as a digital signal processor.  Each component can be "
"individually tested, to make sure it works as designed.  After the "
"components are placed in a larger circuit, the signals connecting them can "
"still be monitored for testing and troubleshooting."
msgstr ""

#. type: Plain text
msgid ""
"Like electronic components, HAL components have pins, and the pins can be "
"interconnected by signals."
msgstr ""

#. type: Plain text
msgid ""
"In the HAL, a I<signal> contains the actual data value that passes from one "
"pin to another.  When a signal is created, space is allocated for the data "
"value.  A I<pin> on the other hand, is a pointer, not a data value.  When a "
"pin is connected to a signal, the pin's pointer is set to point at the "
"signal's data value.  This allows the component to access the signal with "
"very little run-time overhead.  (If a pin is not linked to any signal, the "
"pointer points to a dummy location, so the realtime code doesn't have to "
"deal with null pointers or treat unlinked variables as a special case in any "
"way.)"
msgstr ""

#. type: Plain text
msgid ""
"There are three approaches to writing a HAL component.  Those that do not "
"require hard realtime performance can be written as a single user mode "
"process.  Components that need hard realtime performance but have simple "
"configuration and init requirements can be done as a single kernel module, "
"using either pre-defined init info, or insmod-time parameters.  Finally, "
"complex components may use both a kernel module for the realtime part, and a "
"user space process to handle ini file access, user interface (possibly "
"including GUI features), and other details."
msgstr ""

#. type: Plain text
msgid ""
"HAL uses the RTAPI/ULAPI interface.  If RTAPI is #defined hal_lib.c would "
"generate a kernel module hal_lib.o that is insmoded and provides the "
"functions for all kernel module based components.  The same source file "
"compiled with the ULAPI #define would make a user space hal_lib.o that is "
"staticlly linked to user space code to make user space executables.  The "
"variable lists and link information are stored in a block of shared memory "
"and protected with mutexes, so that kernel modules and any of several user "
"mode programs can access the data."
msgstr ""

#. type: Plain text
msgid "For an explanation of realtime considerations, see B<intro(3rtapi)>."
msgstr ""

#. type: SH
#, no-wrap
msgid "HAL STATUS CODES"
msgstr ""

#. type: Plain text
msgid ""
"Except as noted in specific manual pages, HAL returns negative errno values "
"for errors, and nonnegative values for success."
msgstr ""

#. type: Plain text
msgid "B<intro(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "2006-10-02"
msgstr ""

#. type: Plain text
msgid "rtapi - Introduction to the RTAPI API"
msgstr ""

#. type: Plain text
msgid ""
"RTAPI is a library providing a uniform API for several real time operating "
"systems.  As of LinuxCNC 2.7, POSIX threads and RTAI are supported."
msgstr ""

#. type: SH
#, no-wrap
msgid "HEADER FILES"
msgstr ""

#. type: SS
#, no-wrap
msgid "rtapi.h"
msgstr ""

#. type: Plain text
msgid ""
"The file B<rtapi.h> defines the RTAPI for both realtime and non-realtime "
"code.  This is a change from Rev 2, where the non-realtime (user space) API "
"was defined in ulapi.h and used different function names.  The symbols RTAPI "
"and ULAPI are used to determine which mode is being compiled, RTAPI for "
"realtime and ULAPI for non-realtime."
msgstr ""

#. type: SS
#, no-wrap
msgid "rtapi_math.h"
msgstr ""

#. type: Plain text
msgid ""
"The file rtapi_math.h defines floating-point functions and constants.  It "
"should be used instead of E<lt>math.hE<gt> in rtapi real-time components."
msgstr ""

#. type: SS
#, no-wrap
msgid "rtapi_string.h"
msgstr ""

#. type: Plain text
msgid ""
"The file rtapi_string.h defines string-related functions.  It should be used "
"instead of E<lt>string.hE<gt> in rtapi real-time components."
msgstr ""

#. type: SS
#, no-wrap
msgid "rtapi_byteorder.h"
msgstr ""

#. type: Plain text
msgid ""
"This file defines the preprocessor macros RTAPI_BIG_ENDIAN, "
"RTAPI_LITTLE_ENDIAN, and RTAPI_FLOAT_BIG_ENDIAN as true or false depending "
"on the characteristics of the target system.  It should be used instead of "
"B<E<lt>endian.hE<gt>> (userspace) or B<E<lt>linux/byteorder.hE<gt>> (kernel "
"space)."
msgstr ""

#. type: SS
#, no-wrap
msgid "rtapi_limits.h"
msgstr ""

#. type: Plain text
msgid ""
"This file defines the minimum and maximum value of some fundamental integral "
"types, such as INT_MIN and INT_MAX.  This should be used instead of "
"B<E<lt>limits.hE<gt>> because that header file is not available to kernel "
"modules."
msgstr ""

#. type: SS
#, no-wrap
msgid "Userspace code"
msgstr ""

#. type: Plain text
msgid ""
"Certain functions are not available in userspace code.  This includes "
"functions that perform direct device access such as B<rtapi_inb(3)>."
msgstr ""

#. type: SS
#, no-wrap
msgid "Init/cleanup code"
msgstr ""

#. type: Plain text
msgid ""
"Certain functions may only be called from realtime init/cleanup code.  This "
"includes functions that perform memory allocation, such as "
"B<rtapi_shmem_new(3)>."
msgstr ""

#. type: SS
#, no-wrap
msgid "Realtime code"
msgstr ""

#. type: Plain text
msgid ""
"Only a few functions may be called from realtime code.  This includes "
"functions that perform direct device access such as B<rtapi_inb(3)>.  It "
"excludes most Linux kernel APIs such as do_gettimeofday(3) and many rtapi "
"APIs such as rtapi_shmem_new(3)."
msgstr ""

#. type: SS
#, no-wrap
msgid "Simulator"
msgstr ""

#. type: Plain text
msgid ""
"For an RTAPI module to be buildable in the \"sim\" environment (fake "
"realtime system without special privileges), it must not use B<any> linux "
"kernel APIs, and must not use the RTAPI APIs for direct device access such "
"as B<rtapi_inb(3)>.  This automatically includes any hardware device "
"drivers, and also devices which use Linux kernel APIs to do things like "
"create special devices or entries in the B</proc> filesystem."
msgstr ""

#. type: SH
#, no-wrap
msgid "RTAPI STATUS CODES"
msgstr ""

#. type: Plain text
msgid ""
"Except as noted in specific manual pages, RTAPI returns negative errno "
"values for errors, and nonnegative values for success."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_app_exit"
msgstr ""

#. type: TH
#, no-wrap
msgid "2008-05-26"
msgstr ""

#. type: Plain text
msgid "rtapi_app_exit - User-provided function to shut down a component"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<#include E<lt>rtapi_app.hE<gt>>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<void rtapi_app_exit(void) {>I<...>B<}>\n"
msgstr ""

#. type: Plain text
msgid ""
"The body of B<rtapi_app_exit>, which is provided by the component author, "
"generally consists of a call to rtapi_exit or hal_exit, preceded by other "
"component-specific shutdown code."
msgstr ""

#. type: Plain text
msgid ""
"This code is called when unloading a component which successfully "
"initialized (i.e., returned zero from its B<rtapi_app_main>).  It is not "
"called when the component did not successfully initialize."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN CODE"
msgstr ""

#. type: Plain text
msgid "None."
msgstr ""

#. type: Plain text
msgid ""
"Called automatically by the rtapi infrastructure in an initialization (not "
"realtime) context."
msgstr ""

#. type: Plain text
msgid "B<rtapi_app_main(3rtapi)>, B<rtapi_exit(3rtapi)>, B<hal_exit(3hal)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_app_main"
msgstr ""

#. type: Plain text
msgid "rtapi_app_main - User-provided function to initialize a component"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<int rtapi_app_main(void) {>I<...>B<}>\n"
msgstr ""

#. type: Plain text
msgid ""
"The body of B<rtapi_app_main>, which is provided by the component author, "
"generally consists of a call to rtapi_init or hal_init, followed by other "
"component-specific initialization code."
msgstr ""

#. type: Plain text
msgid ""
"Return 0 for success.  Return a negative errno value (e.g., -EINVAL) on "
"error.  Existing code also returns RTAPI or HAL error values, but using "
"negative errno values gives better diagnostics from insmod."
msgstr ""

#. type: Plain text
msgid "B<rtapi_app_exit(3rtapi)>, B<rtapi_init(3rtapi)>, B<hal_init(3hal)>"
msgstr ""

#. type: Plain text
msgid "rtapi_atomic - subset of C11 E<lt>stdatomic.hE<gt>"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_atomic.hE<gt>"
msgstr ""

#. type: Plain text
msgid "enum memory_order { ... };"
msgstr ""

#. type: Plain text
msgid "#define atomic_store(obj, desired)..."
msgstr ""

#. type: Plain text
msgid "#define atomic_store_explicit(obj, desired, order)..."
msgstr ""

#. type: Plain text
msgid "#define atomic_load(obj)..."
msgstr ""

#. type: Plain text
msgid "#define atomic_load_explicit(obj, order)..."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<volatile A*> I<obj>"
msgstr ""

#. type: Plain text
msgid ""
"A pointer to a volatile object that is the destination of the store or the "
"source of the load.  The pointer must have an appropriate type and alignment "
"such that the underlying store or load operation itself is atomic; at a "
"minimum, a properly aligned \"int\" may be assumed to be such a type.  "
"Improper size or alignment are undiagnosed errors."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<C> I<desired>"
msgstr ""

#. type: Plain text
msgid ""
"The value to be stored in the object.  \"*obj = desired\" must be well-"
"formed."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<memory_order> order"
msgstr ""

#. type: Plain text
msgid "The required memory ordering semantic."
msgstr ""

#. type: Plain text
msgid ""
"This header provides at least the subset of C11's E<lt>stdatomic.hE<gt> "
"given above.  When there is an ordering requirement for multiple values read "
"or written in RTAPI shared memory areas by other threads of execution, "
"including the values of HAL pins and parameters, these functions (or "
"function-like macros) are the only way to ensure the ordering requirement is "
"obeyed.  Otherwise, according to architecture-specific rules, loads and "
"stores may be reordered from their normal source code order."
msgstr ""

#. type: Plain text
msgid ""
"For example, to leave a message in a shared memory area from one thread and "
"retrieve it from another, the writer must use an atomic store for the "
"\"message is complete\" variable, and the reader must use an atomic load "
"when checking that variable:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"// producer\n"
"*message = 42;\n"
"atomic_store_explicit(message_ready, 1, memory_order_release);\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"// consumer\n"
"while(atomic_load_explicit(message_ready, memory_order_acquire) == 0) sched_yield();\n"
"printf(\"message was %d\\en\", *message); // must print 42\n"
msgstr ""

#. type: Plain text
msgid "May be called from any code."
msgstr ""

#. type: Plain text
msgid ""
"B<atomic_load> and B<atomic_load_explicit> return the value pointed to by "
"the I<obj> argument."
msgstr ""

#. type: Plain text
msgid "B<atomic_store> and B<atomic_store_explicit> have no return value."
msgstr ""

#. type: Plain text
msgid ""
"B<E<lt>stdatomic.hE<gt>> (C11), B<E<lt>rtapi_bitops.hE<gt>> (for other "
"atomic memory operations supported by rtapi)"
msgstr ""

#. type: TH
#, no-wrap
msgid "2014-06-28"
msgstr ""

#. type: Plain text
msgid "rtapi_bool.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_bool.hE<gt>"
msgstr ""

#. type: Plain text
msgid ""
"Includes either E<lt>stdbool.hE<gt> or E<lt>linux/types.hE<gt> as "
"appropriate, to obtain suitable declarations of \"bool\", \"true\" and "
"\"false\"."
msgstr ""

#. type: Plain text
msgid "Also permitted in C++ programs, where including it has no effect."
msgstr ""

#. type: Plain text
msgid "rtapi_byteorder.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_byteorder.hE<gt>"
msgstr ""

#. type: TP
#, no-wrap
msgid "RTAPI_BIG_ENDIAN"
msgstr ""

#. type: Plain text
msgid "Defined to 1 if the platform is big-endian, 0 otherwise"
msgstr ""

#. type: TP
#, no-wrap
msgid "RTAPI_LITTLE_ENDIAN"
msgstr ""

#. type: Plain text
msgid "Defined to 1 if the platform is little-endian, 0 otherwise"
msgstr ""

#. type: TP
#, no-wrap
msgid "RTAPI_FLOAT_BIG_ENDIAN"
msgstr ""

#. type: Plain text
msgid ""
"Defined to 1 if the platform double-precision value is big-endian, 0 "
"otherwise."
msgstr ""

#. type: Plain text
msgid ""
"In kernel space, each rtapi_xxx or RTAPI_XXX identifier is mapped to the "
"underlying kernel functionality, if available."
msgstr ""

#. type: Plain text
msgid ""
"In userspace, or in kernels where the underlying functionality is not "
"provided by a kernel, generally another implementation--possibly with "
"reduced functionality--is provided.  (For example, the userspace "
"implementation for rtapi_byteorder_register always succeeds)"
msgstr ""

#. type: Plain text
msgid "May be used at any time."
msgstr ""

#. type: Plain text
msgid "As in Linux."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_clock_set_period"
msgstr ""

#. type: Plain text
msgid "rtapi_clock_set_period - set the basic time interval for realtime tasks"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " rtapi_clock_set_period(long int I<nsec>)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<nsec>"
msgstr ""

#. type: Plain text
msgid "The desired basic time interval for realtime tasks."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_clock_set_period> sets the basic time interval for realtime tasks.  "
"All periodic tasks will run at an integer multiple of this period.  The "
"first call to B<rtapi_clock_set_period> with I<nsec> greater than zero will "
"start the clock, using I<nsec> as the clock period in nano-seconds.  Due to "
"hardware and RTOS limitations, the actual period may not be exactly what was "
"requested.  On success, the function will return the actual clock period if "
"it is available, otherwise it returns the requested period.  If the "
"requested period is outside the limits imposed by the hardware or RTOS, it "
"returns B<-EINVAL> and does not start the clock.  Once the clock is started, "
"subsequent calls with non-zero I<nsec> return B<-EINVAL> and have no "
"effect.  Calling B<rtapi_clock_set_period> with I<nsec> set to zero queries "
"the clock, returning the current clock period, or zero if the clock has not "
"yet been started."
msgstr ""

#. type: Plain text
msgid ""
"Call only from within init/cleanup code, not from realtime tasks.  This "
"function is not available from user (non-realtime) code."
msgstr ""

#. type: Plain text
msgid ""
"The actual period provided by the RTOS, which may be different than the "
"requested period, or a RTAPI status code."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_delay"
msgstr ""

#. type: Plain text
msgid "rtapi_delay - Busy-loop for short delays"
msgstr ""

#. type: Plain text
msgid "void rtapi_delay(long int I<nsec>)"
msgstr ""

#. type: Plain text
msgid "void rtapi_delay_max()"
msgstr ""

#. type: Plain text
msgid "The desired delay length in nanoseconds"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_delay> is a simple delay.  It is intended only for short delays, "
"since it simply loops, wasting CPU cycles."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_delay_max> returns the max delay permitted (usually approximately "
"1/4 of the clock period).  Any call to B<rtapi_delay> requesting a delay "
"longer than the max will delay for the max time only."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_delay_max> should be called before using B<rtapi_delay> to make sure "
"the required delays can be achieved.  The actual resolution of the delay may "
"be as good as one nano-second, or as bad as a several microseconds."
msgstr ""

#. type: Plain text
msgid "May be called from init/cleanup code, and from within realtime tasks."
msgstr ""

#. type: Plain text
msgid "B<rtapi_delay_max returns the maximum delay permitted.>"
msgstr ""

#. type: Plain text
msgid "B<rtapi_clock_set_period(3rtapi)>"
msgstr ""

#. type: Plain text
msgid "rtapi_device.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_device.hE<gt>"
msgstr ""

#. type: Plain text
msgid "struct rtapi_device;"
msgstr ""

#. type: Plain text
msgid ""
"int rtapi_dev_set_name(struct rtapi_device *dev, const char *name, ...);"
msgstr ""

#. type: Plain text
msgid "int rtapi_device_register(struct rtapi_device *dev);"
msgstr ""

#. type: Plain text
msgid "int rtapi_device_unregister(struct rtapi_device *dev);"
msgstr ""

#. type: Plain text
msgid ""
"In userspace, or in kernels where the underlying functionality is not "
"provided by a kernel, generally another implementation--possibly with "
"reduced functionality--is provided.  (For example, the userspace "
"implementation for rtapi_device_register always succeeds)"
msgstr ""

#. type: Plain text
msgid ""
"Typically, these functions may be called from realtime init/cleanup code."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_div_u64"
msgstr ""

#. type: Plain text
msgid "rtapi_div_u64 - unsigned division of a 64-bit number by a 32-bit number"
msgstr ""

#. type: Plain text
msgid ""
"__u64 rtapi_div_u64_rem(__u64 I<dividend>, __u32 I<divisor>, __u32 "
"*I<remainder>)"
msgstr ""

#. type: Plain text
msgid "__u64 rtapi_div_u64(__u64 I<dividend>, __u32 I<divisor>)"
msgstr ""

#. type: Plain text
msgid "__s64 rtapi_div_s64(__s64 I<dividend>, __s32 I<divisor>)"
msgstr ""

#. type: Plain text
msgid ""
"__s64 rtapi_div_s64_rem(__s64 I<dividend>, __s32 I<divisor>, __s32 "
"*I<remainder>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<dividend>"
msgstr ""

#. type: Plain text
msgid "The value to be divided"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<divisor>"
msgstr ""

#. type: Plain text
msgid "The value to divide by"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<remainder>"
msgstr ""

#. type: Plain text
msgid ""
"Pointer to the location to store the remainder.  This may not be a NULL "
"pointer.  If the remainder is not desired, call B<rtapi_div_u64> or "
"B<rtapi_div_s64>."
msgstr ""

#. type: Plain text
msgid ""
"Perform integer division (and optionally compute the remainder) with a 64-"
"bit dividend and 32-bit divisor."
msgstr ""

#. type: Plain text
msgid ""
"The result of integer division of I<dividend / divisor>.  In versions with "
"the I<remainder> argument, the remainder is stored in the pointed-to "
"location."
msgstr ""

#. type: Plain text
msgid ""
"If the result of the division does not fit in the return type, the result is "
"undefined."
msgstr ""

#. type: Plain text
msgid ""
"This function exists because in kernel space the use of the division "
"operator on a 64-bit type can lead to an undefined symbol such as __umoddi3 "
"when the module is loaded."
msgstr ""

#. type: Plain text
msgid ""
"May be called from init/cleanup code and from within realtime tasks.  "
"Available in userspace components."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_exit"
msgstr ""

#. type: Plain text
msgid "rtapi_exit - Shut down RTAPI"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_exit(int I<module_id>)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<module_id>"
msgstr ""

#. type: Plain text
msgid ""
"An rtapi module identifier returned by an earlier call to B<rtapi_init>."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_exit> shuts down and cleans up the RTAPI.  It must be called prior "
"to exit by any module that called B<rtapi_init>."
msgstr ""

#. type: Plain text
msgid "Returns a RTAPI status code."
msgstr ""

#. type: Plain text
msgid "rtapi_firmware.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_firmware.hE<gt>"
msgstr ""

#. type: Plain text
msgid "struct rtapi_firmware;"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"int rtapi_request_firmware(const struct rtapi_firmware **fw,\n"
"    const char *name, struct rtapi_device *device);\n"
msgstr ""

#. type: Plain text
msgid "void rtapi_release_firmware(const struct rtapi_firmware *fw);"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_get_time"
msgstr ""

#. type: Plain text
msgid "rtapi_get_time - get the current time"
msgstr ""

#. type: Plain text
msgid "long long rtapi_get_time()"
msgstr ""

#. type: Plain text
msgid "long long rtapi_get_clocks()"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_get_time> returns the current time in nanoseconds.  Depending on the "
"RTOS, this may be time since boot, or time since the clock period was set, "
"or some other time.  Its absolute value means nothing, but it is "
"monotonically increasing and can be used to schedule future events, or to "
"time the duration of some activity.  Returns a 64 bit value.  The resolution "
"of the returned value may be as good as one nano-second, or as poor as "
"several microseconds.  May be called from init/cleanup code, and from within "
"realtime tasks."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_get_clocks> returns the current time in CPU clocks.  It is fast, "
"since it just reads the TSC in the CPU instead of calling a kernel or RTOS "
"function.  Of course, times measured in CPU clocks are not as convenient, "
"but for relative measurements this works fine.  Its absolute value means "
"nothing, but it is monotonically increasing and can be used to schedule "
"future events, or to time the duration of some activity.  (on SMP machines, "
"the two TSC's may get out of sync, so if a task reads the TSC, gets swapped "
"to the other CPU, and reads again, the value may decrease.  RTAPI tries to "
"force all RT tasks to run on one CPU.)  Returns a 64 bit value.  The "
"resolution of the returned value is one CPU clock, which is usually a few "
"nanoseconds to a fraction of a nanosecond."
msgstr ""

#. type: Plain text
msgid ""
"Note that I<long long> math may be poorly supported on some platforms, "
"especially in kernel space. Also note that rtapi_print() will NOT print "
"I<long long>s.  Most time measurements are relative, and should be done like "
"this:"
msgstr ""

#. type: Plain text
msgid "deltat = (long int)(end_time - start_time);"
msgstr ""

#. type: Plain text
msgid ""
"where end_time and start_time are longlong values returned from "
"rtapi_get_time, and deltat is an ordinary long int (32 bits).  This will "
"work for times up to a second or so, depending on the CPU clock frequency.  "
"It is best used for millisecond and microsecond scale measurements though."
msgstr ""

#. type: Plain text
msgid "Returns the current time in nanoseconds or CPU clocks."
msgstr ""

#. type: Plain text
msgid ""
"Certain versions of the Linux kernel provide a global variable B<cpu_khz>.  "
"Computing"
msgstr ""

#. type: Plain text
msgid "  deltat = (end_clocks - start_clocks) / cpu_khz:"
msgstr ""

#. type: Plain text
msgid "gives the duration measured in milliseconds.  Computing"
msgstr ""

#. type: Plain text
msgid "  deltat = (end_clocks - start_clocks) * 1000000 / cpu_khz:"
msgstr ""

#. type: Plain text
msgid ""
"gives the duration measured in nanoseconds for deltas less than about 9 "
"trillion clocks (e.g., 3000 seconds at 3GHz)."
msgstr ""

#. type: Plain text
msgid "rtapi_gfp.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_gfp.hE<gt>"
msgstr ""

#. type: Plain text
msgid "enum rtapi_gfp_e;"
msgstr ""

#. type: Plain text
msgid "RTAPI_GFP_xxx"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_gfp_t;"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_init"
msgstr ""

#. type: Plain text
msgid "rtapi_init - Sets up RTAPI"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_init(const char *I<modname>)\n"
msgstr ""

#. type: Plain text
msgid "The name of this rtapi module"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_init> sets up the RTAPI.  It must be called by any module that "
"intends to use the API, before any other RTAPI calls."
msgstr ""

#. type: Plain text
msgid ""
"I<modname> can optionally point to a string that identifies the module.  The "
"string will be truncated at B<RTAPI_NAME_LEN> characters.  If I<modname> is "
"B<NULL>, the system will assign a name."
msgstr ""

#. type: Plain text
msgid ""
"On success, returns a positive integer module ID, which is used for "
"subsequent calls to rtapi_xxx_new, rtapi_xxx_delete, and rtapi_exit.  On "
"failure, returns an RTAPI error code."
msgstr ""

#. type: Plain text
msgid "rtapi_io.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_io.hE<gt>"
msgstr ""

#. type: Plain text
msgid "unsigned char rtapi_inb(unsigned short int port);"
msgstr ""

#. type: Plain text
msgid "unsigned short rtapi_inw(unsigned short int port);"
msgstr ""

#. type: Plain text
msgid "unsigned int rtapi_inl(unsigned short int port);"
msgstr ""

#. type: Plain text
msgid "unsigned void rtapi_inb(unsigned char value, unsigned short int port);"
msgstr ""

#. type: Plain text
msgid "unsigned void rtapi_inw(unsigned short value, unsigned short int port);"
msgstr ""

#. type: Plain text
msgid "unsigned void rtapi_inl(unsigned int value, unsigned short int port);"
msgstr ""

#. type: Plain text
msgid ""
"Call from init/cleanup code and from realtime tasks.  These functions will "
"cause illegal instruction exceptions in userspace components, as well as in "
"uspace rtapi_app when it is not setuid root."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_is"
msgstr ""

#. type: Plain text
msgid "rtapi_is - details of rtapi configuration"
msgstr ""

#. type: Plain text
msgid "int rtapi_is_kernelspace()"
msgstr ""

#. type: Plain text
msgid "int rtapi_is_realtime()"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_is_kernelspace()> returns nonzero when rtapi modules run in kernel "
"space (e.g., under rtai) and zero when they run in userspace (e.g., under "
"uspace)."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_is_realtime()> returns nonzero when capable of running with realtime "
"guarantees.  For rtai, this always returns nonzero (but actually loading "
"realtime modules will fail if not running under the appropriate kernel).  "
"For uspace, this returns nonzero when the running kernel indicates it is "
"capable of realtime performance.  If B<rtapi_app> is not setuid root, this "
"returns nonzero even though B<rtapi_app> will not be able to obtain realtime "
"scheduling or hardware access, so e.g., attempting to B<loadrt> a hardware "
"driver will fail."
msgstr ""

#. type: Plain text
msgid ""
"May be called from userspace or from realtime setup code.  "
"B<rtapi_is_realtime()> may perform filesystem I/O."
msgstr ""

#. type: Plain text
msgid "Zero for false, nonzero for true."
msgstr ""

#. type: Plain text
msgid "rtapi_list.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_list.hE<gt>"
msgstr ""

#. type: Plain text
msgid "struct rtapi_list_head;"
msgstr ""

#. type: Plain text
msgid ""
"void rtapi_list_add(struct rtapi_list_head *new_, struct rtapi_list_head "
"*head);"
msgstr ""

#. type: Plain text
msgid ""
"void rtapi_list_add_tail(struct rtapi_list_head *new_, struct "
"rtapi_list_head *head);"
msgstr ""

#. type: Plain text
msgid "void rtapi_list_del(struct rtapi_list_head *entry);"
msgstr ""

#. type: Plain text
msgid "void RTAPI_INIT_LIST_HEAD(struct rtapi_list_head *entry);"
msgstr ""

#. type: Plain text
msgid "rtapi_list_for_each(pos, head) { ... }"
msgstr ""

#. type: Plain text
msgid "rtapi_list_entry(ptr, type, member)"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_module_param"
msgstr ""

#. type: Plain text
msgid "rtapi_module_param - Specifying module parameters"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_INT(I<var>, I<description>)"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_LONG(I<var>, I<description>)"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_STRING(I<var>, I<description>)"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_ARRAY_INT(I<var>, I<num>, I<description>)"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_ARRAY_LONG(I<var>, I<num>, I<description>)"
msgstr ""

#. type: Plain text
msgid "RTAPI_MP_ARRAY_STRING(I<var>, I<num>, I<description>)"
msgstr ""

#. type: Plain text
msgid "MODULE_LICENSE(I<license>)"
msgstr ""

#. type: Plain text
msgid "MODULE_AUTHOR(I<author>)"
msgstr ""

#. type: Plain text
msgid "MODULE_DESCRIPTION(I<description>)"
msgstr ""

#. type: Plain text
msgid "EXPORT_FUNCTION(I<function>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<var>"
msgstr ""

#. type: Plain text
msgid "The variable where the parameter should be stored"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<description>"
msgstr ""

#. type: Plain text
msgid "A short description of the parameter or module"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<num>"
msgstr ""

#. type: Plain text
msgid "The maximum number of values for an array parameter"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<license>"
msgstr ""

#. type: Plain text
msgid "The license of the module, for instance \"GPL\""
msgstr ""

#. type: IP
#, no-wrap
msgid "I<author>"
msgstr ""

#. type: Plain text
msgid "The author of the module"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<function>"
msgstr ""

#. type: Plain text
msgid "The pointer to the function to be exported"
msgstr ""

#. type: Plain text
msgid ""
"These macros are portable ways to declare kernel module parameters.  They "
"must be used in the global scope, and are not followed by a terminating "
"semicolon.  They must be used after the associated variable or function has "
"been defined."
msgstr ""

#. type: Plain text
msgid ""
"EXPORT_FUNCTION makes a symbol available for use by a subsequently loaded "
"component.  It is unrelated to hal functions, which are described in "
"hal_export_funct(3hal)"
msgstr ""

#. type: SH
#, no-wrap
msgid "Interpretation of license strings"
msgstr ""

#. type: Plain text
msgid ""
"B<MODULE_LICENSE> follows the kernel's definition of license strings.  "
"Notably, \"GPL\" indicates \"GNU General Public License v2 I<or later>\".  "
"(emphasis ours)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"GPL\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2 or later"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"GPL\\ v2\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"GPL\\ and\\ additional\\ rights\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2 rights and more"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"Dual\\ BSD/GPL\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2 or BSD license choice"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"Dual\\ MIT/GPL\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2 or MIT license choice"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"Dual\\ MPL/GPL\">"
msgstr ""

#. type: Plain text
msgid "GNU General Public License v2 or Mozilla license choice"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<\"Proprietary\">"
msgstr ""

#. type: Plain text
msgid "Non-free products"
msgstr ""

#. type: Plain text
msgid ""
"It is still good practice to include a license block which indicates the "
"author, copyright date, and disclaimer of warranty as recommended by the GNU "
"GPL."
msgstr ""

#. type: Plain text
msgid "Not available in userspace code."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_mutex"
msgstr ""

#. type: Plain text
msgid "rtapi_mutex - Mutex-related functions"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>rtapi_mutex.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<int rtapi_mutex_try(unsigned long *>I<mutex>B<);>"
msgstr ""

#. type: Plain text
msgid "B<int rtapi_mutex_get(unsigned long *>I<mutex>B<);>"
msgstr ""

#. type: Plain text
msgid "B<int rtapi_mutex_give(unsigned long *>I<mutex>B<);>"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<mutex>"
msgstr ""

#. type: Plain text
msgid "A pointer to the mutex."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_mutex_try> makes a non-blocking attempt to get the mutex.  If the "
"mutex is available, it returns 0, and the mutex is no longer available.  "
"Otherwise, it returns a nonzero value."
msgstr ""

#. type: Plain text
msgid "B<rtapi_mutex_get> blocks until the mutex is available."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_mutex_give> releases a mutex acquired by B<rtapi_mutex_try> or "
"B<rtapi_mutex_get>."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_mutex_give> and B<rtapi_mutex_try> may be used from user, init/"
"cleanup, and realtime code."
msgstr ""

#. type: Plain text
msgid "B<rtapi_mutex_get> may not be used from realtime code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_mutex_try> returns 0 for if the mutex was claimed, and nonzero "
"otherwise."
msgstr ""

#. type: Plain text
msgid "B<rtapi_mutex_get> and B<rtapi_mutex_gif> have no return value."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_open_as_root"
msgstr ""

#. type: Plain text
msgid "rtapi_open_as_root - Open a file with \"root\" privilege"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<#include E<lt>rtapi.hE<gt>>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "B<int rtapi_open_as_root(const char >I<*filename>B<, int >I<flags)>\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<filename>"
msgstr ""

#. type: Plain text
msgid ""
"The filename to open, as in B<open(2)>.  Note that rtapi has no well-defined "
"\"current directory\", so this should be an absolute path, but this is not "
"enforced."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<flags>"
msgstr ""

#. type: Plain text
msgid ""
"The open flags, as in B<open(2)>.  Should never include bits that open or "
"create files (e.g., O_CREAT, O_APPEND, etc) as this API is not intended for "
"creating or writing files, but this is not enforced."
msgstr ""

#. type: Plain text
msgid ""
"In \"uspace\" realtime, root privileges are dropped whenever possible.  This "
"API temporarily switches on root privileges to open a file, and switches "
"them off before returning.  This can be useful for example when accessing "
"device nodes or memory-mapped I/O."
msgstr ""

#. type: Plain text
msgid ""
"In the case of PCI devices on x86 and x86-64 systems, prefer the linux-style "
"PCI interfaces provided in B<E<lt>rtapi_pci.hE<gt>>."
msgstr ""

#. type: Plain text
msgid ""
"In case of success, the nonnegative file descriptor opened.  If the caller "
"does not close it, it remains open until rtapi_app exits."
msgstr ""

#. type: Plain text
msgid "In case of failure, a negative errno value."
msgstr ""

#. type: Plain text
msgid "Call only from realtime initcode in \"uspace\" realtime."
msgstr ""

#. type: Plain text
msgid "B<open(2)>, B<rtapi_pci(3)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_outb"
msgstr ""

#. type: Plain text
msgid "rtapi_outb, rtapi_inb - Perform hardware I/O"
msgstr ""

#. type: Plain text
msgid "void rtapi_outb(unsigned char I<byte>, unsigned int I<port>)"
msgstr ""

#. type: Plain text
msgid "unsigned char rtapi_inb(unsigned int I<port>)"
msgstr ""

#. type: Plain text
msgid "The address of the I/O port"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<byte>"
msgstr ""

#. type: Plain text
msgid "The byte to be written to the port"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_outb> writes a byte to a hardware I/O port.  B<rtapi_inb> reads a "
"byte from a hardware I/O port."
msgstr ""

#. type: Plain text
msgid "B<rtapi_inb> returns the byte read from the given I/O port"
msgstr ""

#. type: Plain text
msgid ""
"The I/O address should be within a region previously allocated by "
"B<rtapi_request_region>.  Otherwise, another real-time module or the Linux "
"kernel might attempt to access the I/O region at the same time."
msgstr ""

#. type: Plain text
msgid "B<rtapi_region(3rtapi)>"
msgstr ""

#. type: Plain text
msgid "rtapi_parport - portable access to PC-style parallel ports"
msgstr ""

#. type: Plain text
msgid "#include \"rtapi_parport.h\""
msgstr ""

#. type: Plain text
msgid ""
"int B<rtapi_parport_get>(const char *I<module_name>, rtapi_parport_t "
"*I<port>, unsigned short I<base>, unsigned short I<base_hi>, unsigned int "
"I<modes>)"
msgstr ""

#. type: Plain text
msgid "void B<rtapi_parport_release>(rtapi_parport_t *I<port>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<module_name>"
msgstr ""

#. type: Plain text
msgid ""
"By convention, the name of the RTAPI module or HAL component using the "
"parport."
msgstr ""

#. type: Plain text
msgid "A pointer to a rtapi_parport_t structure"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_parport_get> allocates a parallel port for exclusive use of the "
"named hal component.  If successful, access the port with I/O calls such as "
"rtapi_inb at address based at the B<base> or B<base_hi> addresses.  The port "
"must be released with B<rtapi_parport_release> before the component exits "
"with B<rtapi_exit>."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"typedef struct\n"
"{\n"
"    unsigned short base;\n"
"    unsigned short base_hi;\n"
"    .... // and further unspecified fields\n"
"} rtapi_parport_t;\n"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_parport_get> returns a HAL status code.  On success, I<port> is "
"filled out with information about the allocated port.  On failure, the "
"contents of I<port> are undefined except that it is safe (but not required) "
"to pass this port to B<rtapi_parport_release>."
msgstr ""

#. type: Plain text
msgid "B<rtapi_parport_release> does not return a value.  It always succeeds."
msgstr ""

#. type: Plain text
msgid "In new code, prefer use of rtapi_parport to rtapi_parport."
msgstr ""

#. type: Plain text
msgid "rtapi_pci.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_pci.hE<gt>"
msgstr ""

#. type: Plain text
msgid "struct rtapi_pci_device_id { ... };"
msgstr ""

#. type: Plain text
msgid "struct rtapi_pci_resource { ... };"
msgstr ""

#. type: Plain text
msgid "struct rtapi_pci_dev { ... };"
msgstr ""

#. type: Plain text
msgid "struct rtapi_pci_driver { ... };"
msgstr ""

#. type: Plain text
msgid "const char *rtapi_pci_name(const struct rtapi_pci_dev *pdev);"
msgstr ""

#. type: Plain text
msgid "int rtapi_pci_enable_device(struct rtapi_pci_dev *dev);"
msgstr ""

#. type: Plain text
msgid ""
"void rtapi__iomem *rtapi_pci_ioremap_bar(struct rtapi_pci_dev *pdev, int "
"bar);"
msgstr ""

#. type: Plain text
msgid "int rtapi_pci_register_driver(struct rtapi_pci_driver *driver);"
msgstr ""

#. type: Plain text
msgid "void rtapi_pci_unregister_driver(struct rtapi_pci_driver *driver);"
msgstr ""

#. type: Plain text
msgid "int rtapi_pci_disable_device(struct rtapi_pci_dev *dev);"
msgstr ""

#. type: Plain text
msgid "#define rtapi_pci_resource_start(dev, bar) ..."
msgstr ""

#. type: Plain text
msgid "#define rtapi_pci_resource_end(dev, bar) ..."
msgstr ""

#. type: Plain text
msgid "#define rtapi_pci_resource_flags(dev, bar) ..."
msgstr ""

#. type: Plain text
msgid "#define rtapi_pci_resource_len(dev,bar) ...."
msgstr ""

#. type: Plain text
msgid "void rtapi_pci_set_drvdata(struct rtapi_pci_dev *pdev, void *data)"
msgstr ""

#. type: Plain text
msgid "void rtapi_iounmap(volatile void *addr);"
msgstr ""

#. type: Plain text
msgid "struct rtapi_pci;"
msgstr ""

#. type: Plain text
msgid ""
"In userspace, or in kernels where the underlying functionality is not "
"provided by a kernel, generally another implementation--possibly with "
"reduced functionality--is provided.  (For example, the userspace "
"implementation for rtapi_pci_register always succeeds)"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_print"
msgstr ""

#. type: Plain text
msgid "rtapi_print, rtapi_print_msg - print diagnostic messages"
msgstr ""

#. type: Plain text
msgid "void rtapi_print(const char *I<fmt>, I<...>)"
msgstr ""

#. type: Plain text
msgid "void rtapi_print_msg(int level, const char *I<fmt>, I<...>)"
msgstr ""

#. type: Plain text
msgid ""
"typedef void(*B<rtapi_msg_handler_t>)(msg_level_t I<level>, const char "
"*I<msg>);"
msgstr ""

#. type: Plain text
msgid "void B<rtapi_set_msg_handler>(rtapi_msg_handler_t I<handler>);"
msgstr ""

#. type: Plain text
msgid "rtapi_msg_handler_t B<rtapi_get_msg_handler>(void);"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<level>"
msgstr ""

#. type: Plain text
msgid ""
"A message level: One of B<RTAPI_MSG_ERR>, B<RTAPI_MSG_WARN>, "
"B<RTAPI_MSG_INFO>, or B<RTAPI_MSG_DBG>."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<handler>"
msgstr ""

#. type: Plain text
msgid ""
"A function to call from B<rtapi_print> or B<rtapi_print_msg> to actually "
"output the message."
msgstr ""

#. type: Plain text
msgid "Other arguments are as for I<rtapi_vsnprintf(3rtapi)>."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_print> and B<rtapi_print_msg> work like the standard C printf "
"functions, except that a reduced set of formatting operations are "
"supported.  Notably, formatting long-long values is not supported, and "
"formatting floating-point values has different behavior than standard printf."
msgstr ""

#. type: Plain text
msgid ""
"Depending on the RTOS, the default may be to print the message to stdout, "
"stderr, a kernel log, etc.  In RTAPI code, the action may be changed by a "
"call to B<rtapi_set_msg_handler>.  A B<NULL> argument to "
"B<rtapi_set_msg_handler> restores the default handler.  "
"B<rtapi_msg_get_handler> returns the current handler.  When the message came "
"from B<rtapi_print>, I<level> is RTAPI_MSG_ALL."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_print_msg> works like rtapi_print but only prints if I<level> is "
"less than or equal to the current message level."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_print> and B<rtapi_print_msg> May be called from user, init/cleanup, "
"and realtime code.  B<rtapi_get_msg_handler> and B<rtapi_set_msg_handler> "
"may be called from realtime init/cleanup code.  A message handler passed to "
"B<rtapi_set_msg_handler> may only call functions that can be called from "
"realtime code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_set_msg_level(3rtapi)>, B<rtapi_get_msg_level(3rtapi)>, "
"B<rtapi_vsnprintf(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_prio"
msgstr ""

#. type: Plain text
msgid "rtapi_prio - thread priority functions"
msgstr ""

#. type: Plain text
msgid "int rtapi_prio_highest()"
msgstr ""

#. type: Plain text
msgid "int rtapi_prio_lowest()"
msgstr ""

#. type: Plain text
msgid "int rtapi_prio_next_higher(int I<prio>)"
msgstr ""

#. type: Plain text
msgid "int rtapi_prio_next_lower(int I<prio>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<prio>"
msgstr ""

#. type: Plain text
msgid "A value returned by a prior B<rtapi_prio_xxx> call"
msgstr ""

#. type: Plain text
msgid ""
"The B<rtapi_prio_xxxx> functions provide a portable way to set task "
"priority.  The mapping of actual priority to priority number depends on the "
"RTOS.  Priorities range from B<rtapi_prio_lowest> to B<rtapi_prio_highest>, "
"inclusive. To use this API, use one of two methods:"
msgstr ""

#. type: IP
#, no-wrap
msgid "1)"
msgstr ""

#. type: Plain text
msgid ""
"Set your lowest priority task to B<rtapi_prio_lowest>, and for each task of "
"the next lowest priority, set their priorities to "
"B<rtapi_prio_next_higher(previous)>."
msgstr ""

#. type: IP
#, no-wrap
msgid "2)"
msgstr ""

#. type: Plain text
msgid ""
"Set your highest priority task to B<rtapi_prio_highest>, and for each task "
"of the next highest priority, set their priorities to "
"B<rtapi_prio_next_lower(previous)>."
msgstr ""

#. type: Plain text
msgid ""
"N.B. A high priority task will preempt or interrupt a lower priority task. "
"Linux is always the lowest priority!"
msgstr ""

#. type: Plain text
msgid ""
"Call these functions only from within init/cleanup code, not from realtime "
"tasks."
msgstr ""

#. type: Plain text
msgid "Returns an opaque real-time priority number."
msgstr ""

#. type: Plain text
msgid "B<rtapi_task_new(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_region"
msgstr ""

#. type: Plain text
msgid "rtapi_region - functions to manage I/O memory regions"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " void *rtapi_request_region(unsigned long I<base>, unsigned long int I<size>, const char *I<name>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " void rtapi_release_region(unsigned long I<base>, unsigned long int I<size>)\n"
msgstr ""

#. type: Plain text
msgid "The base address of the I/O region"
msgstr ""

#. type: Plain text
msgid "The size of the I/O region"
msgstr ""

#. type: Plain text
msgid "The name to be shown in /proc/ioports"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_request_region> reserves I/O memory starting at I<base> and going "
"for I<size> bytes."
msgstr ""

#. type: Plain text
msgid "May be called from realtime init/cleanup code only."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_request_region> returns NULL if the allocation fails, and a non-NULL "
"value otherwise."
msgstr ""

#. type: Plain text
msgid "B<rtapi_release_region> has no return value."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_set_msg_level"
msgstr ""

#. type: Plain text
msgid "rtapi_get_msg_level, rtapi_set_msg_level - Get or set the logging level"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_set_msg_level(int I<level>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_get_msg_level()\n"
msgstr ""

#. type: Plain text
msgid "The desired logging level"
msgstr ""

#. type: Plain text
msgid ""
"Get or set the RTAPI message level used by B<rtapi_print_msg>.  Depending on "
"the RTOS, this level may apply to a single RTAPI module, or it may apply to "
"a group of modules."
msgstr ""

#. type: Plain text
msgid "May be called from user, init/cleanup, and realtime code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_set_msg_level> returns a status code, and B<rtapi_get_msg_level> "
"returns the current level.  RTAPI_MSG_NONE = 0, RTAPI_MSG_ERR = 1, "
"RTAPI_MSG_WARN = 2, RTAPI_MSG_INFO = 3, RTAPI_MSG_DBG = 4 RTAPI_MSG_ALL = 5"
msgstr ""

#. type: Plain text
msgid "B<rtapi_print_msg(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_shmem"
msgstr ""

#. type: Plain text
msgid "rtapi_shmem - Functions for managing shared memory blocks"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_shmem_new(int I<key>, int I<module_id>, unsigned long int I<size>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_shmem_delete(int I<shmem_id>, int I<module_id>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_shmem_getptr(int I<shmem_id>, void ** I<ptr>)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<key>"
msgstr ""

#. type: Plain text
msgid ""
"Identifies the memory block.  Key must be nonzero.  All modules wishing to "
"use the same memory must use the same key."
msgstr ""

#. type: Plain text
msgid "Module identifier returned by a prior call to B<rtapi_init>."
msgstr ""

#. type: Plain text
msgid "The desired size of the shared memory block, in bytes"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<ptr>"
msgstr ""

#. type: Plain text
msgid ""
"The pointer to the shared memory block.  Note that the block may be mapped "
"at a different address for different modules."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_shmem_new> allocates a block of shared memory.  I<key> identifies "
"the memory block, and must be non-zero.  All modules wishing to access the "
"same memory must use the same key.  I<module_id> is the ID of the module "
"that is making the call (see rtapi_init).  The block will be at least "
"I<size> bytes, and may be rounded up.  Allocating many small blocks may be "
"very wasteful.  When a particular block is allocated for the first time, the "
"first 4 bytes are zeroed.  Subsequent allocations of the same block by other "
"modules or processes will not touch the contents of the block.  Applications "
"can use those bytes to see if they need to initialize the block, or if "
"another module already did so.  On success, it returns a positive integer "
"ID, which is used for all subsequent calls dealing with the block.  On "
"failure it returns a negative error code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_shmem_delete> frees the shared memory block associated with "
"I<shmem_id>.  I<module_id> is the ID of the calling module.  Returns a "
"status code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_shmem_getptr> sets I<*ptr> to point to shared memory block "
"associated with I<shmem_id>."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_shmem_getptr> may be called from user code, init/cleanup code, or "
"realtime tasks."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_shmem_new> and B<rtapi_shmem_dete> may not be called from realtime "
"tasks."
msgstr ""

#. type: Plain text
msgid "rtapi_slab.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_slab.hE<gt>"
msgstr ""

#. type: Plain text
msgid "void *rtapi_kmalloc(size_t size, gfp_t g);"
msgstr ""

#. type: Plain text
msgid "void *rtapi_kzalloc(size_t size, gfp_t g);"
msgstr ""

#. type: Plain text
msgid "void *rtapi_krealloc(size_t size, gfp_t g);"
msgstr ""

#. type: Plain text
msgid "void rtapi_kfree(void *);"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_snprintf"
msgstr ""

#. type: Plain text
msgid ""
"rtapi_snprintf, rtapi_vsnprintf - Perform snprintf-like string formatting"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_snprintf(char *I<buf>, unsigned long int I<size>, const char *I<fmt>, I<...>)\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid " int rtapi_vsnprintf(char *I<buf>, unsigned long int I<size>, const char *I<fmt>, va_list I<apfB)>\n"
msgstr ""

#. type: Plain text
msgid "As for I<snprintf(3)> or I<vsnprintf(3)>."
msgstr ""

#. type: Plain text
msgid ""
"These functions work like the standard C printf functions, except that a "
"reduced set of formatting operations are supported."
msgstr ""

#. type: Plain text
msgid ""
"In particular: formatting of long long values is not supported.  Formatting "
"of floating-point values is done as though with %A even when other formats "
"like %f are specified."
msgstr ""

#. type: Plain text
msgid "The number of characters written to I<buf>."
msgstr ""

#. type: Plain text
msgid "B<printf(3)>"
msgstr ""

#. type: Plain text
msgid "rtapi_stdint.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_stdint.hE<gt>"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_s8;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_s16;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_s32;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_s64;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_intptr_t;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_u8;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_u16;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_u32;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_u64;"
msgstr ""

#. type: Plain text
msgid "typedef ... rtapi_uintptr_t;"
msgstr ""

#. type: Plain text
msgid "#define\\ RTAPI_INTI<xx>_MIN\\ ..."
msgstr ""

#. type: Plain text
msgid "#define\\ RTAPI_INTI<xx>_MAX\\ ..."
msgstr ""

#. type: Plain text
msgid "#define\\ RTAPI_UINTI<xx>_MAX\\ ..."
msgstr ""

#. type: Plain text
msgid "rtapi_string.h - RTAPI wrappers for linux kernel functionality"
msgstr ""

#. type: Plain text
msgid "#include E<lt>rtapi_string.hE<gt>"
msgstr ""

#. type: Plain text
msgid "char **rtapi_argv_split(rtapi_gfp_t g, const char *argstr, int *argc);"
msgstr ""

#. type: Plain text
msgid "void rtapi_argv_free(char **argv);"
msgstr ""

#. type: Plain text
msgid "char *rtapi_kstrdup(const char *s, rtapi_gfp_t t);"
msgstr ""

#. type: Plain text
msgid "rtapi_strlcpy - RTAPI string manipulation functions"
msgstr ""

#. type: Plain text
msgid ""
"size_t rtapi_strlcpy(char *dst, const char *src, size_t sz); #define "
"rtapi_strxcpy(dst, src) ...  size_t rtapi_strlcat(char *dst, const char "
"*src, size_t sz); #define rtapi_strxcat(dst, src) ..."
msgstr ""

#. type: Plain text
msgid ""
"rtapi_strlcpy will copy at most 'sz' chars from 'src' to 'dst'.  Always "
"leaves 'dst' NUL-terminated except if sz is 0."
msgstr ""

#. type: Plain text
msgid ""
"rtapi_strxcpy(dst, src) checks that dst is an array with known size, and "
"calls rtapi_strlcpy(dst, src, sizeof(dst)).  If it is not an array with a "
"known size, it is a (possibly cryptic!) syntax error."
msgstr ""

#. type: Plain text
msgid ""
"rtapi_strlcat will append characters from 'src' to 'dst', stopping when the "
"end of 'src' is reached, or 'dst' uses 'sz' bytes of storage including the "
"trialing nul."
msgstr ""

#. type: Plain text
msgid ""
"rtapi_strxcat(dst, src) checks that dst is an array with known size, and "
"calls rtapi_strlcat(dst, src, sizeof(dst)).  If it is not an array with a "
"known size, it is a (possibly cryptic!) syntax error."
msgstr ""

#. type: Plain text
msgid ""
"The total length of the string strlcpy or strlcat tried to create.  For "
"strlcpy() that means the length of src.  If the return value is greater than "
"or equal to sz, the result was truncated."
msgstr ""

#. type: Plain text
msgid "strlcpy(3bsd), strlcat(3bsd)"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_task_new"
msgstr ""

#. type: Plain text
msgid "rtapi_task_new - create a realtime task"
msgstr ""

#. type: Plain text
msgid ""
"int rtapi_task_new(void (*I<taskcode>)(void*), void *I<arg>, int I<prio>, "
"unsigned long I<stacksize>, int I<uses_fp>)"
msgstr ""

#. type: Plain text
msgid "int rtapi_task_delete(int I<task_id>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<taskcode>"
msgstr ""

#. type: Plain text
msgid "A pointer to the function to be called when the task is started"
msgstr ""

#. type: Plain text
msgid ""
"An argument to be passed to the I<taskcode> function when the task is started"
msgstr ""

#. type: Plain text
msgid "A task priority value returned by B<rtapi_prio_xxxx>"
msgstr ""

#. type: Plain text
msgid "A flag that tells the OS whether the task uses floating point or not."
msgstr ""

#. type: IP
#, no-wrap
msgid "I<task_id>"
msgstr ""

#. type: Plain text
msgid "A task ID returned by a previous call to B<rtapi_task_new>"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_new> creates but does not start a realtime task.  The task is "
"created in the \"paused\" state.  To start it, call either "
"B<rtapi_task_start> for periodic tasks, or B<rtapi_task_resume> for free-"
"running tasks."
msgstr ""

#. type: Plain text
msgid "Call only from within init/cleanup code, not from realtime tasks."
msgstr ""

#. type: Plain text
msgid ""
"On success, returns a positive integer task ID.  This ID is used for all "
"subsequent calls that need to act on the task.  On failure, returns an RTAPI "
"status code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_prio(3rtapi)>, B<rtapi_task_start(3rtapi)>, "
"B<rtapi_task_wait(3rtapi)>, B<rtapi_task_resume(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_task_pause"
msgstr ""

#. type: Plain text
msgid "rtapi_task_pause, rtapi_task_resume - pause and resume real-time tasks"
msgstr ""

#. type: Plain text
msgid "void rtapi_task_pause(int I<task_id>)"
msgstr ""

#. type: Plain text
msgid "void rtapi_task_resume(int I<task_id>)"
msgstr ""

#. type: Plain text
msgid ""
"An RTAPI task identifier returned by an earlier call to B<rtapi_task_new>."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_resume> starts a task in free-running mode.  The task must be "
"in the \"paused\" state."
msgstr ""

#. type: Plain text
msgid "A free running task runs continuously until either:"
msgstr ""

#. type: Plain text
msgid ""
"It is prempted by a higher priority task.  It will resume as soon as the "
"higher priority task releases the CPU."
msgstr ""

#. type: Plain text
msgid ""
"It calls a blocking function, like B<rtapi_sem_take>.  It will resume when "
"the function unblocks."
msgstr ""

#. type: IP
#, no-wrap
msgid "3)"
msgstr ""

#. type: Plain text
msgid ""
"It is returned to the \"paused\" state by B<rtapi_task_pause>.  May be "
"called from init/cleanup code, and from within realtime tasks."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_pause> causes a task to stop execution and change to the "
"\"paused\" state.  The task can be free-running or periodic.  Note that "
"B<rtapi_task_pause> may called from any task, or from init or cleanup code, "
"not just from the task that is to be paused.  The task will resume execution "
"when either B<rtapi_task_resume> or B<rtapi_task_start> (depending on "
"whether this is a free-running or periodic task) is called."
msgstr ""

#. type: Plain text
msgid "An RTAPI status code."
msgstr ""

#. type: Plain text
msgid "B<rtapi_task_new(3rtapi)>, B<rtapi_task_start(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_task_self"
msgstr ""

#. type: Plain text
msgid "rtapi_task_self - Retrieve ID of current task"
msgstr ""

#. type: Plain text
msgid "void rtapi_task_self()"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_self> retrieves the current task, or -EINVAL if not in a "
"realtime task (e.g., in startup or shutdown code)."
msgstr ""

#. type: Plain text
msgid "The task number previously returned by B<rtapi_task_new> or -EINVAL."
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_task_start"
msgstr ""

#. type: Plain text
msgid "rtapi_task_start - start a realtime task in periodic mode"
msgstr ""

#. type: Plain text
msgid "int rtapi_task_start(int I<task_id>, unsigned long I<period_nsec>)"
msgstr ""

#. type: IP
#, no-wrap
msgid "I<period_nsec>"
msgstr ""

#. type: Plain text
msgid "The clock period in nanoseconds between iterations of a periodic task"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_start> starts a task in periodic mode.  The task must be in the "
"I<paused> state."
msgstr ""

#. type: Plain text
msgid "Returns an RTAPI status code."
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_new(3rtapi)>, B<rtapi_task_pause(3rtapi)>, "
"B<rtapi_task_resume(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "rtapi_task_wait"
msgstr ""

#. type: Plain text
msgid "rtapi_task_wait - suspend execution of this periodic task"
msgstr ""

#. type: Plain text
msgid "void rtapi_task_wait()"
msgstr ""

#. type: Plain text
msgid ""
"B<rtapi_task_wait> suspends execution of the current task until the next "
"period.  The task must be periodic.  If not, the result is undefined."
msgstr ""

#. type: Plain text
msgid "Call only from within a periodic realtime task"
msgstr ""

#. type: Plain text
msgid "B<rtapi_task_start(3rtapi)>, B<rtapi_task_pause(3rtapi)>"
msgstr ""

#. type: TH
#, no-wrap
msgid "undocumented"
msgstr ""

#. type: Plain text
msgid "undocumented - undocumented functions in HAL"
msgstr ""

#. type: Plain text
msgid ""
"The header file I<hal.h>.  Most hal functions have documentation in that "
"file."
msgstr ""

#. type: Plain text
msgid "undocumented - undocumented functions in RTAPI"
msgstr ""

#. type: Plain text
msgid ""
"The header file I<rtapi.h>.  Most rtapi functions have documentation in that "
"file."
msgstr ""

#. type: TH
#, no-wrap
msgid "hal_bb_gpio"
msgstr ""

#. type: Plain text
msgid "hal_bb_gpio - Driver for beaglebone GPIO pins"
msgstr ""

#. type: Plain text
msgid ""
"B<loadrt hal_bb_gpio >I<user_leds=#,...> I<input_pins=#,...> "
"I<output_pins=#,...>"
msgstr ""

#. type: SH
#, no-wrap
msgid "USER LEDS"
msgstr ""

#. type: Plain text
msgid ""
"The I<user_leds> loadrt parameter controls which LEDs are available to HAL.  "
"Valid range: 0..3.  These LEDs are next to the ethernet jack and the "
"linuxcnc numbers match the silkscreen on beaglbone black.  Empirically, "
"these seem to be OR'd with whatever function is assigned to the LED in Linux."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<bb_gpio.userled>I<N> bit in"
msgstr ""

#. type: TQ
#, no-wrap
msgid "B<bb_gpio.userled>I<N>B<-invert> bit in"
msgstr ""

#. type: Plain text
msgid ""
"The associated LED is lit if B<userled>I<N> xor B<userled>I<N>-invertB< is "
"TRUE.>"
msgstr ""

#. type: SH
#, no-wrap
msgid "INPUT PINS"
msgstr ""

#. type: Plain text
msgid ""
"The I<input_pins> loadrt parameter controls which physical I/O pins are "
"available to HAL as input pins.  The numbering is \"800+N\" for pin N on "
"connector P8, and \"900+N\" for pin N on connector P9.  For example, \"803\" "
"means connector P8 pin 3, which is also described in BeagleBone "
"documentation as \"gpmc_ad6\"."
msgstr ""

#. type: Plain text
msgid ""
"Specifying pins that are otherwise in use by the system may have undesirable "
"side effects, such as crashing rtapi_app or the whole system."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<bb_gpio.p>I<N>B<.in->I<NN> bit out"
msgstr ""

#. type: TQ
#, no-wrap
msgid "B<bb_gpio.p>I<N>B<.in->I<NN>B<-invert> bit in"
msgstr ""

#. type: Plain text
msgid ""
"B<in->I<NN> is a snapshot of the value of the corresponding physical pin XOR "
"the value of the corresponding B<in->I<NN>B<-invert> pin."
msgstr ""

#. type: SH
#, no-wrap
msgid "OUTPUT PINS"
msgstr ""

#. type: Plain text
msgid ""
"The I<input_pins> loadrt parameter controls which physical I/O pins are "
"available to HAL as input pins.  The numbering is \"800+N\" for pin N on "
"connector P8, and \"900+N\" for pin N on connector P9."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<bb_gpio.p>I<N>B<.out->I<NN> bit out"
msgstr ""

#. type: TQ
#, no-wrap
msgid "B<bb_gpio.p>I<N>B<.out->I<NN>B<-invert> bit in"
msgstr ""

#. type: Plain text
msgid ""
"The corresponding physical pin is driven with the result of B<in->I<NN> xor "
"B<in->I<NN>B<-invert>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<bb_gpio.read>"
msgstr ""

#. type: Plain text
msgid "Update HAL pins from physical pins"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<bb_gpio.write>"
msgstr ""

#. type: Plain text
msgid "Update physical pins from HAL pins"
msgstr ""

#. type: TH
#, no-wrap
msgid "SAMPLER"
msgstr ""

#. type: Plain text
msgid "sampler - sample data from HAL in real time"
msgstr ""

#. type: Plain text
msgid ""
"B<loadrt sampler> B<depth=>I<depth1[,depth2...]> B<cfg=>I<string1[,"
"string2...]>"
msgstr ""

#. type: Plain text
msgid ""
"B<sampler> and B<halsampler>(1)  are used together to sample HAL data in "
"real time and store it in a file.  B<sampler> is a realtime HAL component "
"that exports HAL pins and creates a FIFO in shared memory.  It then begins "
"sampling data from the HAL and storing it to the FIFO.  B<halsampler> is a "
"user space program that copies data from the FIFO to stdout, where it can be "
"redirected to a file or piped to some other program."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<depth=>I<depth1[,depth2...]>"
msgstr ""

#. type: Plain text
msgid ""
"sets the depth of the realtime-E<gt>user FIFO that B<sampler> creates to "
"buffer the realtime data.  Multiple values of I<depth> (separated by commas) "
"can be specified if you need more than one FIFO (for example if you want to "
"sample data from two different realtime threads)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<cfg=>I<string1[,string2...]>"
msgstr ""

#. type: Plain text
msgid ""
"defines the set of HAL pins that B<sampler> exports and later samples data "
"from.  One I<string> must be supplied for each FIFO, separated by commas.  "
"B<sampler> exports one pin for each character in I<string.> Legal characters "
"are:"
msgstr ""

#. type: Plain text
msgid "B<F, f> (float pin)"
msgstr ""

#. type: Plain text
msgid "B<B, b> (bit pin)"
msgstr ""

#. type: Plain text
msgid "B<S, s> (s32 pin)"
msgstr ""

#. type: Plain text
msgid "B<U, u> (u32 pin)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>"
msgstr ""

#. type: Plain text
msgid "One function is created per FIFO, numbered from zero."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.pin.>I<M> input"
msgstr ""

#. type: Plain text
msgid ""
"Pin for the data that will wind up in column I<M> of FIFO I<N> (and in "
"column I<M> of the output file).  The pin type depends on the config string."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.curr-depth> s32 output"
msgstr ""

#. type: Plain text
msgid ""
"Current number of samples in the FIFO.  When this reaches I<depth> new data "
"will begin overwriting old data, and some samples will be lost."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.full> bit output"
msgstr ""

#. type: Plain text
msgid ""
"TRUE when the FIFO I<N> is full, FALSE when there is room for another sample."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.enable> bit input"
msgstr ""

#. type: Plain text
msgid ""
"When TRUE, samples are captured and placed in FIFO I<N>, when FALSE, no "
"samples are acquired.  Defaults to TRUE."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.overruns> s32 read/write"
msgstr ""

#. type: Plain text
msgid ""
"The number of times that B<sampler> has tried to write data to the HAL pins "
"but found no room in the FIFO.  It increments whenever B<full> is true, and "
"can be reset by the B<setp> command."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<sampler.>I<N>B<.sample-num> s32 read/write"
msgstr ""

#. type: Plain text
msgid ""
"A number that identifies the sample.  It is automatically incremented for "
"each sample, and can be reset using the B<setp> command.  The sample number "
"can optionally be printed in the first column of the output from "
"B<halsampler>, using the I<-t> option. (see B<man 1 halsampler>)"
msgstr ""

#. type: Plain text
msgid "B<halsampler>(1)  B<streamer>(9)  B<halstreamer>(1)"
msgstr ""

#. type: TH
#, no-wrap
msgid "WEIGHTED_SUM"
msgstr ""

#. type: TH
#, no-wrap
msgid "2007-01-16"
msgstr ""

#. type: Plain text
msgid "weighted_sum - convert a group of bits to an integer"
msgstr ""

#. type: Plain text
msgid "B<loadrt weighted_sum wsum_sizes=>I<size[,size,...]>"
msgstr ""

#. type: Plain text
msgid ""
"Creates weighted sum groups each with the given number of input bits "
"(I<size>)."
msgstr ""

#. type: Plain text
msgid ""
"The weighted_sum converts a group of bits to an integer. The conversion is "
"the sum of the weights of the bits that are on plus any offset. The weight "
"of the m-th bit is 2^m. This is similar to a binary coded decimal but with "
"more options. The hold bit stops processing the input changes so the sum "
"will not change."
msgstr ""

#. type: Plain text
msgid ""
"The default value for each weight is 2^m where m is the bit number. This "
"results in a binary to unsigned conversion."
msgstr ""

#. type: Plain text
msgid ""
"There is a limit of 8 weighted summers and each may have up to 16 input bits."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<process_wsums (requires a floating point thread)>"
msgstr ""

#. type: Plain text
msgid "Read all input values and update all output values."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<wsum.>I<N>B<.bit.>I<M>B<.in> bit in"
msgstr ""

#. type: Plain text
msgid "The I<m>'th input of weighted summer I<n>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<wsum.>I<N>B<.hold> bit in"
msgstr ""

#. type: Plain text
msgid ""
"When TRUE, the I<sum> output does not change.  When FALSE, the I<sum> output "
"tracks the I<bit> inputs according to the weights and offset."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<wsum.>I<N>B<.sum> signed out"
msgstr ""

#. type: Plain text
msgid "The output of the weighted summer"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<wsum.>I<N>B<.bit.>I<M>B<.weight> signed rw"
msgstr ""

#. type: Plain text
msgid ""
"The weight of the I<m>'th input of weighted summer I<n>.  The default value "
"is 2^I<m>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<wsum.>I<N>B<.offset> signed rw"
msgstr ""

#. type: Plain text
msgid ""
"The offset is added to the weights corresponding to all TRUE inputs to give "
"the final sum."
msgstr ""
